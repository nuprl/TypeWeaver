'use strict'Literal.String.Single
;Punctuation
\n\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
$WeakMapName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
typeofOperator.Word
 Text.Whitespace
WeakMapName.Builtinany0.2062complex0.1531WeakMapConstructor0.1427boolean0.0568string0.0235
 Text.Whitespace
===Operator
 Text.Whitespace
'function'Literal.String.Single
 Text.Whitespace
&&Operator
 Text.Whitespace
WeakMapName.Builtinany0.2551WeakMapConstructor0.2348complex0.0666boolean0.0426number0.0082
.Punctuation
prototypeName.Otherboolean0.6517any0.1554Object0.0364string0.0356Function0.0153
 Text.Whitespace
?Operator
 Text.Whitespace
WeakMapName.OtherWeakMapConstructor0.2668any0.0930boolean0.0545complex0.0364null0.0139
 Text.Whitespace
:Operator
 Text.Whitespace
nullKeyword.Type
;Punctuation
\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
$WeakSetName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
typeofOperator.Word
 Text.Whitespace
WeakSetName.Builtinany0.6969complex0.2019boolean0.0401string0.0177number0.0045
 Text.Whitespace
===Operator
 Text.Whitespace
'function'Literal.String.Single
 Text.Whitespace
&&Operator
 Text.Whitespace
WeakSetName.Builtinany0.7432boolean0.1123complex0.0496Function0.0170string0.0110
.Punctuation
prototypeName.Otherboolean0.5305any0.3394Function0.0334string0.0207Object0.0189
 Text.Whitespace
?Operator
 Text.Whitespace
WeakSetName.Otherany0.4814boolean0.2663string0.1350Function0.0166Error0.0125
 Text.Whitespace
:Operator
 Text.Whitespace
nullKeyword.Type
;Punctuation
\n\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
exportedName.Otherany0.9643string0.0104boolean0.0087complex0.0023any[]0.0020
;Punctuation
\n\nText.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
$WeakMapName.Other
)Punctuation
 Text.Whitespace
{Punctuation
\n\tText.Whitespace
// eslint-disable-next-line no-unused-varsComment.Single
\n\tText.Whitespace
exportedName.Otherany0.7498boolean0.1919string0.0220complex0.0062number0.0036
 Text.Whitespace
=Operator
 Text.Whitespace
functionKeyword.Declaration
 Text.Whitespace
isWeakMapName.Otherboolean0.9451any0.0346string0.0044complex0.0033number0.0023
(Punctuation
xName.Otherany0.9193string0.0130number0.0121never0.0065Date0.0047
)Punctuation
 Text.Whitespace
{Punctuation
\n\t\tText.Whitespace
// `WeakMap` is not present in this environment.Comment.Single
\n\t\tText.Whitespace
returnKeyword
 Text.Whitespace
falseKeyword.Constant
;Punctuation
\n\tText.Whitespace
}Punctuation
;Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
$mapHasName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
$WeakMapName.Other
 Text.Whitespace
?Operator
 Text.Whitespace
$WeakMap.prototype.hasName.Other
 Text.Whitespace
:Operator
 Text.Whitespace
nullKeyword.Type
;Punctuation
\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
$setHasName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
$WeakSetName.Other
 Text.Whitespace
?Operator
 Text.Whitespace
$WeakSet.prototype.hasName.Other
 Text.Whitespace
:Operator
 Text.Whitespace
nullKeyword.Type
;Punctuation
\nText.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
exportedName.Otherany0.9141boolean0.0348string0.0224number0.0030any[]0.0020
 Text.Whitespace
&&Operator
 Text.Whitespace
!Operator
$mapHasName.Other
)Punctuation
 Text.Whitespace
{Punctuation
\n\tText.Whitespace
// eslint-disable-next-line no-unused-varsComment.Single
\n\tText.Whitespace
exportedName.Otherany0.7070boolean0.2213string0.0327number0.0054complex0.0039
 Text.Whitespace
=Operator
 Text.Whitespace
functionKeyword.Declaration
 Text.Whitespace
isWeakMapName.Otherboolean0.9339any0.0397string0.0061number0.0042complex0.0024
(Punctuation
xName.Otherany0.9267string0.0121number0.0112boolean0.0041never0.0039
)Punctuation
 Text.Whitespace
{Punctuation
\n\t\tText.Whitespace
// `WeakMap` does not have a `has` methodComment.Single
\n\t\tText.Whitespace
returnKeyword
 Text.Whitespace
falseKeyword.Constant
;Punctuation
\n\tText.Whitespace
}Punctuation
;Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
exportKeyword
 Text.Whitespace
defaultKeyword
 Text.Whitespace
exportedName.Otherany0.9478boolean0.0101string0.0087complex0.0033any[]0.0024
 Text.Whitespace
||Operator
 Text.Whitespace
functionKeyword.Declaration
 Text.Whitespace
isWeakMapName.Otherboolean0.8278any0.1121string0.0108complex0.0077number0.0028
(Punctuation
xName.Otherany0.8919string0.0146number0.0041never0.0040complex0.0038
)Punctuation
 Text.Whitespace
{Punctuation
\n\tText.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
xName.Otherany0.9508boolean0.0153string0.0089complex0.0034number0.0028
 Text.Whitespace
||Operator
 Text.Whitespace
typeofOperator.Word
 Text.Whitespace
xName.Otherany0.9664complex0.0060string0.0042number0.0029boolean0.0021
 Text.Whitespace
!==Operator
 Text.Whitespace
'object'Literal.String.Single
)Punctuation
 Text.Whitespace
{Punctuation
\n\t\tText.Whitespace
returnKeyword
 Text.Whitespace
falseKeyword.Constant
;Punctuation
\n\tText.Whitespace
}Punctuation
\n\tText.Whitespace
tryKeyword
 Text.Whitespace
{Punctuation
\n\t\tText.Whitespace
$mapHasName.Other
.Punctuation
callName.Otherany0.9508void0.0177string0.0038boolean0.0037number0.0037
(Punctuation
xName.Otherany0.9271string0.0248number0.0069boolean0.0049T0.0019
,Punctuation
 Text.Whitespace
$mapHasName.Other
)Punctuation
;Punctuation
\n\t\tText.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
$setHasName.Other
)Punctuation
 Text.Whitespace
{Punctuation
\n\t\t\tText.Whitespace
tryKeyword
 Text.Whitespace
{Punctuation
\n\t\t\t\tText.Whitespace
$setHasName.Other
.Punctuation
callName.Otherany0.9639void0.0119boolean0.0039complex0.0026number0.0026
(Punctuation
xName.Otherany0.8991string0.0128boolean0.0072number0.0065T0.0042
,Punctuation
 Text.Whitespace
$setHasName.Other
)Punctuation
;Punctuation
\n\t\t\tText.Whitespace
}Punctuation
 Text.Whitespace
catchKeyword
 Text.Whitespace
(Punctuation
eName.Otherany0.9980string0.0004number0.0003complex0.0002Error0.0001
)Punctuation
 Text.Whitespace
{Punctuation
\n\t\t\t\tText.Whitespace
returnKeyword
 Text.Whitespace
trueKeyword.Constant
;Punctuation
\n\t\t\tText.Whitespace
}Punctuation
\n\t\tText.Whitespace
}Punctuation
\n\t\tText.Whitespace
returnKeyword
 Text.Whitespace
xName.Otherany0.9370boolean0.0087number0.0060string0.0056complex0.0047
 Text.Whitespace
instanceofOperator.Word
 Text.Whitespace
$WeakMapName.Other
;Punctuation
 Text.Whitespace
// core-js workaround, pre-v3Comment.Single
\n\tText.Whitespace
}Punctuation
 Text.Whitespace
catchKeyword
 Text.Whitespace
(Punctuation
eName.Otherany0.9977string0.0005number0.0003Error0.0002complex0.0002
)Punctuation
 Text.Whitespace
{Punctuation
}Punctuation
\n\tText.Whitespace
returnKeyword
 Text.Whitespace
falseKeyword.Constant
;Punctuation
\nText.Whitespace
}Punctuation
;Punctuation
\nText.Whitespace
