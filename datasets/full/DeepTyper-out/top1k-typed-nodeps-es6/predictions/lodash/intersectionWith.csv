importKeyword
 Text.Whitespace
mapName.Otherany0.3137complex0.1425U[]0.0670void0.0206string0.0090
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./map.js'Literal.String.Single
\nText.Whitespace
importKeyword
 Text.Whitespace
baseIntersectionName.Otherany0.2012complex0.0899string0.0516RegExp0.0319void0.0210
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./.internal/baseIntersection.js'Literal.String.Single
\nText.Whitespace
importKeyword
 Text.Whitespace
castArrayLikeObjectName.Otherany0.1703complex0.0830RegExp0.0348string0.0322boolean0.0194
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./.internal/castArrayLikeObject.js'Literal.String.Single
\nText.Whitespace
importKeyword
 Text.Whitespace
lastName.Otherany0.5688complex0.0852string0.0534void0.0321Promise<any>0.0161
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./last.js'Literal.String.Single
\n\nText.Whitespace
Text
/**\n * This method is like `intersection` except that it accepts `comparator`\n * which is invoked to compare elements of `arrays`. The order and references\n * of result values are determined by the first array. The comparator is\n * invoked with two arguments: (arrVal, othVal).\n *\n * @since 4.0.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of intersecting values.\n * @example\n *\n * const objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n * const others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }]\n *\n * intersectionWith(objects, others, isEqual)\n * // => [{ 'x': 1, 'y': 2 }]\n */Comment.Multiline
\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
intersectionWithName.Otherany0.1909complex0.1904string0.0499string[]0.0151any[]0.0126
(Punctuation
...Punctuation
arraysName.Otherany[]0.5317any0.2384complex0.0346string[]0.0217T[]0.0049
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
comparatorName.Otherany0.7424complex0.0471boolean0.0155string0.0112number0.0092
 Text.Whitespace
=Operator
 Text.Whitespace
lastName.Otherany0.8458complex0.0450any[]0.0212string0.0115string[]0.0041
(Punctuation
arraysName.Otherany0.4673any[]0.3741string[]0.0352complex0.0330string0.0079
)Punctuation
\n  Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
mappedName.Otherany0.6917any[]0.2015complex0.0425string[]0.0228number[]0.0052
 Text.Whitespace
=Operator
 Text.Whitespace
mapName.Otherany0.7592complex0.0819U[]0.0683any[]0.0069string0.0020
(Punctuation
arraysName.Otherany0.7391any[]0.0860complex0.0323string[]0.0132string0.0092
,Punctuation
 Text.Whitespace
castArrayLikeObjectName.Otherany0.8436string0.0263complex0.0244boolean0.0233number0.0080
)Punctuation
\n\n  Text.Whitespace
comparatorName.Otherany0.9029boolean0.0309string0.0127number0.0089complex0.0062
 Text.Whitespace
=Operator
 Text.Whitespace
typeofOperator.Word
 Text.Whitespace
comparatorName.Otherany0.9084complex0.0222string0.0131boolean0.0080number0.0063
 Text.Whitespace
===Operator
 Text.Whitespace
'function'Literal.String.Single
 Text.Whitespace
?Operator
 Text.Whitespace
comparatorName.Otherany0.7818string0.0515number0.0323undefined0.0231boolean0.0172
 Text.Whitespace
:Operator
 Text.Whitespace
undefinedKeyword.Type
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
comparatorName.Otherany0.7560boolean0.0938string0.0368complex0.0173number0.0166
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
mappedName.Otherany0.5892any[]0.2524complex0.0874string[]0.0206number[]0.0057
.Punctuation
popName.Otherany0.7496string0.0966complex0.0521boolean0.0254any[]0.0100
(Punctuation
)Punctuation
\n  Text.Whitespace
}Punctuation
\n  Text.Whitespace
returnKeyword
 Text.Whitespace
(Punctuation
mappedName.Otherany0.6130any[]0.1811string[]0.0312complex0.0269string0.0150
.Punctuation
lengthName.Otherany0.8826number0.1049string0.0071complex0.0017any[]0.0006
 Text.Whitespace
&&Operator
 Text.Whitespace
mappedName.Otherany0.6751any[]0.1620string[]0.0405complex0.0265string0.0178
[Punctuation
0Literal.Number.Float
]Punctuation
 Text.Whitespace
===Operator
 Text.Whitespace
arraysName.Otherany[]0.5001any0.2999complex0.0367string[]0.0303any[][]0.0119
[Punctuation
0Literal.Number.Float
]Punctuation
)Punctuation
\n    Text.Whitespace
?Operator
 Text.Whitespace
baseIntersectionName.Otherany0.6532complex0.0511any[]0.0489string0.0087boolean0.0039
(Punctuation
mappedName.Otherany0.7264any[]0.0753string0.0277complex0.0258string[]0.0085
,Punctuation
 Text.Whitespace
undefinedKeyword.Constant
,Punctuation
 Text.Whitespace
comparatorName.Otherany0.6440number0.0681complex0.0207string0.0169any[]0.0159
)Punctuation
\n    Text.Whitespace
:Operator
 Text.Whitespace
[Punctuation
]Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
exportKeyword
 Text.Whitespace
defaultKeyword
 Text.Whitespace
intersectionWithName.Otherany0.5946complex0.0234string0.0158any[]0.0091void0.0088
\nText.Whitespace
