#!/usr/bin/env nodeComment.Hashbang
\nText.Whitespace
Text
/*\n * An example tool that shows how to get Bash completion using dashdash's\n * helpers for this.\n *\n * Usage:\n *      # One time setup:\n *      cd examples/\n *      alias ddcompletion='node ddcompletion.js'\n *      ddcompletion --completion > /usr/local/etc/bash_completion.d/ddcompletion\n *      source /usr/local/etc/bash_completion.d/ddcompletion\n *\n *      # Now play with the bash completion:\n *      ddcompletion -<TAB>             # complete options\n *      ddcompletion --none <TAB>       # explicit "no completions"\n *      ddcompletion -H <TAB>           # complete custom "knownhosts" type\n *      ddcompletion <TAB>              # complete first positional arg type\n *      ddcompletion banana <TAB>       # complete second position arg type\n */Comment.Multiline
\n\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
dashdashName.Otherany0.7064string0.2368number0.0073boolean0.0055Function0.0049
 Text.Whitespace
=Operator
 Text.Whitespace
requireName.Other
(Punctuation
'../lib/dashdash'Literal.String.Single
)Punctuation
;Punctuation
\n\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
optionsName.Othercomplex0.7334any0.1277any[]0.0556{}0.0193Object0.0066
 Text.Whitespace
=Operator
 Text.Whitespace
[Punctuation
\n    Text.Whitespace
{Punctuation
 Text.Whitespace
nameName.Otherstring0.9977any0.0013number0.0003string[]0.0002RegExp0.0002
:Operator
 Text.Whitespace
'version'Literal.String.Single
,Punctuation
 Text.Whitespace
typeKeyword.Reserved
:Operator
 Text.Whitespace
'bool'Literal.String.Single
,Punctuation
 Text.Whitespace
helpName.Otherstring0.9981any0.0006string[]0.0004number0.0003RegExp0.0002
:Operator
 Text.Whitespace
'Print tool version and exit.'Literal.String.Single
 Text.Whitespace
}Punctuation
,Punctuation
\n    Text.Whitespace
{Punctuation
 Text.Whitespace
namesName.Otherstring[]0.9966any[]0.0012string[][]0.0005number[]0.0004RegExp[]0.0003
:Operator
 Text.Whitespace
[Punctuation
'help'Literal.String.Single
,Punctuation
 Text.Whitespace
'h'Literal.String.Single
]Punctuation
,Punctuation
 Text.Whitespace
typeKeyword.Reserved
:Operator
 Text.Whitespace
'bool'Literal.String.Single
,Punctuation
 Text.Whitespace
helpName.Otherstring0.9974string[]0.0008any0.0006RegExp0.0003number0.0003
:Operator
 Text.Whitespace
'Print this help and exit.'Literal.String.Single
 Text.Whitespace
}Punctuation
,Punctuation
\n    Text.Whitespace
{Punctuation
 Text.Whitespace
namesName.Otherstring[]0.9967any[]0.0012string[][]0.0005number[]0.0004RegExp[]0.0003
:Operator
 Text.Whitespace
[Punctuation
'verbose'Literal.String.Single
,Punctuation
 Text.Whitespace
'v'Literal.String.Single
]Punctuation
,Punctuation
 Text.Whitespace
typeKeyword.Reserved
:Operator
 Text.Whitespace
'arrayOfBool'Literal.String.Single
,Punctuation
 Text.Whitespace
helpName.Otherstring0.9972string[]0.0009any0.0006RegExp0.0004number0.0003
:Operator
 Text.Whitespace
'Verbose output.'Literal.String.Single
 Text.Whitespace
}Punctuation
,Punctuation
\n    Text.Whitespace
{Punctuation
 Text.Whitespace
namesName.Otherstring[]0.9971any[]0.0009string[][]0.0005number[]0.0004RegExp[]0.0003
:Operator
 Text.Whitespace
[Punctuation
'file'Literal.String.Single
,Punctuation
 Text.Whitespace
'f'Literal.String.Single
]Punctuation
,Punctuation
 Text.Whitespace
typeKeyword.Reserved
:Operator
 Text.Whitespace
'string'Literal.String.Single
,Punctuation
 Text.Whitespace
helpArgName.Otherstring0.9928RegExp0.0027string[]0.0018any0.0016boolean0.0003
:Operator
 Text.Whitespace
'FILE'Literal.String.Single
 Text.Whitespace
}Punctuation
,Punctuation
\n    Text.Whitespace
// Add a (hidden) '--completion' that will emit the bash completion content.Comment.Single
\n    Text.Whitespace
{Punctuation
\n        Text.Whitespace
namesName.Otherstring[]0.9974any[]0.0008string[][]0.0004RegExp[]0.0004number[]0.0003
:Operator
 Text.Whitespace
[Punctuation
'completion'Literal.String.Single
]Punctuation
,Punctuation
\n        Text.Whitespace
typeKeyword.Reserved
:Operator
 Text.Whitespace
'bool'Literal.String.Single
,Punctuation
\n        Text.Whitespace
hiddenName.Otherboolean0.9981true0.0005string0.0004number0.0002false0.0002
:Operator
 Text.Whitespace
trueKeyword.Type
\n    Text.Whitespace
}Punctuation
,Punctuation
\n    Text.Whitespace
{Punctuation
\n        Text.Whitespace
namesName.Otherstring[]0.9968any[]0.0011string[][]0.0006number[]0.0004RegExp[]0.0003
:Operator
 Text.Whitespace
[Punctuation
'host'Literal.String.Single
,Punctuation
 Text.Whitespace
'H'Literal.String.Single
]Punctuation
,Punctuation
\n        Text.Whitespace
typeKeyword.Reserved
:Operator
 Text.Whitespace
'string'Literal.String.Single
,Punctuation
\n        Text.Whitespace
// We'll define a custom completion type and, further down, a BashComment.Single
\n        Text.Whitespace
// completion function for this type. Test it with:Comment.Single
\n        Text.Whitespace
//      $ ddcompletion --host <TAB>Comment.Single
\n        Text.Whitespace
completionTypeName.Otherstring0.9921RegExp0.0031any0.0023string[]0.0013number0.0004
:Operator
 Text.Whitespace
'knownhosts'Literal.String.Single
,Punctuation
\n        Text.Whitespace
helpName.Otherstring0.9973string[]0.0010any0.0006RegExp0.0003number0.0003
:Operator
 Text.Whitespace
'A known host (taken from ~/.ssh/known_hosts).'Literal.String.Single
\n    Text.Whitespace
}Punctuation
,Punctuation
\n    Text.Whitespace
{Punctuation
\n        Text.Whitespace
namesName.Otherstring[]0.9978any[]0.0008string[][]0.0004number[]0.0002RegExp[]0.0002
:Operator
 Text.Whitespace
[Punctuation
'none'Literal.String.Single
,Punctuation
 Text.Whitespace
'N'Literal.String.Single
]Punctuation
,Punctuation
\n        Text.Whitespace
typeKeyword.Reserved
:Operator
 Text.Whitespace
'string'Literal.String.Single
,Punctuation
\n        Text.Whitespace
// Show off the 'none' completion type, which uses somewhat ofComment.Single
\n        Text.Whitespace
// a hack to enforce no completions on <TAB>.Comment.Single
\n        Text.Whitespace
completionTypeName.Otherstring0.9936RegExp0.0021any0.0020string[]0.0011boolean0.0005
:Operator
 Text.Whitespace
'none'Literal.String.Single
,Punctuation
\n        Text.Whitespace
helpName.Otherstring0.9975string[]0.0008any0.0006RegExp0.0003number0.0003
:Operator
 Text.Whitespace
'Testing "none" argtype. Should be no completions on <TAB>.'Literal.String.Single
\n    Text.Whitespace
}Punctuation
\nText.Whitespace
]Punctuation
;Punctuation
\n\n\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
completionFuncsName.Otherstring[]0.9714string0.0188any[]0.0049any0.0009RegExp0.0006
 Text.Whitespace
=Operator
 Text.Whitespace
[Punctuation
\n    Text.Whitespace
// A 'knownhosts' completer function.Comment.Single
\n    Text.Whitespace
'function complete_knownhosts {'Literal.String.Single
,Punctuation
\n    Text.Whitespace
'    local word="$1"'Literal.String.Single
,Punctuation
\n    Text.Whitespace
'    local candidates'Literal.String.Single
,Punctuation
\n    Text.Whitespace
'    candidates=$(cat ~/.ssh/known_hosts  | awk \'{print $1}\' | grep \'^[a-zA-Z]\' | cut -d, -f1)'Literal.String.Single
,Punctuation
\n    Text.Whitespace
'    compgen $compgen_opts -W "$candidates" -- "$word"'Literal.String.Single
,Punctuation
\n    Text.Whitespace
'}'Literal.String.Single
,Punctuation
\n\n    Text.Whitespace
// A 'fruit' completer function for the first positional arg.Comment.Single
\n    Text.Whitespace
'function complete_fruit {'Literal.String.Single
,Punctuation
\n    Text.Whitespace
'    compgen $compgen_opts -W "apple banana orange" -- "$1"'Literal.String.Single
,Punctuation
\n    Text.Whitespace
'}'Literal.String.Single
\nText.Whitespace
]Punctuation
.Punctuation
joinName.Otherstring0.9730any0.0204complex0.0020string[]0.0018number0.0013
(Punctuation
'\n'Literal.String.Single
)Punctuation
;Punctuation
\n\n\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
parserName.Otherany0.9116string0.0062complex0.0049number0.0038any[]0.0024
 Text.Whitespace
=Operator
 Text.Whitespace
dashdashName.Otherany0.9641complex0.0134string0.0043any[]0.0012number0.0011
.Punctuation
createParserName.Otherany0.8318complex0.0495string0.0451string[]0.0140number0.0096
(Punctuation
{Punctuation
optionsName.Otherany0.4841complex0.0888{}0.0430any[]0.0381Options0.0162
:Operator
 Text.Whitespace
optionsKeyword.Typeany0.5808complex0.0823{}0.0361any[]0.0307number0.0153
}Punctuation
)Punctuation
;Punctuation
\nText.Whitespace
tryKeyword
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
varKeyword.Declaration
 Text.Whitespace
optsName.Otherany0.7971complex0.0706Options0.0061{}0.0045number0.0029
 Text.Whitespace
=Operator
 Text.Whitespace
parserName.Otherany0.9510complex0.0214any[]0.0014number0.0012symbol0.0005
.Punctuation
parseName.Otherany0.8071complex0.0548number0.0263boolean0.0113any[]0.0047
(Punctuation
processName.Otherany0.9945complex0.0041void0.0002any[]0.0002Process0.0001
.Punctuation
argvName.Otherany0.9933complex0.0018number0.0015string[]0.0008string0.0008
)Punctuation
;Punctuation
\nText.Whitespace
}Punctuation
 Text.Whitespace
catchKeyword
 Text.Whitespace
(Punctuation
eName.Otherany0.9964Error0.0019string0.0006complex0.0004number0.0003
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
consoleName.OtherConsole0.9999any0.0000void0.0000symbol0.0000NumberConstructor0.0000
.Punctuation
errorName.Othervoid0.9983any0.0006complex0.0006Promise<void>0.0001boolean0.0001
(Punctuation
'foo: error: %s'Literal.String.Single
,Punctuation
 Text.Whitespace
eName.Otherany0.9852Error0.0092complex0.0020string0.0007void0.0005
.Punctuation
messageName.Otherany0.9279string0.0690complex0.0013string[]0.0004number0.0004
)Punctuation
;Punctuation
\n    Text.Whitespace
processName.Otherany0.9961complex0.0027Process0.0002void0.0002string0.0001
.Punctuation
exitName.Otherany0.9683void0.0287complex0.0007number0.0006boolean0.0003
(Punctuation
1Literal.Number.Float
)Punctuation
;Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
optsName.Otherany0.5752complex0.3982{}0.0034number0.0028boolean0.0027
.Punctuation
helpName.Otherstring0.6412any0.3202boolean0.0144number0.0063string[]0.0060
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
varKeyword.Declaration
 Text.Whitespace
helpName.Otherstring0.8033any0.1025void0.0317complex0.0170string[]0.0130
 Text.Whitespace
=Operator
 Text.Whitespace
parserName.Otherany0.9672complex0.0178string0.0034number0.0013void0.0008
.Punctuation
helpName.Otherstring0.5140any0.4098void0.0331number0.0111complex0.0102
(Punctuation
{Punctuation
includeEnvName.Otherboolean0.9942string0.0020any0.0013number0.0008false0.0005
:Operator
 Text.Whitespace
trueKeyword.Type
}Punctuation
)Punctuation
.Punctuation
trimRightName.Otherany0.7451void0.1747string0.0321boolean0.0114number0.0094
(Punctuation
)Punctuation
;Punctuation
\n    Text.Whitespace
consoleName.OtherConsole0.9998any0.0001void0.0000complex0.0000number0.0000
.Punctuation
logName.Othervoid0.9989any0.0005complex0.0003Promise<void>0.0001number0.0000
(Punctuation
'usage: node ddcompletion.js [OPTIONS]\n'Literal.String.Single
\n                Text.Whitespace
+Operator
 Text.Whitespace
'options:\n'Literal.String.Single
\n                Text.Whitespace
+Operator
 Text.Whitespace
helpName.Otherstring0.9269any0.0328void0.0176number0.0081string[]0.0076
)Punctuation
;Punctuation
\n    Text.Whitespace
processName.Otherany0.9941complex0.0041void0.0003Process0.0003string0.0001
.Punctuation
exitName.Otherany0.9697void0.0266number0.0009complex0.0009Promise<any>0.0005
(Punctuation
0Literal.Number.Float
)Punctuation
;Punctuation
\nText.Whitespace
}Punctuation
 Text.Whitespace
elseKeyword
 Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
optsName.Otherany0.6904complex0.1355Options0.0275number0.0071boolean0.0037
.Punctuation
completionName.Otherany0.7201string0.1684boolean0.0546number0.0319void0.0085
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
// Use the `parser.bashCompletion()` helper to create the BashComment.Single
\n    Text.Whitespace
// completion file content, then just dump it.Comment.Single
\n    Text.Whitespace
consoleName.OtherConsole0.9999any0.0001void0.0000number0.0000complex0.0000
.Punctuation
logName.Othervoid0.9986any0.0005complex0.0005Promise<void>0.0001boolean0.0000
(Punctuation
 Text.Whitespace
parserName.Otherany0.9869complex0.0034string0.0015number0.0005void0.0005
.Punctuation
bashCompletionName.Otherany0.7507string0.1798complex0.0166void0.0144string[]0.0105
(Punctuation
{Punctuation
\n        Text.Whitespace
nameName.Otherstring0.9967any0.0024number0.0003string[]0.0002boolean0.0001
:Operator
 Text.Whitespace
'ddcompletion'Literal.String.Single
,Punctuation
\n        Text.Whitespace
specExtraName.Otherstring0.8541any0.0901string[]0.0239boolean0.0216number0.0046
:Operator
 Text.Whitespace
completionFuncsKeyword.Typestring0.8251any0.1005string[]0.0347boolean0.0204number0.0092
,Punctuation
\n        Text.Whitespace
// Define the first positional arg to be a fruit, and subsequentComment.Single
\n        Text.Whitespace
// args to be 'file'.Comment.Single
\n        Text.Whitespace
argtypesName.Otherstring[]0.9922any[]0.0027string0.0015RegExp[]0.0010number[]0.0005
:Operator
 Text.Whitespace
[Punctuation
'fruit'Literal.String.Single
,Punctuation
 Text.Whitespace
'file'Literal.String.Single
]Punctuation
\n    Text.Whitespace
}Punctuation
)Punctuation
 Text.Whitespace
)Punctuation
;Punctuation
\n    Text.Whitespace
processName.Otherany0.9955complex0.0032void0.0003Process0.0002number0.0001
.Punctuation
exitName.Otherany0.9738void0.0226number0.0010complex0.0009Promise<any>0.0005
(Punctuation
0Literal.Number.Float
)Punctuation
;Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
Text
// ...Comment.Single
\nText.Whitespace
consoleName.OtherConsole0.9999any0.0000void0.0000number0.0000string[][]0.0000
.Punctuation
logName.Othervoid0.9979complex0.0008any0.0008Promise<void>0.0001number0.0001
(Punctuation
'opts:'Literal.String.Single
,Punctuation
 Text.Whitespace
optsName.Otherany0.5946complex0.1947{}0.0554Options0.0191number0.0090
)Punctuation
;Punctuation
\nText.Whitespace
consoleName.OtherConsole0.9998any0.0001void0.0000complex0.0000number0.0000
.Punctuation
logName.Othervoid0.9976complex0.0010any0.0009Promise<void>0.0001number0.0001
(Punctuation
'args:'Literal.String.Single
,Punctuation
 Text.Whitespace
optsName.Otherany0.7625complex0.1348Options0.0188{}0.0098number0.0078
.Punctuation
_argsName.Otherstring0.1985any0.1721number0.1049string[]0.0924any[]0.0291
)Punctuation
;Punctuation
\nText.Whitespace
consoleName.OtherConsole0.9998any0.0001void0.0000number0.0000NumberConstructor0.0000
.Punctuation
logName.Othervoid0.9979any0.0008complex0.0007Promise<void>0.0001number0.0001
(Punctuation
'...'Literal.String.Single
)Punctuation
\nText.Whitespace
