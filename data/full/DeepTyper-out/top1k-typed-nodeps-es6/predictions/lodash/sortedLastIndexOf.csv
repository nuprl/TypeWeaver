importKeyword
 Text.Whitespace
baseSortedIndexName.Otherany0.2886boolean0.0380complex0.0285string0.0205void0.0158
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./.internal/baseSortedIndex.js'Literal.String.Single
\nText.Whitespace
importKeyword
 Text.Whitespace
eqName.Otherany0.5060boolean0.1130number0.0562string0.0196complex0.0147
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./eq.js'Literal.String.Single
\n\nText.Whitespace
Text
/**\n * This method is like `lastIndexOf` except that it performs a binary\n * search on a sorted `array`.\n *\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n * @example\n *\n * sortedLastIndexOf([4, 5, 5, 5, 6], 5)\n * // => 3\n */Comment.Multiline
\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
sortedLastIndexOfName.Otherany0.3409string0.2271complex0.0747number0.0482boolean0.0342
(Punctuation
arrayName.Otherany0.5622string0.0653any[]0.0535number0.0277string[]0.0250
,Punctuation
 Text.Whitespace
valueName.Otherany0.6884string0.1855number0.0575boolean0.0054string[]0.0035
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
lengthName.Othernumber0.5572any0.4223string0.0141boolean0.0016complex0.0007
 Text.Whitespace
=Operator
 Text.Whitespace
arrayName.Otherany0.7440number0.0684number[]0.0394any[]0.0346string0.0133
 Text.Whitespace
==Operator
 Text.Whitespace
nullKeyword.Constant
 Text.Whitespace
?Operator
 Text.Whitespace
0Name.Other
 Text.Whitespace
:Operator
 Text.Whitespace
array.lengthKeyword.Type
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
lengthName.Othernumber0.8205any0.1733string0.0037boolean0.0008complex0.0003
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
indexName.Otherany0.5057number0.4757string0.0076complex0.0036boolean0.0028
 Text.Whitespace
=Operator
 Text.Whitespace
baseSortedIndexName.Otherany0.5806number0.3369complex0.0296string0.0252boolean0.0053
(Punctuation
arrayName.Otherany0.6575number0.0811any[]0.0587number[]0.0376complex0.0367
,Punctuation
 Text.Whitespace
valueName.Otherany0.6865number0.1886string0.0949boolean0.0045complex0.0034
,Punctuation
 Text.Whitespace
trueKeyword.Constant
)Punctuation
 Text.Whitespace
-Operator
 Text.Whitespace
1Literal.Number.Float
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
eqName.Otherany0.6932boolean0.1442number0.1365string0.0098complex0.0034
(Punctuation
arrayName.Otherany0.6947any[]0.0762string[]0.0582complex0.0373number[]0.0371
[Punctuation
indexName.Othernumber0.7555any0.2313string0.0093complex0.0015boolean0.0003
]Punctuation
,Punctuation
 Text.Whitespace
valueName.Otherany0.7061string0.1431number0.1285Date0.0030boolean0.0023
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
indexName.Othernumber0.7696any0.2194string0.0072complex0.0008boolean0.0007
\n    Text.Whitespace
}Punctuation
\n  Text.Whitespace
}Punctuation
\n  Text.Whitespace
returnKeyword
 Text.Whitespace
-Operator
1Literal.Number.Float
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
exportKeyword
 Text.Whitespace
defaultKeyword
 Text.Whitespace
sortedLastIndexOfName.Otherany0.4433number0.0462string0.0445complex0.0156void0.0113
\nText.Whitespace
