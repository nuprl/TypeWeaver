'use strict'Literal.String.Single
;Punctuation
\n\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
GetIntrinsicName.Otherany0.8509string0.0522boolean0.0256Function0.0144void0.0105
 Text.Whitespace
=Operator
 Text.Whitespace
requireName.Other
(Punctuation
'get-intrinsic'Literal.String.Single
)Punctuation
;Punctuation
\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
callBoundName.Otherany0.9090string0.0204boolean0.0184Function0.0097void0.0077
 Text.Whitespace
=Operator
 Text.Whitespace
requireName.Other
(Punctuation
'call-bind/callBound'Literal.String.Single
)Punctuation
;Punctuation
\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
inspectName.Otherany0.9342string0.0580complex0.0029NodeRequire0.0005void0.0005
 Text.Whitespace
=Operator
 Text.Whitespace
requireName.Other
(Punctuation
'object-inspect'Literal.String.Single
)Punctuation
;Punctuation
\n\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
$TypeErrorName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
GetIntrinsicName.Otherany0.7018string0.1222boolean0.0374complex0.0278void0.0103
(Punctuation
'%TypeError%'Literal.String.Single
)Punctuation
;Punctuation
\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
$WeakMapName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
GetIntrinsicName.Otherany0.7457string0.0662boolean0.0393complex0.0367void0.0112
(Punctuation
'%WeakMap%'Literal.String.Single
,Punctuation
 Text.Whitespace
trueKeyword.Constant
)Punctuation
;Punctuation
\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
$MapName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
GetIntrinsicName.Otherany0.7483boolean0.0528string0.0445complex0.0408void0.0137
(Punctuation
'%Map%'Literal.String.Single
,Punctuation
 Text.Whitespace
trueKeyword.Constant
)Punctuation
;Punctuation
\n\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
$weakMapGetName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
callBoundName.Otherany0.7412boolean0.0541complex0.0439string0.0418void0.0150
(Punctuation
'WeakMap.prototype.get'Literal.String.Single
,Punctuation
 Text.Whitespace
trueKeyword.Constant
)Punctuation
;Punctuation
\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
$weakMapSetName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
callBoundName.Otherany0.7361boolean0.0541complex0.0449string0.0412void0.0155
(Punctuation
'WeakMap.prototype.set'Literal.String.Single
,Punctuation
 Text.Whitespace
trueKeyword.Constant
)Punctuation
;Punctuation
\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
$weakMapHasName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
callBoundName.Otherany0.7333boolean0.0528complex0.0452string0.0413void0.0159
(Punctuation
'WeakMap.prototype.has'Literal.String.Single
,Punctuation
 Text.Whitespace
trueKeyword.Constant
)Punctuation
;Punctuation
\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
$mapGetName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
callBoundName.Otherany0.7317boolean0.0503complex0.0452string0.0417void0.0162
(Punctuation
'Map.prototype.get'Literal.String.Single
,Punctuation
 Text.Whitespace
trueKeyword.Constant
)Punctuation
;Punctuation
\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
$mapSetName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
callBoundName.Otherany0.7319boolean0.0464complex0.0447string0.0415void0.0170
(Punctuation
'Map.prototype.set'Literal.String.Single
,Punctuation
 Text.Whitespace
trueKeyword.Constant
)Punctuation
;Punctuation
\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
$mapHasName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
callBoundName.Otherany0.7252complex0.0428boolean0.0423string0.0383void0.0212
(Punctuation
'Map.prototype.has'Literal.String.Single
,Punctuation
 Text.Whitespace
trueKeyword.Constant
)Punctuation
;Punctuation
\n\nText.Whitespace
/*\n* This function traverses the list returning the node corresponding to the given key.\n*\n* That node is also moved to the head of the list, so that if it's accessed again we don't need to traverse the whole list. By doing so, all the recently used nodes can be accessed relatively quickly.\n*/Comment.Multiline
\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
listGetNodeName.Otherany0.4577void0.2539boolean0.1708Function0.0240string0.0191
 Text.Whitespace
=Operator
 Text.Whitespace
functionKeyword.Declaration
 Text.Whitespace
(Punctuation
listName.Otherany0.8407string0.0048Object0.0037Function0.0036List0.0034
,Punctuation
 Text.Whitespace
keyName.Otherany0.7444string0.2387complex0.0035number0.0022boolean0.0011
)Punctuation
 Text.Whitespace
{Punctuation
 Text.Whitespace
// eslint-disable-line consistent-returnComment.Single
\n\tText.Whitespace
forKeyword
 Text.Whitespace
(Punctuation
varKeyword.Declaration
 Text.Whitespace
prevName.Otherany0.8861string0.0211boolean0.0059Function0.0034complex0.0031
 Text.Whitespace
=Operator
 Text.Whitespace
listName.Otherany0.9012complex0.0054any[]0.0038string0.0037void0.0020
,Punctuation
 Text.Whitespace
currName.Otherany0.9041string0.0216void0.0101number0.0089boolean0.0073
;Punctuation
 Text.Whitespace
(Punctuation
currName.Otherany0.8930string0.0155Function0.0065complex0.0061T0.0058
 Text.Whitespace
=Operator
 Text.Whitespace
prevName.Otherany0.9316string0.0075Function0.0035complex0.0033Node0.0021
.Punctuation
nextName.Otherany0.9199string0.0332Function0.0121number0.0067void0.0040
)Punctuation
 Text.Whitespace
!==Operator
 Text.Whitespace
nullKeyword.Constant
;Punctuation
 Text.Whitespace
prevName.Otherany0.8842string0.0159boolean0.0082Function0.0047void0.0045
 Text.Whitespace
=Operator
 Text.Whitespace
currName.Otherany0.8535string0.0194Node0.0049Function0.0049number0.0040
)Punctuation
 Text.Whitespace
{Punctuation
\n\t\tText.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
currName.Otherany0.6576T0.0198Node0.0179complex0.0140never0.0095
.Punctuation
keyName.Otherany0.8171string0.1733complex0.0038number0.0020boolean0.0006
 Text.Whitespace
===Operator
 Text.Whitespace
keyName.Otherany0.6949string0.2858complex0.0065number0.0053void0.0009
)Punctuation
 Text.Whitespace
{Punctuation
\n\t\t\tText.Whitespace
prevName.Otherany0.9400Function0.0034string0.0032complex0.0030State0.0021
.Punctuation
nextName.Otherany0.9074string0.0234Function0.0144void0.0129number0.0057
 Text.Whitespace
=Operator
 Text.Whitespace
currName.Otherany0.8540T0.0117complex0.0094Function0.0090string0.0063
.Punctuation
nextName.Otherany0.8859string0.0273void0.0144Function0.0117number0.0090
;Punctuation
\n\t\t\tText.Whitespace
currName.Otherany0.6970T0.0241complex0.0154Function0.0117void0.0100
.Punctuation
nextName.Otherany0.8366string0.0408void0.0260Function0.0160complex0.0143
 Text.Whitespace
=Operator
 Text.Whitespace
listName.Otherany0.8848complex0.0207void0.0042Function0.0021T0.0019
.Punctuation
nextName.Otherany0.8888void0.0282string0.0156Function0.0088number0.0086
;Punctuation
\n\t\t\tText.Whitespace
listName.Otherany0.8570complex0.0138void0.0044number0.0033Function0.0019
.Punctuation
nextName.Otherany0.8758void0.0341number0.0229string0.0170Function0.0096
 Text.Whitespace
=Operator
 Text.Whitespace
currName.Otherany0.7972number0.0239string0.0211void0.0179T0.0142
;Punctuation
 Text.Whitespace
// eslint-disable-line no-param-reassignComment.Single
\n\t\t\tText.Whitespace
returnKeyword
 Text.Whitespace
currName.Otherany0.8298string0.0335{}0.0236number0.0133T0.0082
;Punctuation
\n\t\tText.Whitespace
}Punctuation
\n\tText.Whitespace
}Punctuation
\nText.Whitespace
}Punctuation
;Punctuation
\n\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
listGetName.Otherboolean0.5076any0.3431void0.0368string0.0210complex0.0079
 Text.Whitespace
=Operator
 Text.Whitespace
functionKeyword.Declaration
 Text.Whitespace
(Punctuation
objectsName.Otherany0.8396string0.0134any[]0.0095complex0.0061number0.0033
,Punctuation
 Text.Whitespace
keyName.Otherany0.7872string0.1988number0.0028complex0.0023never0.0005
)Punctuation
 Text.Whitespace
{Punctuation
\n\tText.Whitespace
varKeyword.Declaration
 Text.Whitespace
nodeName.Otherany0.8173Node0.0104complex0.0100string0.0067boolean0.0051
 Text.Whitespace
=Operator
 Text.Whitespace
listGetNodeName.Otherany0.8736complex0.0278string0.0172boolean0.0155number0.0075
(Punctuation
objectsName.Otherany0.8124any[]0.0261string0.0160complex0.0099number0.0073
,Punctuation
 Text.Whitespace
keyName.Otherany0.8142string0.1717complex0.0035number0.0028any[]0.0007
)Punctuation
;Punctuation
\n\tText.Whitespace
returnKeyword
 Text.Whitespace
nodeName.Otherany0.9441Node0.0063string0.0025complex0.0023boolean0.0021
 Text.Whitespace
&&Operator
 Text.Whitespace
nodeName.Otherany0.9690Node0.0029complex0.0025boolean0.0012string0.0011
.Punctuation
valueName.Otherany0.9393string0.0409boolean0.0094number0.0025complex0.0011
;Punctuation
\nText.Whitespace
}Punctuation
;Punctuation
\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
listSetName.Othervoid0.5082any0.3508boolean0.0785string0.0132complex0.0101
 Text.Whitespace
=Operator
 Text.Whitespace
functionKeyword.Declaration
 Text.Whitespace
(Punctuation
objectsName.Otherany0.8806string0.0199number0.0077any[]0.0076complex0.0070
,Punctuation
 Text.Whitespace
keyName.Otherany0.7477string0.2422number0.0026complex0.0018void0.0007
,Punctuation
 Text.Whitespace
valueName.Otherany0.8546string0.1201number0.0084boolean0.0064void0.0008
)Punctuation
 Text.Whitespace
{Punctuation
\n\tText.Whitespace
varKeyword.Declaration
 Text.Whitespace
nodeName.Otherany0.8325complex0.0126string0.0100Node0.0070Object0.0041
 Text.Whitespace
=Operator
 Text.Whitespace
listGetNodeName.Otherany0.8575complex0.0352string0.0267void0.0128number0.0112
(Punctuation
objectsName.Otherany0.8376any[]0.0252string0.0203number0.0133complex0.0124
,Punctuation
 Text.Whitespace
keyName.Otherany0.7561string0.2309complex0.0036number0.0036any[]0.0007
)Punctuation
;Punctuation
\n\tText.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
nodeName.Otherany0.8654Node0.0150never0.0072string0.0050boolean0.0047
)Punctuation
 Text.Whitespace
{Punctuation
\n\t\tText.Whitespace
nodeName.Otherany0.8943Node0.0075complex0.0069never0.0045string0.0026
.Punctuation
valueName.Otherany0.9124string0.0646number0.0065boolean0.0048complex0.0019
 Text.Whitespace
=Operator
 Text.Whitespace
valueName.Otherany0.8564string0.1058number0.0151boolean0.0080complex0.0031
;Punctuation
\n\tText.Whitespace
}Punctuation
 Text.Whitespace
elseKeyword
 Text.Whitespace
{Punctuation
\n\t\tText.Whitespace
// Prepend the new node to the beginning of the listComment.Single
\n\t\tText.Whitespace
objectsName.Otherany0.8573complex0.0616any[]0.0029number0.0019never0.0013
.Punctuation
nextName.Otherany0.8710complex0.0589number0.0086string0.0077void0.0062
 Text.Whitespace
=Operator
 Text.Whitespace
{Punctuation
 Text.Whitespace
// eslint-disable-line no-param-reassignComment.Single
\n\t\t\tText.Whitespace
keyName.Otherany0.6200string0.3614complex0.0084number0.0036void0.0014
:Operator
 Text.Whitespace
keyKeyword.Typeany0.6940string0.2935complex0.0041number0.0040void0.0008
,Punctuation
\n\t\t\tText.Whitespace
nextName.Otherany0.8468string0.0530number0.0386boolean0.0102Function0.0083
:Operator
 Text.Whitespace
objects.nextKeyword.Type
,Punctuation
\n\t\t\tText.Whitespace
valueName.Otherany0.8846string0.0589boolean0.0153number0.0101{}0.0051
:Operator
 Text.Whitespace
valueKeyword.Typeany0.9105string0.0500boolean0.0092number0.0078complex0.0041
\n\t\tText.Whitespace
}Punctuation
;Punctuation
\n\tText.Whitespace
}Punctuation
\nText.Whitespace
}Punctuation
;Punctuation
\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
listHasName.Otherboolean0.9357any0.0397void0.0046string0.0039complex0.0019
 Text.Whitespace
=Operator
 Text.Whitespace
functionKeyword.Declaration
 Text.Whitespace
(Punctuation
objectsName.Otherany0.8502string0.0199any[]0.0133boolean0.0045number0.0045
,Punctuation
 Text.Whitespace
keyName.Otherany0.7703string0.2178number0.0032complex0.0023boolean0.0009
)Punctuation
 Text.Whitespace
{Punctuation
\n\tText.Whitespace
returnKeyword
 Text.Whitespace
!Operator
!Operator
listGetNodeName.Otherany0.6847boolean0.2316string0.0301complex0.0147void0.0116
(Punctuation
objectsName.Otherany0.8755any[]0.0255complex0.0194string0.0163number0.0059
,Punctuation
 Text.Whitespace
keyName.Otherany0.8438string0.1471complex0.0025number0.0014{}0.0007
)Punctuation
;Punctuation
\nText.Whitespace
}Punctuation
;Punctuation
\n\nText.Whitespace
moduleKeyword.Reserved
.exportsName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
functionKeyword.Declaration
 Text.Whitespace
getSideChannelName.Otherany0.6302void0.1604string0.0469complex0.0274boolean0.0084
(Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n\tText.Whitespace
varKeyword.Declaration
 Text.Whitespace
$wmName.Other
;Punctuation
\n\tText.Whitespace
varKeyword.Declaration
 Text.Whitespace
$mName.Other
;Punctuation
\n\tText.Whitespace
varKeyword.Declaration
 Text.Whitespace
$oName.Other
;Punctuation
\n\tText.Whitespace
varKeyword.Declaration
 Text.Whitespace
channelName.Othercomplex0.2978any0.1249string0.0116Message0.0061{}0.0057
 Text.Whitespace
=Operator
 Text.Whitespace
{Punctuation
\n\t\tText.Whitespace
assertName.Othervoid0.6655any0.1381boolean0.0705string0.0506complex0.0193
:Operator
 Text.Whitespace
functionKeyword.Type
 Text.Whitespace
(Punctuation
keyName.Otherany0.6931string0.2897complex0.0071number0.0017never0.0007
)Punctuation
 Text.Whitespace
{Punctuation
\n\t\t\tText.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
channelName.Otherany0.7364complex0.0668{}0.0040string0.0033BooleanConstructor0.0017
.Punctuation
hasName.Otherboolean0.7306any0.2236string0.0262complex0.0083{}0.0022
(Punctuation
keyName.Otherany0.6616string0.3202complex0.0114number0.0021never0.0006
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n\t\t\t\tText.Whitespace
throwKeywordany0.9081string0.0453Error0.0207complex0.0103number0.0019
 Text.Whitespace
newOperator.Wordany0.8892string0.0850Error0.0066complex0.0050number0.0015
 Text.Whitespace
$TypeErrorName.Other
(Punctuation
'Side channel does not contain 'Literal.String.Single
 Text.Whitespace
+Operator
 Text.Whitespace
inspectName.Otherany0.8316string0.1320complex0.0295void0.0014boolean0.0007
(Punctuation
keyName.Otherany0.6344string0.3426complex0.0145number0.0012never0.0011
)Punctuation
)Punctuation
;Punctuation
\n\t\t\tText.Whitespace
}Punctuation
\n\t\tText.Whitespace
}Punctuation
,Punctuation
\n\t\tText.Whitespace
getName.Other
:Operator
 Text.Whitespace
functionKeyword.Type
 Text.Whitespace
(Punctuation
keyName.Otherany0.7151string0.2732complex0.0040number0.0011never0.0007
)Punctuation
 Text.Whitespace
{Punctuation
 Text.Whitespace
// eslint-disable-line consistent-returnComment.Single
\n\t\t\tText.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
$WeakMapName.Other
 Text.Whitespace
&&Operator
 Text.Whitespace
keyName.Otherany0.7446string0.2409complex0.0095boolean0.0014number0.0010
 Text.Whitespace
&&Operator
 Text.Whitespace
(Punctuation
typeofOperator.Word
 Text.Whitespace
keyName.Otherany0.8976string0.0868complex0.0115number0.0008boolean0.0004
 Text.Whitespace
===Operator
 Text.Whitespace
'object'Literal.String.Single
 Text.Whitespace
||Operator
 Text.Whitespace
typeofOperator.Word
 Text.Whitespace
keyName.Otherany0.7726string0.2012complex0.0212number0.0012boolean0.0004
 Text.Whitespace
===Operator
 Text.Whitespace
'function'Literal.String.Single
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n\t\t\t\tText.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
$wmName.Other
)Punctuation
 Text.Whitespace
{Punctuation
\n\t\t\t\t\tText.Whitespace
returnKeyword
 Text.Whitespace
$weakMapGetName.Other
(Punctuation
$wmName.Other
,Punctuation
 Text.Whitespace
keyName.Otherstring0.5143any0.4747complex0.0035number0.0020boolean0.0007
)Punctuation
;Punctuation
\n\t\t\t\tText.Whitespace
}Punctuation
\n\t\t\tText.Whitespace
}Punctuation
 Text.Whitespace
elseKeyword
 Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
$MapName.Other
)Punctuation
 Text.Whitespace
{Punctuation
\n\t\t\t\tText.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
$mName.Other
)Punctuation
 Text.Whitespace
{Punctuation
\n\t\t\t\t\tText.Whitespace
returnKeyword
 Text.Whitespace
$mapGetName.Other
(Punctuation
$mName.Other
,Punctuation
 Text.Whitespace
keyName.Otherany0.6004string0.3859complex0.0053number0.0017any[]0.0007
)Punctuation
;Punctuation
\n\t\t\t\tText.Whitespace
}Punctuation
\n\t\t\tText.Whitespace
}Punctuation
 Text.Whitespace
elseKeyword
 Text.Whitespace
{Punctuation
\n\t\t\t\tText.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
$oName.Other
)Punctuation
 Text.Whitespace
{Punctuation
 Text.Whitespace
// eslint-disable-line no-lonely-ifComment.Single
\n\t\t\t\t\tText.Whitespace
returnKeyword
 Text.Whitespace
listGetName.Otherany0.6444boolean0.1027string0.0818void0.0540complex0.0494
(Punctuation
$oName.Other
,Punctuation
 Text.Whitespace
keyName.Otherany0.7067string0.2764complex0.0074number0.0018never0.0008
)Punctuation
;Punctuation
\n\t\t\t\tText.Whitespace
}Punctuation
\n\t\t\tText.Whitespace
}Punctuation
\n\t\tText.Whitespace
}Punctuation
,Punctuation
\n\t\tText.Whitespace
hasName.Otherboolean0.8910any0.0688string0.0148void0.0077{}0.0029
:Operator
 Text.Whitespace
functionKeyword.Type
 Text.Whitespace
(Punctuation
keyName.Otherany0.6907string0.2959complex0.0054number0.0011any[]0.0007
)Punctuation
 Text.Whitespace
{Punctuation
\n\t\t\tText.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
$WeakMapName.Other
 Text.Whitespace
&&Operator
 Text.Whitespace
keyName.Otherany0.7461string0.2378complex0.0107boolean0.0016number0.0010
 Text.Whitespace
&&Operator
 Text.Whitespace
(Punctuation
typeofOperator.Word
 Text.Whitespace
keyName.Otherany0.8812string0.1002complex0.0137number0.0009boolean0.0006
 Text.Whitespace
===Operator
 Text.Whitespace
'object'Literal.String.Single
 Text.Whitespace
||Operator
 Text.Whitespace
typeofOperator.Word
 Text.Whitespace
keyName.Otherany0.7910string0.1793complex0.0241number0.0012boolean0.0006
 Text.Whitespace
===Operator
 Text.Whitespace
'function'Literal.String.Single
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n\t\t\t\tText.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
$wmName.Other
)Punctuation
 Text.Whitespace
{Punctuation
\n\t\t\t\t\tText.Whitespace
returnKeyword
 Text.Whitespace
$weakMapHasName.Other
(Punctuation
$wmName.Other
,Punctuation
 Text.Whitespace
keyName.Otherstring0.5183any0.4700complex0.0041number0.0020boolean0.0008
)Punctuation
;Punctuation
\n\t\t\t\tText.Whitespace
}Punctuation
\n\t\t\tText.Whitespace
}Punctuation
 Text.Whitespace
elseKeyword
 Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
$MapName.Other
)Punctuation
 Text.Whitespace
{Punctuation
\n\t\t\t\tText.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
$mName.Other
)Punctuation
 Text.Whitespace
{Punctuation
\n\t\t\t\t\tText.Whitespace
returnKeyword
 Text.Whitespace
$mapHasName.Other
(Punctuation
$mName.Other
,Punctuation
 Text.Whitespace
keyName.Otherany0.5813string0.4037complex0.0067number0.0017any[]0.0007
)Punctuation
;Punctuation
\n\t\t\t\tText.Whitespace
}Punctuation
\n\t\t\tText.Whitespace
}Punctuation
 Text.Whitespace
elseKeyword
 Text.Whitespace
{Punctuation
\n\t\t\t\tText.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
$oName.Other
)Punctuation
 Text.Whitespace
{Punctuation
 Text.Whitespace
// eslint-disable-line no-lonely-ifComment.Single
\n\t\t\t\t\tText.Whitespace
returnKeyword
 Text.Whitespace
listHasName.Otherany0.5968boolean0.1654void0.0608string0.0573complex0.0482
(Punctuation
$oName.Other
,Punctuation
 Text.Whitespace
keyName.Otherany0.6440string0.3389complex0.0084number0.0018void0.0009
)Punctuation
;Punctuation
\n\t\t\t\tText.Whitespace
}Punctuation
\n\t\t\tText.Whitespace
}Punctuation
\n\t\t\tText.Whitespace
returnKeyword
 Text.Whitespace
falseKeyword.Constant
;Punctuation
\n\t\tText.Whitespace
}Punctuation
,Punctuation
\n\t\tText.Whitespace
setName.Other
:Operator
 Text.Whitespace
functionKeyword.Type
 Text.Whitespace
(Punctuation
keyName.Otherany0.6398string0.3476complex0.0046any[]0.0009number0.0008
,Punctuation
 Text.Whitespace
valueName.Otherany0.8537string0.1265boolean0.0066complex0.0024number0.0022
)Punctuation
 Text.Whitespace
{Punctuation
\n\t\t\tText.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
$WeakMapName.Other
 Text.Whitespace
&&Operator
 Text.Whitespace
keyName.Otherany0.7863string0.1932complex0.0128boolean0.0029number0.0010
 Text.Whitespace
&&Operator
 Text.Whitespace
(Punctuation
typeofOperator.Word
 Text.Whitespace
keyName.Otherany0.8733string0.1032complex0.0172number0.0010boolean0.0010
 Text.Whitespace
===Operator
 Text.Whitespace
'object'Literal.String.Single
 Text.Whitespace
||Operator
 Text.Whitespace
typeofOperator.Word
 Text.Whitespace
keyName.Otherany0.8239string0.1420complex0.0269number0.0012boolean0.0007
 Text.Whitespace
===Operator
 Text.Whitespace
'function'Literal.String.Single
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n\t\t\t\tText.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
$wmName.Other
)Punctuation
 Text.Whitespace
{Punctuation
\n\t\t\t\t\tText.Whitespace
$wmName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
newOperator.Wordany0.9024string0.0454complex0.0136boolean0.0070void0.0045
 Text.Whitespace
$WeakMapName.Other
(Punctuation
)Punctuation
;Punctuation
\n\t\t\t\tText.Whitespace
}Punctuation
\n\t\t\t\tText.Whitespace
$weakMapSetName.Other
(Punctuation
$wmName.Other
,Punctuation
 Text.Whitespace
keyName.Otherstring0.6235any0.3617complex0.0062number0.0018void0.0009
,Punctuation
 Text.Whitespace
valueName.Otherany0.7323string0.2345number0.0071boolean0.0053complex0.0037
)Punctuation
;Punctuation
\n\t\t\tText.Whitespace
}Punctuation
 Text.Whitespace
elseKeyword
 Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
$MapName.Other
)Punctuation
 Text.Whitespace
{Punctuation
\n\t\t\t\tText.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
$mName.Other
)Punctuation
 Text.Whitespace
{Punctuation
\n\t\t\t\t\tText.Whitespace
$mName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
newOperator.Wordany0.9110string0.0393complex0.0163boolean0.0040void0.0036
 Text.Whitespace
$MapName.Other
(Punctuation
)Punctuation
;Punctuation
\n\t\t\t\tText.Whitespace
}Punctuation
\n\t\t\t\tText.Whitespace
$mapSetName.Other
(Punctuation
$mName.Other
,Punctuation
 Text.Whitespace
keyName.Otherstring0.5614any0.4225complex0.0072number0.0024void0.0008
,Punctuation
 Text.Whitespace
valueName.Otherany0.7277string0.2379number0.0085complex0.0049boolean0.0049
)Punctuation
;Punctuation
\n\t\t\tText.Whitespace
}Punctuation
 Text.Whitespace
elseKeyword
 Text.Whitespace
{Punctuation
\n\t\t\t\tText.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
$oName.Other
)Punctuation
 Text.Whitespace
{Punctuation
\n\t\t\t\t\tText.Whitespace
// Initialize the linked list as an empty node, so that we don't have to special-case handling of the first node: we can always refer to it as (previous node).next, instead of something like (list).headComment.Single
\n\t\t\t\t\tText.Whitespace
$oName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
{Punctuation
 Text.Whitespace
keyName.Other{}0.6307any0.2449string0.0532complex0.0266Object0.0053
:Operator
 Text.Whitespace
{Punctuation
}Punctuation
,Punctuation
 Text.Whitespace
nextName.Othernull0.8202any0.0775Function0.0102complex0.0094string0.0094
:Operator
 Text.Whitespace
nullKeyword.Type
 Text.Whitespace
}Punctuation
;Punctuation
\n\t\t\t\tText.Whitespace
}Punctuation
\n\t\t\t\tText.Whitespace
listSetName.Othervoid0.5151any0.3002complex0.0408string0.0302boolean0.0249
(Punctuation
$oName.Other
,Punctuation
 Text.Whitespace
keyName.Otherstring0.5192any0.4624complex0.0076number0.0023never0.0010
,Punctuation
 Text.Whitespace
valueName.Otherany0.8729string0.0970number0.0049complex0.0035boolean0.0031
)Punctuation
;Punctuation
\n\t\t\tText.Whitespace
}Punctuation
\n\t\tText.Whitespace
}Punctuation
\n\tText.Whitespace
}Punctuation
;Punctuation
\n\tText.Whitespace
returnKeyword
 Text.Whitespace
channelName.Otherany0.2435complex0.0813string0.0450{}0.0060boolean0.0049
;Punctuation
\nText.Whitespace
}Punctuation
;Punctuation
\nText.Whitespace
