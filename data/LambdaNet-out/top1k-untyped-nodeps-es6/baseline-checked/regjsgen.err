regjsgen.ts(16,40): error TS2551: Property 'string' does not exist on type 'Object'. Did you mean 'toString'?
regjsgen.ts(16,69): error TS2683: 'this' implicitly has type 'any' because it does not have a type annotation.
regjsgen.ts(19,41): error TS2551: Property 'string' does not exist on type 'Object'. Did you mean 'toString'?
regjsgen.ts(22,44): error TS2551: Property 'string' does not exist on type 'Object'. Did you mean 'toString'?
regjsgen.ts(22,80): error TS2339: Property 'nodeType' does not exist on type 'NodeModule'.
regjsgen.ts(26,33): error TS2339: Property 'global' does not exist on type 'Object'.
regjsgen.ts(26,69): error TS2339: Property 'window' does not exist on type 'Object'.
regjsgen.ts(26,105): error TS2339: Property 'self' does not exist on type 'Object'.
regjsgen.ts(27,5): error TS2696: The 'Object' type is assignable to very few other types. Did you mean to use the 'any' type instead?
  Type 'Object' is missing the following properties from type 'HTMLElement': accessKey, accessKeyLabel, autocapitalize, dir, and 277 more.
regjsgen.ts(41,17): error TS2345: Argument of type 'Number' is not assignable to parameter of type 'number'.
  'number' is a primitive, but 'Number' is a wrapper object. Prefer using 'number' when possible.
regjsgen.ts(44,18): error TS2345: Argument of type 'Number' is not assignable to parameter of type 'number'.
  'number' is a primitive, but 'Number' is a wrapper object. Prefer using 'number' when possible.
regjsgen.ts(51,7): error TS2322: Type 'string' is not assignable to type 'Number'.
regjsgen.ts(51,34): error TS2345: Argument of type 'Number' is not assignable to parameter of type 'number'.
  'number' is a primitive, but 'Number' is a wrapper object. Prefer using 'number' when possible.
regjsgen.ts(55,7): error TS2362: The left-hand side of an arithmetic operation must be of type 'any', 'number', 'bigint' or an enum type.
regjsgen.ts(56,11): error TS2322: Type 'number' is not assignable to type 'String'.
regjsgen.ts(56,36): error TS2362: The left-hand side of an arithmetic operation must be of type 'any', 'number', 'bigint' or an enum type.
regjsgen.ts(57,11): error TS2322: Type 'number' is not assignable to type 'String'.
regjsgen.ts(57,35): error TS2362: The left-hand side of an arithmetic operation must be of type 'any', 'number', 'bigint' or an enum type.
regjsgen.ts(58,7): error TS2322: Type 'string' is not assignable to type 'Number'.
regjsgen.ts(58,34): error TS2345: Argument of type 'String' is not assignable to parameter of type 'number'.
regjsgen.ts(66,56): error TS2304: Cannot find name 'Void'.
regjsgen.ts(76,28): error TS2538: Type 'String' cannot be used as an index type.
regjsgen.ts(77,29): error TS2538: Type 'String' cannot be used as an index type.
regjsgen.ts(79,18): error TS2339: Property 'test' does not exist on type 'String'.
regjsgen.ts(89,36): error TS2314: Generic type 'Promise<T>' requires 1 type argument(s).
regjsgen.ts(90,29): error TS2339: Property 'type' does not exist on type 'Object'.
regjsgen.ts(93,25): error TS2538: Type 'String' cannot be used as an index type.
regjsgen.ts(102,32): error TS2339: Property 'length' does not exist on type 'Object'.
regjsgen.ts(106,14): error TS2356: An arithmetic operand must be of type 'any', 'number', 'bigint' or an enum type.
regjsgen.ts(107,20): error TS2538: Type 'Number' cannot be used as an index type.
regjsgen.ts(109,31): error TS2365: Operator '+=' cannot be applied to types 'String' and 'Number'.
regjsgen.ts(114,9): error TS2365: Operator '+' cannot be applied to types 'Number' and 'number'.
regjsgen.ts(115,15): error TS2538: Type 'Number' cannot be used as an index type.
regjsgen.ts(116,15): error TS2538: Type 'Number' cannot be used as an index type.
regjsgen.ts(117,9): error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type 'Object'.
regjsgen.ts(117,15): error TS2365: Operator '+' cannot be applied to types 'Number' and 'number'.
regjsgen.ts(118,9): error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type 'Object'.
regjsgen.ts(118,15): error TS2365: Operator '+' cannot be applied to types 'Number' and 'number'.
regjsgen.ts(119,9): error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type 'Object'.
regjsgen.ts(119,15): error TS2365: Operator '+' cannot be applied to types 'Number' and 'number'.
regjsgen.ts(120,9): error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type 'Object'.
regjsgen.ts(120,15): error TS2365: Operator '+' cannot be applied to types 'Number' and 'number'.
regjsgen.ts(135,21): error TS2339: Property 'type' does not exist on type 'Object'.
regjsgen.ts(137,12): error TS2554: Expected 3 arguments, but got 2.
regjsgen.ts(137,48): error TS2339: Property 'body' does not exist on type 'Object'.
regjsgen.ts(141,21): error TS2339: Property 'type' does not exist on type 'Object'.
regjsgen.ts(143,18): error TS2339: Property 'kind' does not exist on type 'Object'.
regjsgen.ts(159,40): error TS2314: Generic type 'Promise<T>' requires 1 type argument(s).
regjsgen.ts(160,21): error TS2339: Property 'type' does not exist on type 'Object'.
regjsgen.ts(166,21): error TS2339: Property 'type' does not exist on type 'Object'.
regjsgen.ts(168,29): error TS2339: Property 'kind' does not exist on type 'Object'.
regjsgen.ts(169,29): error TS2367: This condition will always return 'false' since the types 'Number' and 'string' have no overlap.
regjsgen.ts(169,62): error TS2367: This condition will always return 'false' since the types 'Number' and 'string' have no overlap.
regjsgen.ts(172,13): error TS2339: Property 'negative' does not exist on type 'Object'.
regjsgen.ts(173,48): error TS2339: Property 'body' does not exist on type 'Object'.
regjsgen.ts(173,54): error TS2345: Argument of type 'String' is not assignable to parameter of type 'Number'.
  Type 'String' is missing the following properties from type 'Number': toFixed, toExponential, toPrecision
regjsgen.ts(178,21): error TS2339: Property 'type' does not exist on type 'Object'.
regjsgen.ts(180,24): error TS2339: Property 'value' does not exist on type 'Object'.
regjsgen.ts(184,21): error TS2339: Property 'type' does not exist on type 'Object'.
regjsgen.ts(186,28): error TS2339: Property 'min' does not exist on type 'Object'.
regjsgen.ts(187,28): error TS2339: Property 'max' does not exist on type 'Object'.
regjsgen.ts(189,13): error TS2339: Property 'type' does not exist on type 'Object'.
regjsgen.ts(189,50): error TS2339: Property 'type' does not exist on type 'Object'.
regjsgen.ts(196,45): error TS2314: Generic type 'Promise<T>' requires 1 type argument(s).
regjsgen.ts(197,21): error TS2339: Property 'type' does not exist on type 'Object'.
regjsgen.ts(203,21): error TS2339: Property 'type' does not exist on type 'Object'.
regjsgen.ts(205,64): error TS2339: Property 'strings' does not exist on type 'Object'.
regjsgen.ts(205,73): error TS2345: Argument of type 'string' is not assignable to parameter of type 'Number'.
regjsgen.ts(209,21): error TS2339: Property 'type' does not exist on type 'Object'.
regjsgen.ts(211,12): error TS2554: Expected 3 arguments, but got 2.
regjsgen.ts(211,44): error TS2339: Property 'characters' does not exist on type 'Object'.
regjsgen.ts(215,21): error TS2339: Property 'type' does not exist on type 'Object'.
regjsgen.ts(217,44): error TS2339: Property 'body' does not exist on type 'Object'.
regjsgen.ts(217,50): error TS2345: Argument of type 'string' is not assignable to parameter of type 'Number'.
regjsgen.ts(222,21): error TS2339: Property 'type' does not exist on type 'Object'.
regjsgen.ts(228,21): error TS2339: Property 'type' does not exist on type 'Object'.
regjsgen.ts(232,18): error TS2339: Property 'behavior' does not exist on type 'Object'.
regjsgen.ts(234,18): error TS2339: Property 'name' does not exist on type 'Object'.
regjsgen.ts(235,52): error TS2339: Property 'name' does not exist on type 'Object'.
regjsgen.ts(254,50): error TS2339: Property 'behaviour' does not exist on type 'Object'.
regjsgen.ts(257,5): error TS2365: Operator '+=' cannot be applied to types 'String' and 'String'.
regjsgen.ts(257,15): error TS2554: Expected 3 arguments, but got 2.
regjsgen.ts(257,47): error TS2339: Property 'body' does not exist on type 'Object'.
regjsgen.ts(263,21): error TS2339: Property 'type' does not exist on type 'Object'.
regjsgen.ts(265,17): error TS2339: Property 'value' does not exist on type 'Object'.
regjsgen.ts(269,21): error TS2339: Property 'type' does not exist on type 'Object'.
regjsgen.ts(272,28): error TS2339: Property 'min' does not exist on type 'Object'.
regjsgen.ts(273,28): error TS2339: Property 'max' does not exist on type 'Object'.
regjsgen.ts(291,15): error TS2339: Property 'greedy' does not exist on type 'Object'.
regjsgen.ts(295,30): error TS2339: Property 'body' does not exist on type 'Object'.
regjsgen.ts(299,21): error TS2339: Property 'type' does not exist on type 'Object'.
regjsgen.ts(301,14): error TS2339: Property 'matchIndex' does not exist on type 'Object'.
regjsgen.ts(302,26): error TS2339: Property 'matchIndex' does not exist on type 'Object'.
regjsgen.ts(304,14): error TS2339: Property 'name' does not exist on type 'Object'.
regjsgen.ts(305,47): error TS2339: Property 'name' does not exist on type 'Object'.
regjsgen.ts(311,40): error TS2314: Generic type 'Promise<T>' requires 1 type argument(s).
regjsgen.ts(312,21): error TS2339: Property 'type' does not exist on type 'Object'.
regjsgen.ts(318,21): error TS2339: Property 'type' does not exist on type 'Object'.
regjsgen.ts(320,25): error TS2339: Property 'negative' does not exist on type 'Object'.
regjsgen.ts(320,60): error TS2339: Property 'value' does not exist on type 'Object'.
regjsgen.ts(324,21): error TS2339: Property 'type' does not exist on type 'Object'.
regjsgen.ts(326,29): error TS2339: Property 'kind' does not exist on type 'Object'.
regjsgen.ts(327,34): error TS2339: Property 'codePoint' does not exist on type 'Object'.
regjsgen.ts(335,38): error TS2554: Expected 0 arguments, but got 1.
regjsgen.ts(337,42): error TS2339: Property 'toString' does not exist on type 'never'.
regjsgen.ts(339,37): error TS2554: Expected 0 arguments, but got 1.
regjsgen.ts(343,42): error TS2339: Property 'toString' does not exist on type 'never'.
regjsgen.ts(364,9): error TS2740: Type 'Number' is missing the following properties from type 'String': charAt, charCodeAt, concat, indexOf, and 44 more.
regjsgen.ts(364,30): error TS2554: Expected 0 arguments, but got 1.
regjsgen.ts(366,44): error TS2339: Property 'toString' does not exist on type 'never'.
regjsgen.ts(368,35): error TS2339: Property 'toString' does not exist on type 'never'.
regjsgen.ts(401,14): error TS2304: Cannot find name 'define'.
regjsgen.ts(401,45): error TS2304: Cannot find name 'define'.
regjsgen.ts(401,71): error TS2304: Cannot find name 'define'.
regjsgen.ts(403,5): error TS2304: Cannot find name 'define'.
regjsgen.ts(407,10): error TS2339: Property 'regjsgen' does not exist on type 'HTMLElement'.
regjsgen.ts(412,17): error TS2339: Property 'generate' does not exist on type 'Object'.
regjsgen.ts(416,10): error TS2339: Property 'regjsgen' does not exist on type 'HTMLElement'.

