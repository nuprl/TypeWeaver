varKeyword.Declaration
 Text.Whitespace
htmlName.Otherany0.4616string0.4574void0.0064complex0.0046number0.0028
 Text.Whitespace
=Operator
 Text.Whitespace
(Punctuation
functionKeyword.Declaration
 Text.Whitespace
(Punctuation
exportsName.Otherany0.7127Object0.0363complex0.0261string0.0224any[]0.0196
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
'use strict'Literal.String.Single
;Punctuation
\n\n  Text.Whitespace
/**\n   * Copyright (C) 2017-present by Andrea Giammarchi - @WebReflection\n   *\n   * Permission is hereby granted, free of charge, to any person obtaining a copy\n   * of this software and associated documentation files (the "Software"), to deal\n   * in the Software without restriction, including without limitation the rights\n   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n   * copies of the Software, and to permit persons to whom the Software is\n   * furnished to do so, subject to the following conditions:\n   *\n   * The above copyright notice and this permission notice shall be included in\n   * all copies or substantial portions of the Software.\n   *\n   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n   * THE SOFTWARE.\n   */Comment.Multiline
\n\n  Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
{Punctuation
replaceName.Otherany0.8805complex0.0500string0.0345void0.0175boolean0.0067
}Punctuation
 Text.Whitespace
=Operator
 Text.Whitespace
''Literal.String.Single
;Punctuation
\n\n  Text.Whitespace
// escapeComment.Single
\n  Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
esName.Otherstring0.8912RegExp0.0683any0.0259string[]0.0066boolean0.0025
 Text.Whitespace
=Operator
 Text.Whitespace
/&(?:amp|#38|lt|#60|gt|#62|apos|#39|quot|#34);/gLiteral.String.Regex
;Punctuation
\n  Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
caName.Otherstring0.5169RegExp0.3726string[]0.0804any0.0167boolean0.0024
 Text.Whitespace
=Operator
 Text.Whitespace
/[&<>'"]/gLiteral.String.Regex
;Punctuation
\n\n  Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
escaName.Othercomplex0.6821any0.2353string0.0117{}0.0045RegExp0.0023
 Text.Whitespace
=Operator
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
'&'Literal.String.Single
:Operator
 Text.Whitespace
'&amp;'Literal.String.Single
,Punctuation
\n    Text.Whitespace
'<'Literal.String.Single
:Operator
 Text.Whitespace
'&lt;'Literal.String.Single
,Punctuation
\n    Text.Whitespace
'>'Literal.String.Single
:Operator
 Text.Whitespace
'&gt;'Literal.String.Single
,Punctuation
\n    Text.Whitespace
"'"Literal.String.Double
:Operator
 Text.Whitespace
'&#39;'Literal.String.Single
,Punctuation
\n    Text.Whitespace
'"'Literal.String.Single
:Operator
 Text.Whitespace
'&quot;'Literal.String.Single
\n  Text.Whitespace
}Punctuation
;Punctuation
\n  Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
peName.Otherany0.7892string0.0770complex0.0610any[]0.0102void0.0052
 Text.Whitespace
=Operator
 Text.Whitespace
mName.Otherany0.7858string0.1320complex0.0262number0.0085any[]0.0048
 Text.Whitespace
=>Punctuation
 Text.Whitespace
escaName.Otherany0.4605complex0.4356{}0.0341any[]0.0141string[]0.0043
[Punctuation
mName.Otherstring0.7032any0.2246number0.0491complex0.0076void0.0015
]Punctuation
;Punctuation
\n\n  Text.Whitespace
/**\n   * Safely escape HTML entities such as `&`, `<`, `>`, `"`, and `'`.\n   * @param {string} es the input to safely escape\n   * @returns {string} the escaped input, and it **throws** an error if\n   *  the input type is unexpected, except for boolean and numbers,\n   *  converted as string.\n   */Comment.Multiline
\n  Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
escapeName.Otherstring0.9685any0.0289string[]0.0008complex0.0005any[]0.0003
 Text.Whitespace
=Operator
 Text.Whitespace
esName.Otherany0.6154string0.3793any[]0.0011string[]0.0006boolean0.0006
 Text.Whitespace
=>Punctuation
 Text.Whitespace
replaceName.Otherany0.9246complex0.0291void0.0257string0.0099boolean0.0033
.Punctuation
callName.Otherany0.9707complex0.0138string0.0053void0.0031number0.0017
(Punctuation
esName.Otherany0.7462string0.2431boolean0.0015complex0.0012void0.0009
,Punctuation
 Text.Whitespace
caName.Otherstring0.4790any0.4593string[]0.0373complex0.0049void0.0041
,Punctuation
 Text.Whitespace
peName.Otherany0.8186string0.1042complex0.0481RegExp0.0075void0.0044
)Punctuation
;Punctuation
\n\n\n  Text.Whitespace
// unescapeComment.Single
\n  Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
unesName.Othercomplex0.8226any0.1452string0.0037{}0.0020any[]0.0011
 Text.Whitespace
=Operator
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
'&amp;'Literal.String.Single
:Operator
 Text.Whitespace
'&'Literal.String.Single
,Punctuation
\n    Text.Whitespace
'&#38;'Literal.String.Single
:Operator
 Text.Whitespace
'&'Literal.String.Single
,Punctuation
\n    Text.Whitespace
'&lt;'Literal.String.Single
:Operator
 Text.Whitespace
'<'Literal.String.Single
,Punctuation
\n    Text.Whitespace
'&#60;'Literal.String.Single
:Operator
 Text.Whitespace
'<'Literal.String.Single
,Punctuation
\n    Text.Whitespace
'&gt;'Literal.String.Single
:Operator
 Text.Whitespace
'>'Literal.String.Single
,Punctuation
\n    Text.Whitespace
'&#62;'Literal.String.Single
:Operator
 Text.Whitespace
'>'Literal.String.Single
,Punctuation
\n    Text.Whitespace
'&apos;'Literal.String.Single
:Operator
 Text.Whitespace
"'"Literal.String.Double
,Punctuation
\n    Text.Whitespace
'&#39;'Literal.String.Single
:Operator
 Text.Whitespace
"'"Literal.String.Double
,Punctuation
\n    Text.Whitespace
'&quot;'Literal.String.Single
:Operator
 Text.Whitespace
'"'Literal.String.Single
,Punctuation
\n    Text.Whitespace
'&#34;'Literal.String.Single
:Operator
 Text.Whitespace
'"'Literal.String.Single
\n  Text.Whitespace
}Punctuation
;Punctuation
\n  Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
capeName.Otherany0.8096string0.0785complex0.0505any[]0.0124void0.0048
 Text.Whitespace
=Operator
 Text.Whitespace
mName.Otherany0.8021string0.1332complex0.0190number0.0080any[]0.0052
 Text.Whitespace
=>Punctuation
 Text.Whitespace
unesName.Otherany0.6425complex0.2779{}0.0255any[]0.0119string0.0046
[Punctuation
mName.Otherstring0.6416any0.2960number0.0414complex0.0070void0.0012
]Punctuation
;Punctuation
\n\n  Text.Whitespace
/**\n   * Safely unescape previously escaped entities such as `&`, `<`, `>`, `"`,\n   * and `'`.\n   * @param {string} un a previously escaped string\n   * @returns {string} the unescaped input, and it **throws** an error if\n   *  the input type is unexpected, except for boolean and numbers,\n   *  converted as string.\n   */Comment.Multiline
\n  Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
unescapeName.Otherany0.8968string0.0973number0.0017complex0.0014boolean0.0012
 Text.Whitespace
=Operator
 Text.Whitespace
unName.Otherany0.9571string0.0295complex0.0071any[]0.0026boolean0.0008
 Text.Whitespace
=>Punctuation
 Text.Whitespace
replaceName.Otherany0.9585complex0.0210void0.0125string0.0033boolean0.0020
.Punctuation
callName.Otherany0.9722complex0.0159string0.0051void0.0022number0.0011
(Punctuation
unName.Otherany0.7679complex0.1029string0.0924void0.0080any[]0.0076
,Punctuation
 Text.Whitespace
esName.Otherany0.6781string0.3079complex0.0045void0.0017Function0.0012
,Punctuation
 Text.Whitespace
capeName.Otherany0.8471complex0.0802string0.0453void0.0070any[]0.0028
)Punctuation
;Punctuation
\n\n  Text.Whitespace
exportsName.Otherany0.8279complex0.0671Object0.0105string0.0073any[]0.0072
.Punctuation
escapeName.Otherstring0.8703any0.1231complex0.0046void0.0007number0.0006
 Text.Whitespace
=Operator
 Text.Whitespace
escapeName.Otherstring0.9787any0.0165complex0.0037number0.0004void0.0002
;Punctuation
\n  Text.Whitespace
exportsName.Otherany0.6648complex0.1608any[]0.0207Object0.0162string0.0088
.Punctuation
unescapeName.Otherany0.8771string0.1132complex0.0052number0.0022boolean0.0008
 Text.Whitespace
=Operator
 Text.Whitespace
unescapeName.Otherany0.6599string0.3073complex0.0132number0.0114any[]0.0018
;Punctuation
\n\n  Text.Whitespace
returnKeyword
 Text.Whitespace
exportsName.Otherany0.8855complex0.0362any[]0.0270string0.0080Object0.0053
;Punctuation
\n\nText.Whitespace
}Punctuation
(Punctuation
{Punctuation
}Punctuation
)Punctuation
)Punctuation
;Punctuation
\nText.Whitespace
