importKeyword
 Text.Whitespace
baseSortedIndexName.Otherany0.1234complex0.0772void0.0417string0.0308boolean0.0285
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./.internal/baseSortedIndex.js'Literal.String.Single
\n\nText.Whitespace
Text
/**\n * Uses a binary search to determine the lowest index at which `value`\n * should be inserted into `array` in order to maintain its sort order.\n *\n * @since 0.1.0\n * @category Array\n * @param {Array} array The sorted array to inspect.\n * @param {*} value The value to evaluate.\n * @returns {number} Returns the index at which `value` should be inserted\n *  into `array`.\n * @example\n *\n * sortedIndex([30, 50], 40)\n * // => 1\n */Comment.Multiline
\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
sortedIndexName.Otherany0.3732string0.1515complex0.0885boolean0.0505number0.0269
(Punctuation
arrayName.Otherany0.3889string0.2589any[]0.0439string[]0.0374number0.0224
,Punctuation
 Text.Whitespace
valueName.Otherany0.6296string0.2623number0.0321boolean0.0170any[]0.0031
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
returnKeyword
 Text.Whitespace
baseSortedIndexName.Otherany0.5646complex0.0877string0.0778void0.0550boolean0.0217
(Punctuation
arrayName.Otherany0.6051string0.1295any[]0.0716string[]0.0264number0.0228
,Punctuation
 Text.Whitespace
valueName.Otherany0.7732string0.1159number0.0274boolean0.0095any[]0.0043
)Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
exportKeyword
 Text.Whitespace
defaultKeyword
 Text.Whitespace
sortedIndexName.Otherany0.4552string0.0270complex0.0142boolean0.0136number0.0119
\nText.Whitespace
