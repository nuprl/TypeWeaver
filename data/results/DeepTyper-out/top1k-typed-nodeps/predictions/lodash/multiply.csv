importKeyword
 Text.Whitespace
createMathOperationName.Otherany0.5326complex0.0630string0.0365boolean0.0211Promise<any>0.0150
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./.internal/createMathOperation.js'Literal.String.Single
\n\nText.Whitespace
Text
/**\n * Multiply two numbers.\n *\n * @since 4.7.0\n * @category Math\n * @param {number} multiplier The first number in a multiplication.\n * @param {number} multiplicand The second number in a multiplication.\n * @returns {number} Returns the product.\n * @example\n *\n * multiply(6, 4)\n * // => 24\n */Comment.Multiline
\nText.Whitespace
constKeyword.Declaration
 Text.Whitespace
multiplyName.Otherany0.4422complex0.0959number0.0477T0.0440string[]0.0418
 Text.Whitespace
=Operator
 Text.Whitespace
createMathOperationName.Otherany0.6640complex0.1166number0.0269T0.0127symbol0.0117
(Punctuation
(Punctuation
multiplierName.Othernumber0.7489any0.1990string0.0238boolean0.0029number[]0.0023
,Punctuation
 Text.Whitespace
multiplicandName.Othernumber0.8686any0.0573string0.0409boolean0.0154number[]0.0011
)Punctuation
 Text.Whitespace
=>Punctuation
 Text.Whitespace
multiplierName.Othernumber0.8713any0.1151string0.0084boolean0.0013complex0.0007
 Text.Whitespace
*Operator
 Text.Whitespace
multiplicandName.Othernumber0.9645any0.0214string0.0050boolean0.0022number[]0.0007
,Punctuation
 Text.Whitespace
1Literal.Number.Float
)Punctuation
\n\nText.Whitespace
exportKeyword
 Text.Whitespace
defaultKeyword
 Text.Whitespace
multiplyName.Otherany0.0490complex0.0463symbol0.0319T0.0212Promise<any>0.0184
\nText.Whitespace
