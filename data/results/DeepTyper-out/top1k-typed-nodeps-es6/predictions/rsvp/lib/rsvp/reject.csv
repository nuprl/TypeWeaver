importKeyword
 Text.Whitespace
PromiseName.BuiltinPromiseConstructor0.9550any0.0323complex0.0032Promise<any>0.0017void0.0013
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./promise'Literal.String.Single
;Punctuation
\n\nText.Whitespace
/**\n  This is a convenient alias for `Promise.reject`.\n\n  @method reject\n  @public\n  @static\n  @for rsvp\n  @param {*} reason value that the returned promise will be rejected with.\n  @param {String} [label] optional string for identifying the returned promise.\n  Useful for tooling.\n  @return {Promise} a promise rejected with the given `reason`.\n*/Comment.Multiline
\nText.Whitespace
exportKeyword
 Text.Whitespace
defaultKeyword
 Text.Whitespace
functionKeyword.Declaration
 Text.Whitespace
rejectName.Otherany0.3749void0.2458Promise<any>0.0628Promise<void>0.0510Promise<{}>0.0459
(Punctuation
reasonName.Otherany0.3939string0.3265Error0.1006number0.0132Object0.0113
,Punctuation
 Text.Whitespace
labelName.Otherstring0.9261any0.0592number0.0020String0.0005boolean0.0005
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
returnKeyword
 Text.Whitespace
PromiseName.BuiltinPromiseConstructor0.9880any0.0105string0.0003Promise<any>0.0002complex0.0001
.Punctuation
rejectName.Othercomplex0.9476any0.0296void0.0146string0.0015Promise<void>0.0010
(Punctuation
reasonName.Otherany0.6305string0.2740Error0.0623Object0.0056Date0.0037
,Punctuation
 Text.Whitespace
labelName.Otherstring0.8958any0.0973number0.0021complex0.0005Object0.0003
)Punctuation
;Punctuation
\nText.Whitespace
}Punctuation
\nText.Whitespace
