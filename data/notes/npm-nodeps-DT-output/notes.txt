# Type inference

This directory is a copy of `npm-nodeps`, but with CSV files generated by
DeepTyper for each JavaScript file. Each CSV file contains the tokens and
predicted types for the corresponding JavaScript file.

The type inference was done by executing:

    # starting from the repository root
    cd data/notes/npm-nodeps-DT-output
    python ../../../tools/infer-types.py ../../npm-nodeps-DT-output

`infer-types.py` can be run from any directory, but it outputs logs to its
current working directory. It took about 135 minutes (with an RTX6000) to run
the type inference.

There are 8824 files total, taking up 51 MB of space.

2500 `*.js` files were given as inputs; these are listed in
`type-inf-inputs.txt`.

2467 files ran successfully (i.e. DeepTyper ran without error and produced a
corresponding .csv file); these are listed in `type-inf-success.txt`.

33 files resulted in an error; these are listed in `type-inf-fail.txt` and their
errors collected in `type-inf-errs.txt`.


# Type insertion

This step reads the JavaScript files and their corresponding CSV files, and
inserts the predicted type annotations, outputing TypeScript.

    # starting from the repository root
    cd data/notes/npm-nodeps-DT-output
    python ../../../tools/insert-types.py ../../npm-nodeps-DT-output

`insert-types.py` outputs logs to its current working directory.

Using 16 cores, this step took about 2 minutes.

All 2467 files were successfully converted to TypeScript; these are listed in
`type-ins-success.txt`. There were 0 failures and 0 errors logged.

However, there were 615 warnings in 126 files; these are listed in
`type-ins-warn.txt`. The warnings fall into the following categories:

  - 5 declaration types could not be found
    - 1 case is due to an incorrect tokenization by DeepTyper
        - stealthy-require/lib/index.js
          `var modulesToKeep = []` has `modulesToKeep` split into two tokens
    - 4 cases need more investigation (2 files with 2 cases each)
       - deepmerge/dist/umd.js
       - deepmerge/dist/cjs.js
  - 49 functions with default parameters were skipped
  - 559 declaration statements contained multiple declarations and were skipped


# Type checking

This step runs the TypeScript compiler (with the `--noEmit` flag) to type check
the generated TypeScript files (individually, rather than by project).

    # starting from the repository root
    cd data/notes/npm-nodeps-DT-output
    python ../../../tools/check-types.py ../../npm-nodeps-DT-output

Using 16 cores, this step took about 15 minutes.

There were 2467 inputs; these are listed in `type-check-inputs.txt`.

350 files type checked successfully; these are listed in
`type-check-success.txt`.

2117 fails did not type check; these are listed in `type-check-fail.txt` and
their errors logged to `type-check-errs.txt`. There were about 28,000 errors.

TODO: investigate the successes/failures
  - spot check the successes to see if the types were inserted properly
  - what are the largest files that succeeded?
  - are all the errors type checking errors, or did something else go wrong?
