declare var hasMap: number;
declare var mapSizeDescriptor: object;
declare var mapSize: Function;
declare var mapForEach: Function;
declare var hasSet: number;
declare var setSizeDescriptor: object;
declare var setSize: Function;
declare var setForEach: Function;
declare var hasWeakMap: number;
declare var weakMapHas: Function;
declare var hasWeakSet: number;
declare var weakSetHas: Function;
declare var hasWeakRef: boolean;
declare var weakRefDeref: Function;
declare var booleanValueOf: number;
declare var objectToString: Function;
declare var functionToString: Function;
declare var $match: Function;
declare var $slice: Function;
declare var $replace: Function;
declare var $toUpperCase: Function;
declare var $toLowerCase: any[];
declare var $test: string;
declare var $concat: EventTarget;
declare var $join: Function;
declare var $arrSlice: Function;
declare var $floor: Function;
declare var bigIntValueOf: Function;
declare var gOPS: Function;
declare var symToString: string;
declare var hasShammedSymbols: boolean;
declare var toStringTag: string;
declare var isEnumerable: Function;
declare var gPO: Function;
declare function addNumericSeparator(num: number, str: any[]): any[];
declare var utilInspect: Function;
declare var inspectCustom: Function;
declare var inspectSymbol: Function;
declare function wrapQuotes(s: string, defaultStyle: number, opts: object): string;
declare function quote(s: Function): string;
declare function isArray(obj: string): boolean;
declare function isDate(obj: string): boolean;
declare function isRegExp(obj: string): boolean;
declare function isError(obj: string): boolean;
declare function isString(obj: string): boolean;
declare function isNumber(obj: string): boolean;
declare function isBoolean(obj: string): boolean;
declare function isSymbol(obj: string): boolean;
declare function isBigInt(obj: string): boolean;
declare var hasOwn: Function;
declare function has(obj: string, key: string): boolean;
declare function toStr(obj: string): string;
declare function nameOf(f: HTMLElement): string;
declare function indexOf(xs: string, x: string): number;
declare function isMap(x: string): boolean;
declare function isWeakMap(x: string): boolean;
declare function isWeakRef(x: string): boolean;
declare function isSet(x: string): boolean;
declare function isWeakSet(x: string): boolean;
declare function isElement(x: object): boolean;
declare function inspectString(str: string, opts: object): string;
declare function lowbyte(c: string): string;
declare function markBoxed(str: string): string;
declare function weakCollectionOf(type: string): string;
declare function collectionOf(type: string, size: number, entries: string, indent: number): string;
declare function singleLineValues(xs: any[]): boolean;
declare function getIndent(opts: HTMLElement, depth: number): object;
declare function indentedJoin(xs: any[], indent: object): string;
declare function arrObjKeys(obj: any[], inspect: Function): any[];
