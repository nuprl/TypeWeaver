Text
/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */Comment.Multiline
\n\nText.Whitespace
'use strict'Literal.String.Single
;Punctuation
\n\nText.Whitespace
importKeyword
 Text.Whitespace
StateName.Otherany0.9880State0.0095complex0.0017void0.0002number0.0001
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'../state'Literal.String.Single
;Punctuation
\nText.Whitespace
importKeyword
 Text.Whitespace
{Punctuation
 Text.Whitespace
EPSILONName.Otherany0.5443complex0.2434State0.0614number0.0255Promise<void>0.0201
 Text.Whitespace
}Punctuation
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'../special-symbols'Literal.String.Single
;Punctuation
\n\nText.Whitespace
/**\n * NFA state.\n *\n * Allows nondeterministic transitions to several states on the\n * same symbol, and also epsilon-transitions.\n */Comment.Multiline
\nText.Whitespace
classKeyword.Declaration
 Text.Whitespace
NFAStateName.Otherany0.9988complex0.0008string0.0001State0.0001number0.0001
 Text.Whitespace
extendsKeyword
 Text.Whitespace
StateName.Otherany0.9991complex0.0004State0.0003string0.0001number0.0001
 Text.Whitespace
{Punctuation
\n\n  Text.Whitespace
/**\n   * Whether this state matches a string.\n   *\n   * We maintain set of visited epsilon-states to avoid infinite loops\n   * when an epsilon-transition goes eventually to itself.\n   *\n   * NOTE: this function is rather "educational", since we use DFA for strings\n   * matching. DFA is built on top of NFA, and uses fast transition table.\n   */Comment.Multiline
\n  Text.Whitespace
matchesName.Othercomplex0.4139boolean0.3271any0.1110Promise<boolean>0.0182State0.0179
(Punctuation
stringKeyword.Type
,Punctuation
 Text.Whitespace
visitedName.OtherSet<any>0.8254Set<string>0.0743any0.0266boolean0.0073State0.0051
 Text.Whitespace
=Operator
 Text.Whitespace
newOperator.Wordany0.3895Set<any>0.2975Set<string>0.0392SetConstructor0.0337boolean0.0262
 Text.Whitespace
SetName.BuiltinSetConstructor0.9762Set<any>0.0114any0.0022Set<string>0.0007Set<number>0.0006
(Punctuation
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
// An epsilon-state has been visited, stop to avoid infinite loop.Comment.Single
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
visitedName.OtherSet<any>0.6181Set<string>0.1387complex0.0781boolean0.0241any0.0140
.Punctuation
hasName.Otherboolean0.9835any0.0105string0.0010complex0.0008State0.0005
(Punctuation
thisKeyword
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
falseKeyword.Constant
;Punctuation
\n    Text.Whitespace
}Punctuation
\n\n    Text.Whitespace
visitedName.OtherSet<any>0.7504Set<string>0.1310boolean0.0091any0.0086State0.0049
.Punctuation
addName.OtherSet<any>0.5831Set<string>0.1820any0.1266boolean0.0110State0.0084
(Punctuation
thisKeyword
)Punctuation
;Punctuation
\n\n    Text.Whitespace
// No symbols left..Comment.Single
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
stringKeyword.Type
.Punctuation
lengthName.Othernumber0.9625any0.0296string0.0034boolean0.0026complex0.0010
 Text.Whitespace
===Operator
 Text.Whitespace
0Literal.Number.Float
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
// .. and we're in the accepting state.Comment.Single
\n      Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
thisKeyword
.Punctuation
acceptingName.Otherboolean0.8567any0.0188complex0.0084string0.0064State0.0063
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
returnKeyword
 Text.Whitespace
trueKeyword.Constant
;Punctuation
\n      Text.Whitespace
}Punctuation
\n\n      Text.Whitespace
// Check if we can reach any accepting state fromComment.Single
\n      Text.Whitespace
// on the epsilon transitions.Comment.Single
\n      Text.Whitespace
forKeyword
 Text.Whitespace
(Punctuation
constKeyword.Declaration
 Text.Whitespace
nextStateName.OtherState0.8132Set<any>0.0156complex0.0120any0.0094RegExp0.0046
 Text.Whitespace
ofKeyword
 Text.Whitespace
thisKeyword
.Punctuation
getTransitionsOnSymbolName.Otherboolean0.2380complex0.1112State0.1040Set<any>0.0402any0.0401
(Punctuation
EPSILONName.Otherany0.2631State0.0550complex0.0503RegExp0.0242Set<any>0.0109
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
nextStateName.OtherState0.7979Set<any>0.0163any0.0134complex0.0070RegExp0.0054
.Punctuation
matchesName.Otherboolean0.6732complex0.1712any0.0349State0.0103Promise<boolean>0.0098
(Punctuation
''Literal.String.Single
,Punctuation
 Text.Whitespace
visitedName.OtherSet<any>0.3772any0.1325RegExp0.0831Set<string>0.0735boolean0.0486
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n          Text.Whitespace
returnKeyword
 Text.Whitespace
trueKeyword.Constant
;Punctuation
\n        Text.Whitespace
}Punctuation
\n      Text.Whitespace
}Punctuation
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
falseKeyword.Constant
;Punctuation
\n    Text.Whitespace
}Punctuation
\n\n    Text.Whitespace
// Else, we get some symbols.Comment.Single
\n    Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
symbolName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
stringKeyword.Type
[Punctuation
0Literal.Number.Float
]Punctuation
;Punctuation
\n    Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
restName.Otherstring0.5523string[]0.3550complex0.0406any0.0260boolean0.0067
 Text.Whitespace
=Operator
 Text.Whitespace
stringKeyword.Type
.Punctuation
sliceName.Otherstring0.6520string[]0.1996complex0.0479any0.0303any[]0.0053
(Punctuation
1Literal.Number.Float
)Punctuation
;Punctuation
\n\n    Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
symbolTransitionsName.Otherboolean0.4461complex0.0946string0.0508string[]0.0259RegExp0.0250
 Text.Whitespace
=Operator
 Text.Whitespace
thisKeyword
.Punctuation
getTransitionsOnSymbolName.Otherboolean0.4833string0.1335complex0.0514string[]0.0424any0.0340
(Punctuation
symbolName.Other
)Punctuation
;Punctuation
\n    Text.Whitespace
forKeyword
 Text.Whitespace
(Punctuation
constKeyword.Declaration
 Text.Whitespace
nextStateName.OtherState0.7339complex0.0316any0.0300Set<any>0.0293RegExp0.0038
 Text.Whitespace
ofKeyword
 Text.Whitespace
symbolTransitionsName.Othercomplex0.1752any0.0704Set<any>0.0696string[]0.0433State0.0348
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
nextStateName.OtherState0.7674Set<any>0.0351complex0.0125any0.0068RegExp0.0054
.Punctuation
matchesName.Otherboolean0.9293complex0.0356any0.0074true0.0029string0.0026
(Punctuation
restName.Otherstring0.3622any0.1703string[]0.1437complex0.0889RegExp0.0399
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
returnKeyword
 Text.Whitespace
trueKeyword.Constant
;Punctuation
\n      Text.Whitespace
}Punctuation
\n    Text.Whitespace
}Punctuation
\n\n    Text.Whitespace
// If we couldn't match on symbol, check still epsilon-transitionsComment.Single
\n    Text.Whitespace
// without consuming the symbol (i.e. continue from `string`, not `rest`).Comment.Single
\n    Text.Whitespace
forKeyword
 Text.Whitespace
(Punctuation
constKeyword.Declaration
 Text.Whitespace
nextStateName.OtherState0.7355Set<any>0.0233complex0.0193any0.0137RegExp0.0096
 Text.Whitespace
ofKeyword
 Text.Whitespace
thisKeyword
.Punctuation
getTransitionsOnSymbolName.Othercomplex0.1862boolean0.1485State0.0892any0.0551Set<any>0.0353
(Punctuation
EPSILONName.Otherany0.2543complex0.0779State0.0372RegExp0.0369Set<any>0.0123
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
nextStateName.OtherState0.7668any0.0230complex0.0184Set<any>0.0156RegExp0.0048
.Punctuation
matchesName.Otherboolean0.5124complex0.3392any0.0450State0.0109Set<any>0.0091
(Punctuation
stringKeyword.Type
,Punctuation
 Text.Whitespace
visitedName.OtherSet<any>0.3763any0.1622Set<string>0.0594RegExp0.0555boolean0.0356
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
returnKeyword
 Text.Whitespace
trueKeyword.Constant
;Punctuation
\n      Text.Whitespace
}Punctuation
\n    Text.Whitespace
}Punctuation
\n\n    Text.Whitespace
returnKeyword
 Text.Whitespace
falseKeyword.Constant
;Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
/**\n   * Returns an ε-closure for this state:\n   * self + all states following ε-transitions.\n   */Comment.Multiline
\n  Text.Whitespace
getEpsilonClosureName.Otherboolean0.5960any0.0568string0.0566void0.0356complex0.0223
(Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
thisKeyword
.Punctuation
_epsilonClosureName.Otherboolean0.8616any0.0309complex0.0104string0.0080Set<any>0.0055
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
epsilonTransitionsName.Otherboolean0.2098complex0.0702State0.0647any0.0579Set<any>0.0551
 Text.Whitespace
=Operator
 Text.Whitespace
thisKeyword
.Punctuation
getTransitionsOnSymbolName.Otherboolean0.3773complex0.1251any0.0985string0.0576State0.0298
(Punctuation
EPSILONName.Othercomplex0.2511any0.1394State0.0574Set<any>0.0142number0.0135
)Punctuation
;Punctuation
\n      Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
closureName.Otherany0.2419Set<any>0.0953boolean0.0471Set<string>0.0368Function0.0331
 Text.Whitespace
=Operator
 Text.Whitespace
thisKeyword
.Punctuation
_epsilonClosureName.OtherSet<any>0.6816Set<string>0.2014any0.0100Set<number>0.0079SetConstructor0.0039
 Text.Whitespace
=Operator
 Text.Whitespace
newOperator.WordSet<any>0.3366any0.2195Set<string>0.0890SetConstructor0.0874object0.0162
 Text.Whitespace
SetName.BuiltinSetConstructor0.9827Set<any>0.0095any0.0016Set<string>0.0004Set<number>0.0003
(Punctuation
)Punctuation
;Punctuation
\n      Text.Whitespace
closureName.Otherany0.5094Set<any>0.0574Function0.0342complex0.0201boolean0.0199
.Punctuation
addName.OtherSet<any>0.3095any0.2196void0.1939Set<string>0.1060boolean0.0138
(Punctuation
thisKeyword
)Punctuation
;Punctuation
\n      Text.Whitespace
forKeyword
 Text.Whitespace
(Punctuation
constKeyword.Declaration
 Text.Whitespace
nextStateName.OtherState0.6362Set<any>0.0794complex0.0392any0.0357Set<string>0.0038
 Text.Whitespace
ofKeyword
 Text.Whitespace
epsilonTransitionsName.OtherSet<any>0.1631any0.0887complex0.0860any[]0.0351State0.0243
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
closureName.Othercomplex0.3973Set<any>0.1058any0.0846Set<string>0.0360State0.0291
.Punctuation
hasName.Otherboolean0.9722any0.0122Set<any>0.0028State0.0023complex0.0015
(Punctuation
nextStateName.OtherState0.7667any0.0339Set<any>0.0229complex0.0199number0.0028
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n          Text.Whitespace
closureName.Otherany0.4822State0.0389Function0.0306complex0.0286Set<any>0.0192
.Punctuation
addName.Otherany0.2487Set<any>0.2094Set<string>0.1179void0.1137State0.0575
(Punctuation
nextStateName.OtherState0.8069any0.0335complex0.0163Set<any>0.0124Range0.0035
)Punctuation
;Punctuation
\n          Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
nextClosureName.OtherState0.2652boolean0.0602Set<any>0.0412any0.0388complex0.0360
 Text.Whitespace
=Operator
 Text.Whitespace
nextStateName.OtherState0.7472any0.0209Set<any>0.0065complex0.0042IState0.0024
.Punctuation
getEpsilonClosureName.OtherState0.1883boolean0.0426Set<any>0.0310any0.0187complex0.0179
(Punctuation
)Punctuation
;Punctuation
\n          Text.Whitespace
nextClosureName.Otherany0.1385complex0.1070State0.0733any[]0.0519Set<any>0.0492
.Punctuation
forEachName.Othervoid0.6093complex0.1486any0.1111v...0.0749State0.0138
(Punctuation
stateName.OtherState0.4587any0.0850boolean0.0260number0.0171string0.0128
 Text.Whitespace
=>Punctuation
 Text.Whitespace
closureName.Otherany0.2543Function0.0612boolean0.0600State0.0447void0.0260
.Punctuation
addName.OtherSet<any>0.2362Set<string>0.1544any0.1124void0.0891State0.0479
(Punctuation
stateName.OtherState0.3742any0.1001string0.0734number0.0327boolean0.0261
)Punctuation
)Punctuation
;Punctuation
\n        Text.Whitespace
}Punctuation
\n      Text.Whitespace
}Punctuation
\n    Text.Whitespace
}Punctuation
\n\n    Text.Whitespace
returnKeyword
 Text.Whitespace
thisKeyword
.Punctuation
_epsilonClosureName.Otherboolean0.1036State0.0644any0.0495string0.0149complex0.0131
;Punctuation
\n  Text.Whitespace
}Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
exportKeyword
 Text.Whitespace
defaultKeyword
 Text.Whitespace
NFAStateName.Otherany0.5475complex0.0645boolean0.0564State0.0366number0.0226
;Punctuation
\nText.Whitespace
