#!/usr/bin/env nodeComment.Hashbang
\nText.Whitespace
Text
/*\n * An example tool that shows how to get Bash completion using dashdash's\n * helpers for this.\n *\n * Usage:\n *      # One time setup:\n *      cd examples/\n *      alias ddcompletion='node ddcompletion.js'\n *      ddcompletion --completion > /usr/local/etc/bash_completion.d/ddcompletion\n *      source /usr/local/etc/bash_completion.d/ddcompletion\n *\n *      # Now play with the bash completion:\n *      ddcompletion -<TAB>             # complete options\n *      ddcompletion --none <TAB>       # explicit "no completions"\n *      ddcompletion -H <TAB>           # complete custom "knownhosts" type\n *      ddcompletion <TAB>              # complete first positional arg type\n *      ddcompletion banana <TAB>       # complete second position arg type\n */Comment.Multiline
\n\nText.Whitespace
importKeyword
 Text.Whitespace
dashdashName.Otherany0.3469string0.0945complex0.0506boolean0.0502string[]0.0402
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'../lib/dashdash'Literal.String.Single
;Punctuation
\n\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
optionsName.Othercomplex0.8950any0.0267any[]0.0197{}0.0100Object0.0023
 Text.Whitespace
=Operator
 Text.Whitespace
[Punctuation
\n    Text.Whitespace
{Punctuation
 Text.Whitespace
nameName.Otherstring0.9984any0.0006RegExp0.0002number0.0002string[]0.0002
:Operator
 Text.Whitespace
'version'Literal.String.Single
,Punctuation
 Text.Whitespace
typeKeyword.Reserved
:Operator
 Text.Whitespace
'bool'Literal.String.Single
,Punctuation
 Text.Whitespace
helpName.Otherstring0.9980any0.0006string[]0.0004number0.0003RegExp0.0002
:Operator
 Text.Whitespace
'Print tool version and exit.'Literal.String.Single
 Text.Whitespace
}Punctuation
,Punctuation
\n    Text.Whitespace
{Punctuation
 Text.Whitespace
namesName.Otherstring[]0.9963any[]0.0008string[][]0.0007number[]0.0006RegExp[]0.0005
:Operator
 Text.Whitespace
[Punctuation
'help'Literal.String.Single
,Punctuation
 Text.Whitespace
'h'Literal.String.Single
]Punctuation
,Punctuation
 Text.Whitespace
typeKeyword.Reserved
:Operator
 Text.Whitespace
'bool'Literal.String.Single
,Punctuation
 Text.Whitespace
helpName.Otherstring0.9973string[]0.0008any0.0006RegExp0.0004number0.0003
:Operator
 Text.Whitespace
'Print this help and exit.'Literal.String.Single
 Text.Whitespace
}Punctuation
,Punctuation
\n    Text.Whitespace
{Punctuation
 Text.Whitespace
namesName.Otherstring[]0.9969any[]0.0007string[][]0.0007number[]0.0005RegExp[]0.0004
:Operator
 Text.Whitespace
[Punctuation
'verbose'Literal.String.Single
,Punctuation
 Text.Whitespace
'v'Literal.String.Single
]Punctuation
,Punctuation
 Text.Whitespace
typeKeyword.Reserved
:Operator
 Text.Whitespace
'arrayOfBool'Literal.String.Single
,Punctuation
 Text.Whitespace
helpName.Otherstring0.9970string[]0.0010any0.0006RegExp0.0004number0.0003
:Operator
 Text.Whitespace
'Verbose output.'Literal.String.Single
 Text.Whitespace
}Punctuation
,Punctuation
\n    Text.Whitespace
{Punctuation
 Text.Whitespace
namesName.Otherstring[]0.9973any[]0.0006string[][]0.0006number[]0.0004RegExp[]0.0003
:Operator
 Text.Whitespace
[Punctuation
'file'Literal.String.Single
,Punctuation
 Text.Whitespace
'f'Literal.String.Single
]Punctuation
,Punctuation
 Text.Whitespace
typeKeyword.Reserved
:Operator
 Text.Whitespace
'string'Literal.String.Single
,Punctuation
 Text.Whitespace
helpArgName.Otherstring0.9929RegExp0.0028string[]0.0017any0.0014number0.0003
:Operator
 Text.Whitespace
'FILE'Literal.String.Single
 Text.Whitespace
}Punctuation
,Punctuation
\n    Text.Whitespace
// Add a (hidden) '--completion' that will emit the bash completion content.Comment.Single
\n    Text.Whitespace
{Punctuation
\n        Text.Whitespace
namesName.Otherstring[]0.9974any[]0.0005string[][]0.0005RegExp[]0.0004number[]0.0003
:Operator
 Text.Whitespace
[Punctuation
'completion'Literal.String.Single
]Punctuation
,Punctuation
\n        Text.Whitespace
typeKeyword.Reserved
:Operator
 Text.Whitespace
'bool'Literal.String.Single
,Punctuation
\n        Text.Whitespace
hiddenName.Otherboolean0.9981true0.0005string0.0004number0.0003false0.0002
:Operator
 Text.Whitespace
trueKeyword.Type
\n    Text.Whitespace
}Punctuation
,Punctuation
\n    Text.Whitespace
{Punctuation
\n        Text.Whitespace
namesName.Otherstring[]0.9970any[]0.0008string[][]0.0006number[]0.0005RegExp[]0.0003
:Operator
 Text.Whitespace
[Punctuation
'host'Literal.String.Single
,Punctuation
 Text.Whitespace
'H'Literal.String.Single
]Punctuation
,Punctuation
\n        Text.Whitespace
typeKeyword.Reserved
:Operator
 Text.Whitespace
'string'Literal.String.Single
,Punctuation
\n        Text.Whitespace
// We'll define a custom completion type and, further down, a BashComment.Single
\n        Text.Whitespace
// completion function for this type. Test it with:Comment.Single
\n        Text.Whitespace
//      $ ddcompletion --host <TAB>Comment.Single
\n        Text.Whitespace
completionTypeName.Otherstring0.9917RegExp0.0034any0.0022string[]0.0013number0.0004
:Operator
 Text.Whitespace
'knownhosts'Literal.String.Single
,Punctuation
\n        Text.Whitespace
helpName.Otherstring0.9972string[]0.0009any0.0006RegExp0.0003number0.0003
:Operator
 Text.Whitespace
'A known host (taken from ~/.ssh/known_hosts).'Literal.String.Single
\n    Text.Whitespace
}Punctuation
,Punctuation
\n    Text.Whitespace
{Punctuation
\n        Text.Whitespace
namesName.Otherstring[]0.9979any[]0.0006string[][]0.0004number[]0.0003RegExp[]0.0002
:Operator
 Text.Whitespace
[Punctuation
'none'Literal.String.Single
,Punctuation
 Text.Whitespace
'N'Literal.String.Single
]Punctuation
,Punctuation
\n        Text.Whitespace
typeKeyword.Reserved
:Operator
 Text.Whitespace
'string'Literal.String.Single
,Punctuation
\n        Text.Whitespace
// Show off the 'none' completion type, which uses somewhat ofComment.Single
\n        Text.Whitespace
// a hack to enforce no completions on <TAB>.Comment.Single
\n        Text.Whitespace
completionTypeName.Otherstring0.9934RegExp0.0023any0.0018string[]0.0011boolean0.0005
:Operator
 Text.Whitespace
'none'Literal.String.Single
,Punctuation
\n        Text.Whitespace
helpName.Otherstring0.9975string[]0.0008any0.0006number0.0003RegExp0.0003
:Operator
 Text.Whitespace
'Testing "none" argtype. Should be no completions on <TAB>.'Literal.String.Single
\n    Text.Whitespace
}Punctuation
\nText.Whitespace
]Punctuation
;Punctuation
\n\n\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
completionFuncsName.Otherstring[]0.9725string0.0186any[]0.0036any0.0008string[][]0.0007
 Text.Whitespace
=Operator
 Text.Whitespace
[Punctuation
\n    Text.Whitespace
// A 'knownhosts' completer function.Comment.Single
\n    Text.Whitespace
'function complete_knownhosts {'Literal.String.Single
,Punctuation
\n    Text.Whitespace
'    local word="$1"'Literal.String.Single
,Punctuation
\n    Text.Whitespace
'    local candidates'Literal.String.Single
,Punctuation
\n    Text.Whitespace
'    candidates=$(cat ~/.ssh/known_hosts  | awk \'{print $1}\' | grep \'^[a-zA-Z]\' | cut -d, -f1)'Literal.String.Single
,Punctuation
\n    Text.Whitespace
'    compgen $compgen_opts -W "$candidates" -- "$word"'Literal.String.Single
,Punctuation
\n    Text.Whitespace
'}'Literal.String.Single
,Punctuation
\n\n    Text.Whitespace
// A 'fruit' completer function for the first positional arg.Comment.Single
\n    Text.Whitespace
'function complete_fruit {'Literal.String.Single
,Punctuation
\n    Text.Whitespace
'    compgen $compgen_opts -W "apple banana orange" -- "$1"'Literal.String.Single
,Punctuation
\n    Text.Whitespace
'}'Literal.String.Single
\nText.Whitespace
]Punctuation
.Punctuation
joinName.Otherstring0.9770any0.0165complex0.0020string[]0.0018number0.0012
(Punctuation
'\n'Literal.String.Single
)Punctuation
;Punctuation
\n\n\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
parserName.Otherany0.9047string0.0062complex0.0059number0.0038any[]0.0021
 Text.Whitespace
=Operator
 Text.Whitespace
dashdashName.Otherany0.9570complex0.0172string0.0051string[]0.0013any[]0.0012
.Punctuation
createParserName.Otherany0.7885complex0.0659string0.0580string[]0.0216number0.0099
(Punctuation
{Punctuation
optionsName.Otherany0.3962complex0.1197{}0.0511any[]0.0307Options0.0186
:Operator
 Text.Whitespace
optionsKeyword.Typeany0.4951complex0.1134{}0.0446any[]0.0251number0.0182
}Punctuation
)Punctuation
;Punctuation
\nText.Whitespace
tryKeyword
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
varKeyword.Declaration
 Text.Whitespace
optsName.Otherany0.7526complex0.0798Options0.0080{}0.0060number0.0038
 Text.Whitespace
=Operator
 Text.Whitespace
parserName.Otherany0.9417complex0.0238number0.0013any[]0.0012{}0.0006
.Punctuation
parseName.Otherany0.7867complex0.0621number0.0280boolean0.0123any[]0.0043
(Punctuation
processName.Otherany0.9934complex0.0050void0.0002string0.0001any[]0.0001
.Punctuation
argvName.Otherany0.9919complex0.0022number0.0017string[]0.0012string0.0009
)Punctuation
;Punctuation
\nText.Whitespace
}Punctuation
 Text.Whitespace
catchKeyword
 Text.Whitespace
(Punctuation
eName.Otherany0.9964Error0.0019string0.0006complex0.0004number0.0003
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
consoleName.OtherConsole0.9999any0.0000void0.0000symbol0.0000DOMTokenList0.0000
.Punctuation
errorName.Othervoid0.9984complex0.0006any0.0006Promise<void>0.0001boolean0.0001
(Punctuation
'foo: error: %s'Literal.String.Single
,Punctuation
 Text.Whitespace
eName.Otherany0.9825Error0.0107complex0.0026string0.0008void0.0005
.Punctuation
messageName.Otherany0.9010string0.0951complex0.0018string[]0.0006number0.0004
)Punctuation
;Punctuation
\n    Text.Whitespace
processName.Otherany0.9953complex0.0033void0.0002Process0.0002string0.0001
.Punctuation
exitName.Otherany0.9586void0.0378complex0.0009number0.0007boolean0.0004
(Punctuation
1Literal.Number.Float
)Punctuation
;Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
optsName.Otherany0.5389complex0.4290{}0.0046number0.0032Options0.0031
.Punctuation
helpName.Otherstring0.6882any0.2646boolean0.0194string[]0.0076number0.0063
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
varKeyword.Declaration
 Text.Whitespace
helpName.Otherstring0.7972any0.0982void0.0304complex0.0212string[]0.0182
 Text.Whitespace
=Operator
 Text.Whitespace
parserName.Otherany0.9632complex0.0218string0.0028number0.0010void0.0008
.Punctuation
helpName.Otherstring0.5576any0.3552void0.0360complex0.0126number0.0116
(Punctuation
{Punctuation
includeEnvName.Otherboolean0.9945string0.0021any0.0012number0.0007false0.0004
:Operator
 Text.Whitespace
trueKeyword.Type
}Punctuation
)Punctuation
.Punctuation
trimRightName.Otherany0.7359void0.1680string0.0381boolean0.0128string[]0.0117
(Punctuation
)Punctuation
;Punctuation
\n    Text.Whitespace
consoleName.OtherConsole0.9998any0.0001void0.0000complex0.0000Assert0.0000
.Punctuation
logName.Othervoid0.9989any0.0004complex0.0003Promise<void>0.0001number0.0000
(Punctuation
'usage: node ddcompletion.js [OPTIONS]\n'Literal.String.Single
\n                Text.Whitespace
+Operator
 Text.Whitespace
'options:\n'Literal.String.Single
\n                Text.Whitespace
+Operator
 Text.Whitespace
helpName.Otherstring0.9325any0.0283void0.0155number0.0085string[]0.0075
)Punctuation
;Punctuation
\n    Text.Whitespace
processName.Otherany0.9924complex0.0053void0.0004Process0.0003number0.0001
.Punctuation
exitName.Otherany0.9637void0.0320complex0.0011number0.0010Promise<any>0.0006
(Punctuation
0Literal.Number.Float
)Punctuation
;Punctuation
\nText.Whitespace
}Punctuation
 Text.Whitespace
elseKeyword
 Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
optsName.Otherany0.6481complex0.1380Options0.0323number0.0077{}0.0042
.Punctuation
completionName.Otherany0.6709string0.1985boolean0.0667number0.0354void0.0099
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
// Use the `parser.bashCompletion()` helper to create the BashComment.Single
\n    Text.Whitespace
// completion file content, then just dump it.Comment.Single
\n    Text.Whitespace
consoleName.OtherConsole0.9999any0.0001void0.0000complex0.0000number0.0000
.Punctuation
logName.Othervoid0.9985complex0.0006any0.0005Promise<void>0.0001boolean0.0000
(Punctuation
 Text.Whitespace
parserName.Otherany0.9866complex0.0037string0.0015number0.0005symbol0.0005
.Punctuation
bashCompletionName.Otherany0.7507string0.1791complex0.0170void0.0132string[]0.0121
(Punctuation
{Punctuation
\n        Text.Whitespace
nameName.Otherstring0.9972any0.0019number0.0003string[]0.0002boolean0.0001
:Operator
 Text.Whitespace
'ddcompletion'Literal.String.Single
,Punctuation
\n        Text.Whitespace
specExtraName.Otherstring0.8511any0.0865string[]0.0276boolean0.0241number0.0045
:Operator
 Text.Whitespace
completionFuncsKeyword.Typestring0.8045any0.1058string[]0.0468boolean0.0223number0.0088
,Punctuation
\n        Text.Whitespace
// Define the first positional arg to be a fruit, and subsequentComment.Single
\n        Text.Whitespace
// args to be 'file'.Comment.Single
\n        Text.Whitespace
argtypesName.Otherstring[]0.9926any[]0.0020string0.0015RegExp[]0.0012number[]0.0006
:Operator
 Text.Whitespace
[Punctuation
'fruit'Literal.String.Single
,Punctuation
 Text.Whitespace
'file'Literal.String.Single
]Punctuation
\n    Text.Whitespace
}Punctuation
)Punctuation
 Text.Whitespace
)Punctuation
;Punctuation
\n    Text.Whitespace
processName.Otherany0.9944complex0.0040void0.0003Process0.0002number0.0001
.Punctuation
exitName.Otherany0.9689void0.0268complex0.0011number0.0011Promise<any>0.0006
(Punctuation
0Literal.Number.Float
)Punctuation
;Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
Text
// ...Comment.Single
\nText.Whitespace
consoleName.OtherConsole0.9999any0.0000void0.0000string[][]0.0000Assert0.0000
.Punctuation
logName.Othervoid0.9978complex0.0009any0.0007Promise<void>0.0001number0.0001
(Punctuation
'opts:'Literal.String.Single
,Punctuation
 Text.Whitespace
optsName.Otherany0.5438complex0.1917{}0.0747Options0.0220number0.0106
)Punctuation
;Punctuation
\nText.Whitespace
consoleName.OtherConsole0.9999any0.0001void0.0000complex0.0000string[][]0.0000
.Punctuation
logName.Othervoid0.9976complex0.0010any0.0008Promise<void>0.0001number0.0001
(Punctuation
'args:'Literal.String.Single
,Punctuation
 Text.Whitespace
optsName.Otherany0.7183complex0.1451Options0.0227{}0.0146number0.0097
.Punctuation
_argsName.Otherstring0.2048any0.1307number0.1067string[]0.1025any[]0.0253
)Punctuation
;Punctuation
\nText.Whitespace
consoleName.OtherConsole0.9998any0.0001void0.0000Assert0.0000number0.0000
.Punctuation
logName.Othervoid0.9979any0.0008complex0.0007Promise<void>0.0001number0.0001
(Punctuation
'...'Literal.String.Single
)Punctuation
\nText.Whitespace
