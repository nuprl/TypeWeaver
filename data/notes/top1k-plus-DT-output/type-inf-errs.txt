======================================== @babel_core/lib/config/cache-contexts.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7fc0cdb14a29]                                                       + 0x7c5a29
[0x7fc0cdc9ad45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7fc151f633a8]                                                       + 0x13b3a8
[0x7fc151f65065]                                                       + 0x13d065
[0x7fc156a06bd9]    PyCFunction_Call                                   + 0xc9
[0x7fc156a936e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7fc156a8bb9a]                                                       + 0x152b9a
[0x7fc156a94aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7fc1569b0151]    _PyObject_FastCallDict                             + 0x131
[0x7fc1569b02a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7fc1569aff2b]    PyObject_Call                                      + 0x4b
[0x7fc156a21d7f]                                                       + 0xe8d7f
[0x7fc156a1d149]                                                       + 0xe4149
[0x7fc1569b00ad]    _PyObject_FastCallDict                             + 0x8d
[0x7fc156a8bd78]                                                       + 0x152d78
[0x7fc156a9150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc156a8bb9a]                                                       + 0x152b9a
[0x7fc156a8c1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fc1569def1e]                                                       + 0xa5f1e
[0x7fc1569aff2b]    PyObject_Call                                      + 0x4b
[0x7fc156a91770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fc156a8bb9a]                                                       + 0x152b9a
[0x7fc156a8bf94]                                                       + 0x152f94
[0x7fc156a91867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7fc156a8bb9a]                                                       + 0x152b9a
[0x7fc156a8c1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fc1569def1e]                                                       + 0xa5f1e
[0x7fc1569aff2b]    PyObject_Call                                      + 0x4b
[0x7fc156a91770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fc156a8bb9a]                                                       + 0x152b9a
[0x7fc156a8bf94]                                                       + 0x152f94
[0x7fc156a91867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7fc156a8bb9a]                                                       + 0x152b9a
[0x7fc156a8bf94]                                                       + 0x152f94
[0x7fc156a9150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc156a8bb9a]                                                       + 0x152b9a
[0x7fc156a8c1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fc1569def1e]                                                       + 0xa5f1e
[0x7fc1569aff2b]    PyObject_Call                                      + 0x4b
[0x7fc156a91770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fc156a8bb9a]                                                       + 0x152b9a
[0x7fc156a8bf94]                                                       + 0x152f94
[0x7fc156a9150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc156a8bb9a]                                                       + 0x152b9a
[0x7fc156a8bf94]                                                       + 0x152f94
[0x7fc156a9150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc156a8bb9a]                                                       + 0x152b9a
[0x7fc156a8bf94]                                                       + 0x152f94
[0x7fc156a9150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc156a8bb9a]                                                       + 0x152b9a
[0x7fc156a8c1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fc156a8c1df]    PyEval_EvalCode                                    + 0x1f
[0x7fc156ac13d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fc156ac156f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fc156adb8e8]    Py_Main                                            + 0xff8
[0x56549712e2b8]    main                                               + 0x178
[0x7fc1567500b3]    __libc_start_main                                  + 0xf3
[0x56549712e36e]    _start                                             + 0x2e


======================================== @babel_core/lib/config/config-chain.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 3592 is out of bounds for axis 0 with size 3592

======================================== @babel_core/lib/config/config-descriptors.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 1391 is out of bounds for axis 0 with size 1391

======================================== @babel_core/lib/config/files/configuration.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 1754 is out of bounds for axis 0 with size 1754

======================================== @babel_core/lib/config/files/types.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f093b145a29]                                                       + 0x7c5a29
[0x7f093b2cbd45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f093c0873a8]                                                       + 0x13b3a8
[0x7f093c089065]                                                       + 0x13d065
[0x7f0940b2abd9]    PyCFunction_Call                                   + 0xc9
[0x7f0940bb76e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f0940bafb9a]                                                       + 0x152b9a
[0x7f0940bb8aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f0940ad4151]    _PyObject_FastCallDict                             + 0x131
[0x7f0940ad42a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f0940ad3f2b]    PyObject_Call                                      + 0x4b
[0x7f0940b45d7f]                                                       + 0xe8d7f
[0x7f0940b41149]                                                       + 0xe4149
[0x7f0940ad40ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f0940bafd78]                                                       + 0x152d78
[0x7f0940bb550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f0940bafb9a]                                                       + 0x152b9a
[0x7f0940bb01b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f0940b02f1e]                                                       + 0xa5f1e
[0x7f0940ad3f2b]    PyObject_Call                                      + 0x4b
[0x7f0940bb5770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f0940bafb9a]                                                       + 0x152b9a
[0x7f0940baff94]                                                       + 0x152f94
[0x7f0940bb5867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f0940bafb9a]                                                       + 0x152b9a
[0x7f0940bb01b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f0940b02f1e]                                                       + 0xa5f1e
[0x7f0940ad3f2b]    PyObject_Call                                      + 0x4b
[0x7f0940bb5770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f0940bafb9a]                                                       + 0x152b9a
[0x7f0940baff94]                                                       + 0x152f94
[0x7f0940bb5867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f0940bafb9a]                                                       + 0x152b9a
[0x7f0940baff94]                                                       + 0x152f94
[0x7f0940bb550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f0940bafb9a]                                                       + 0x152b9a
[0x7f0940bb01b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f0940b02f1e]                                                       + 0xa5f1e
[0x7f0940ad3f2b]    PyObject_Call                                      + 0x4b
[0x7f0940bb5770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f0940bafb9a]                                                       + 0x152b9a
[0x7f0940baff94]                                                       + 0x152f94
[0x7f0940bb550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f0940bafb9a]                                                       + 0x152b9a
[0x7f0940baff94]                                                       + 0x152f94
[0x7f0940bb550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f0940bafb9a]                                                       + 0x152b9a
[0x7f0940baff94]                                                       + 0x152f94
[0x7f0940bb550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f0940bafb9a]                                                       + 0x152b9a
[0x7f0940bb01b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f0940bb01df]    PyEval_EvalCode                                    + 0x1f
[0x7f0940be53d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f0940be556f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f0940bff8e8]    Py_Main                                            + 0xff8
[0x5640e0db82b8]    main                                               + 0x178
[0x7f09408740b3]    __libc_start_main                                  + 0xf3
[0x5640e0db836e]    _start                                             + 0x2e


======================================== @babel_core/lib/config/full.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 1857 is out of bounds for axis 0 with size 1857

======================================== @babel_core/lib/config/helpers/config-api.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 517 is out of bounds for axis 0 with size 517

======================================== @babel_core/lib/config/partial.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 1092 is out of bounds for axis 0 with size 1092

======================================== @babel_core/lib/config/validation/option-assertions.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 2126 is out of bounds for axis 0 with size 2126

======================================== @babel_core/lib/config/validation/options.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 1254 is out of bounds for axis 0 with size 1254

======================================== @babel_core/lib/parser/util/missing-plugin-helper.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 972 is out of bounds for axis 0 with size 972

======================================== @babel_generator/lib/printer.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 2927 is out of bounds for axis 0 with size 2927

======================================== @babel_helper-compilation-targets/lib/types.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7fd822442a29]                                                       + 0x7c5a29
[0x7fd8225c8d45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7fd8233843a8]                                                       + 0x13b3a8
[0x7fd823386065]                                                       + 0x13d065
[0x7fd827e27bd9]    PyCFunction_Call                                   + 0xc9
[0x7fd827eb46e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7fd827eacb9a]                                                       + 0x152b9a
[0x7fd827eb5aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7fd827dd1151]    _PyObject_FastCallDict                             + 0x131
[0x7fd827dd12a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7fd827dd0f2b]    PyObject_Call                                      + 0x4b
[0x7fd827e42d7f]                                                       + 0xe8d7f
[0x7fd827e3e149]                                                       + 0xe4149
[0x7fd827dd10ad]    _PyObject_FastCallDict                             + 0x8d
[0x7fd827eacd78]                                                       + 0x152d78
[0x7fd827eb250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fd827eacb9a]                                                       + 0x152b9a
[0x7fd827ead1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fd827dfff1e]                                                       + 0xa5f1e
[0x7fd827dd0f2b]    PyObject_Call                                      + 0x4b
[0x7fd827eb2770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fd827eacb9a]                                                       + 0x152b9a
[0x7fd827eacf94]                                                       + 0x152f94
[0x7fd827eb2867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7fd827eacb9a]                                                       + 0x152b9a
[0x7fd827ead1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fd827dfff1e]                                                       + 0xa5f1e
[0x7fd827dd0f2b]    PyObject_Call                                      + 0x4b
[0x7fd827eb2770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fd827eacb9a]                                                       + 0x152b9a
[0x7fd827eacf94]                                                       + 0x152f94
[0x7fd827eb2867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7fd827eacb9a]                                                       + 0x152b9a
[0x7fd827eacf94]                                                       + 0x152f94
[0x7fd827eb250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fd827eacb9a]                                                       + 0x152b9a
[0x7fd827ead1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fd827dfff1e]                                                       + 0xa5f1e
[0x7fd827dd0f2b]    PyObject_Call                                      + 0x4b
[0x7fd827eb2770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fd827eacb9a]                                                       + 0x152b9a
[0x7fd827eacf94]                                                       + 0x152f94
[0x7fd827eb250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fd827eacb9a]                                                       + 0x152b9a
[0x7fd827eacf94]                                                       + 0x152f94
[0x7fd827eb250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fd827eacb9a]                                                       + 0x152b9a
[0x7fd827eacf94]                                                       + 0x152f94
[0x7fd827eb250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fd827eacb9a]                                                       + 0x152b9a
[0x7fd827ead1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fd827ead1df]    PyEval_EvalCode                                    + 0x1f
[0x7fd827ee23d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fd827ee256f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fd827efc8e8]    Py_Main                                            + 0xff8
[0x559e1d0db2b8]    main                                               + 0x178
[0x7fd827b710b3]    __libc_start_main                                  + 0xf3
[0x559e1d0db36e]    _start                                             + 0x2e


======================================== @babel_helper-create-class-features-plugin/lib/features.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 844 is out of bounds for axis 0 with size 844

======================================== @babel_helper-create-class-features-plugin/lib/fields.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fb25f6fca29]                                                       + 0x7c5a29
[0x7fb25f8bd289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fb2607da741]                                                       + 0x2d7741
[0x7fb2650e19e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fb265167084]                                                       + 0x153084
[0x7fb26516c50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb265166b9a]                                                       + 0x152b9a
[0x7fb2651671b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fb2650b9f1e]                                                       + 0xa5f1e
[0x7fb26508af2b]    PyObject_Call                                      + 0x4b
[0x7fb26516c770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fb265166b9a]                                                       + 0x152b9a
[0x7fb265166f94]                                                       + 0x152f94
[0x7fb26516c50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb265166b9a]                                                       + 0x152b9a
[0x7fb265166f94]                                                       + 0x152f94
[0x7fb26516c50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb265166193]                                                       + 0x152193
[0x7fb26516715c]                                                       + 0x15315c
[0x7fb26516c50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb265166b9a]                                                       + 0x152b9a
[0x7fb265166f94]                                                       + 0x152f94
[0x7fb26516c50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb265166b9a]                                                       + 0x152b9a
[0x7fb2651671b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fb2651671df]    PyEval_EvalCode                                    + 0x1f
[0x7fb26519c3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fb26519c56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fb2651b68e8]    Py_Main                                            + 0xff8
[0x55cd5c4ad2b8]    main                                               + 0x178
[0x7fb264e2b0b3]    __libc_start_main                                  + 0xf3
[0x55cd5c4ad36e]    _start                                             + 0x2e


======================================== @babel_helper-create-class-features-plugin/lib/index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 1486 is out of bounds for axis 0 with size 1486

======================================== @babel_helper-create-class-features-plugin/lib/typescript.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 66 is out of bounds for axis 0 with size 66

======================================== @babel_helper-define-polyfill-provider/lib/index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 2008 is out of bounds for axis 0 with size 2008

======================================== @babel_helper-define-polyfill-provider/lib/node/dependencies.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 560 is out of bounds for axis 0 with size 560

======================================== @babel_helper-define-polyfill-provider/src/node/dependencies.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 504 is out of bounds for axis 0 with size 504

======================================== @babel_helper-module-transforms/lib/rewrite-live-references.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 1909 is out of bounds for axis 0 with size 1909

======================================== @babel_helper-plugin-utils/lib/index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 484 is out of bounds for axis 0 with size 484

======================================== @babel_parser/lib/index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== @babel_preset-env/lib/normalize-options.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 1143 is out of bounds for axis 0 with size 1143

======================================== @babel_traverse/lib/scope/index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f7b1614ba29]                                                       + 0x7c5a29
[0x7f7b1630c289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f7b17229741]                                                       + 0x2d7741
[0x7f7b1bb309e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f7b1bbb6084]                                                       + 0x153084
[0x7f7b1bbbb50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7b1bbb5b9a]                                                       + 0x152b9a
[0x7f7b1bbb61b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f7b1bb08f1e]                                                       + 0xa5f1e
[0x7f7b1bad9f2b]    PyObject_Call                                      + 0x4b
[0x7f7b1bbbb770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f7b1bbb5b9a]                                                       + 0x152b9a
[0x7f7b1bbb5f94]                                                       + 0x152f94
[0x7f7b1bbbb50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7b1bbb5b9a]                                                       + 0x152b9a
[0x7f7b1bbb5f94]                                                       + 0x152f94
[0x7f7b1bbbb50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7b1bbb5193]                                                       + 0x152193
[0x7f7b1bbb615c]                                                       + 0x15315c
[0x7f7b1bbbb50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7b1bbb5b9a]                                                       + 0x152b9a
[0x7f7b1bbb5f94]                                                       + 0x152f94
[0x7f7b1bbbb50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7b1bbb5b9a]                                                       + 0x152b9a
[0x7f7b1bbb61b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f7b1bbb61df]    PyEval_EvalCode                                    + 0x1f
[0x7f7b1bbeb3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f7b1bbeb56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f7b1bc058e8]    Py_Main                                            + 0xff8
[0x55665ac902b8]    main                                               + 0x178
[0x7f7b1b87a0b3]    __libc_start_main                                  + 0xf3
[0x55665ac9036e]    _start                                             + 0x2e


======================================== @babel_types/lib/asserts/generated/index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fb852d72a29]                                                       + 0x7c5a29
[0x7fb852f33289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fb853e50741]                                                       + 0x2d7741
[0x7fb8587579e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fb8587dd084]                                                       + 0x153084
[0x7fb8587e250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb8587dcb9a]                                                       + 0x152b9a
[0x7fb8587dd1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fb85872ff1e]                                                       + 0xa5f1e
[0x7fb858700f2b]    PyObject_Call                                      + 0x4b
[0x7fb8587e2770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fb8587dcb9a]                                                       + 0x152b9a
[0x7fb8587dcf94]                                                       + 0x152f94
[0x7fb8587e250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb8587dcb9a]                                                       + 0x152b9a
[0x7fb8587dcf94]                                                       + 0x152f94
[0x7fb8587e250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb8587dc193]                                                       + 0x152193
[0x7fb8587dd15c]                                                       + 0x15315c
[0x7fb8587e250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb8587dcb9a]                                                       + 0x152b9a
[0x7fb8587dcf94]                                                       + 0x152f94
[0x7fb8587e250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb8587dcb9a]                                                       + 0x152b9a
[0x7fb8587dd1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fb8587dd1df]    PyEval_EvalCode                                    + 0x1f
[0x7fb8588123d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fb85881256f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fb85882c8e8]    Py_Main                                            + 0xff8
[0x5630519fc2b8]    main                                               + 0x178
[0x7fb8584a10b3]    __libc_start_main                                  + 0xf3
[0x5630519fc36e]    _start                                             + 0x2e


======================================== @babel_types/lib/ast-types/generated/index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f0c69f06a29]                                                       + 0x7c5a29
[0x7f0c6a08cd45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f0cee3553a8]                                                       + 0x13b3a8
[0x7f0cee357065]                                                       + 0x13d065
[0x7f0cf2df8bd9]    PyCFunction_Call                                   + 0xc9
[0x7f0cf2e856e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f0cf2e7db9a]                                                       + 0x152b9a
[0x7f0cf2e86aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f0cf2da2151]    _PyObject_FastCallDict                             + 0x131
[0x7f0cf2da22a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f0cf2da1f2b]    PyObject_Call                                      + 0x4b
[0x7f0cf2e13d7f]                                                       + 0xe8d7f
[0x7f0cf2e0f149]                                                       + 0xe4149
[0x7f0cf2da20ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f0cf2e7dd78]                                                       + 0x152d78
[0x7f0cf2e8350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f0cf2e7db9a]                                                       + 0x152b9a
[0x7f0cf2e7e1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f0cf2dd0f1e]                                                       + 0xa5f1e
[0x7f0cf2da1f2b]    PyObject_Call                                      + 0x4b
[0x7f0cf2e83770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f0cf2e7db9a]                                                       + 0x152b9a
[0x7f0cf2e7df94]                                                       + 0x152f94
[0x7f0cf2e83867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f0cf2e7db9a]                                                       + 0x152b9a
[0x7f0cf2e7e1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f0cf2dd0f1e]                                                       + 0xa5f1e
[0x7f0cf2da1f2b]    PyObject_Call                                      + 0x4b
[0x7f0cf2e83770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f0cf2e7db9a]                                                       + 0x152b9a
[0x7f0cf2e7df94]                                                       + 0x152f94
[0x7f0cf2e83867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f0cf2e7db9a]                                                       + 0x152b9a
[0x7f0cf2e7df94]                                                       + 0x152f94
[0x7f0cf2e8350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f0cf2e7db9a]                                                       + 0x152b9a
[0x7f0cf2e7e1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f0cf2dd0f1e]                                                       + 0xa5f1e
[0x7f0cf2da1f2b]    PyObject_Call                                      + 0x4b
[0x7f0cf2e83770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f0cf2e7db9a]                                                       + 0x152b9a
[0x7f0cf2e7df94]                                                       + 0x152f94
[0x7f0cf2e8350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f0cf2e7db9a]                                                       + 0x152b9a
[0x7f0cf2e7df94]                                                       + 0x152f94
[0x7f0cf2e8350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f0cf2e7db9a]                                                       + 0x152b9a
[0x7f0cf2e7df94]                                                       + 0x152f94
[0x7f0cf2e8350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f0cf2e7db9a]                                                       + 0x152b9a
[0x7f0cf2e7e1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f0cf2e7e1df]    PyEval_EvalCode                                    + 0x1f
[0x7f0cf2eb33d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f0cf2eb356f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f0cf2ecd8e8]    Py_Main                                            + 0xff8
[0x563671a172b8]    main                                               + 0x178
[0x7f0cf2b420b3]    __libc_start_main                                  + 0xf3
[0x563671a1736e]    _start                                             + 0x2e


======================================== @babel_types/lib/builders/generated/index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f71b1444a29]                                                       + 0x7c5a29
[0x7f71b1605289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f7235a2f741]                                                       + 0x2d7741
[0x7f723a3369e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f723a3bc084]                                                       + 0x153084
[0x7f723a3c150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f723a3bbb9a]                                                       + 0x152b9a
[0x7f723a3bc1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f723a30ef1e]                                                       + 0xa5f1e
[0x7f723a2dff2b]    PyObject_Call                                      + 0x4b
[0x7f723a3c1770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f723a3bbb9a]                                                       + 0x152b9a
[0x7f723a3bbf94]                                                       + 0x152f94
[0x7f723a3c150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f723a3bbb9a]                                                       + 0x152b9a
[0x7f723a3bbf94]                                                       + 0x152f94
[0x7f723a3c150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f723a3bb193]                                                       + 0x152193
[0x7f723a3bc15c]                                                       + 0x15315c
[0x7f723a3c150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f723a3bbb9a]                                                       + 0x152b9a
[0x7f723a3bbf94]                                                       + 0x152f94
[0x7f723a3c150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f723a3bbb9a]                                                       + 0x152b9a
[0x7f723a3bc1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f723a3bc1df]    PyEval_EvalCode                                    + 0x1f
[0x7f723a3f13d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f723a3f156f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f723a40b8e8]    Py_Main                                            + 0xff8
[0x563d4122c2b8]    main                                               + 0x178
[0x7f723a0800b3]    __libc_start_main                                  + 0xf3
[0x563d4122c36e]    _start                                             + 0x2e


======================================== @babel_types/lib/builders/generated/uppercase.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f3fcb9d8a29]                                                       + 0x7c5a29
[0x7f3fcbb99289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f404ffc3741]                                                       + 0x2d7741
[0x7f40548ca9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f4054950084]                                                       + 0x153084
[0x7f405495550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f405494fb9a]                                                       + 0x152b9a
[0x7f40549501b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f40548a2f1e]                                                       + 0xa5f1e
[0x7f4054873f2b]    PyObject_Call                                      + 0x4b
[0x7f4054955770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f405494fb9a]                                                       + 0x152b9a
[0x7f405494ff94]                                                       + 0x152f94
[0x7f405495550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f405494fb9a]                                                       + 0x152b9a
[0x7f405494ff94]                                                       + 0x152f94
[0x7f405495550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f405494f193]                                                       + 0x152193
[0x7f405495015c]                                                       + 0x15315c
[0x7f405495550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f405494fb9a]                                                       + 0x152b9a
[0x7f405494ff94]                                                       + 0x152f94
[0x7f405495550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f405494fb9a]                                                       + 0x152b9a
[0x7f40549501b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f40549501df]    PyEval_EvalCode                                    + 0x1f
[0x7f40549853d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f405498556f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f405499f8e8]    Py_Main                                            + 0xff8
[0x562f7709b2b8]    main                                               + 0x178
[0x7f40546140b3]    __libc_start_main                                  + 0xf3
[0x562f7709b36e]    _start                                             + 0x2e


======================================== @babel_types/lib/converters/Scope.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f276da74a29]                                                       + 0x7c5a29
[0x7f276dbfad45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f27f1ec33a8]                                                       + 0x13b3a8
[0x7f27f1ec5065]                                                       + 0x13d065
[0x7f27f6966bd9]    PyCFunction_Call                                   + 0xc9
[0x7f27f69f36e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f27f69ebb9a]                                                       + 0x152b9a
[0x7f27f69f4aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f27f6910151]    _PyObject_FastCallDict                             + 0x131
[0x7f27f69102a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f27f690ff2b]    PyObject_Call                                      + 0x4b
[0x7f27f6981d7f]                                                       + 0xe8d7f
[0x7f27f697d149]                                                       + 0xe4149
[0x7f27f69100ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f27f69ebd78]                                                       + 0x152d78
[0x7f27f69f150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f27f69ebb9a]                                                       + 0x152b9a
[0x7f27f69ec1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f27f693ef1e]                                                       + 0xa5f1e
[0x7f27f690ff2b]    PyObject_Call                                      + 0x4b
[0x7f27f69f1770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f27f69ebb9a]                                                       + 0x152b9a
[0x7f27f69ebf94]                                                       + 0x152f94
[0x7f27f69f1867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f27f69ebb9a]                                                       + 0x152b9a
[0x7f27f69ec1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f27f693ef1e]                                                       + 0xa5f1e
[0x7f27f690ff2b]    PyObject_Call                                      + 0x4b
[0x7f27f69f1770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f27f69ebb9a]                                                       + 0x152b9a
[0x7f27f69ebf94]                                                       + 0x152f94
[0x7f27f69f1867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f27f69ebb9a]                                                       + 0x152b9a
[0x7f27f69ebf94]                                                       + 0x152f94
[0x7f27f69f150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f27f69ebb9a]                                                       + 0x152b9a
[0x7f27f69ec1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f27f693ef1e]                                                       + 0xa5f1e
[0x7f27f690ff2b]    PyObject_Call                                      + 0x4b
[0x7f27f69f1770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f27f69ebb9a]                                                       + 0x152b9a
[0x7f27f69ebf94]                                                       + 0x152f94
[0x7f27f69f150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f27f69ebb9a]                                                       + 0x152b9a
[0x7f27f69ebf94]                                                       + 0x152f94
[0x7f27f69f150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f27f69ebb9a]                                                       + 0x152b9a
[0x7f27f69ebf94]                                                       + 0x152f94
[0x7f27f69f150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f27f69ebb9a]                                                       + 0x152b9a
[0x7f27f69ec1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f27f69ec1df]    PyEval_EvalCode                                    + 0x1f
[0x7f27f6a213d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f27f6a2156f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f27f6a3b8e8]    Py_Main                                            + 0xff8
[0x5653690e72b8]    main                                               + 0x178
[0x7f27f66b00b3]    __libc_start_main                                  + 0xf3
[0x5653690e736e]    _start                                             + 0x2e


======================================== @babel_types/lib/definitions/core.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f8985854a29]                                                       + 0x7c5a29
[0x7f8985a15289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f8a09e3f741]                                                       + 0x2d7741
[0x7f8a0e7469e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f8a0e7cc084]                                                       + 0x153084
[0x7f8a0e7d150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f8a0e7cbb9a]                                                       + 0x152b9a
[0x7f8a0e7cc1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f8a0e71ef1e]                                                       + 0xa5f1e
[0x7f8a0e6eff2b]    PyObject_Call                                      + 0x4b
[0x7f8a0e7d1770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f8a0e7cbb9a]                                                       + 0x152b9a
[0x7f8a0e7cbf94]                                                       + 0x152f94
[0x7f8a0e7d150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f8a0e7cbb9a]                                                       + 0x152b9a
[0x7f8a0e7cbf94]                                                       + 0x152f94
[0x7f8a0e7d150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f8a0e7cb193]                                                       + 0x152193
[0x7f8a0e7cc15c]                                                       + 0x15315c
[0x7f8a0e7d150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f8a0e7cbb9a]                                                       + 0x152b9a
[0x7f8a0e7cbf94]                                                       + 0x152f94
[0x7f8a0e7d150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f8a0e7cbb9a]                                                       + 0x152b9a
[0x7f8a0e7cc1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f8a0e7cc1df]    PyEval_EvalCode                                    + 0x1f
[0x7f8a0e8013d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f8a0e80156f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f8a0e81b8e8]    Py_Main                                            + 0xff8
[0x564aa2ef72b8]    main                                               + 0x178
[0x7f8a0e4900b3]    __libc_start_main                                  + 0xf3
[0x564aa2ef736e]    _start                                             + 0x2e


======================================== @babel_types/lib/validators/generated/index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== @babel_types/scripts/generators/flow.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 1015 is out of bounds for axis 0 with size 1015

======================================== @babel_types/scripts/generators/typescript-legacy.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 1065 is out of bounds for axis 0 with size 1065

======================================== @cspotcode_source-map-support/browser-source-map-support.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== @istanbuljs_schema/default-exclude.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 69 is out of bounds for axis 0 with size 69

======================================== @jest_core/build/getNoTestFoundVerbose.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 434 is out of bounds for axis 0 with size 434

======================================== @jest_fake-timers/build/legacyFakeTimers.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 2833 is out of bounds for axis 0 with size 2833

======================================== @jest_reporters/build/CoverageReporter.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 2917 is out of bounds for axis 0 with size 2917

======================================== @jest_transform/build/ScriptTransformer.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 4296 is out of bounds for axis 0 with size 4296

======================================== @npmcli_fs/lib/common/file-url-to-path/polyfill.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 639 is out of bounds for axis 0 with size 639

======================================== @npmcli_fs/lib/cp/polyfill.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 2089 is out of bounds for axis 0 with size 2089

======================================== @npmcli_fs/lib/errors.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 534 is out of bounds for axis 0 with size 534

======================================== @npmcli_fs/lib/rm/polyfill.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 955 is out of bounds for axis 0 with size 955

======================================== @sindresorhus_is/dist/index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 4346 is out of bounds for axis 0 with size 4346

======================================== @sinonjs_fake-timers/src/fake-timers-src.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f476f661a29]                                                       + 0x7c5a29
[0x7f476f822289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f47f3c4c741]                                                       + 0x2d7741
[0x7f47f85539e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f47f85d9084]                                                       + 0x153084
[0x7f47f85de50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f47f85d8b9a]                                                       + 0x152b9a
[0x7f47f85d91b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f47f852bf1e]                                                       + 0xa5f1e
[0x7f47f84fcf2b]    PyObject_Call                                      + 0x4b
[0x7f47f85de770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f47f85d8b9a]                                                       + 0x152b9a
[0x7f47f85d8f94]                                                       + 0x152f94
[0x7f47f85de50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f47f85d8b9a]                                                       + 0x152b9a
[0x7f47f85d8f94]                                                       + 0x152f94
[0x7f47f85de50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f47f85d8193]                                                       + 0x152193
[0x7f47f85d915c]                                                       + 0x15315c
[0x7f47f85de50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f47f85d8b9a]                                                       + 0x152b9a
[0x7f47f85d8f94]                                                       + 0x152f94
[0x7f47f85de50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f47f85d8b9a]                                                       + 0x152b9a
[0x7f47f85d91b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f47f85d91df]    PyEval_EvalCode                                    + 0x1f
[0x7f47f860e3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f47f860e56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f47f86288e8]    Py_Main                                            + 0xff8
[0x55c75097e2b8]    main                                               + 0x178
[0x7f47f829d0b3]    __libc_start_main                                  + 0xf3
[0x55c75097e36e]    _start                                             + 0x2e


======================================== @trysound_sax/lib/sax.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f4812cd1a29]                                                       + 0x7c5a29
[0x7f4812e92289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f48972bc741]                                                       + 0x2d7741
[0x7f489bbc39e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f489bc49084]                                                       + 0x153084
[0x7f489bc4e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f489bc48b9a]                                                       + 0x152b9a
[0x7f489bc491b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f489bb9bf1e]                                                       + 0xa5f1e
[0x7f489bb6cf2b]    PyObject_Call                                      + 0x4b
[0x7f489bc4e770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f489bc48b9a]                                                       + 0x152b9a
[0x7f489bc48f94]                                                       + 0x152f94
[0x7f489bc4e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f489bc48b9a]                                                       + 0x152b9a
[0x7f489bc48f94]                                                       + 0x152f94
[0x7f489bc4e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f489bc48193]                                                       + 0x152193
[0x7f489bc4915c]                                                       + 0x15315c
[0x7f489bc4e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f489bc48b9a]                                                       + 0x152b9a
[0x7f489bc48f94]                                                       + 0x152f94
[0x7f489bc4e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f489bc48b9a]                                                       + 0x152b9a
[0x7f489bc491b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f489bc491df]    PyEval_EvalCode                                    + 0x1f
[0x7f489bc7e3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f489bc7e56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f489bc988e8]    Py_Main                                            + 0xff8
[0x5592db4fd2b8]    main                                               + 0x178
[0x7f489b90d0b3]    __libc_start_main                                  + 0xf3
[0x5592db4fd36e]    _start                                             + 0x2e


======================================== @webassemblyjs_ast/esm/nodes.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f537d9cca29]                                                       + 0x7c5a29
[0x7f537db8d289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f537eaaa741]                                                       + 0x2d7741
[0x7f53833b19e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f5383437084]                                                       + 0x153084
[0x7f538343c50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f5383436b9a]                                                       + 0x152b9a
[0x7f53834371b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f5383389f1e]                                                       + 0xa5f1e
[0x7f538335af2b]    PyObject_Call                                      + 0x4b
[0x7f538343c770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f5383436b9a]                                                       + 0x152b9a
[0x7f5383436f94]                                                       + 0x152f94
[0x7f538343c50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f5383436b9a]                                                       + 0x152b9a
[0x7f5383436f94]                                                       + 0x152f94
[0x7f538343c50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f5383436193]                                                       + 0x152193
[0x7f538343715c]                                                       + 0x15315c
[0x7f538343c50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f5383436b9a]                                                       + 0x152b9a
[0x7f5383436f94]                                                       + 0x152f94
[0x7f538343c50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f5383436b9a]                                                       + 0x152b9a
[0x7f53834371b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f53834371df]    PyEval_EvalCode                                    + 0x1f
[0x7f538346c3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f538346c56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f53834868e8]    Py_Main                                            + 0xff8
[0x55a4c653c2b8]    main                                               + 0x178
[0x7f53830fb0b3]    __libc_start_main                                  + 0xf3
[0x55a4c653c36e]    _start                                             + 0x2e


======================================== @webassemblyjs_ast/esm/types/basic.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f184a1a3a29]                                                       + 0x7c5a29
[0x7f184a329d45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f184b0e53a8]                                                       + 0x13b3a8
[0x7f184b0e7065]                                                       + 0x13d065
[0x7f184fb88bd9]    PyCFunction_Call                                   + 0xc9
[0x7f184fc156e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f184fc0db9a]                                                       + 0x152b9a
[0x7f184fc16aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f184fb32151]    _PyObject_FastCallDict                             + 0x131
[0x7f184fb322a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f184fb31f2b]    PyObject_Call                                      + 0x4b
[0x7f184fba3d7f]                                                       + 0xe8d7f
[0x7f184fb9f149]                                                       + 0xe4149
[0x7f184fb320ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f184fc0dd78]                                                       + 0x152d78
[0x7f184fc1350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f184fc0db9a]                                                       + 0x152b9a
[0x7f184fc0e1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f184fb60f1e]                                                       + 0xa5f1e
[0x7f184fb31f2b]    PyObject_Call                                      + 0x4b
[0x7f184fc13770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f184fc0db9a]                                                       + 0x152b9a
[0x7f184fc0df94]                                                       + 0x152f94
[0x7f184fc13867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f184fc0db9a]                                                       + 0x152b9a
[0x7f184fc0e1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f184fb60f1e]                                                       + 0xa5f1e
[0x7f184fb31f2b]    PyObject_Call                                      + 0x4b
[0x7f184fc13770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f184fc0db9a]                                                       + 0x152b9a
[0x7f184fc0df94]                                                       + 0x152f94
[0x7f184fc13867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f184fc0db9a]                                                       + 0x152b9a
[0x7f184fc0df94]                                                       + 0x152f94
[0x7f184fc1350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f184fc0db9a]                                                       + 0x152b9a
[0x7f184fc0e1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f184fb60f1e]                                                       + 0xa5f1e
[0x7f184fb31f2b]    PyObject_Call                                      + 0x4b
[0x7f184fc13770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f184fc0db9a]                                                       + 0x152b9a
[0x7f184fc0df94]                                                       + 0x152f94
[0x7f184fc1350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f184fc0db9a]                                                       + 0x152b9a
[0x7f184fc0df94]                                                       + 0x152f94
[0x7f184fc1350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f184fc0db9a]                                                       + 0x152b9a
[0x7f184fc0df94]                                                       + 0x152f94
[0x7f184fc1350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f184fc0db9a]                                                       + 0x152b9a
[0x7f184fc0e1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f184fc0e1df]    PyEval_EvalCode                                    + 0x1f
[0x7f184fc433d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f184fc4356f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f184fc5d8e8]    Py_Main                                            + 0xff8
[0x55a2b42032b8]    main                                               + 0x178
[0x7f184f8d20b3]    __libc_start_main                                  + 0xf3
[0x55a2b420336e]    _start                                             + 0x2e


======================================== @webassemblyjs_ast/esm/types/nodes.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f074cdd6a29]                                                       + 0x7c5a29
[0x7f074cf5cd45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f07d12253a8]                                                       + 0x13b3a8
[0x7f07d1227065]                                                       + 0x13d065
[0x7f07d5cc8bd9]    PyCFunction_Call                                   + 0xc9
[0x7f07d5d556e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f07d5d4db9a]                                                       + 0x152b9a
[0x7f07d5d56aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f07d5c72151]    _PyObject_FastCallDict                             + 0x131
[0x7f07d5c722a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f07d5c71f2b]    PyObject_Call                                      + 0x4b
[0x7f07d5ce3d7f]                                                       + 0xe8d7f
[0x7f07d5cdf149]                                                       + 0xe4149
[0x7f07d5c720ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f07d5d4dd78]                                                       + 0x152d78
[0x7f07d5d5350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f07d5d4db9a]                                                       + 0x152b9a
[0x7f07d5d4e1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f07d5ca0f1e]                                                       + 0xa5f1e
[0x7f07d5c71f2b]    PyObject_Call                                      + 0x4b
[0x7f07d5d53770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f07d5d4db9a]                                                       + 0x152b9a
[0x7f07d5d4df94]                                                       + 0x152f94
[0x7f07d5d53867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f07d5d4db9a]                                                       + 0x152b9a
[0x7f07d5d4e1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f07d5ca0f1e]                                                       + 0xa5f1e
[0x7f07d5c71f2b]    PyObject_Call                                      + 0x4b
[0x7f07d5d53770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f07d5d4db9a]                                                       + 0x152b9a
[0x7f07d5d4df94]                                                       + 0x152f94
[0x7f07d5d53867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f07d5d4db9a]                                                       + 0x152b9a
[0x7f07d5d4df94]                                                       + 0x152f94
[0x7f07d5d5350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f07d5d4db9a]                                                       + 0x152b9a
[0x7f07d5d4e1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f07d5ca0f1e]                                                       + 0xa5f1e
[0x7f07d5c71f2b]    PyObject_Call                                      + 0x4b
[0x7f07d5d53770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f07d5d4db9a]                                                       + 0x152b9a
[0x7f07d5d4df94]                                                       + 0x152f94
[0x7f07d5d5350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f07d5d4db9a]                                                       + 0x152b9a
[0x7f07d5d4df94]                                                       + 0x152f94
[0x7f07d5d5350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f07d5d4db9a]                                                       + 0x152b9a
[0x7f07d5d4df94]                                                       + 0x152f94
[0x7f07d5d5350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f07d5d4db9a]                                                       + 0x152b9a
[0x7f07d5d4e1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f07d5d4e1df]    PyEval_EvalCode                                    + 0x1f
[0x7f07d5d833d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f07d5d8356f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f07d5d9d8e8]    Py_Main                                            + 0xff8
[0x562d446002b8]    main                                               + 0x178
[0x7f07d5a120b3]    __libc_start_main                                  + 0xf3
[0x562d4460036e]    _start                                             + 0x2e


======================================== @webassemblyjs_ast/esm/types/traverse.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f8858d36a29]                                                       + 0x7c5a29
[0x7f8858ebcd45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f88dd1853a8]                                                       + 0x13b3a8
[0x7f88dd187065]                                                       + 0x13d065
[0x7f88e1c28bd9]    PyCFunction_Call                                   + 0xc9
[0x7f88e1cb56e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f88e1cadb9a]                                                       + 0x152b9a
[0x7f88e1cb6aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f88e1bd2151]    _PyObject_FastCallDict                             + 0x131
[0x7f88e1bd22a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f88e1bd1f2b]    PyObject_Call                                      + 0x4b
[0x7f88e1c43d7f]                                                       + 0xe8d7f
[0x7f88e1c3f149]                                                       + 0xe4149
[0x7f88e1bd20ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f88e1cadd78]                                                       + 0x152d78
[0x7f88e1cb350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f88e1cadb9a]                                                       + 0x152b9a
[0x7f88e1cae1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f88e1c00f1e]                                                       + 0xa5f1e
[0x7f88e1bd1f2b]    PyObject_Call                                      + 0x4b
[0x7f88e1cb3770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f88e1cadb9a]                                                       + 0x152b9a
[0x7f88e1cadf94]                                                       + 0x152f94
[0x7f88e1cb3867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f88e1cadb9a]                                                       + 0x152b9a
[0x7f88e1cae1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f88e1c00f1e]                                                       + 0xa5f1e
[0x7f88e1bd1f2b]    PyObject_Call                                      + 0x4b
[0x7f88e1cb3770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f88e1cadb9a]                                                       + 0x152b9a
[0x7f88e1cadf94]                                                       + 0x152f94
[0x7f88e1cb3867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f88e1cadb9a]                                                       + 0x152b9a
[0x7f88e1cadf94]                                                       + 0x152f94
[0x7f88e1cb350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f88e1cadb9a]                                                       + 0x152b9a
[0x7f88e1cae1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f88e1c00f1e]                                                       + 0xa5f1e
[0x7f88e1bd1f2b]    PyObject_Call                                      + 0x4b
[0x7f88e1cb3770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f88e1cadb9a]                                                       + 0x152b9a
[0x7f88e1cadf94]                                                       + 0x152f94
[0x7f88e1cb350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f88e1cadb9a]                                                       + 0x152b9a
[0x7f88e1cadf94]                                                       + 0x152f94
[0x7f88e1cb350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f88e1cadb9a]                                                       + 0x152b9a
[0x7f88e1cadf94]                                                       + 0x152f94
[0x7f88e1cb350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f88e1cadb9a]                                                       + 0x152b9a
[0x7f88e1cae1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f88e1cae1df]    PyEval_EvalCode                                    + 0x1f
[0x7f88e1ce33d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f88e1ce356f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f88e1cfd8e8]    Py_Main                                            + 0xff8
[0x55b25c02a2b8]    main                                               + 0x178
[0x7f88e19720b3]    __libc_start_main                                  + 0xf3
[0x55b25c02a36e]    _start                                             + 0x2e


======================================== @webassemblyjs_ast/lib/nodes.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f84ac969a29]                                                       + 0x7c5a29
[0x7f84acb2a289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f84ada47741]                                                       + 0x2d7741
[0x7f84b234e9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f84b23d4084]                                                       + 0x153084
[0x7f84b23d950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f84b23d3b9a]                                                       + 0x152b9a
[0x7f84b23d41b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f84b2326f1e]                                                       + 0xa5f1e
[0x7f84b22f7f2b]    PyObject_Call                                      + 0x4b
[0x7f84b23d9770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f84b23d3b9a]                                                       + 0x152b9a
[0x7f84b23d3f94]                                                       + 0x152f94
[0x7f84b23d950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f84b23d3b9a]                                                       + 0x152b9a
[0x7f84b23d3f94]                                                       + 0x152f94
[0x7f84b23d950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f84b23d3193]                                                       + 0x152193
[0x7f84b23d415c]                                                       + 0x15315c
[0x7f84b23d950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f84b23d3b9a]                                                       + 0x152b9a
[0x7f84b23d3f94]                                                       + 0x152f94
[0x7f84b23d950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f84b23d3b9a]                                                       + 0x152b9a
[0x7f84b23d41b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f84b23d41df]    PyEval_EvalCode                                    + 0x1f
[0x7f84b24093d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f84b240956f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f84b24238e8]    Py_Main                                            + 0xff8
[0x5579bcca12b8]    main                                               + 0x178
[0x7f84b20980b3]    __libc_start_main                                  + 0xf3
[0x5579bcca136e]    _start                                             + 0x2e


======================================== @webassemblyjs_ast/lib/types/basic.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f0685309a29]                                                       + 0x7c5a29
[0x7f068548fd45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f07097583a8]                                                       + 0x13b3a8
[0x7f070975a065]                                                       + 0x13d065
[0x7f070e1fbbd9]    PyCFunction_Call                                   + 0xc9
[0x7f070e2886e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f070e280b9a]                                                       + 0x152b9a
[0x7f070e289aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f070e1a5151]    _PyObject_FastCallDict                             + 0x131
[0x7f070e1a52a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f070e1a4f2b]    PyObject_Call                                      + 0x4b
[0x7f070e216d7f]                                                       + 0xe8d7f
[0x7f070e212149]                                                       + 0xe4149
[0x7f070e1a50ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f070e280d78]                                                       + 0x152d78
[0x7f070e28650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f070e280b9a]                                                       + 0x152b9a
[0x7f070e2811b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f070e1d3f1e]                                                       + 0xa5f1e
[0x7f070e1a4f2b]    PyObject_Call                                      + 0x4b
[0x7f070e286770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f070e280b9a]                                                       + 0x152b9a
[0x7f070e280f94]                                                       + 0x152f94
[0x7f070e286867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f070e280b9a]                                                       + 0x152b9a
[0x7f070e2811b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f070e1d3f1e]                                                       + 0xa5f1e
[0x7f070e1a4f2b]    PyObject_Call                                      + 0x4b
[0x7f070e286770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f070e280b9a]                                                       + 0x152b9a
[0x7f070e280f94]                                                       + 0x152f94
[0x7f070e286867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f070e280b9a]                                                       + 0x152b9a
[0x7f070e280f94]                                                       + 0x152f94
[0x7f070e28650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f070e280b9a]                                                       + 0x152b9a
[0x7f070e2811b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f070e1d3f1e]                                                       + 0xa5f1e
[0x7f070e1a4f2b]    PyObject_Call                                      + 0x4b
[0x7f070e286770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f070e280b9a]                                                       + 0x152b9a
[0x7f070e280f94]                                                       + 0x152f94
[0x7f070e28650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f070e280b9a]                                                       + 0x152b9a
[0x7f070e280f94]                                                       + 0x152f94
[0x7f070e28650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f070e280b9a]                                                       + 0x152b9a
[0x7f070e280f94]                                                       + 0x152f94
[0x7f070e28650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f070e280b9a]                                                       + 0x152b9a
[0x7f070e2811b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f070e2811df]    PyEval_EvalCode                                    + 0x1f
[0x7f070e2b63d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f070e2b656f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f070e2d08e8]    Py_Main                                            + 0xff8
[0x5576e870c2b8]    main                                               + 0x178
[0x7f070df450b3]    __libc_start_main                                  + 0xf3
[0x5576e870c36e]    _start                                             + 0x2e


======================================== @webassemblyjs_ast/lib/types/nodes.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7ff345090a29]                                                       + 0x7c5a29
[0x7ff345216d45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7ff3c94df3a8]                                                       + 0x13b3a8
[0x7ff3c94e1065]                                                       + 0x13d065
[0x7ff3cdf82bd9]    PyCFunction_Call                                   + 0xc9
[0x7ff3ce00f6e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7ff3ce007b9a]                                                       + 0x152b9a
[0x7ff3ce010aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7ff3cdf2c151]    _PyObject_FastCallDict                             + 0x131
[0x7ff3cdf2c2a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7ff3cdf2bf2b]    PyObject_Call                                      + 0x4b
[0x7ff3cdf9dd7f]                                                       + 0xe8d7f
[0x7ff3cdf99149]                                                       + 0xe4149
[0x7ff3cdf2c0ad]    _PyObject_FastCallDict                             + 0x8d
[0x7ff3ce007d78]                                                       + 0x152d78
[0x7ff3ce00d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff3ce007b9a]                                                       + 0x152b9a
[0x7ff3ce0081b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7ff3cdf5af1e]                                                       + 0xa5f1e
[0x7ff3cdf2bf2b]    PyObject_Call                                      + 0x4b
[0x7ff3ce00d770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7ff3ce007b9a]                                                       + 0x152b9a
[0x7ff3ce007f94]                                                       + 0x152f94
[0x7ff3ce00d867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7ff3ce007b9a]                                                       + 0x152b9a
[0x7ff3ce0081b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7ff3cdf5af1e]                                                       + 0xa5f1e
[0x7ff3cdf2bf2b]    PyObject_Call                                      + 0x4b
[0x7ff3ce00d770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7ff3ce007b9a]                                                       + 0x152b9a
[0x7ff3ce007f94]                                                       + 0x152f94
[0x7ff3ce00d867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7ff3ce007b9a]                                                       + 0x152b9a
[0x7ff3ce007f94]                                                       + 0x152f94
[0x7ff3ce00d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff3ce007b9a]                                                       + 0x152b9a
[0x7ff3ce0081b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7ff3cdf5af1e]                                                       + 0xa5f1e
[0x7ff3cdf2bf2b]    PyObject_Call                                      + 0x4b
[0x7ff3ce00d770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7ff3ce007b9a]                                                       + 0x152b9a
[0x7ff3ce007f94]                                                       + 0x152f94
[0x7ff3ce00d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff3ce007b9a]                                                       + 0x152b9a
[0x7ff3ce007f94]                                                       + 0x152f94
[0x7ff3ce00d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff3ce007b9a]                                                       + 0x152b9a
[0x7ff3ce007f94]                                                       + 0x152f94
[0x7ff3ce00d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff3ce007b9a]                                                       + 0x152b9a
[0x7ff3ce0081b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7ff3ce0081df]    PyEval_EvalCode                                    + 0x1f
[0x7ff3ce03d3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7ff3ce03d56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7ff3ce0578e8]    Py_Main                                            + 0xff8
[0x55709fb232b8]    main                                               + 0x178
[0x7ff3cdccc0b3]    __libc_start_main                                  + 0xf3
[0x55709fb2336e]    _start                                             + 0x2e


======================================== @webassemblyjs_ast/lib/types/traverse.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7fc66d8d5a29]                                                       + 0x7c5a29
[0x7fc66da5bd45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7fc66e8173a8]                                                       + 0x13b3a8
[0x7fc66e819065]                                                       + 0x13d065
[0x7fc6732babd9]    PyCFunction_Call                                   + 0xc9
[0x7fc6733476e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7fc67333fb9a]                                                       + 0x152b9a
[0x7fc673348aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7fc673264151]    _PyObject_FastCallDict                             + 0x131
[0x7fc6732642a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7fc673263f2b]    PyObject_Call                                      + 0x4b
[0x7fc6732d5d7f]                                                       + 0xe8d7f
[0x7fc6732d1149]                                                       + 0xe4149
[0x7fc6732640ad]    _PyObject_FastCallDict                             + 0x8d
[0x7fc67333fd78]                                                       + 0x152d78
[0x7fc67334550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc67333fb9a]                                                       + 0x152b9a
[0x7fc6733401b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fc673292f1e]                                                       + 0xa5f1e
[0x7fc673263f2b]    PyObject_Call                                      + 0x4b
[0x7fc673345770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fc67333fb9a]                                                       + 0x152b9a
[0x7fc67333ff94]                                                       + 0x152f94
[0x7fc673345867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7fc67333fb9a]                                                       + 0x152b9a
[0x7fc6733401b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fc673292f1e]                                                       + 0xa5f1e
[0x7fc673263f2b]    PyObject_Call                                      + 0x4b
[0x7fc673345770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fc67333fb9a]                                                       + 0x152b9a
[0x7fc67333ff94]                                                       + 0x152f94
[0x7fc673345867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7fc67333fb9a]                                                       + 0x152b9a
[0x7fc67333ff94]                                                       + 0x152f94
[0x7fc67334550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc67333fb9a]                                                       + 0x152b9a
[0x7fc6733401b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fc673292f1e]                                                       + 0xa5f1e
[0x7fc673263f2b]    PyObject_Call                                      + 0x4b
[0x7fc673345770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fc67333fb9a]                                                       + 0x152b9a
[0x7fc67333ff94]                                                       + 0x152f94
[0x7fc67334550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc67333fb9a]                                                       + 0x152b9a
[0x7fc67333ff94]                                                       + 0x152f94
[0x7fc67334550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc67333fb9a]                                                       + 0x152b9a
[0x7fc67333ff94]                                                       + 0x152f94
[0x7fc67334550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc67333fb9a]                                                       + 0x152b9a
[0x7fc6733401b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fc6733401df]    PyEval_EvalCode                                    + 0x1f
[0x7fc6733753d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fc67337556f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fc67338f8e8]    Py_Main                                            + 0xff8
[0x55672ca552b8]    main                                               + 0x178
[0x7fc6730040b3]    __libc_start_main                                  + 0xf3
[0x55672ca5536e]    _start                                             + 0x2e


======================================== @webassemblyjs_wasm-parser/esm/decoder.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fad84f07a29]                                                       + 0x7c5a29
[0x7fad850c8289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fad85fe5741]                                                       + 0x2d7741
[0x7fad8a8ec9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fad8a972084]                                                       + 0x153084
[0x7fad8a97750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fad8a971b9a]                                                       + 0x152b9a
[0x7fad8a9721b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fad8a8c4f1e]                                                       + 0xa5f1e
[0x7fad8a895f2b]    PyObject_Call                                      + 0x4b
[0x7fad8a977770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fad8a971b9a]                                                       + 0x152b9a
[0x7fad8a971f94]                                                       + 0x152f94
[0x7fad8a97750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fad8a971b9a]                                                       + 0x152b9a
[0x7fad8a971f94]                                                       + 0x152f94
[0x7fad8a97750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fad8a971193]                                                       + 0x152193
[0x7fad8a97215c]                                                       + 0x15315c
[0x7fad8a97750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fad8a971b9a]                                                       + 0x152b9a
[0x7fad8a971f94]                                                       + 0x152f94
[0x7fad8a97750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fad8a971b9a]                                                       + 0x152b9a
[0x7fad8a9721b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fad8a9721df]    PyEval_EvalCode                                    + 0x1f
[0x7fad8a9a73d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fad8a9a756f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fad8a9c18e8]    Py_Main                                            + 0xff8
[0x55f243c5a2b8]    main                                               + 0x178
[0x7fad8a6360b3]    __libc_start_main                                  + 0xf3
[0x55f243c5a36e]    _start                                             + 0x2e


======================================== @webassemblyjs_wasm-parser/esm/types/decoder.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f701a1a5a29]                                                       + 0x7c5a29
[0x7f701a32bd45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f709e5f43a8]                                                       + 0x13b3a8
[0x7f709e5f6065]                                                       + 0x13d065
[0x7f70a3097bd9]    PyCFunction_Call                                   + 0xc9
[0x7f70a31246e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f70a311cb9a]                                                       + 0x152b9a
[0x7f70a3125aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f70a3041151]    _PyObject_FastCallDict                             + 0x131
[0x7f70a30412a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f70a3040f2b]    PyObject_Call                                      + 0x4b
[0x7f70a30b2d7f]                                                       + 0xe8d7f
[0x7f70a30ae149]                                                       + 0xe4149
[0x7f70a30410ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f70a311cd78]                                                       + 0x152d78
[0x7f70a312250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f70a311cb9a]                                                       + 0x152b9a
[0x7f70a311d1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f70a306ff1e]                                                       + 0xa5f1e
[0x7f70a3040f2b]    PyObject_Call                                      + 0x4b
[0x7f70a3122770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f70a311cb9a]                                                       + 0x152b9a
[0x7f70a311cf94]                                                       + 0x152f94
[0x7f70a3122867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f70a311cb9a]                                                       + 0x152b9a
[0x7f70a311d1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f70a306ff1e]                                                       + 0xa5f1e
[0x7f70a3040f2b]    PyObject_Call                                      + 0x4b
[0x7f70a3122770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f70a311cb9a]                                                       + 0x152b9a
[0x7f70a311cf94]                                                       + 0x152f94
[0x7f70a3122867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f70a311cb9a]                                                       + 0x152b9a
[0x7f70a311cf94]                                                       + 0x152f94
[0x7f70a312250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f70a311cb9a]                                                       + 0x152b9a
[0x7f70a311d1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f70a306ff1e]                                                       + 0xa5f1e
[0x7f70a3040f2b]    PyObject_Call                                      + 0x4b
[0x7f70a3122770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f70a311cb9a]                                                       + 0x152b9a
[0x7f70a311cf94]                                                       + 0x152f94
[0x7f70a312250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f70a311cb9a]                                                       + 0x152b9a
[0x7f70a311cf94]                                                       + 0x152f94
[0x7f70a312250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f70a311cb9a]                                                       + 0x152b9a
[0x7f70a311cf94]                                                       + 0x152f94
[0x7f70a312250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f70a311cb9a]                                                       + 0x152b9a
[0x7f70a311d1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f70a311d1df]    PyEval_EvalCode                                    + 0x1f
[0x7f70a31523d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f70a315256f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f70a316c8e8]    Py_Main                                            + 0xff8
[0x55938a30d2b8]    main                                               + 0x178
[0x7f70a2de10b3]    __libc_start_main                                  + 0xf3
[0x55938a30d36e]    _start                                             + 0x2e


======================================== @webassemblyjs_wasm-parser/lib/decoder.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fda6287aa29]                                                       + 0x7c5a29
[0x7fda62a3b289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fdae6e65741]                                                       + 0x2d7741
[0x7fdaeb76c9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fdaeb7f2084]                                                       + 0x153084
[0x7fdaeb7f750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fdaeb7f1b9a]                                                       + 0x152b9a
[0x7fdaeb7f21b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fdaeb744f1e]                                                       + 0xa5f1e
[0x7fdaeb715f2b]    PyObject_Call                                      + 0x4b
[0x7fdaeb7f7770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fdaeb7f1b9a]                                                       + 0x152b9a
[0x7fdaeb7f1f94]                                                       + 0x152f94
[0x7fdaeb7f750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fdaeb7f1b9a]                                                       + 0x152b9a
[0x7fdaeb7f1f94]                                                       + 0x152f94
[0x7fdaeb7f750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fdaeb7f1193]                                                       + 0x152193
[0x7fdaeb7f215c]                                                       + 0x15315c
[0x7fdaeb7f750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fdaeb7f1b9a]                                                       + 0x152b9a
[0x7fdaeb7f1f94]                                                       + 0x152f94
[0x7fdaeb7f750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fdaeb7f1b9a]                                                       + 0x152b9a
[0x7fdaeb7f21b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fdaeb7f21df]    PyEval_EvalCode                                    + 0x1f
[0x7fdaeb8273d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fdaeb82756f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fdaeb8418e8]    Py_Main                                            + 0xff8
[0x55a6203fa2b8]    main                                               + 0x178
[0x7fdaeb4b60b3]    __libc_start_main                                  + 0xf3
[0x55a6203fa36e]    _start                                             + 0x2e


======================================== @webassemblyjs_wasm-parser/lib/types/decoder.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f65dc053a29]                                                       + 0x7c5a29
[0x7f65dc1d9d45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f65dcf953a8]                                                       + 0x13b3a8
[0x7f65dcf97065]                                                       + 0x13d065
[0x7f65e1a38bd9]    PyCFunction_Call                                   + 0xc9
[0x7f65e1ac56e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f65e1abdb9a]                                                       + 0x152b9a
[0x7f65e1ac6aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f65e19e2151]    _PyObject_FastCallDict                             + 0x131
[0x7f65e19e22a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f65e19e1f2b]    PyObject_Call                                      + 0x4b
[0x7f65e1a53d7f]                                                       + 0xe8d7f
[0x7f65e1a4f149]                                                       + 0xe4149
[0x7f65e19e20ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f65e1abdd78]                                                       + 0x152d78
[0x7f65e1ac350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f65e1abdb9a]                                                       + 0x152b9a
[0x7f65e1abe1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f65e1a10f1e]                                                       + 0xa5f1e
[0x7f65e19e1f2b]    PyObject_Call                                      + 0x4b
[0x7f65e1ac3770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f65e1abdb9a]                                                       + 0x152b9a
[0x7f65e1abdf94]                                                       + 0x152f94
[0x7f65e1ac3867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f65e1abdb9a]                                                       + 0x152b9a
[0x7f65e1abe1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f65e1a10f1e]                                                       + 0xa5f1e
[0x7f65e19e1f2b]    PyObject_Call                                      + 0x4b
[0x7f65e1ac3770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f65e1abdb9a]                                                       + 0x152b9a
[0x7f65e1abdf94]                                                       + 0x152f94
[0x7f65e1ac3867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f65e1abdb9a]                                                       + 0x152b9a
[0x7f65e1abdf94]                                                       + 0x152f94
[0x7f65e1ac350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f65e1abdb9a]                                                       + 0x152b9a
[0x7f65e1abe1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f65e1a10f1e]                                                       + 0xa5f1e
[0x7f65e19e1f2b]    PyObject_Call                                      + 0x4b
[0x7f65e1ac3770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f65e1abdb9a]                                                       + 0x152b9a
[0x7f65e1abdf94]                                                       + 0x152f94
[0x7f65e1ac350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f65e1abdb9a]                                                       + 0x152b9a
[0x7f65e1abdf94]                                                       + 0x152f94
[0x7f65e1ac350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f65e1abdb9a]                                                       + 0x152b9a
[0x7f65e1abdf94]                                                       + 0x152f94
[0x7f65e1ac350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f65e1abdb9a]                                                       + 0x152b9a
[0x7f65e1abe1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f65e1abe1df]    PyEval_EvalCode                                    + 0x1f
[0x7f65e1af33d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f65e1af356f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f65e1b0d8e8]    Py_Main                                            + 0xff8
[0x55feb6f682b8]    main                                               + 0x178
[0x7f65e17820b3]    __libc_start_main                                  + 0xf3
[0x55feb6f6836e]    _start                                             + 0x2e


======================================== @webassemblyjs_wast-parser/esm/grammar.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f5dfc281a29]                                                       + 0x7c5a29
[0x7f5dfc442289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f5e8086c741]                                                       + 0x2d7741
[0x7f5e851739e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f5e851f9084]                                                       + 0x153084
[0x7f5e851fe50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f5e851f8b9a]                                                       + 0x152b9a
[0x7f5e851f91b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f5e8514bf1e]                                                       + 0xa5f1e
[0x7f5e8511cf2b]    PyObject_Call                                      + 0x4b
[0x7f5e851fe770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f5e851f8b9a]                                                       + 0x152b9a
[0x7f5e851f8f94]                                                       + 0x152f94
[0x7f5e851fe50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f5e851f8b9a]                                                       + 0x152b9a
[0x7f5e851f8f94]                                                       + 0x152f94
[0x7f5e851fe50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f5e851f8193]                                                       + 0x152193
[0x7f5e851f915c]                                                       + 0x15315c
[0x7f5e851fe50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f5e851f8b9a]                                                       + 0x152b9a
[0x7f5e851f8f94]                                                       + 0x152f94
[0x7f5e851fe50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f5e851f8b9a]                                                       + 0x152b9a
[0x7f5e851f91b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f5e851f91df]    PyEval_EvalCode                                    + 0x1f
[0x7f5e8522e3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f5e8522e56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f5e852488e8]    Py_Main                                            + 0xff8
[0x5641f68772b8]    main                                               + 0x178
[0x7f5e84ebd0b3]    __libc_start_main                                  + 0xf3
[0x5641f687736e]    _start                                             + 0x2e


======================================== @webassemblyjs_wast-parser/lib/grammar.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f317d107a29]                                                       + 0x7c5a29
[0x7f317d2c8289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f32016f2741]                                                       + 0x2d7741
[0x7f3205ff99e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f320607f084]                                                       + 0x153084
[0x7f320608450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f320607eb9a]                                                       + 0x152b9a
[0x7f320607f1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f3205fd1f1e]                                                       + 0xa5f1e
[0x7f3205fa2f2b]    PyObject_Call                                      + 0x4b
[0x7f3206084770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f320607eb9a]                                                       + 0x152b9a
[0x7f320607ef94]                                                       + 0x152f94
[0x7f320608450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f320607eb9a]                                                       + 0x152b9a
[0x7f320607ef94]                                                       + 0x152f94
[0x7f320608450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f320607e193]                                                       + 0x152193
[0x7f320607f15c]                                                       + 0x15315c
[0x7f320608450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f320607eb9a]                                                       + 0x152b9a
[0x7f320607ef94]                                                       + 0x152f94
[0x7f320608450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f320607eb9a]                                                       + 0x152b9a
[0x7f320607f1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f320607f1df]    PyEval_EvalCode                                    + 0x1f
[0x7f32060b43d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f32060b456f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f32060ce8e8]    Py_Main                                            + 0xff8
[0x55d1fbb512b8]    main                                               + 0x178
[0x7f3205d430b3]    __libc_start_main                                  + 0xf3
[0x55d1fbb5136e]    _start                                             + 0x2e


======================================== @xtuc_long/dist/long.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fb778ec8a29]                                                       + 0x7c5a29
[0x7fb779089289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fb779fa6741]                                                       + 0x2d7741
[0x7fb77e8ad9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fb77e933084]                                                       + 0x153084
[0x7fb77e93850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb77e932b9a]                                                       + 0x152b9a
[0x7fb77e9331b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fb77e885f1e]                                                       + 0xa5f1e
[0x7fb77e856f2b]    PyObject_Call                                      + 0x4b
[0x7fb77e938770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fb77e932b9a]                                                       + 0x152b9a
[0x7fb77e932f94]                                                       + 0x152f94
[0x7fb77e93850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb77e932b9a]                                                       + 0x152b9a
[0x7fb77e932f94]                                                       + 0x152f94
[0x7fb77e93850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb77e932193]                                                       + 0x152193
[0x7fb77e93315c]                                                       + 0x15315c
[0x7fb77e93850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb77e932b9a]                                                       + 0x152b9a
[0x7fb77e932f94]                                                       + 0x152f94
[0x7fb77e93850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb77e932b9a]                                                       + 0x152b9a
[0x7fb77e9331b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fb77e9331df]    PyEval_EvalCode                                    + 0x1f
[0x7fb77e9683d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fb77e96856f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fb77e9828e8]    Py_Main                                            + 0xff8
[0x55fe516112b8]    main                                               + 0x178
[0x7fb77e5f70b3]    __libc_start_main                                  + 0xf3
[0x55fe5161136e]    _start                                             + 0x2e


======================================== @xtuc_long/src/long.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fb9856f1a29]                                                       + 0x7c5a29
[0x7fb9858b2289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fba09cdc741]                                                       + 0x2d7741
[0x7fba0e5e39e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fba0e669084]                                                       + 0x153084
[0x7fba0e66e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fba0e668b9a]                                                       + 0x152b9a
[0x7fba0e6691b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fba0e5bbf1e]                                                       + 0xa5f1e
[0x7fba0e58cf2b]    PyObject_Call                                      + 0x4b
[0x7fba0e66e770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fba0e668b9a]                                                       + 0x152b9a
[0x7fba0e668f94]                                                       + 0x152f94
[0x7fba0e66e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fba0e668b9a]                                                       + 0x152b9a
[0x7fba0e668f94]                                                       + 0x152f94
[0x7fba0e66e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fba0e668193]                                                       + 0x152193
[0x7fba0e66915c]                                                       + 0x15315c
[0x7fba0e66e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fba0e668b9a]                                                       + 0x152b9a
[0x7fba0e668f94]                                                       + 0x152f94
[0x7fba0e66e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fba0e668b9a]                                                       + 0x152b9a
[0x7fba0e6691b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fba0e6691df]    PyEval_EvalCode                                    + 0x1f
[0x7fba0e69e3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fba0e69e56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fba0e6b88e8]    Py_Main                                            + 0xff8
[0x5595de8ea2b8]    main                                               + 0x178
[0x7fba0e32d0b3]    __libc_start_main                                  + 0xf3
[0x5595de8ea36e]    _start                                             + 0x2e


======================================== acorn/dist/acorn.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== ajv/dist/compile/codegen/index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f176f63aa29]                                                       + 0x7c5a29
[0x7f176f7fb289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f1770718741]                                                       + 0x2d7741
[0x7f177501f9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f17750a5084]                                                       + 0x153084
[0x7f17750aa50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f17750a4b9a]                                                       + 0x152b9a
[0x7f17750a51b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f1774ff7f1e]                                                       + 0xa5f1e
[0x7f1774fc8f2b]    PyObject_Call                                      + 0x4b
[0x7f17750aa770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f17750a4b9a]                                                       + 0x152b9a
[0x7f17750a4f94]                                                       + 0x152f94
[0x7f17750aa50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f17750a4b9a]                                                       + 0x152b9a
[0x7f17750a4f94]                                                       + 0x152f94
[0x7f17750aa50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f17750a4193]                                                       + 0x152193
[0x7f17750a515c]                                                       + 0x15315c
[0x7f17750aa50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f17750a4b9a]                                                       + 0x152b9a
[0x7f17750a4f94]                                                       + 0x152f94
[0x7f17750aa50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f17750a4b9a]                                                       + 0x152b9a
[0x7f17750a51b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f17750a51df]    PyEval_EvalCode                                    + 0x1f
[0x7f17750da3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f17750da56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f17750f48e8]    Py_Main                                            + 0xff8
[0x55dbac2592b8]    main                                               + 0x178
[0x7f1774d690b3]    __libc_start_main                                  + 0xf3
[0x55dbac25936e]    _start                                             + 0x2e


======================================== ajv/dist/compile/index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 1852 is out of bounds for axis 0 with size 1852

======================================== ajv/dist/vocabularies/discriminator/index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 756 is out of bounds for axis 0 with size 756

======================================== ajv/dist/vocabularies/jtd/discriminator.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 584 is out of bounds for axis 0 with size 584

======================================== ajv/dist/vocabularies/jtd/error.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 183 is out of bounds for axis 0 with size 183

======================================== ansi-escapes/index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 854 is out of bounds for axis 0 with size 854

======================================== argparse/argparse.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7ff51d07da29]                                                       + 0x7c5a29
[0x7ff51d23e289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7ff5a1668741]                                                       + 0x2d7741
[0x7ff5a5f6f9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7ff5a5ff5084]                                                       + 0x153084
[0x7ff5a5ffa50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff5a5ff4b9a]                                                       + 0x152b9a
[0x7ff5a5ff51b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7ff5a5f47f1e]                                                       + 0xa5f1e
[0x7ff5a5f18f2b]    PyObject_Call                                      + 0x4b
[0x7ff5a5ffa770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7ff5a5ff4b9a]                                                       + 0x152b9a
[0x7ff5a5ff4f94]                                                       + 0x152f94
[0x7ff5a5ffa50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff5a5ff4b9a]                                                       + 0x152b9a
[0x7ff5a5ff4f94]                                                       + 0x152f94
[0x7ff5a5ffa50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff5a5ff4193]                                                       + 0x152193
[0x7ff5a5ff515c]                                                       + 0x15315c
[0x7ff5a5ffa50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff5a5ff4b9a]                                                       + 0x152b9a
[0x7ff5a5ff4f94]                                                       + 0x152f94
[0x7ff5a5ffa50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff5a5ff4b9a]                                                       + 0x152b9a
[0x7ff5a5ff51b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7ff5a5ff51df]    PyEval_EvalCode                                    + 0x1f
[0x7ff5a602a3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7ff5a602a56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7ff5a60448e8]    Py_Main                                            + 0xff8
[0x5612da2ed2b8]    main                                               + 0x178
[0x7ff5a5cb90b3]    __libc_start_main                                  + 0xf3
[0x5612da2ed36e]    _start                                             + 0x2e


======================================== async/dist/async.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f6a5f230a29]                                                       + 0x7c5a29
[0x7f6a5f3f1289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f6ae381b741]                                                       + 0x2d7741
[0x7f6ae81229e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f6ae81a8084]                                                       + 0x153084
[0x7f6ae81ad50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6ae81a7b9a]                                                       + 0x152b9a
[0x7f6ae81a81b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f6ae80faf1e]                                                       + 0xa5f1e
[0x7f6ae80cbf2b]    PyObject_Call                                      + 0x4b
[0x7f6ae81ad770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f6ae81a7b9a]                                                       + 0x152b9a
[0x7f6ae81a7f94]                                                       + 0x152f94
[0x7f6ae81ad50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6ae81a7b9a]                                                       + 0x152b9a
[0x7f6ae81a7f94]                                                       + 0x152f94
[0x7f6ae81ad50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6ae81a7193]                                                       + 0x152193
[0x7f6ae81a815c]                                                       + 0x15315c
[0x7f6ae81ad50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6ae81a7b9a]                                                       + 0x152b9a
[0x7f6ae81a7f94]                                                       + 0x152f94
[0x7f6ae81ad50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6ae81a7b9a]                                                       + 0x152b9a
[0x7f6ae81a81b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f6ae81a81df]    PyEval_EvalCode                                    + 0x1f
[0x7f6ae81dd3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f6ae81dd56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f6ae81f78e8]    Py_Main                                            + 0xff8
[0x562c56d032b8]    main                                               + 0x178
[0x7f6ae7e6c0b3]    __libc_start_main                                  + 0xf3
[0x562c56d0336e]    _start                                             + 0x2e


======================================== async/dist/async.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f200aaa2a29]                                                       + 0x7c5a29
[0x7f200ac63289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f208f08d741]                                                       + 0x2d7741
[0x7f20939949e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f2093a1a084]                                                       + 0x153084
[0x7f2093a1f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f2093a19b9a]                                                       + 0x152b9a
[0x7f2093a1a1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f209396cf1e]                                                       + 0xa5f1e
[0x7f209393df2b]    PyObject_Call                                      + 0x4b
[0x7f2093a1f770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f2093a19b9a]                                                       + 0x152b9a
[0x7f2093a19f94]                                                       + 0x152f94
[0x7f2093a1f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f2093a19b9a]                                                       + 0x152b9a
[0x7f2093a19f94]                                                       + 0x152f94
[0x7f2093a1f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f2093a19193]                                                       + 0x152193
[0x7f2093a1a15c]                                                       + 0x15315c
[0x7f2093a1f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f2093a19b9a]                                                       + 0x152b9a
[0x7f2093a19f94]                                                       + 0x152f94
[0x7f2093a1f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f2093a19b9a]                                                       + 0x152b9a
[0x7f2093a1a1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f2093a1a1df]    PyEval_EvalCode                                    + 0x1f
[0x7f2093a4f3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f2093a4f56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f2093a698e8]    Py_Main                                            + 0xff8
[0x5638a82782b8]    main                                               + 0x178
[0x7f20936de0b3]    __libc_start_main                                  + 0xf3
[0x5638a827836e]    _start                                             + 0x2e


======================================== autoprefixer/lib/hacks/grid-utils.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 4709 is out of bounds for axis 0 with size 4709

======================================== autoprefixer/lib/processor.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 3536 is out of bounds for axis 0 with size 3536

======================================== axios/dist/axios.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f374e7dca29]                                                       + 0x7c5a29
[0x7f374e99d289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f37d2dc7741]                                                       + 0x2d7741
[0x7f37d76ce9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f37d7754084]                                                       + 0x153084
[0x7f37d775950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f37d7753b9a]                                                       + 0x152b9a
[0x7f37d77541b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f37d76a6f1e]                                                       + 0xa5f1e
[0x7f37d7677f2b]    PyObject_Call                                      + 0x4b
[0x7f37d7759770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f37d7753b9a]                                                       + 0x152b9a
[0x7f37d7753f94]                                                       + 0x152f94
[0x7f37d775950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f37d7753b9a]                                                       + 0x152b9a
[0x7f37d7753f94]                                                       + 0x152f94
[0x7f37d775950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f37d7753193]                                                       + 0x152193
[0x7f37d775415c]                                                       + 0x15315c
[0x7f37d775950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f37d7753b9a]                                                       + 0x152b9a
[0x7f37d7753f94]                                                       + 0x152f94
[0x7f37d775950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f37d7753b9a]                                                       + 0x152b9a
[0x7f37d77541b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f37d77541df]    PyEval_EvalCode                                    + 0x1f
[0x7f37d77893d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f37d778956f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f37d77a38e8]    Py_Main                                            + 0xff8
[0x55fd15b162b8]    main                                               + 0x178
[0x7f37d74180b3]    __libc_start_main                                  + 0xf3
[0x55fd15b1636e]    _start                                             + 0x2e


======================================== axios/dist/axios.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fb07c2bba29]                                                       + 0x7c5a29
[0x7fb07c47c289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fb1008a6741]                                                       + 0x2d7741
[0x7fb1051ad9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fb105233084]                                                       + 0x153084
[0x7fb10523850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb105232b9a]                                                       + 0x152b9a
[0x7fb1052331b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fb105185f1e]                                                       + 0xa5f1e
[0x7fb105156f2b]    PyObject_Call                                      + 0x4b
[0x7fb105238770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fb105232b9a]                                                       + 0x152b9a
[0x7fb105232f94]                                                       + 0x152f94
[0x7fb10523850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb105232b9a]                                                       + 0x152b9a
[0x7fb105232f94]                                                       + 0x152f94
[0x7fb10523850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb105232193]                                                       + 0x152193
[0x7fb10523315c]                                                       + 0x15315c
[0x7fb10523850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb105232b9a]                                                       + 0x152b9a
[0x7fb105232f94]                                                       + 0x152f94
[0x7fb10523850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb105232b9a]                                                       + 0x152b9a
[0x7fb1052331b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fb1052331df]    PyEval_EvalCode                                    + 0x1f
[0x7fb1052683d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fb10526856f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fb1052828e8]    Py_Main                                            + 0xff8
[0x55d21ae8a2b8]    main                                               + 0x178
[0x7fb104ef70b3]    __libc_start_main                                  + 0xf3
[0x55d21ae8a36e]    _start                                             + 0x2e


======================================== babel-loader/lib/index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 1136 is out of bounds for axis 0 with size 1136

======================================== babel-plugin-polyfill-corejs3/lib/index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 1942 is out of bounds for axis 0 with size 1942

======================================== babel-plugin-polyfill-corejs3/lib/utils.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 547 is out of bounds for axis 0 with size 547

======================================== bl/test/test.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f51f08bfa29]                                                       + 0x7c5a29
[0x7f51f0a80289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f5274eaa741]                                                       + 0x2d7741
[0x7f52797b19e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f5279837084]                                                       + 0x153084
[0x7f527983c50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f5279836b9a]                                                       + 0x152b9a
[0x7f52798371b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f5279789f1e]                                                       + 0xa5f1e
[0x7f527975af2b]    PyObject_Call                                      + 0x4b
[0x7f527983c770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f5279836b9a]                                                       + 0x152b9a
[0x7f5279836f94]                                                       + 0x152f94
[0x7f527983c50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f5279836b9a]                                                       + 0x152b9a
[0x7f5279836f94]                                                       + 0x152f94
[0x7f527983c50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f5279836193]                                                       + 0x152193
[0x7f527983715c]                                                       + 0x15315c
[0x7f527983c50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f5279836b9a]                                                       + 0x152b9a
[0x7f5279836f94]                                                       + 0x152f94
[0x7f527983c50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f5279836b9a]                                                       + 0x152b9a
[0x7f52798371b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f52798371df]    PyEval_EvalCode                                    + 0x1f
[0x7f527986c3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f527986c56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f52798868e8]    Py_Main                                            + 0xff8
[0x5603bacef2b8]    main                                               + 0x178
[0x7f52794fb0b3]    __libc_start_main                                  + 0xf3
[0x5603bacef36e]    _start                                             + 0x2e


======================================== bluebird/js/browser/bluebird.core.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== bluebird/js/browser/bluebird.core.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== bluebird/js/browser/bluebird.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== bluebird/js/browser/bluebird.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== bluebird/js/release/debuggability.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fa4432cda29]                                                       + 0x7c5a29
[0x7fa44348e289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fa4c78b8741]                                                       + 0x2d7741
[0x7fa4cc1bf9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fa4cc245084]                                                       + 0x153084
[0x7fa4cc24a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa4cc244b9a]                                                       + 0x152b9a
[0x7fa4cc2451b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fa4cc197f1e]                                                       + 0xa5f1e
[0x7fa4cc168f2b]    PyObject_Call                                      + 0x4b
[0x7fa4cc24a770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fa4cc244b9a]                                                       + 0x152b9a
[0x7fa4cc244f94]                                                       + 0x152f94
[0x7fa4cc24a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa4cc244b9a]                                                       + 0x152b9a
[0x7fa4cc244f94]                                                       + 0x152f94
[0x7fa4cc24a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa4cc244193]                                                       + 0x152193
[0x7fa4cc24515c]                                                       + 0x15315c
[0x7fa4cc24a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa4cc244b9a]                                                       + 0x152b9a
[0x7fa4cc244f94]                                                       + 0x152f94
[0x7fa4cc24a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa4cc244b9a]                                                       + 0x152b9a
[0x7fa4cc2451b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fa4cc2451df]    PyEval_EvalCode                                    + 0x1f
[0x7fa4cc27a3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fa4cc27a56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fa4cc2948e8]    Py_Main                                            + 0xff8
[0x563aaae372b8]    main                                               + 0x178
[0x7fa4cbf090b3]    __libc_start_main                                  + 0xf3
[0x563aaae3736e]    _start                                             + 0x2e


======================================== bluebird/js/release/promise.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f07e14c1a29]                                                       + 0x7c5a29
[0x7f07e1682289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f0865aac741]                                                       + 0x2d7741
[0x7f086a3b39e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f086a439084]                                                       + 0x153084
[0x7f086a43e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f086a438b9a]                                                       + 0x152b9a
[0x7f086a4391b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f086a38bf1e]                                                       + 0xa5f1e
[0x7f086a35cf2b]    PyObject_Call                                      + 0x4b
[0x7f086a43e770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f086a438b9a]                                                       + 0x152b9a
[0x7f086a438f94]                                                       + 0x152f94
[0x7f086a43e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f086a438b9a]                                                       + 0x152b9a
[0x7f086a438f94]                                                       + 0x152f94
[0x7f086a43e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f086a438193]                                                       + 0x152193
[0x7f086a43915c]                                                       + 0x15315c
[0x7f086a43e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f086a438b9a]                                                       + 0x152b9a
[0x7f086a438f94]                                                       + 0x152f94
[0x7f086a43e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f086a438b9a]                                                       + 0x152b9a
[0x7f086a4391b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f086a4391df]    PyEval_EvalCode                                    + 0x1f
[0x7f086a46e3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f086a46e56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f086a4888e8]    Py_Main                                            + 0xff8
[0x55efa303c2b8]    main                                               + 0x178
[0x7f086a0fd0b3]    __libc_start_main                                  + 0xf3
[0x55efa303c36e]    _start                                             + 0x2e


======================================== bn.js/lib/bn.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== browserslist/index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f3278940a29]                                                       + 0x7c5a29
[0x7f3278b01289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f32fcf2b741]                                                       + 0x2d7741
[0x7f33018329e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f33018b8084]                                                       + 0x153084
[0x7f33018bd50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f33018b7b9a]                                                       + 0x152b9a
[0x7f33018b81b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f330180af1e]                                                       + 0xa5f1e
[0x7f33017dbf2b]    PyObject_Call                                      + 0x4b
[0x7f33018bd770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f33018b7b9a]                                                       + 0x152b9a
[0x7f33018b7f94]                                                       + 0x152f94
[0x7f33018bd50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f33018b7b9a]                                                       + 0x152b9a
[0x7f33018b7f94]                                                       + 0x152f94
[0x7f33018bd50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f33018b7193]                                                       + 0x152193
[0x7f33018b815c]                                                       + 0x15315c
[0x7f33018bd50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f33018b7b9a]                                                       + 0x152b9a
[0x7f33018b7f94]                                                       + 0x152f94
[0x7f33018bd50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f33018b7b9a]                                                       + 0x152b9a
[0x7f33018b81b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f33018b81df]    PyEval_EvalCode                                    + 0x1f
[0x7f33018ed3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f33018ed56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f33019078e8]    Py_Main                                            + 0xff8
[0x55df513522b8]    main                                               + 0x178
[0x7f330157c0b3]    __libc_start_main                                  + 0xf3
[0x55df5135236e]    _start                                             + 0x2e


======================================== buffer/index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f2f1cd30a29]                                                       + 0x7c5a29
[0x7f2f1cef1289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f2fa131b741]                                                       + 0x2d7741
[0x7f2fa5c229e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f2fa5ca8084]                                                       + 0x153084
[0x7f2fa5cad50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f2fa5ca7b9a]                                                       + 0x152b9a
[0x7f2fa5ca81b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f2fa5bfaf1e]                                                       + 0xa5f1e
[0x7f2fa5bcbf2b]    PyObject_Call                                      + 0x4b
[0x7f2fa5cad770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f2fa5ca7b9a]                                                       + 0x152b9a
[0x7f2fa5ca7f94]                                                       + 0x152f94
[0x7f2fa5cad50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f2fa5ca7b9a]                                                       + 0x152b9a
[0x7f2fa5ca7f94]                                                       + 0x152f94
[0x7f2fa5cad50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f2fa5ca7193]                                                       + 0x152193
[0x7f2fa5ca815c]                                                       + 0x15315c
[0x7f2fa5cad50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f2fa5ca7b9a]                                                       + 0x152b9a
[0x7f2fa5ca7f94]                                                       + 0x152f94
[0x7f2fa5cad50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f2fa5ca7b9a]                                                       + 0x152b9a
[0x7f2fa5ca81b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f2fa5ca81df]    PyEval_EvalCode                                    + 0x1f
[0x7f2fa5cdd3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f2fa5cdd56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f2fa5cf78e8]    Py_Main                                            + 0xff8
[0x55c6c5c2d2b8]    main                                               + 0x178
[0x7f2fa596c0b3]    __libc_start_main                                  + 0xf3
[0x55c6c5c2d36e]    _start                                             + 0x2e


======================================== caniuse-lite/data/agents.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fd25e1f2a29]                                                       + 0x7c5a29
[0x7fd25e3b3289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fd2e27dd741]                                                       + 0x2d7741
[0x7fd2e70e49e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fd2e716a084]                                                       + 0x153084
[0x7fd2e716f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fd2e7169b9a]                                                       + 0x152b9a
[0x7fd2e716a1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fd2e70bcf1e]                                                       + 0xa5f1e
[0x7fd2e708df2b]    PyObject_Call                                      + 0x4b
[0x7fd2e716f770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fd2e7169b9a]                                                       + 0x152b9a
[0x7fd2e7169f94]                                                       + 0x152f94
[0x7fd2e716f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fd2e7169b9a]                                                       + 0x152b9a
[0x7fd2e7169f94]                                                       + 0x152f94
[0x7fd2e716f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fd2e7169193]                                                       + 0x152193
[0x7fd2e716a15c]                                                       + 0x15315c
[0x7fd2e716f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fd2e7169b9a]                                                       + 0x152b9a
[0x7fd2e7169f94]                                                       + 0x152f94
[0x7fd2e716f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fd2e7169b9a]                                                       + 0x152b9a
[0x7fd2e716a1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fd2e716a1df]    PyEval_EvalCode                                    + 0x1f
[0x7fd2e719f3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fd2e719f56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fd2e71b98e8]    Py_Main                                            + 0xff8
[0x55adbad242b8]    main                                               + 0x178
[0x7fd2e6e2e0b3]    __libc_start_main                                  + 0xf3
[0x55adbad2436e]    _start                                             + 0x2e


======================================== chardet/lib/encoding/sbcs.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f1462665a29]                                                       + 0x7c5a29
[0x7f1462826289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f14e6c50741]                                                       + 0x2d7741
[0x7f14eb5579e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f14eb5dd084]                                                       + 0x153084
[0x7f14eb5e250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f14eb5dcb9a]                                                       + 0x152b9a
[0x7f14eb5dd1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f14eb52ff1e]                                                       + 0xa5f1e
[0x7f14eb500f2b]    PyObject_Call                                      + 0x4b
[0x7f14eb5e2770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f14eb5dcb9a]                                                       + 0x152b9a
[0x7f14eb5dcf94]                                                       + 0x152f94
[0x7f14eb5e250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f14eb5dcb9a]                                                       + 0x152b9a
[0x7f14eb5dcf94]                                                       + 0x152f94
[0x7f14eb5e250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f14eb5dc193]                                                       + 0x152193
[0x7f14eb5dd15c]                                                       + 0x15315c
[0x7f14eb5e250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f14eb5dcb9a]                                                       + 0x152b9a
[0x7f14eb5dcf94]                                                       + 0x152f94
[0x7f14eb5e250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f14eb5dcb9a]                                                       + 0x152b9a
[0x7f14eb5dd1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f14eb5dd1df]    PyEval_EvalCode                                    + 0x1f
[0x7f14eb6123d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f14eb61256f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f14eb62c8e8]    Py_Main                                            + 0xff8
[0x5621e56072b8]    main                                               + 0x178
[0x7f14eb2a10b3]    __libc_start_main                                  + 0xf3
[0x5621e560736e]    _start                                             + 0x2e


======================================== cjs-module-lexer/lexer.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fe98ffc8a29]                                                       + 0x7c5a29
[0x7fe990189289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fea145b3741]                                                       + 0x2d7741
[0x7fea18eba9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fea18f40084]                                                       + 0x153084
[0x7fea18f4550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fea18f3fb9a]                                                       + 0x152b9a
[0x7fea18f401b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fea18e92f1e]                                                       + 0xa5f1e
[0x7fea18e63f2b]    PyObject_Call                                      + 0x4b
[0x7fea18f45770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fea18f3fb9a]                                                       + 0x152b9a
[0x7fea18f3ff94]                                                       + 0x152f94
[0x7fea18f4550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fea18f3fb9a]                                                       + 0x152b9a
[0x7fea18f3ff94]                                                       + 0x152f94
[0x7fea18f4550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fea18f3f193]                                                       + 0x152193
[0x7fea18f4015c]                                                       + 0x15315c
[0x7fea18f4550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fea18f3fb9a]                                                       + 0x152b9a
[0x7fea18f3ff94]                                                       + 0x152f94
[0x7fea18f4550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fea18f3fb9a]                                                       + 0x152b9a
[0x7fea18f401b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fea18f401df]    PyEval_EvalCode                                    + 0x1f
[0x7fea18f753d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fea18f7556f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fea18f8f8e8]    Py_Main                                            + 0xff8
[0x55595b4fc2b8]    main                                               + 0x178
[0x7fea18c040b3]    __libc_start_main                                  + 0xf3
[0x55595b4fc36e]    _start                                             + 0x2e


======================================== clean-css/lib/optimizer/configuration/break-up.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fdade4a7a29]                                                       + 0x7c5a29
[0x7fdade668289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fdb62a92741]                                                       + 0x2d7741
[0x7fdb673999e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fdb6741f084]                                                       + 0x153084
[0x7fdb6742450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fdb6741eb9a]                                                       + 0x152b9a
[0x7fdb6741f1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fdb67371f1e]                                                       + 0xa5f1e
[0x7fdb67342f2b]    PyObject_Call                                      + 0x4b
[0x7fdb67424770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fdb6741eb9a]                                                       + 0x152b9a
[0x7fdb6741ef94]                                                       + 0x152f94
[0x7fdb6742450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fdb6741eb9a]                                                       + 0x152b9a
[0x7fdb6741ef94]                                                       + 0x152f94
[0x7fdb6742450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fdb6741e193]                                                       + 0x152193
[0x7fdb6741f15c]                                                       + 0x15315c
[0x7fdb6742450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fdb6741eb9a]                                                       + 0x152b9a
[0x7fdb6741ef94]                                                       + 0x152f94
[0x7fdb6742450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fdb6741eb9a]                                                       + 0x152b9a
[0x7fdb6741f1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fdb6741f1df]    PyEval_EvalCode                                    + 0x1f
[0x7fdb674543d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fdb6745456f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fdb6746e8e8]    Py_Main                                            + 0xff8
[0x5569691832b8]    main                                               + 0x178
[0x7fdb670e30b3]    __libc_start_main                                  + 0xf3
[0x55696918336e]    _start                                             + 0x2e


======================================== clean-css/lib/optimizer/configuration.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f7c76d7aa29]                                                       + 0x7c5a29
[0x7f7c76f3b289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f7cfb365741]                                                       + 0x2d7741
[0x7f7cffc6c9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f7cffcf2084]                                                       + 0x153084
[0x7f7cffcf750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7cffcf1b9a]                                                       + 0x152b9a
[0x7f7cffcf21b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f7cffc44f1e]                                                       + 0xa5f1e
[0x7f7cffc15f2b]    PyObject_Call                                      + 0x4b
[0x7f7cffcf7770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f7cffcf1b9a]                                                       + 0x152b9a
[0x7f7cffcf1f94]                                                       + 0x152f94
[0x7f7cffcf750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7cffcf1b9a]                                                       + 0x152b9a
[0x7f7cffcf1f94]                                                       + 0x152f94
[0x7f7cffcf750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7cffcf1193]                                                       + 0x152193
[0x7f7cffcf215c]                                                       + 0x15315c
[0x7f7cffcf750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7cffcf1b9a]                                                       + 0x152b9a
[0x7f7cffcf1f94]                                                       + 0x152f94
[0x7f7cffcf750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7cffcf1b9a]                                                       + 0x152b9a
[0x7f7cffcf21b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f7cffcf21df]    PyEval_EvalCode                                    + 0x1f
[0x7f7cffd273d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f7cffd2756f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f7cffd418e8]    Py_Main                                            + 0xff8
[0x563fa9b5a2b8]    main                                               + 0x178
[0x7f7cff9b60b3]    __libc_start_main                                  + 0xf3
[0x563fa9b5a36e]    _start                                             + 0x2e


======================================== color-convert/conversions.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f5e2477ba29]                                                       + 0x7c5a29
[0x7f5e2493c289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f5ea8d66741]                                                       + 0x2d7741
[0x7f5ead66d9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f5ead6f3084]                                                       + 0x153084
[0x7f5ead6f850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f5ead6f2b9a]                                                       + 0x152b9a
[0x7f5ead6f31b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f5ead645f1e]                                                       + 0xa5f1e
[0x7f5ead616f2b]    PyObject_Call                                      + 0x4b
[0x7f5ead6f8770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f5ead6f2b9a]                                                       + 0x152b9a
[0x7f5ead6f2f94]                                                       + 0x152f94
[0x7f5ead6f850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f5ead6f2b9a]                                                       + 0x152b9a
[0x7f5ead6f2f94]                                                       + 0x152f94
[0x7f5ead6f850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f5ead6f2193]                                                       + 0x152193
[0x7f5ead6f315c]                                                       + 0x15315c
[0x7f5ead6f850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f5ead6f2b9a]                                                       + 0x152b9a
[0x7f5ead6f2f94]                                                       + 0x152f94
[0x7f5ead6f850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f5ead6f2b9a]                                                       + 0x152b9a
[0x7f5ead6f31b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f5ead6f31df]    PyEval_EvalCode                                    + 0x1f
[0x7f5ead7283d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f5ead72856f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f5ead7428e8]    Py_Main                                            + 0xff8
[0x560348da42b8]    main                                               + 0x178
[0x7f5ead3b70b3]    __libc_start_main                                  + 0xf3
[0x560348da436e]    _start                                             + 0x2e


======================================== colorette/index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 749 is out of bounds for axis 0 with size 749

======================================== commander/lib/command.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fa3a28c8a29]                                                       + 0x7c5a29
[0x7fa3a2a89289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fa3a39a6741]                                                       + 0x2d7741
[0x7fa3a82ad9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fa3a8333084]                                                       + 0x153084
[0x7fa3a833850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa3a8332b9a]                                                       + 0x152b9a
[0x7fa3a83331b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fa3a8285f1e]                                                       + 0xa5f1e
[0x7fa3a8256f2b]    PyObject_Call                                      + 0x4b
[0x7fa3a8338770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fa3a8332b9a]                                                       + 0x152b9a
[0x7fa3a8332f94]                                                       + 0x152f94
[0x7fa3a833850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa3a8332b9a]                                                       + 0x152b9a
[0x7fa3a8332f94]                                                       + 0x152f94
[0x7fa3a833850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa3a8332193]                                                       + 0x152193
[0x7fa3a833315c]                                                       + 0x15315c
[0x7fa3a833850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa3a8332b9a]                                                       + 0x152b9a
[0x7fa3a8332f94]                                                       + 0x152f94
[0x7fa3a833850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa3a8332b9a]                                                       + 0x152b9a
[0x7fa3a83331b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fa3a83331df]    PyEval_EvalCode                                    + 0x1f
[0x7fa3a83683d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fa3a836856f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fa3a83828e8]    Py_Main                                            + 0xff8
[0x5571b08b62b8]    main                                               + 0x178
[0x7fa3a7ff70b3]    __libc_start_main                                  + 0xf3
[0x5571b08b636e]    _start                                             + 0x2e


======================================== core-js/modules/web.url.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fe988b9ea29]                                                       + 0x7c5a29
[0x7fe988d5f289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fea0d189741]                                                       + 0x2d7741
[0x7fea11a909e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fea11b16084]                                                       + 0x153084
[0x7fea11b1b50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fea11b15b9a]                                                       + 0x152b9a
[0x7fea11b161b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fea11a68f1e]                                                       + 0xa5f1e
[0x7fea11a39f2b]    PyObject_Call                                      + 0x4b
[0x7fea11b1b770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fea11b15b9a]                                                       + 0x152b9a
[0x7fea11b15f94]                                                       + 0x152f94
[0x7fea11b1b50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fea11b15b9a]                                                       + 0x152b9a
[0x7fea11b15f94]                                                       + 0x152f94
[0x7fea11b1b50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fea11b15193]                                                       + 0x152193
[0x7fea11b1615c]                                                       + 0x15315c
[0x7fea11b1b50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fea11b15b9a]                                                       + 0x152b9a
[0x7fea11b15f94]                                                       + 0x152f94
[0x7fea11b1b50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fea11b15b9a]                                                       + 0x152b9a
[0x7fea11b161b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fea11b161df]    PyEval_EvalCode                                    + 0x1f
[0x7fea11b4b3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fea11b4b56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fea11b658e8]    Py_Main                                            + 0xff8
[0x558fa0b022b8]    main                                               + 0x178
[0x7fea117da0b3]    __libc_start_main                                  + 0xf3
[0x558fa0b0236e]    _start                                             + 0x2e


======================================== core-js-pure/internals/array-buffer-view-core.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7fbbf3b75a29]                                                       + 0x7c5a29
[0x7fbbf3cfbd45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7fbc77fc43a8]                                                       + 0x13b3a8
[0x7fbc77fc6065]                                                       + 0x13d065
[0x7fbc7ca67bd9]    PyCFunction_Call                                   + 0xc9
[0x7fbc7caf46e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7fbc7caecb9a]                                                       + 0x152b9a
[0x7fbc7caf5aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7fbc7ca11151]    _PyObject_FastCallDict                             + 0x131
[0x7fbc7ca112a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7fbc7ca10f2b]    PyObject_Call                                      + 0x4b
[0x7fbc7ca82d7f]                                                       + 0xe8d7f
[0x7fbc7ca7e149]                                                       + 0xe4149
[0x7fbc7ca110ad]    _PyObject_FastCallDict                             + 0x8d
[0x7fbc7caecd78]                                                       + 0x152d78
[0x7fbc7caf250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fbc7caecb9a]                                                       + 0x152b9a
[0x7fbc7caed1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fbc7ca3ff1e]                                                       + 0xa5f1e
[0x7fbc7ca10f2b]    PyObject_Call                                      + 0x4b
[0x7fbc7caf2770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fbc7caecb9a]                                                       + 0x152b9a
[0x7fbc7caecf94]                                                       + 0x152f94
[0x7fbc7caf2867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7fbc7caecb9a]                                                       + 0x152b9a
[0x7fbc7caed1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fbc7ca3ff1e]                                                       + 0xa5f1e
[0x7fbc7ca10f2b]    PyObject_Call                                      + 0x4b
[0x7fbc7caf2770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fbc7caecb9a]                                                       + 0x152b9a
[0x7fbc7caecf94]                                                       + 0x152f94
[0x7fbc7caf2867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7fbc7caecb9a]                                                       + 0x152b9a
[0x7fbc7caecf94]                                                       + 0x152f94
[0x7fbc7caf250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fbc7caecb9a]                                                       + 0x152b9a
[0x7fbc7caed1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fbc7ca3ff1e]                                                       + 0xa5f1e
[0x7fbc7ca10f2b]    PyObject_Call                                      + 0x4b
[0x7fbc7caf2770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fbc7caecb9a]                                                       + 0x152b9a
[0x7fbc7caecf94]                                                       + 0x152f94
[0x7fbc7caf250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fbc7caecb9a]                                                       + 0x152b9a
[0x7fbc7caecf94]                                                       + 0x152f94
[0x7fbc7caf250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fbc7caecb9a]                                                       + 0x152b9a
[0x7fbc7caecf94]                                                       + 0x152f94
[0x7fbc7caf250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fbc7caecb9a]                                                       + 0x152b9a
[0x7fbc7caed1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fbc7caed1df]    PyEval_EvalCode                                    + 0x1f
[0x7fbc7cb223d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fbc7cb2256f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fbc7cb3c8e8]    Py_Main                                            + 0xff8
[0x5623566992b8]    main                                               + 0x178
[0x7fbc7c7b10b3]    __libc_start_main                                  + 0xf3
[0x56235669936e]    _start                                             + 0x2e


======================================== core-js-pure/internals/array-buffer.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f89151c3a29]                                                       + 0x7c5a29
[0x7f8915349d45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f89996123a8]                                                       + 0x13b3a8
[0x7f8999614065]                                                       + 0x13d065
[0x7f899e0b5bd9]    PyCFunction_Call                                   + 0xc9
[0x7f899e1426e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f899e13ab9a]                                                       + 0x152b9a
[0x7f899e143aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f899e05f151]    _PyObject_FastCallDict                             + 0x131
[0x7f899e05f2a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f899e05ef2b]    PyObject_Call                                      + 0x4b
[0x7f899e0d0d7f]                                                       + 0xe8d7f
[0x7f899e0cc149]                                                       + 0xe4149
[0x7f899e05f0ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f899e13ad78]                                                       + 0x152d78
[0x7f899e14050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f899e13ab9a]                                                       + 0x152b9a
[0x7f899e13b1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f899e08df1e]                                                       + 0xa5f1e
[0x7f899e05ef2b]    PyObject_Call                                      + 0x4b
[0x7f899e140770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f899e13ab9a]                                                       + 0x152b9a
[0x7f899e13af94]                                                       + 0x152f94
[0x7f899e140867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f899e13ab9a]                                                       + 0x152b9a
[0x7f899e13b1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f899e08df1e]                                                       + 0xa5f1e
[0x7f899e05ef2b]    PyObject_Call                                      + 0x4b
[0x7f899e140770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f899e13ab9a]                                                       + 0x152b9a
[0x7f899e13af94]                                                       + 0x152f94
[0x7f899e140867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f899e13ab9a]                                                       + 0x152b9a
[0x7f899e13af94]                                                       + 0x152f94
[0x7f899e14050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f899e13ab9a]                                                       + 0x152b9a
[0x7f899e13b1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f899e08df1e]                                                       + 0xa5f1e
[0x7f899e05ef2b]    PyObject_Call                                      + 0x4b
[0x7f899e140770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f899e13ab9a]                                                       + 0x152b9a
[0x7f899e13af94]                                                       + 0x152f94
[0x7f899e14050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f899e13ab9a]                                                       + 0x152b9a
[0x7f899e13af94]                                                       + 0x152f94
[0x7f899e14050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f899e13ab9a]                                                       + 0x152b9a
[0x7f899e13af94]                                                       + 0x152f94
[0x7f899e14050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f899e13ab9a]                                                       + 0x152b9a
[0x7f899e13b1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f899e13b1df]    PyEval_EvalCode                                    + 0x1f
[0x7f899e1703d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f899e17056f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f899e18a8e8]    Py_Main                                            + 0xff8
[0x560494fac2b8]    main                                               + 0x178
[0x7f899ddff0b3]    __libc_start_main                                  + 0xf3
[0x560494fac36e]    _start                                             + 0x2e


======================================== core-js-pure/internals/fix-regexp-well-known-symbol-logic.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f9042c75a29]                                                       + 0x7c5a29
[0x7f9042dfbd45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f9043bb73a8]                                                       + 0x13b3a8
[0x7f9043bb9065]                                                       + 0x13d065
[0x7f904865abd9]    PyCFunction_Call                                   + 0xc9
[0x7f90486e76e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f90486dfb9a]                                                       + 0x152b9a
[0x7f90486e8aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f9048604151]    _PyObject_FastCallDict                             + 0x131
[0x7f90486042a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f9048603f2b]    PyObject_Call                                      + 0x4b
[0x7f9048675d7f]                                                       + 0xe8d7f
[0x7f9048671149]                                                       + 0xe4149
[0x7f90486040ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f90486dfd78]                                                       + 0x152d78
[0x7f90486e550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f90486dfb9a]                                                       + 0x152b9a
[0x7f90486e01b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f9048632f1e]                                                       + 0xa5f1e
[0x7f9048603f2b]    PyObject_Call                                      + 0x4b
[0x7f90486e5770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f90486dfb9a]                                                       + 0x152b9a
[0x7f90486dff94]                                                       + 0x152f94
[0x7f90486e5867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f90486dfb9a]                                                       + 0x152b9a
[0x7f90486e01b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f9048632f1e]                                                       + 0xa5f1e
[0x7f9048603f2b]    PyObject_Call                                      + 0x4b
[0x7f90486e5770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f90486dfb9a]                                                       + 0x152b9a
[0x7f90486dff94]                                                       + 0x152f94
[0x7f90486e5867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f90486dfb9a]                                                       + 0x152b9a
[0x7f90486dff94]                                                       + 0x152f94
[0x7f90486e550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f90486dfb9a]                                                       + 0x152b9a
[0x7f90486e01b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f9048632f1e]                                                       + 0xa5f1e
[0x7f9048603f2b]    PyObject_Call                                      + 0x4b
[0x7f90486e5770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f90486dfb9a]                                                       + 0x152b9a
[0x7f90486dff94]                                                       + 0x152f94
[0x7f90486e550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f90486dfb9a]                                                       + 0x152b9a
[0x7f90486dff94]                                                       + 0x152f94
[0x7f90486e550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f90486dfb9a]                                                       + 0x152b9a
[0x7f90486dff94]                                                       + 0x152f94
[0x7f90486e550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f90486dfb9a]                                                       + 0x152b9a
[0x7f90486e01b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f90486e01df]    PyEval_EvalCode                                    + 0x1f
[0x7f90487153d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f904871556f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f904872f8e8]    Py_Main                                            + 0xff8
[0x555e0e0ed2b8]    main                                               + 0x178
[0x7f90483a40b3]    __libc_start_main                                  + 0xf3
[0x555e0e0ed36e]    _start                                             + 0x2e


======================================== core-js-pure/internals/regexp-sticky-helpers.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f08bb67fa29]                                                       + 0x7c5a29
[0x7f08bb805d45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f08bc5c13a8]                                                       + 0x13b3a8
[0x7f08bc5c3065]                                                       + 0x13d065
[0x7f08c1064bd9]    PyCFunction_Call                                   + 0xc9
[0x7f08c10f16e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f08c10e9b9a]                                                       + 0x152b9a
[0x7f08c10f2aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f08c100e151]    _PyObject_FastCallDict                             + 0x131
[0x7f08c100e2a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f08c100df2b]    PyObject_Call                                      + 0x4b
[0x7f08c107fd7f]                                                       + 0xe8d7f
[0x7f08c107b149]                                                       + 0xe4149
[0x7f08c100e0ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f08c10e9d78]                                                       + 0x152d78
[0x7f08c10ef50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f08c10e9b9a]                                                       + 0x152b9a
[0x7f08c10ea1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f08c103cf1e]                                                       + 0xa5f1e
[0x7f08c100df2b]    PyObject_Call                                      + 0x4b
[0x7f08c10ef770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f08c10e9b9a]                                                       + 0x152b9a
[0x7f08c10e9f94]                                                       + 0x152f94
[0x7f08c10ef867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f08c10e9b9a]                                                       + 0x152b9a
[0x7f08c10ea1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f08c103cf1e]                                                       + 0xa5f1e
[0x7f08c100df2b]    PyObject_Call                                      + 0x4b
[0x7f08c10ef770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f08c10e9b9a]                                                       + 0x152b9a
[0x7f08c10e9f94]                                                       + 0x152f94
[0x7f08c10ef867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f08c10e9b9a]                                                       + 0x152b9a
[0x7f08c10e9f94]                                                       + 0x152f94
[0x7f08c10ef50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f08c10e9b9a]                                                       + 0x152b9a
[0x7f08c10ea1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f08c103cf1e]                                                       + 0xa5f1e
[0x7f08c100df2b]    PyObject_Call                                      + 0x4b
[0x7f08c10ef770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f08c10e9b9a]                                                       + 0x152b9a
[0x7f08c10e9f94]                                                       + 0x152f94
[0x7f08c10ef50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f08c10e9b9a]                                                       + 0x152b9a
[0x7f08c10e9f94]                                                       + 0x152f94
[0x7f08c10ef50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f08c10e9b9a]                                                       + 0x152b9a
[0x7f08c10e9f94]                                                       + 0x152f94
[0x7f08c10ef50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f08c10e9b9a]                                                       + 0x152b9a
[0x7f08c10ea1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f08c10ea1df]    PyEval_EvalCode                                    + 0x1f
[0x7f08c111f3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f08c111f56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f08c11398e8]    Py_Main                                            + 0xff8
[0x555afeac92b8]    main                                               + 0x178
[0x7f08c0dae0b3]    __libc_start_main                                  + 0xf3
[0x555afeac936e]    _start                                             + 0x2e


======================================== core-js-pure/internals/regexp-unsupported-dot-all.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f5731c49a29]                                                       + 0x7c5a29
[0x7f5731dcfd45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f57b60983a8]                                                       + 0x13b3a8
[0x7f57b609a065]                                                       + 0x13d065
[0x7f57bab3bbd9]    PyCFunction_Call                                   + 0xc9
[0x7f57babc86e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f57babc0b9a]                                                       + 0x152b9a
[0x7f57babc9aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f57baae5151]    _PyObject_FastCallDict                             + 0x131
[0x7f57baae52a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f57baae4f2b]    PyObject_Call                                      + 0x4b
[0x7f57bab56d7f]                                                       + 0xe8d7f
[0x7f57bab52149]                                                       + 0xe4149
[0x7f57baae50ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f57babc0d78]                                                       + 0x152d78
[0x7f57babc650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f57babc0b9a]                                                       + 0x152b9a
[0x7f57babc11b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f57bab13f1e]                                                       + 0xa5f1e
[0x7f57baae4f2b]    PyObject_Call                                      + 0x4b
[0x7f57babc6770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f57babc0b9a]                                                       + 0x152b9a
[0x7f57babc0f94]                                                       + 0x152f94
[0x7f57babc6867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f57babc0b9a]                                                       + 0x152b9a
[0x7f57babc11b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f57bab13f1e]                                                       + 0xa5f1e
[0x7f57baae4f2b]    PyObject_Call                                      + 0x4b
[0x7f57babc6770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f57babc0b9a]                                                       + 0x152b9a
[0x7f57babc0f94]                                                       + 0x152f94
[0x7f57babc6867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f57babc0b9a]                                                       + 0x152b9a
[0x7f57babc0f94]                                                       + 0x152f94
[0x7f57babc650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f57babc0b9a]                                                       + 0x152b9a
[0x7f57babc11b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f57bab13f1e]                                                       + 0xa5f1e
[0x7f57baae4f2b]    PyObject_Call                                      + 0x4b
[0x7f57babc6770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f57babc0b9a]                                                       + 0x152b9a
[0x7f57babc0f94]                                                       + 0x152f94
[0x7f57babc650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f57babc0b9a]                                                       + 0x152b9a
[0x7f57babc0f94]                                                       + 0x152f94
[0x7f57babc650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f57babc0b9a]                                                       + 0x152b9a
[0x7f57babc0f94]                                                       + 0x152f94
[0x7f57babc650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f57babc0b9a]                                                       + 0x152b9a
[0x7f57babc11b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f57babc11df]    PyEval_EvalCode                                    + 0x1f
[0x7f57babf63d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f57babf656f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f57bac108e8]    Py_Main                                            + 0xff8
[0x55939fc0a2b8]    main                                               + 0x178
[0x7f57ba8850b3]    __libc_start_main                                  + 0xf3
[0x55939fc0a36e]    _start                                             + 0x2e


======================================== core-js-pure/internals/to-offset.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f4125d8ba29]                                                       + 0x7c5a29
[0x7f4125f11d45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f4126ccd3a8]                                                       + 0x13b3a8
[0x7f4126ccf065]                                                       + 0x13d065
[0x7f412b770bd9]    PyCFunction_Call                                   + 0xc9
[0x7f412b7fd6e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f412b7f5b9a]                                                       + 0x152b9a
[0x7f412b7feaa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f412b71a151]    _PyObject_FastCallDict                             + 0x131
[0x7f412b71a2a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f412b719f2b]    PyObject_Call                                      + 0x4b
[0x7f412b78bd7f]                                                       + 0xe8d7f
[0x7f412b787149]                                                       + 0xe4149
[0x7f412b71a0ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f412b7f5d78]                                                       + 0x152d78
[0x7f412b7fb50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f412b7f5b9a]                                                       + 0x152b9a
[0x7f412b7f61b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f412b748f1e]                                                       + 0xa5f1e
[0x7f412b719f2b]    PyObject_Call                                      + 0x4b
[0x7f412b7fb770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f412b7f5b9a]                                                       + 0x152b9a
[0x7f412b7f5f94]                                                       + 0x152f94
[0x7f412b7fb867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f412b7f5b9a]                                                       + 0x152b9a
[0x7f412b7f61b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f412b748f1e]                                                       + 0xa5f1e
[0x7f412b719f2b]    PyObject_Call                                      + 0x4b
[0x7f412b7fb770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f412b7f5b9a]                                                       + 0x152b9a
[0x7f412b7f5f94]                                                       + 0x152f94
[0x7f412b7fb867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f412b7f5b9a]                                                       + 0x152b9a
[0x7f412b7f5f94]                                                       + 0x152f94
[0x7f412b7fb50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f412b7f5b9a]                                                       + 0x152b9a
[0x7f412b7f61b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f412b748f1e]                                                       + 0xa5f1e
[0x7f412b719f2b]    PyObject_Call                                      + 0x4b
[0x7f412b7fb770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f412b7f5b9a]                                                       + 0x152b9a
[0x7f412b7f5f94]                                                       + 0x152f94
[0x7f412b7fb50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f412b7f5b9a]                                                       + 0x152b9a
[0x7f412b7f5f94]                                                       + 0x152f94
[0x7f412b7fb50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f412b7f5b9a]                                                       + 0x152b9a
[0x7f412b7f5f94]                                                       + 0x152f94
[0x7f412b7fb50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f412b7f5b9a]                                                       + 0x152b9a
[0x7f412b7f61b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f412b7f61df]    PyEval_EvalCode                                    + 0x1f
[0x7f412b82b3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f412b82b56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f412b8458e8]    Py_Main                                            + 0xff8
[0x5636335ec2b8]    main                                               + 0x178
[0x7f412b4ba0b3]    __libc_start_main                                  + 0xf3
[0x5636335ec36e]    _start                                             + 0x2e


======================================== core-js-pure/internals/typed-array-constructor.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f5dcb644a29]                                                       + 0x7c5a29
[0x7f5dcb7cad45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f5e4fa933a8]                                                       + 0x13b3a8
[0x7f5e4fa95065]                                                       + 0x13d065
[0x7f5e54536bd9]    PyCFunction_Call                                   + 0xc9
[0x7f5e545c36e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f5e545bbb9a]                                                       + 0x152b9a
[0x7f5e545c4aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f5e544e0151]    _PyObject_FastCallDict                             + 0x131
[0x7f5e544e02a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f5e544dff2b]    PyObject_Call                                      + 0x4b
[0x7f5e54551d7f]                                                       + 0xe8d7f
[0x7f5e5454d149]                                                       + 0xe4149
[0x7f5e544e00ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f5e545bbd78]                                                       + 0x152d78
[0x7f5e545c150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f5e545bbb9a]                                                       + 0x152b9a
[0x7f5e545bc1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f5e5450ef1e]                                                       + 0xa5f1e
[0x7f5e544dff2b]    PyObject_Call                                      + 0x4b
[0x7f5e545c1770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f5e545bbb9a]                                                       + 0x152b9a
[0x7f5e545bbf94]                                                       + 0x152f94
[0x7f5e545c1867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f5e545bbb9a]                                                       + 0x152b9a
[0x7f5e545bc1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f5e5450ef1e]                                                       + 0xa5f1e
[0x7f5e544dff2b]    PyObject_Call                                      + 0x4b
[0x7f5e545c1770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f5e545bbb9a]                                                       + 0x152b9a
[0x7f5e545bbf94]                                                       + 0x152f94
[0x7f5e545c1867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f5e545bbb9a]                                                       + 0x152b9a
[0x7f5e545bbf94]                                                       + 0x152f94
[0x7f5e545c150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f5e545bbb9a]                                                       + 0x152b9a
[0x7f5e545bc1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f5e5450ef1e]                                                       + 0xa5f1e
[0x7f5e544dff2b]    PyObject_Call                                      + 0x4b
[0x7f5e545c1770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f5e545bbb9a]                                                       + 0x152b9a
[0x7f5e545bbf94]                                                       + 0x152f94
[0x7f5e545c150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f5e545bbb9a]                                                       + 0x152b9a
[0x7f5e545bbf94]                                                       + 0x152f94
[0x7f5e545c150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f5e545bbb9a]                                                       + 0x152b9a
[0x7f5e545bbf94]                                                       + 0x152f94
[0x7f5e545c150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f5e545bbb9a]                                                       + 0x152b9a
[0x7f5e545bc1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f5e545bc1df]    PyEval_EvalCode                                    + 0x1f
[0x7f5e545f13d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f5e545f156f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f5e5460b8e8]    Py_Main                                            + 0xff8
[0x55f371d7c2b8]    main                                               + 0x178
[0x7f5e542800b3]    __libc_start_main                                  + 0xf3
[0x55f371d7c36e]    _start                                             + 0x2e


======================================== core-js-pure/internals/typed-array-constructors-require-wrappers.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7fd498f61a29]                                                       + 0x7c5a29
[0x7fd4990e7d45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7fd51d3b03a8]                                                       + 0x13b3a8
[0x7fd51d3b2065]                                                       + 0x13d065
[0x7fd521e53bd9]    PyCFunction_Call                                   + 0xc9
[0x7fd521ee06e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7fd521ed8b9a]                                                       + 0x152b9a
[0x7fd521ee1aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7fd521dfd151]    _PyObject_FastCallDict                             + 0x131
[0x7fd521dfd2a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7fd521dfcf2b]    PyObject_Call                                      + 0x4b
[0x7fd521e6ed7f]                                                       + 0xe8d7f
[0x7fd521e6a149]                                                       + 0xe4149
[0x7fd521dfd0ad]    _PyObject_FastCallDict                             + 0x8d
[0x7fd521ed8d78]                                                       + 0x152d78
[0x7fd521ede50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fd521ed8b9a]                                                       + 0x152b9a
[0x7fd521ed91b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fd521e2bf1e]                                                       + 0xa5f1e
[0x7fd521dfcf2b]    PyObject_Call                                      + 0x4b
[0x7fd521ede770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fd521ed8b9a]                                                       + 0x152b9a
[0x7fd521ed8f94]                                                       + 0x152f94
[0x7fd521ede867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7fd521ed8b9a]                                                       + 0x152b9a
[0x7fd521ed91b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fd521e2bf1e]                                                       + 0xa5f1e
[0x7fd521dfcf2b]    PyObject_Call                                      + 0x4b
[0x7fd521ede770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fd521ed8b9a]                                                       + 0x152b9a
[0x7fd521ed8f94]                                                       + 0x152f94
[0x7fd521ede867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7fd521ed8b9a]                                                       + 0x152b9a
[0x7fd521ed8f94]                                                       + 0x152f94
[0x7fd521ede50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fd521ed8b9a]                                                       + 0x152b9a
[0x7fd521ed91b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fd521e2bf1e]                                                       + 0xa5f1e
[0x7fd521dfcf2b]    PyObject_Call                                      + 0x4b
[0x7fd521ede770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fd521ed8b9a]                                                       + 0x152b9a
[0x7fd521ed8f94]                                                       + 0x152f94
[0x7fd521ede50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fd521ed8b9a]                                                       + 0x152b9a
[0x7fd521ed8f94]                                                       + 0x152f94
[0x7fd521ede50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fd521ed8b9a]                                                       + 0x152b9a
[0x7fd521ed8f94]                                                       + 0x152f94
[0x7fd521ede50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fd521ed8b9a]                                                       + 0x152b9a
[0x7fd521ed91b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fd521ed91df]    PyEval_EvalCode                                    + 0x1f
[0x7fd521f0e3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fd521f0e56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fd521f288e8]    Py_Main                                            + 0xff8
[0x55d83f7172b8]    main                                               + 0x178
[0x7fd521b9d0b3]    __libc_start_main                                  + 0xf3
[0x55d83f71736e]    _start                                             + 0x2e


======================================== core-js-pure/internals/typed-array-from-species-and-list.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f63f89eca29]                                                       + 0x7c5a29
[0x7f63f8b72d45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f647ce3b3a8]                                                       + 0x13b3a8
[0x7f647ce3d065]                                                       + 0x13d065
[0x7f64818debd9]    PyCFunction_Call                                   + 0xc9
[0x7f648196b6e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f6481963b9a]                                                       + 0x152b9a
[0x7f648196caa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f6481888151]    _PyObject_FastCallDict                             + 0x131
[0x7f64818882a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f6481887f2b]    PyObject_Call                                      + 0x4b
[0x7f64818f9d7f]                                                       + 0xe8d7f
[0x7f64818f5149]                                                       + 0xe4149
[0x7f64818880ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f6481963d78]                                                       + 0x152d78
[0x7f648196950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6481963b9a]                                                       + 0x152b9a
[0x7f64819641b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f64818b6f1e]                                                       + 0xa5f1e
[0x7f6481887f2b]    PyObject_Call                                      + 0x4b
[0x7f6481969770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f6481963b9a]                                                       + 0x152b9a
[0x7f6481963f94]                                                       + 0x152f94
[0x7f6481969867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f6481963b9a]                                                       + 0x152b9a
[0x7f64819641b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f64818b6f1e]                                                       + 0xa5f1e
[0x7f6481887f2b]    PyObject_Call                                      + 0x4b
[0x7f6481969770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f6481963b9a]                                                       + 0x152b9a
[0x7f6481963f94]                                                       + 0x152f94
[0x7f6481969867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f6481963b9a]                                                       + 0x152b9a
[0x7f6481963f94]                                                       + 0x152f94
[0x7f648196950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6481963b9a]                                                       + 0x152b9a
[0x7f64819641b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f64818b6f1e]                                                       + 0xa5f1e
[0x7f6481887f2b]    PyObject_Call                                      + 0x4b
[0x7f6481969770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f6481963b9a]                                                       + 0x152b9a
[0x7f6481963f94]                                                       + 0x152f94
[0x7f648196950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6481963b9a]                                                       + 0x152b9a
[0x7f6481963f94]                                                       + 0x152f94
[0x7f648196950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6481963b9a]                                                       + 0x152b9a
[0x7f6481963f94]                                                       + 0x152f94
[0x7f648196950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6481963b9a]                                                       + 0x152b9a
[0x7f64819641b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f64819641df]    PyEval_EvalCode                                    + 0x1f
[0x7f64819993d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f648199956f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f64819b38e8]    Py_Main                                            + 0xff8
[0x5574bbad02b8]    main                                               + 0x178
[0x7f64816280b3]    __libc_start_main                                  + 0xf3
[0x5574bbad036e]    _start                                             + 0x2e


======================================== core-js-pure/internals/typed-array-from.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7fe2c3281a29]                                                       + 0x7c5a29
[0x7fe2c3407d45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7fe2c41c33a8]                                                       + 0x13b3a8
[0x7fe2c41c5065]                                                       + 0x13d065
[0x7fe2c8c66bd9]    PyCFunction_Call                                   + 0xc9
[0x7fe2c8cf36e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7fe2c8cebb9a]                                                       + 0x152b9a
[0x7fe2c8cf4aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7fe2c8c10151]    _PyObject_FastCallDict                             + 0x131
[0x7fe2c8c102a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7fe2c8c0ff2b]    PyObject_Call                                      + 0x4b
[0x7fe2c8c81d7f]                                                       + 0xe8d7f
[0x7fe2c8c7d149]                                                       + 0xe4149
[0x7fe2c8c100ad]    _PyObject_FastCallDict                             + 0x8d
[0x7fe2c8cebd78]                                                       + 0x152d78
[0x7fe2c8cf150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe2c8cebb9a]                                                       + 0x152b9a
[0x7fe2c8cec1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fe2c8c3ef1e]                                                       + 0xa5f1e
[0x7fe2c8c0ff2b]    PyObject_Call                                      + 0x4b
[0x7fe2c8cf1770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fe2c8cebb9a]                                                       + 0x152b9a
[0x7fe2c8cebf94]                                                       + 0x152f94
[0x7fe2c8cf1867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7fe2c8cebb9a]                                                       + 0x152b9a
[0x7fe2c8cec1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fe2c8c3ef1e]                                                       + 0xa5f1e
[0x7fe2c8c0ff2b]    PyObject_Call                                      + 0x4b
[0x7fe2c8cf1770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fe2c8cebb9a]                                                       + 0x152b9a
[0x7fe2c8cebf94]                                                       + 0x152f94
[0x7fe2c8cf1867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7fe2c8cebb9a]                                                       + 0x152b9a
[0x7fe2c8cebf94]                                                       + 0x152f94
[0x7fe2c8cf150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe2c8cebb9a]                                                       + 0x152b9a
[0x7fe2c8cec1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fe2c8c3ef1e]                                                       + 0xa5f1e
[0x7fe2c8c0ff2b]    PyObject_Call                                      + 0x4b
[0x7fe2c8cf1770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fe2c8cebb9a]                                                       + 0x152b9a
[0x7fe2c8cebf94]                                                       + 0x152f94
[0x7fe2c8cf150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe2c8cebb9a]                                                       + 0x152b9a
[0x7fe2c8cebf94]                                                       + 0x152f94
[0x7fe2c8cf150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe2c8cebb9a]                                                       + 0x152b9a
[0x7fe2c8cebf94]                                                       + 0x152f94
[0x7fe2c8cf150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe2c8cebb9a]                                                       + 0x152b9a
[0x7fe2c8cec1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fe2c8cec1df]    PyEval_EvalCode                                    + 0x1f
[0x7fe2c8d213d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fe2c8d2156f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fe2c8d3b8e8]    Py_Main                                            + 0xff8
[0x5592b21d22b8]    main                                               + 0x178
[0x7fe2c89b00b3]    __libc_start_main                                  + 0xf3
[0x5592b21d236e]    _start                                             + 0x2e


======================================== core-js-pure/modules/es.array-buffer.constructor.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f5f90179a29]                                                       + 0x7c5a29
[0x7f5f902ffd45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f60145c83a8]                                                       + 0x13b3a8
[0x7f60145ca065]                                                       + 0x13d065
[0x7f601906bbd9]    PyCFunction_Call                                   + 0xc9
[0x7f60190f86e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f60190f0b9a]                                                       + 0x152b9a
[0x7f60190f9aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f6019015151]    _PyObject_FastCallDict                             + 0x131
[0x7f60190152a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f6019014f2b]    PyObject_Call                                      + 0x4b
[0x7f6019086d7f]                                                       + 0xe8d7f
[0x7f6019082149]                                                       + 0xe4149
[0x7f60190150ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f60190f0d78]                                                       + 0x152d78
[0x7f60190f650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f60190f0b9a]                                                       + 0x152b9a
[0x7f60190f11b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f6019043f1e]                                                       + 0xa5f1e
[0x7f6019014f2b]    PyObject_Call                                      + 0x4b
[0x7f60190f6770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f60190f0b9a]                                                       + 0x152b9a
[0x7f60190f0f94]                                                       + 0x152f94
[0x7f60190f6867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f60190f0b9a]                                                       + 0x152b9a
[0x7f60190f11b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f6019043f1e]                                                       + 0xa5f1e
[0x7f6019014f2b]    PyObject_Call                                      + 0x4b
[0x7f60190f6770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f60190f0b9a]                                                       + 0x152b9a
[0x7f60190f0f94]                                                       + 0x152f94
[0x7f60190f6867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f60190f0b9a]                                                       + 0x152b9a
[0x7f60190f0f94]                                                       + 0x152f94
[0x7f60190f650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f60190f0b9a]                                                       + 0x152b9a
[0x7f60190f11b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f6019043f1e]                                                       + 0xa5f1e
[0x7f6019014f2b]    PyObject_Call                                      + 0x4b
[0x7f60190f6770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f60190f0b9a]                                                       + 0x152b9a
[0x7f60190f0f94]                                                       + 0x152f94
[0x7f60190f650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f60190f0b9a]                                                       + 0x152b9a
[0x7f60190f0f94]                                                       + 0x152f94
[0x7f60190f650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f60190f0b9a]                                                       + 0x152b9a
[0x7f60190f0f94]                                                       + 0x152f94
[0x7f60190f650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f60190f0b9a]                                                       + 0x152b9a
[0x7f60190f11b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f60190f11df]    PyEval_EvalCode                                    + 0x1f
[0x7f60191263d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f601912656f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f60191408e8]    Py_Main                                            + 0xff8
[0x558ccb4072b8]    main                                               + 0x178
[0x7f6018db50b3]    __libc_start_main                                  + 0xf3
[0x558ccb40736e]    _start                                             + 0x2e


======================================== core-js-pure/modules/es.array-buffer.is-view.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f26c9c2ba29]                                                       + 0x7c5a29
[0x7f26c9db1d45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f274e07a3a8]                                                       + 0x13b3a8
[0x7f274e07c065]                                                       + 0x13d065
[0x7f2752b1dbd9]    PyCFunction_Call                                   + 0xc9
[0x7f2752baa6e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f2752ba2b9a]                                                       + 0x152b9a
[0x7f2752babaa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f2752ac7151]    _PyObject_FastCallDict                             + 0x131
[0x7f2752ac72a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f2752ac6f2b]    PyObject_Call                                      + 0x4b
[0x7f2752b38d7f]                                                       + 0xe8d7f
[0x7f2752b34149]                                                       + 0xe4149
[0x7f2752ac70ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f2752ba2d78]                                                       + 0x152d78
[0x7f2752ba850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f2752ba2b9a]                                                       + 0x152b9a
[0x7f2752ba31b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f2752af5f1e]                                                       + 0xa5f1e
[0x7f2752ac6f2b]    PyObject_Call                                      + 0x4b
[0x7f2752ba8770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f2752ba2b9a]                                                       + 0x152b9a
[0x7f2752ba2f94]                                                       + 0x152f94
[0x7f2752ba8867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f2752ba2b9a]                                                       + 0x152b9a
[0x7f2752ba31b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f2752af5f1e]                                                       + 0xa5f1e
[0x7f2752ac6f2b]    PyObject_Call                                      + 0x4b
[0x7f2752ba8770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f2752ba2b9a]                                                       + 0x152b9a
[0x7f2752ba2f94]                                                       + 0x152f94
[0x7f2752ba8867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f2752ba2b9a]                                                       + 0x152b9a
[0x7f2752ba2f94]                                                       + 0x152f94
[0x7f2752ba850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f2752ba2b9a]                                                       + 0x152b9a
[0x7f2752ba31b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f2752af5f1e]                                                       + 0xa5f1e
[0x7f2752ac6f2b]    PyObject_Call                                      + 0x4b
[0x7f2752ba8770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f2752ba2b9a]                                                       + 0x152b9a
[0x7f2752ba2f94]                                                       + 0x152f94
[0x7f2752ba850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f2752ba2b9a]                                                       + 0x152b9a
[0x7f2752ba2f94]                                                       + 0x152f94
[0x7f2752ba850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f2752ba2b9a]                                                       + 0x152b9a
[0x7f2752ba2f94]                                                       + 0x152f94
[0x7f2752ba850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f2752ba2b9a]                                                       + 0x152b9a
[0x7f2752ba31b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f2752ba31df]    PyEval_EvalCode                                    + 0x1f
[0x7f2752bd83d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f2752bd856f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f2752bf28e8]    Py_Main                                            + 0xff8
[0x559d9d74d2b8]    main                                               + 0x178
[0x7f27528670b3]    __libc_start_main                                  + 0xf3
[0x559d9d74d36e]    _start                                             + 0x2e


======================================== core-js-pure/modules/es.array-buffer.slice.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f340c612a29]                                                       + 0x7c5a29
[0x7f340c798d45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f3490a613a8]                                                       + 0x13b3a8
[0x7f3490a63065]                                                       + 0x13d065
[0x7f3495504bd9]    PyCFunction_Call                                   + 0xc9
[0x7f34955916e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f3495589b9a]                                                       + 0x152b9a
[0x7f3495592aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f34954ae151]    _PyObject_FastCallDict                             + 0x131
[0x7f34954ae2a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f34954adf2b]    PyObject_Call                                      + 0x4b
[0x7f349551fd7f]                                                       + 0xe8d7f
[0x7f349551b149]                                                       + 0xe4149
[0x7f34954ae0ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f3495589d78]                                                       + 0x152d78
[0x7f349558f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f3495589b9a]                                                       + 0x152b9a
[0x7f349558a1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f34954dcf1e]                                                       + 0xa5f1e
[0x7f34954adf2b]    PyObject_Call                                      + 0x4b
[0x7f349558f770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f3495589b9a]                                                       + 0x152b9a
[0x7f3495589f94]                                                       + 0x152f94
[0x7f349558f867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f3495589b9a]                                                       + 0x152b9a
[0x7f349558a1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f34954dcf1e]                                                       + 0xa5f1e
[0x7f34954adf2b]    PyObject_Call                                      + 0x4b
[0x7f349558f770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f3495589b9a]                                                       + 0x152b9a
[0x7f3495589f94]                                                       + 0x152f94
[0x7f349558f867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f3495589b9a]                                                       + 0x152b9a
[0x7f3495589f94]                                                       + 0x152f94
[0x7f349558f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f3495589b9a]                                                       + 0x152b9a
[0x7f349558a1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f34954dcf1e]                                                       + 0xa5f1e
[0x7f34954adf2b]    PyObject_Call                                      + 0x4b
[0x7f349558f770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f3495589b9a]                                                       + 0x152b9a
[0x7f3495589f94]                                                       + 0x152f94
[0x7f349558f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f3495589b9a]                                                       + 0x152b9a
[0x7f3495589f94]                                                       + 0x152f94
[0x7f349558f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f3495589b9a]                                                       + 0x152b9a
[0x7f3495589f94]                                                       + 0x152f94
[0x7f349558f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f3495589b9a]                                                       + 0x152b9a
[0x7f349558a1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f349558a1df]    PyEval_EvalCode                                    + 0x1f
[0x7f34955bf3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f34955bf56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f34955d98e8]    Py_Main                                            + 0xff8
[0x5604ad29b2b8]    main                                               + 0x178
[0x7f349524e0b3]    __libc_start_main                                  + 0xf3
[0x5604ad29b36e]    _start                                             + 0x2e


======================================== core-js-pure/modules/es.data-view.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7fb62e8e9a29]                                                       + 0x7c5a29
[0x7fb62ea6fd45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7fb64894f3a8]                                                       + 0x13b3a8
[0x7fb648951065]                                                       + 0x13d065
[0x7fb64d3f2bd9]    PyCFunction_Call                                   + 0xc9
[0x7fb64d47f6e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7fb64d477b9a]                                                       + 0x152b9a
[0x7fb64d480aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7fb64d39c151]    _PyObject_FastCallDict                             + 0x131
[0x7fb64d39c2a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7fb64d39bf2b]    PyObject_Call                                      + 0x4b
[0x7fb64d40dd7f]                                                       + 0xe8d7f
[0x7fb64d409149]                                                       + 0xe4149
[0x7fb64d39c0ad]    _PyObject_FastCallDict                             + 0x8d
[0x7fb64d477d78]                                                       + 0x152d78
[0x7fb64d47d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb64d477b9a]                                                       + 0x152b9a
[0x7fb64d4781b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fb64d3caf1e]                                                       + 0xa5f1e
[0x7fb64d39bf2b]    PyObject_Call                                      + 0x4b
[0x7fb64d47d770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fb64d477b9a]                                                       + 0x152b9a
[0x7fb64d477f94]                                                       + 0x152f94
[0x7fb64d47d867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7fb64d477b9a]                                                       + 0x152b9a
[0x7fb64d4781b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fb64d3caf1e]                                                       + 0xa5f1e
[0x7fb64d39bf2b]    PyObject_Call                                      + 0x4b
[0x7fb64d47d770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fb64d477b9a]                                                       + 0x152b9a
[0x7fb64d477f94]                                                       + 0x152f94
[0x7fb64d47d867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7fb64d477b9a]                                                       + 0x152b9a
[0x7fb64d477f94]                                                       + 0x152f94
[0x7fb64d47d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb64d477b9a]                                                       + 0x152b9a
[0x7fb64d4781b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fb64d3caf1e]                                                       + 0xa5f1e
[0x7fb64d39bf2b]    PyObject_Call                                      + 0x4b
[0x7fb64d47d770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fb64d477b9a]                                                       + 0x152b9a
[0x7fb64d477f94]                                                       + 0x152f94
[0x7fb64d47d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb64d477b9a]                                                       + 0x152b9a
[0x7fb64d477f94]                                                       + 0x152f94
[0x7fb64d47d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb64d477b9a]                                                       + 0x152b9a
[0x7fb64d477f94]                                                       + 0x152f94
[0x7fb64d47d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb64d477b9a]                                                       + 0x152b9a
[0x7fb64d4781b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fb64d4781df]    PyEval_EvalCode                                    + 0x1f
[0x7fb64d4ad3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fb64d4ad56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fb64d4c78e8]    Py_Main                                            + 0xff8
[0x55b9410182b8]    main                                               + 0x178
[0x7fb64d13c0b3]    __libc_start_main                                  + 0xf3
[0x55b94101836e]    _start                                             + 0x2e


======================================== core-js-pure/modules/es.date.to-primitive.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7fa9f36d2a29]                                                       + 0x7c5a29
[0x7fa9f3858d45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7faa77b213a8]                                                       + 0x13b3a8
[0x7faa77b23065]                                                       + 0x13d065
[0x7faa7c5c4bd9]    PyCFunction_Call                                   + 0xc9
[0x7faa7c6516e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7faa7c649b9a]                                                       + 0x152b9a
[0x7faa7c652aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7faa7c56e151]    _PyObject_FastCallDict                             + 0x131
[0x7faa7c56e2a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7faa7c56df2b]    PyObject_Call                                      + 0x4b
[0x7faa7c5dfd7f]                                                       + 0xe8d7f
[0x7faa7c5db149]                                                       + 0xe4149
[0x7faa7c56e0ad]    _PyObject_FastCallDict                             + 0x8d
[0x7faa7c649d78]                                                       + 0x152d78
[0x7faa7c64f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7faa7c649b9a]                                                       + 0x152b9a
[0x7faa7c64a1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7faa7c59cf1e]                                                       + 0xa5f1e
[0x7faa7c56df2b]    PyObject_Call                                      + 0x4b
[0x7faa7c64f770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7faa7c649b9a]                                                       + 0x152b9a
[0x7faa7c649f94]                                                       + 0x152f94
[0x7faa7c64f867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7faa7c649b9a]                                                       + 0x152b9a
[0x7faa7c64a1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7faa7c59cf1e]                                                       + 0xa5f1e
[0x7faa7c56df2b]    PyObject_Call                                      + 0x4b
[0x7faa7c64f770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7faa7c649b9a]                                                       + 0x152b9a
[0x7faa7c649f94]                                                       + 0x152f94
[0x7faa7c64f867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7faa7c649b9a]                                                       + 0x152b9a
[0x7faa7c649f94]                                                       + 0x152f94
[0x7faa7c64f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7faa7c649b9a]                                                       + 0x152b9a
[0x7faa7c64a1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7faa7c59cf1e]                                                       + 0xa5f1e
[0x7faa7c56df2b]    PyObject_Call                                      + 0x4b
[0x7faa7c64f770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7faa7c649b9a]                                                       + 0x152b9a
[0x7faa7c649f94]                                                       + 0x152f94
[0x7faa7c64f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7faa7c649b9a]                                                       + 0x152b9a
[0x7faa7c649f94]                                                       + 0x152f94
[0x7faa7c64f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7faa7c649b9a]                                                       + 0x152b9a
[0x7faa7c649f94]                                                       + 0x152f94
[0x7faa7c64f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7faa7c649b9a]                                                       + 0x152b9a
[0x7faa7c64a1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7faa7c64a1df]    PyEval_EvalCode                                    + 0x1f
[0x7faa7c67f3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7faa7c67f56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7faa7c6998e8]    Py_Main                                            + 0xff8
[0x55780635a2b8]    main                                               + 0x178
[0x7faa7c30e0b3]    __libc_start_main                                  + 0xf3
[0x55780635a36e]    _start                                             + 0x2e


======================================== core-js-pure/modules/es.date.to-string.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f94d40cba29]                                                       + 0x7c5a29
[0x7f94d4251d45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f94ee1313a8]                                                       + 0x13b3a8
[0x7f94ee133065]                                                       + 0x13d065
[0x7f94f2bd4bd9]    PyCFunction_Call                                   + 0xc9
[0x7f94f2c616e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f94f2c59b9a]                                                       + 0x152b9a
[0x7f94f2c62aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f94f2b7e151]    _PyObject_FastCallDict                             + 0x131
[0x7f94f2b7e2a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f94f2b7df2b]    PyObject_Call                                      + 0x4b
[0x7f94f2befd7f]                                                       + 0xe8d7f
[0x7f94f2beb149]                                                       + 0xe4149
[0x7f94f2b7e0ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f94f2c59d78]                                                       + 0x152d78
[0x7f94f2c5f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f94f2c59b9a]                                                       + 0x152b9a
[0x7f94f2c5a1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f94f2bacf1e]                                                       + 0xa5f1e
[0x7f94f2b7df2b]    PyObject_Call                                      + 0x4b
[0x7f94f2c5f770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f94f2c59b9a]                                                       + 0x152b9a
[0x7f94f2c59f94]                                                       + 0x152f94
[0x7f94f2c5f867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f94f2c59b9a]                                                       + 0x152b9a
[0x7f94f2c5a1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f94f2bacf1e]                                                       + 0xa5f1e
[0x7f94f2b7df2b]    PyObject_Call                                      + 0x4b
[0x7f94f2c5f770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f94f2c59b9a]                                                       + 0x152b9a
[0x7f94f2c59f94]                                                       + 0x152f94
[0x7f94f2c5f867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f94f2c59b9a]                                                       + 0x152b9a
[0x7f94f2c59f94]                                                       + 0x152f94
[0x7f94f2c5f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f94f2c59b9a]                                                       + 0x152b9a
[0x7f94f2c5a1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f94f2bacf1e]                                                       + 0xa5f1e
[0x7f94f2b7df2b]    PyObject_Call                                      + 0x4b
[0x7f94f2c5f770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f94f2c59b9a]                                                       + 0x152b9a
[0x7f94f2c59f94]                                                       + 0x152f94
[0x7f94f2c5f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f94f2c59b9a]                                                       + 0x152b9a
[0x7f94f2c59f94]                                                       + 0x152f94
[0x7f94f2c5f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f94f2c59b9a]                                                       + 0x152b9a
[0x7f94f2c59f94]                                                       + 0x152f94
[0x7f94f2c5f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f94f2c59b9a]                                                       + 0x152b9a
[0x7f94f2c5a1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f94f2c5a1df]    PyEval_EvalCode                                    + 0x1f
[0x7f94f2c8f3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f94f2c8f56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f94f2ca98e8]    Py_Main                                            + 0xff8
[0x556c2e61c2b8]    main                                               + 0x178
[0x7f94f291e0b3]    __libc_start_main                                  + 0xf3
[0x556c2e61c36e]    _start                                             + 0x2e


======================================== core-js-pure/modules/es.function.name.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f11d40afa29]                                                       + 0x7c5a29
[0x7f11d4235d45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f12584fe3a8]                                                       + 0x13b3a8
[0x7f1258500065]                                                       + 0x13d065
[0x7f125cfa1bd9]    PyCFunction_Call                                   + 0xc9
[0x7f125d02e6e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f125d026b9a]                                                       + 0x152b9a
[0x7f125d02faa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f125cf4b151]    _PyObject_FastCallDict                             + 0x131
[0x7f125cf4b2a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f125cf4af2b]    PyObject_Call                                      + 0x4b
[0x7f125cfbcd7f]                                                       + 0xe8d7f
[0x7f125cfb8149]                                                       + 0xe4149
[0x7f125cf4b0ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f125d026d78]                                                       + 0x152d78
[0x7f125d02c50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f125d026b9a]                                                       + 0x152b9a
[0x7f125d0271b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f125cf79f1e]                                                       + 0xa5f1e
[0x7f125cf4af2b]    PyObject_Call                                      + 0x4b
[0x7f125d02c770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f125d026b9a]                                                       + 0x152b9a
[0x7f125d026f94]                                                       + 0x152f94
[0x7f125d02c867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f125d026b9a]                                                       + 0x152b9a
[0x7f125d0271b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f125cf79f1e]                                                       + 0xa5f1e
[0x7f125cf4af2b]    PyObject_Call                                      + 0x4b
[0x7f125d02c770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f125d026b9a]                                                       + 0x152b9a
[0x7f125d026f94]                                                       + 0x152f94
[0x7f125d02c867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f125d026b9a]                                                       + 0x152b9a
[0x7f125d026f94]                                                       + 0x152f94
[0x7f125d02c50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f125d026b9a]                                                       + 0x152b9a
[0x7f125d0271b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f125cf79f1e]                                                       + 0xa5f1e
[0x7f125cf4af2b]    PyObject_Call                                      + 0x4b
[0x7f125d02c770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f125d026b9a]                                                       + 0x152b9a
[0x7f125d026f94]                                                       + 0x152f94
[0x7f125d02c50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f125d026b9a]                                                       + 0x152b9a
[0x7f125d026f94]                                                       + 0x152f94
[0x7f125d02c50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f125d026b9a]                                                       + 0x152b9a
[0x7f125d026f94]                                                       + 0x152f94
[0x7f125d02c50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f125d026b9a]                                                       + 0x152b9a
[0x7f125d0271b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f125d0271df]    PyEval_EvalCode                                    + 0x1f
[0x7f125d05c3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f125d05c56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f125d0768e8]    Py_Main                                            + 0xff8
[0x55c84b5022b8]    main                                               + 0x178
[0x7f125cceb0b3]    __libc_start_main                                  + 0xf3
[0x55c84b50236e]    _start                                             + 0x2e


======================================== core-js-pure/modules/es.math.to-string-tag.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f1944ed9a29]                                                       + 0x7c5a29
[0x7f194505fd45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f19c93283a8]                                                       + 0x13b3a8
[0x7f19c932a065]                                                       + 0x13d065
[0x7f19cddcbbd9]    PyCFunction_Call                                   + 0xc9
[0x7f19cde586e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f19cde50b9a]                                                       + 0x152b9a
[0x7f19cde59aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f19cdd75151]    _PyObject_FastCallDict                             + 0x131
[0x7f19cdd752a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f19cdd74f2b]    PyObject_Call                                      + 0x4b
[0x7f19cdde6d7f]                                                       + 0xe8d7f
[0x7f19cdde2149]                                                       + 0xe4149
[0x7f19cdd750ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f19cde50d78]                                                       + 0x152d78
[0x7f19cde5650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f19cde50b9a]                                                       + 0x152b9a
[0x7f19cde511b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f19cdda3f1e]                                                       + 0xa5f1e
[0x7f19cdd74f2b]    PyObject_Call                                      + 0x4b
[0x7f19cde56770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f19cde50b9a]                                                       + 0x152b9a
[0x7f19cde50f94]                                                       + 0x152f94
[0x7f19cde56867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f19cde50b9a]                                                       + 0x152b9a
[0x7f19cde511b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f19cdda3f1e]                                                       + 0xa5f1e
[0x7f19cdd74f2b]    PyObject_Call                                      + 0x4b
[0x7f19cde56770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f19cde50b9a]                                                       + 0x152b9a
[0x7f19cde50f94]                                                       + 0x152f94
[0x7f19cde56867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f19cde50b9a]                                                       + 0x152b9a
[0x7f19cde50f94]                                                       + 0x152f94
[0x7f19cde5650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f19cde50b9a]                                                       + 0x152b9a
[0x7f19cde511b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f19cdda3f1e]                                                       + 0xa5f1e
[0x7f19cdd74f2b]    PyObject_Call                                      + 0x4b
[0x7f19cde56770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f19cde50b9a]                                                       + 0x152b9a
[0x7f19cde50f94]                                                       + 0x152f94
[0x7f19cde5650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f19cde50b9a]                                                       + 0x152b9a
[0x7f19cde50f94]                                                       + 0x152f94
[0x7f19cde5650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f19cde50b9a]                                                       + 0x152b9a
[0x7f19cde50f94]                                                       + 0x152f94
[0x7f19cde5650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f19cde50b9a]                                                       + 0x152b9a
[0x7f19cde511b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f19cde511df]    PyEval_EvalCode                                    + 0x1f
[0x7f19cde863d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f19cde8656f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f19cdea08e8]    Py_Main                                            + 0xff8
[0x55fb35cf82b8]    main                                               + 0x178
[0x7f19cdb150b3]    __libc_start_main                                  + 0xf3
[0x55fb35cf836e]    _start                                             + 0x2e


======================================== core-js-pure/modules/es.number.constructor.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7fab2b1caa29]                                                       + 0x7c5a29
[0x7fab2b350d45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7fabaf6193a8]                                                       + 0x13b3a8
[0x7fabaf61b065]                                                       + 0x13d065
[0x7fabb40bcbd9]    PyCFunction_Call                                   + 0xc9
[0x7fabb41496e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7fabb4141b9a]                                                       + 0x152b9a
[0x7fabb414aaa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7fabb4066151]    _PyObject_FastCallDict                             + 0x131
[0x7fabb40662a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7fabb4065f2b]    PyObject_Call                                      + 0x4b
[0x7fabb40d7d7f]                                                       + 0xe8d7f
[0x7fabb40d3149]                                                       + 0xe4149
[0x7fabb40660ad]    _PyObject_FastCallDict                             + 0x8d
[0x7fabb4141d78]                                                       + 0x152d78
[0x7fabb414750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fabb4141b9a]                                                       + 0x152b9a
[0x7fabb41421b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fabb4094f1e]                                                       + 0xa5f1e
[0x7fabb4065f2b]    PyObject_Call                                      + 0x4b
[0x7fabb4147770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fabb4141b9a]                                                       + 0x152b9a
[0x7fabb4141f94]                                                       + 0x152f94
[0x7fabb4147867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7fabb4141b9a]                                                       + 0x152b9a
[0x7fabb41421b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fabb4094f1e]                                                       + 0xa5f1e
[0x7fabb4065f2b]    PyObject_Call                                      + 0x4b
[0x7fabb4147770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fabb4141b9a]                                                       + 0x152b9a
[0x7fabb4141f94]                                                       + 0x152f94
[0x7fabb4147867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7fabb4141b9a]                                                       + 0x152b9a
[0x7fabb4141f94]                                                       + 0x152f94
[0x7fabb414750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fabb4141b9a]                                                       + 0x152b9a
[0x7fabb41421b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fabb4094f1e]                                                       + 0xa5f1e
[0x7fabb4065f2b]    PyObject_Call                                      + 0x4b
[0x7fabb4147770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fabb4141b9a]                                                       + 0x152b9a
[0x7fabb4141f94]                                                       + 0x152f94
[0x7fabb414750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fabb4141b9a]                                                       + 0x152b9a
[0x7fabb4141f94]                                                       + 0x152f94
[0x7fabb414750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fabb4141b9a]                                                       + 0x152b9a
[0x7fabb4141f94]                                                       + 0x152f94
[0x7fabb414750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fabb4141b9a]                                                       + 0x152b9a
[0x7fabb41421b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fabb41421df]    PyEval_EvalCode                                    + 0x1f
[0x7fabb41773d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fabb417756f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fabb41918e8]    Py_Main                                            + 0xff8
[0x560200bf92b8]    main                                               + 0x178
[0x7fabb3e060b3]    __libc_start_main                                  + 0xf3
[0x560200bf936e]    _start                                             + 0x2e


======================================== core-js-pure/modules/es.object.to-string.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f855fa46a29]                                                       + 0x7c5a29
[0x7f855fbccd45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f85e3e953a8]                                                       + 0x13b3a8
[0x7f85e3e97065]                                                       + 0x13d065
[0x7f85e8938bd9]    PyCFunction_Call                                   + 0xc9
[0x7f85e89c56e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f85e89bdb9a]                                                       + 0x152b9a
[0x7f85e89c6aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f85e88e2151]    _PyObject_FastCallDict                             + 0x131
[0x7f85e88e22a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f85e88e1f2b]    PyObject_Call                                      + 0x4b
[0x7f85e8953d7f]                                                       + 0xe8d7f
[0x7f85e894f149]                                                       + 0xe4149
[0x7f85e88e20ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f85e89bdd78]                                                       + 0x152d78
[0x7f85e89c350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f85e89bdb9a]                                                       + 0x152b9a
[0x7f85e89be1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f85e8910f1e]                                                       + 0xa5f1e
[0x7f85e88e1f2b]    PyObject_Call                                      + 0x4b
[0x7f85e89c3770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f85e89bdb9a]                                                       + 0x152b9a
[0x7f85e89bdf94]                                                       + 0x152f94
[0x7f85e89c3867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f85e89bdb9a]                                                       + 0x152b9a
[0x7f85e89be1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f85e8910f1e]                                                       + 0xa5f1e
[0x7f85e88e1f2b]    PyObject_Call                                      + 0x4b
[0x7f85e89c3770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f85e89bdb9a]                                                       + 0x152b9a
[0x7f85e89bdf94]                                                       + 0x152f94
[0x7f85e89c3867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f85e89bdb9a]                                                       + 0x152b9a
[0x7f85e89bdf94]                                                       + 0x152f94
[0x7f85e89c350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f85e89bdb9a]                                                       + 0x152b9a
[0x7f85e89be1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f85e8910f1e]                                                       + 0xa5f1e
[0x7f85e88e1f2b]    PyObject_Call                                      + 0x4b
[0x7f85e89c3770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f85e89bdb9a]                                                       + 0x152b9a
[0x7f85e89bdf94]                                                       + 0x152f94
[0x7f85e89c350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f85e89bdb9a]                                                       + 0x152b9a
[0x7f85e89bdf94]                                                       + 0x152f94
[0x7f85e89c350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f85e89bdb9a]                                                       + 0x152b9a
[0x7f85e89bdf94]                                                       + 0x152f94
[0x7f85e89c350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f85e89bdb9a]                                                       + 0x152b9a
[0x7f85e89be1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f85e89be1df]    PyEval_EvalCode                                    + 0x1f
[0x7f85e89f33d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f85e89f356f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f85e8a0d8e8]    Py_Main                                            + 0xff8
[0x5603c4d0d2b8]    main                                               + 0x178
[0x7f85e86820b3]    __libc_start_main                                  + 0xf3
[0x5603c4d0d36e]    _start                                             + 0x2e


======================================== core-js-pure/modules/es.reflect.to-string-tag.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f90b5ab4a29]                                                       + 0x7c5a29
[0x7f90b5c3ad45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f90b69f63a8]                                                       + 0x13b3a8
[0x7f90b69f8065]                                                       + 0x13d065
[0x7f90bb499bd9]    PyCFunction_Call                                   + 0xc9
[0x7f90bb5266e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f90bb51eb9a]                                                       + 0x152b9a
[0x7f90bb527aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f90bb443151]    _PyObject_FastCallDict                             + 0x131
[0x7f90bb4432a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f90bb442f2b]    PyObject_Call                                      + 0x4b
[0x7f90bb4b4d7f]                                                       + 0xe8d7f
[0x7f90bb4b0149]                                                       + 0xe4149
[0x7f90bb4430ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f90bb51ed78]                                                       + 0x152d78
[0x7f90bb52450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f90bb51eb9a]                                                       + 0x152b9a
[0x7f90bb51f1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f90bb471f1e]                                                       + 0xa5f1e
[0x7f90bb442f2b]    PyObject_Call                                      + 0x4b
[0x7f90bb524770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f90bb51eb9a]                                                       + 0x152b9a
[0x7f90bb51ef94]                                                       + 0x152f94
[0x7f90bb524867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f90bb51eb9a]                                                       + 0x152b9a
[0x7f90bb51f1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f90bb471f1e]                                                       + 0xa5f1e
[0x7f90bb442f2b]    PyObject_Call                                      + 0x4b
[0x7f90bb524770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f90bb51eb9a]                                                       + 0x152b9a
[0x7f90bb51ef94]                                                       + 0x152f94
[0x7f90bb524867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f90bb51eb9a]                                                       + 0x152b9a
[0x7f90bb51ef94]                                                       + 0x152f94
[0x7f90bb52450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f90bb51eb9a]                                                       + 0x152b9a
[0x7f90bb51f1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f90bb471f1e]                                                       + 0xa5f1e
[0x7f90bb442f2b]    PyObject_Call                                      + 0x4b
[0x7f90bb524770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f90bb51eb9a]                                                       + 0x152b9a
[0x7f90bb51ef94]                                                       + 0x152f94
[0x7f90bb52450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f90bb51eb9a]                                                       + 0x152b9a
[0x7f90bb51ef94]                                                       + 0x152f94
[0x7f90bb52450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f90bb51eb9a]                                                       + 0x152b9a
[0x7f90bb51ef94]                                                       + 0x152f94
[0x7f90bb52450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f90bb51eb9a]                                                       + 0x152b9a
[0x7f90bb51f1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f90bb51f1df]    PyEval_EvalCode                                    + 0x1f
[0x7f90bb5543d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f90bb55456f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f90bb56e8e8]    Py_Main                                            + 0xff8
[0x562ffd0d02b8]    main                                               + 0x178
[0x7f90bb1e30b3]    __libc_start_main                                  + 0xf3
[0x562ffd0d036e]    _start                                             + 0x2e


======================================== core-js-pure/modules/es.regexp.dot-all.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7fe7fda1fa29]                                                       + 0x7c5a29
[0x7fe7fdba5d45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7fe7fe9613a8]                                                       + 0x13b3a8
[0x7fe7fe963065]                                                       + 0x13d065
[0x7fe803404bd9]    PyCFunction_Call                                   + 0xc9
[0x7fe8034916e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7fe803489b9a]                                                       + 0x152b9a
[0x7fe803492aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7fe8033ae151]    _PyObject_FastCallDict                             + 0x131
[0x7fe8033ae2a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7fe8033adf2b]    PyObject_Call                                      + 0x4b
[0x7fe80341fd7f]                                                       + 0xe8d7f
[0x7fe80341b149]                                                       + 0xe4149
[0x7fe8033ae0ad]    _PyObject_FastCallDict                             + 0x8d
[0x7fe803489d78]                                                       + 0x152d78
[0x7fe80348f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe803489b9a]                                                       + 0x152b9a
[0x7fe80348a1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fe8033dcf1e]                                                       + 0xa5f1e
[0x7fe8033adf2b]    PyObject_Call                                      + 0x4b
[0x7fe80348f770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fe803489b9a]                                                       + 0x152b9a
[0x7fe803489f94]                                                       + 0x152f94
[0x7fe80348f867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7fe803489b9a]                                                       + 0x152b9a
[0x7fe80348a1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fe8033dcf1e]                                                       + 0xa5f1e
[0x7fe8033adf2b]    PyObject_Call                                      + 0x4b
[0x7fe80348f770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fe803489b9a]                                                       + 0x152b9a
[0x7fe803489f94]                                                       + 0x152f94
[0x7fe80348f867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7fe803489b9a]                                                       + 0x152b9a
[0x7fe803489f94]                                                       + 0x152f94
[0x7fe80348f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe803489b9a]                                                       + 0x152b9a
[0x7fe80348a1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fe8033dcf1e]                                                       + 0xa5f1e
[0x7fe8033adf2b]    PyObject_Call                                      + 0x4b
[0x7fe80348f770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fe803489b9a]                                                       + 0x152b9a
[0x7fe803489f94]                                                       + 0x152f94
[0x7fe80348f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe803489b9a]                                                       + 0x152b9a
[0x7fe803489f94]                                                       + 0x152f94
[0x7fe80348f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe803489b9a]                                                       + 0x152b9a
[0x7fe803489f94]                                                       + 0x152f94
[0x7fe80348f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe803489b9a]                                                       + 0x152b9a
[0x7fe80348a1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fe80348a1df]    PyEval_EvalCode                                    + 0x1f
[0x7fe8034bf3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fe8034bf56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fe8034d98e8]    Py_Main                                            + 0xff8
[0x55ac86c172b8]    main                                               + 0x178
[0x7fe80314e0b3]    __libc_start_main                                  + 0xf3
[0x55ac86c1736e]    _start                                             + 0x2e


======================================== core-js-pure/modules/es.regexp.exec.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7fcaa50f3a29]                                                       + 0x7c5a29
[0x7fcaa5279d45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7fcb295423a8]                                                       + 0x13b3a8
[0x7fcb29544065]                                                       + 0x13d065
[0x7fcb2dfe5bd9]    PyCFunction_Call                                   + 0xc9
[0x7fcb2e0726e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7fcb2e06ab9a]                                                       + 0x152b9a
[0x7fcb2e073aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7fcb2df8f151]    _PyObject_FastCallDict                             + 0x131
[0x7fcb2df8f2a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7fcb2df8ef2b]    PyObject_Call                                      + 0x4b
[0x7fcb2e000d7f]                                                       + 0xe8d7f
[0x7fcb2dffc149]                                                       + 0xe4149
[0x7fcb2df8f0ad]    _PyObject_FastCallDict                             + 0x8d
[0x7fcb2e06ad78]                                                       + 0x152d78
[0x7fcb2e07050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fcb2e06ab9a]                                                       + 0x152b9a
[0x7fcb2e06b1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fcb2dfbdf1e]                                                       + 0xa5f1e
[0x7fcb2df8ef2b]    PyObject_Call                                      + 0x4b
[0x7fcb2e070770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fcb2e06ab9a]                                                       + 0x152b9a
[0x7fcb2e06af94]                                                       + 0x152f94
[0x7fcb2e070867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7fcb2e06ab9a]                                                       + 0x152b9a
[0x7fcb2e06b1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fcb2dfbdf1e]                                                       + 0xa5f1e
[0x7fcb2df8ef2b]    PyObject_Call                                      + 0x4b
[0x7fcb2e070770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fcb2e06ab9a]                                                       + 0x152b9a
[0x7fcb2e06af94]                                                       + 0x152f94
[0x7fcb2e070867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7fcb2e06ab9a]                                                       + 0x152b9a
[0x7fcb2e06af94]                                                       + 0x152f94
[0x7fcb2e07050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fcb2e06ab9a]                                                       + 0x152b9a
[0x7fcb2e06b1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fcb2dfbdf1e]                                                       + 0xa5f1e
[0x7fcb2df8ef2b]    PyObject_Call                                      + 0x4b
[0x7fcb2e070770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fcb2e06ab9a]                                                       + 0x152b9a
[0x7fcb2e06af94]                                                       + 0x152f94
[0x7fcb2e07050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fcb2e06ab9a]                                                       + 0x152b9a
[0x7fcb2e06af94]                                                       + 0x152f94
[0x7fcb2e07050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fcb2e06ab9a]                                                       + 0x152b9a
[0x7fcb2e06af94]                                                       + 0x152f94
[0x7fcb2e07050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fcb2e06ab9a]                                                       + 0x152b9a
[0x7fcb2e06b1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fcb2e06b1df]    PyEval_EvalCode                                    + 0x1f
[0x7fcb2e0a03d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fcb2e0a056f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fcb2e0ba8e8]    Py_Main                                            + 0xff8
[0x55f656b7b2b8]    main                                               + 0x178
[0x7fcb2dd2f0b3]    __libc_start_main                                  + 0xf3
[0x55f656b7b36e]    _start                                             + 0x2e


======================================== core-js-pure/modules/es.regexp.flags.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7fec22d9ca29]                                                       + 0x7c5a29
[0x7fec22f22d45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7feca71eb3a8]                                                       + 0x13b3a8
[0x7feca71ed065]                                                       + 0x13d065
[0x7fecabc8ebd9]    PyCFunction_Call                                   + 0xc9
[0x7fecabd1b6e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7fecabd13b9a]                                                       + 0x152b9a
[0x7fecabd1caa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7fecabc38151]    _PyObject_FastCallDict                             + 0x131
[0x7fecabc382a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7fecabc37f2b]    PyObject_Call                                      + 0x4b
[0x7fecabca9d7f]                                                       + 0xe8d7f
[0x7fecabca5149]                                                       + 0xe4149
[0x7fecabc380ad]    _PyObject_FastCallDict                             + 0x8d
[0x7fecabd13d78]                                                       + 0x152d78
[0x7fecabd1950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fecabd13b9a]                                                       + 0x152b9a
[0x7fecabd141b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fecabc66f1e]                                                       + 0xa5f1e
[0x7fecabc37f2b]    PyObject_Call                                      + 0x4b
[0x7fecabd19770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fecabd13b9a]                                                       + 0x152b9a
[0x7fecabd13f94]                                                       + 0x152f94
[0x7fecabd19867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7fecabd13b9a]                                                       + 0x152b9a
[0x7fecabd141b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fecabc66f1e]                                                       + 0xa5f1e
[0x7fecabc37f2b]    PyObject_Call                                      + 0x4b
[0x7fecabd19770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fecabd13b9a]                                                       + 0x152b9a
[0x7fecabd13f94]                                                       + 0x152f94
[0x7fecabd19867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7fecabd13b9a]                                                       + 0x152b9a
[0x7fecabd13f94]                                                       + 0x152f94
[0x7fecabd1950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fecabd13b9a]                                                       + 0x152b9a
[0x7fecabd141b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fecabc66f1e]                                                       + 0xa5f1e
[0x7fecabc37f2b]    PyObject_Call                                      + 0x4b
[0x7fecabd19770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fecabd13b9a]                                                       + 0x152b9a
[0x7fecabd13f94]                                                       + 0x152f94
[0x7fecabd1950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fecabd13b9a]                                                       + 0x152b9a
[0x7fecabd13f94]                                                       + 0x152f94
[0x7fecabd1950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fecabd13b9a]                                                       + 0x152b9a
[0x7fecabd13f94]                                                       + 0x152f94
[0x7fecabd1950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fecabd13b9a]                                                       + 0x152b9a
[0x7fecabd141b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fecabd141df]    PyEval_EvalCode                                    + 0x1f
[0x7fecabd493d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fecabd4956f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fecabd638e8]    Py_Main                                            + 0xff8
[0x556766e662b8]    main                                               + 0x178
[0x7fecab9d80b3]    __libc_start_main                                  + 0xf3
[0x556766e6636e]    _start                                             + 0x2e


======================================== core-js-pure/modules/es.regexp.sticky.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f0fb4e89a29]                                                       + 0x7c5a29
[0x7f0fb500fd45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f10392d83a8]                                                       + 0x13b3a8
[0x7f10392da065]                                                       + 0x13d065
[0x7f103dd7bbd9]    PyCFunction_Call                                   + 0xc9
[0x7f103de086e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f103de00b9a]                                                       + 0x152b9a
[0x7f103de09aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f103dd25151]    _PyObject_FastCallDict                             + 0x131
[0x7f103dd252a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f103dd24f2b]    PyObject_Call                                      + 0x4b
[0x7f103dd96d7f]                                                       + 0xe8d7f
[0x7f103dd92149]                                                       + 0xe4149
[0x7f103dd250ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f103de00d78]                                                       + 0x152d78
[0x7f103de0650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f103de00b9a]                                                       + 0x152b9a
[0x7f103de011b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f103dd53f1e]                                                       + 0xa5f1e
[0x7f103dd24f2b]    PyObject_Call                                      + 0x4b
[0x7f103de06770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f103de00b9a]                                                       + 0x152b9a
[0x7f103de00f94]                                                       + 0x152f94
[0x7f103de06867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f103de00b9a]                                                       + 0x152b9a
[0x7f103de011b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f103dd53f1e]                                                       + 0xa5f1e
[0x7f103dd24f2b]    PyObject_Call                                      + 0x4b
[0x7f103de06770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f103de00b9a]                                                       + 0x152b9a
[0x7f103de00f94]                                                       + 0x152f94
[0x7f103de06867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f103de00b9a]                                                       + 0x152b9a
[0x7f103de00f94]                                                       + 0x152f94
[0x7f103de0650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f103de00b9a]                                                       + 0x152b9a
[0x7f103de011b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f103dd53f1e]                                                       + 0xa5f1e
[0x7f103dd24f2b]    PyObject_Call                                      + 0x4b
[0x7f103de06770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f103de00b9a]                                                       + 0x152b9a
[0x7f103de00f94]                                                       + 0x152f94
[0x7f103de0650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f103de00b9a]                                                       + 0x152b9a
[0x7f103de00f94]                                                       + 0x152f94
[0x7f103de0650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f103de00b9a]                                                       + 0x152b9a
[0x7f103de00f94]                                                       + 0x152f94
[0x7f103de0650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f103de00b9a]                                                       + 0x152b9a
[0x7f103de011b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f103de011df]    PyEval_EvalCode                                    + 0x1f
[0x7f103de363d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f103de3656f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f103de508e8]    Py_Main                                            + 0xff8
[0x556dc7ed02b8]    main                                               + 0x178
[0x7f103dac50b3]    __libc_start_main                                  + 0xf3
[0x556dc7ed036e]    _start                                             + 0x2e


======================================== core-js-pure/modules/es.regexp.test.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7ff7eb7fea29]                                                       + 0x7c5a29
[0x7ff7eb984d45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7ff86fc4d3a8]                                                       + 0x13b3a8
[0x7ff86fc4f065]                                                       + 0x13d065
[0x7ff8746f0bd9]    PyCFunction_Call                                   + 0xc9
[0x7ff87477d6e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7ff874775b9a]                                                       + 0x152b9a
[0x7ff87477eaa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7ff87469a151]    _PyObject_FastCallDict                             + 0x131
[0x7ff87469a2a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7ff874699f2b]    PyObject_Call                                      + 0x4b
[0x7ff87470bd7f]                                                       + 0xe8d7f
[0x7ff874707149]                                                       + 0xe4149
[0x7ff87469a0ad]    _PyObject_FastCallDict                             + 0x8d
[0x7ff874775d78]                                                       + 0x152d78
[0x7ff87477b50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff874775b9a]                                                       + 0x152b9a
[0x7ff8747761b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7ff8746c8f1e]                                                       + 0xa5f1e
[0x7ff874699f2b]    PyObject_Call                                      + 0x4b
[0x7ff87477b770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7ff874775b9a]                                                       + 0x152b9a
[0x7ff874775f94]                                                       + 0x152f94
[0x7ff87477b867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7ff874775b9a]                                                       + 0x152b9a
[0x7ff8747761b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7ff8746c8f1e]                                                       + 0xa5f1e
[0x7ff874699f2b]    PyObject_Call                                      + 0x4b
[0x7ff87477b770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7ff874775b9a]                                                       + 0x152b9a
[0x7ff874775f94]                                                       + 0x152f94
[0x7ff87477b867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7ff874775b9a]                                                       + 0x152b9a
[0x7ff874775f94]                                                       + 0x152f94
[0x7ff87477b50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff874775b9a]                                                       + 0x152b9a
[0x7ff8747761b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7ff8746c8f1e]                                                       + 0xa5f1e
[0x7ff874699f2b]    PyObject_Call                                      + 0x4b
[0x7ff87477b770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7ff874775b9a]                                                       + 0x152b9a
[0x7ff874775f94]                                                       + 0x152f94
[0x7ff87477b50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff874775b9a]                                                       + 0x152b9a
[0x7ff874775f94]                                                       + 0x152f94
[0x7ff87477b50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff874775b9a]                                                       + 0x152b9a
[0x7ff874775f94]                                                       + 0x152f94
[0x7ff87477b50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff874775b9a]                                                       + 0x152b9a
[0x7ff8747761b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7ff8747761df]    PyEval_EvalCode                                    + 0x1f
[0x7ff8747ab3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7ff8747ab56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7ff8747c58e8]    Py_Main                                            + 0xff8
[0x559ac8b332b8]    main                                               + 0x178
[0x7ff87443a0b3]    __libc_start_main                                  + 0xf3
[0x559ac8b3336e]    _start                                             + 0x2e


======================================== core-js-pure/modules/es.regexp.to-string.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f8317f90a29]                                                       + 0x7c5a29
[0x7f8318116d45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f839c3df3a8]                                                       + 0x13b3a8
[0x7f839c3e1065]                                                       + 0x13d065
[0x7f83a0e82bd9]    PyCFunction_Call                                   + 0xc9
[0x7f83a0f0f6e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f83a0f07b9a]                                                       + 0x152b9a
[0x7f83a0f10aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f83a0e2c151]    _PyObject_FastCallDict                             + 0x131
[0x7f83a0e2c2a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f83a0e2bf2b]    PyObject_Call                                      + 0x4b
[0x7f83a0e9dd7f]                                                       + 0xe8d7f
[0x7f83a0e99149]                                                       + 0xe4149
[0x7f83a0e2c0ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f83a0f07d78]                                                       + 0x152d78
[0x7f83a0f0d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f83a0f07b9a]                                                       + 0x152b9a
[0x7f83a0f081b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f83a0e5af1e]                                                       + 0xa5f1e
[0x7f83a0e2bf2b]    PyObject_Call                                      + 0x4b
[0x7f83a0f0d770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f83a0f07b9a]                                                       + 0x152b9a
[0x7f83a0f07f94]                                                       + 0x152f94
[0x7f83a0f0d867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f83a0f07b9a]                                                       + 0x152b9a
[0x7f83a0f081b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f83a0e5af1e]                                                       + 0xa5f1e
[0x7f83a0e2bf2b]    PyObject_Call                                      + 0x4b
[0x7f83a0f0d770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f83a0f07b9a]                                                       + 0x152b9a
[0x7f83a0f07f94]                                                       + 0x152f94
[0x7f83a0f0d867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f83a0f07b9a]                                                       + 0x152b9a
[0x7f83a0f07f94]                                                       + 0x152f94
[0x7f83a0f0d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f83a0f07b9a]                                                       + 0x152b9a
[0x7f83a0f081b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f83a0e5af1e]                                                       + 0xa5f1e
[0x7f83a0e2bf2b]    PyObject_Call                                      + 0x4b
[0x7f83a0f0d770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f83a0f07b9a]                                                       + 0x152b9a
[0x7f83a0f07f94]                                                       + 0x152f94
[0x7f83a0f0d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f83a0f07b9a]                                                       + 0x152b9a
[0x7f83a0f07f94]                                                       + 0x152f94
[0x7f83a0f0d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f83a0f07b9a]                                                       + 0x152b9a
[0x7f83a0f07f94]                                                       + 0x152f94
[0x7f83a0f0d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f83a0f07b9a]                                                       + 0x152b9a
[0x7f83a0f081b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f83a0f081df]    PyEval_EvalCode                                    + 0x1f
[0x7f83a0f3d3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f83a0f3d56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f83a0f578e8]    Py_Main                                            + 0xff8
[0x55e959db82b8]    main                                               + 0x178
[0x7f83a0bcc0b3]    __libc_start_main                                  + 0xf3
[0x55e959db836e]    _start                                             + 0x2e


======================================== core-js-pure/modules/es.string.match.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7fd4b5c6fa29]                                                       + 0x7c5a29
[0x7fd4b5df5d45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7fd53a0be3a8]                                                       + 0x13b3a8
[0x7fd53a0c0065]                                                       + 0x13d065
[0x7fd53eb61bd9]    PyCFunction_Call                                   + 0xc9
[0x7fd53ebee6e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7fd53ebe6b9a]                                                       + 0x152b9a
[0x7fd53ebefaa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7fd53eb0b151]    _PyObject_FastCallDict                             + 0x131
[0x7fd53eb0b2a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7fd53eb0af2b]    PyObject_Call                                      + 0x4b
[0x7fd53eb7cd7f]                                                       + 0xe8d7f
[0x7fd53eb78149]                                                       + 0xe4149
[0x7fd53eb0b0ad]    _PyObject_FastCallDict                             + 0x8d
[0x7fd53ebe6d78]                                                       + 0x152d78
[0x7fd53ebec50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fd53ebe6b9a]                                                       + 0x152b9a
[0x7fd53ebe71b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fd53eb39f1e]                                                       + 0xa5f1e
[0x7fd53eb0af2b]    PyObject_Call                                      + 0x4b
[0x7fd53ebec770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fd53ebe6b9a]                                                       + 0x152b9a
[0x7fd53ebe6f94]                                                       + 0x152f94
[0x7fd53ebec867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7fd53ebe6b9a]                                                       + 0x152b9a
[0x7fd53ebe71b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fd53eb39f1e]                                                       + 0xa5f1e
[0x7fd53eb0af2b]    PyObject_Call                                      + 0x4b
[0x7fd53ebec770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fd53ebe6b9a]                                                       + 0x152b9a
[0x7fd53ebe6f94]                                                       + 0x152f94
[0x7fd53ebec867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7fd53ebe6b9a]                                                       + 0x152b9a
[0x7fd53ebe6f94]                                                       + 0x152f94
[0x7fd53ebec50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fd53ebe6b9a]                                                       + 0x152b9a
[0x7fd53ebe71b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fd53eb39f1e]                                                       + 0xa5f1e
[0x7fd53eb0af2b]    PyObject_Call                                      + 0x4b
[0x7fd53ebec770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fd53ebe6b9a]                                                       + 0x152b9a
[0x7fd53ebe6f94]                                                       + 0x152f94
[0x7fd53ebec50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fd53ebe6b9a]                                                       + 0x152b9a
[0x7fd53ebe6f94]                                                       + 0x152f94
[0x7fd53ebec50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fd53ebe6b9a]                                                       + 0x152b9a
[0x7fd53ebe6f94]                                                       + 0x152f94
[0x7fd53ebec50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fd53ebe6b9a]                                                       + 0x152b9a
[0x7fd53ebe71b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fd53ebe71df]    PyEval_EvalCode                                    + 0x1f
[0x7fd53ec1c3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fd53ec1c56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fd53ec368e8]    Py_Main                                            + 0xff8
[0x55af7da8c2b8]    main                                               + 0x178
[0x7fd53e8ab0b3]    __libc_start_main                                  + 0xf3
[0x55af7da8c36e]    _start                                             + 0x2e


======================================== core-js-pure/modules/es.string.replace.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f5f83d9ba29]                                                       + 0x7c5a29
[0x7f5f83f21d45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f60081ea3a8]                                                       + 0x13b3a8
[0x7f60081ec065]                                                       + 0x13d065
[0x7f600cc8dbd9]    PyCFunction_Call                                   + 0xc9
[0x7f600cd1a6e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f600cd12b9a]                                                       + 0x152b9a
[0x7f600cd1baa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f600cc37151]    _PyObject_FastCallDict                             + 0x131
[0x7f600cc372a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f600cc36f2b]    PyObject_Call                                      + 0x4b
[0x7f600cca8d7f]                                                       + 0xe8d7f
[0x7f600cca4149]                                                       + 0xe4149
[0x7f600cc370ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f600cd12d78]                                                       + 0x152d78
[0x7f600cd1850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f600cd12b9a]                                                       + 0x152b9a
[0x7f600cd131b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f600cc65f1e]                                                       + 0xa5f1e
[0x7f600cc36f2b]    PyObject_Call                                      + 0x4b
[0x7f600cd18770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f600cd12b9a]                                                       + 0x152b9a
[0x7f600cd12f94]                                                       + 0x152f94
[0x7f600cd18867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f600cd12b9a]                                                       + 0x152b9a
[0x7f600cd131b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f600cc65f1e]                                                       + 0xa5f1e
[0x7f600cc36f2b]    PyObject_Call                                      + 0x4b
[0x7f600cd18770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f600cd12b9a]                                                       + 0x152b9a
[0x7f600cd12f94]                                                       + 0x152f94
[0x7f600cd18867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f600cd12b9a]                                                       + 0x152b9a
[0x7f600cd12f94]                                                       + 0x152f94
[0x7f600cd1850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f600cd12b9a]                                                       + 0x152b9a
[0x7f600cd131b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f600cc65f1e]                                                       + 0xa5f1e
[0x7f600cc36f2b]    PyObject_Call                                      + 0x4b
[0x7f600cd18770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f600cd12b9a]                                                       + 0x152b9a
[0x7f600cd12f94]                                                       + 0x152f94
[0x7f600cd1850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f600cd12b9a]                                                       + 0x152b9a
[0x7f600cd12f94]                                                       + 0x152f94
[0x7f600cd1850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f600cd12b9a]                                                       + 0x152b9a
[0x7f600cd12f94]                                                       + 0x152f94
[0x7f600cd1850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f600cd12b9a]                                                       + 0x152b9a
[0x7f600cd131b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f600cd131df]    PyEval_EvalCode                                    + 0x1f
[0x7f600cd483d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f600cd4856f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f600cd628e8]    Py_Main                                            + 0xff8
[0x558b51b0d2b8]    main                                               + 0x178
[0x7f600c9d70b3]    __libc_start_main                                  + 0xf3
[0x558b51b0d36e]    _start                                             + 0x2e


======================================== core-js-pure/modules/es.string.search.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7ff501131a29]                                                       + 0x7c5a29
[0x7ff5012b7d45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7ff5855803a8]                                                       + 0x13b3a8
[0x7ff585582065]                                                       + 0x13d065
[0x7ff58a023bd9]    PyCFunction_Call                                   + 0xc9
[0x7ff58a0b06e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7ff58a0a8b9a]                                                       + 0x152b9a
[0x7ff58a0b1aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7ff589fcd151]    _PyObject_FastCallDict                             + 0x131
[0x7ff589fcd2a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7ff589fccf2b]    PyObject_Call                                      + 0x4b
[0x7ff58a03ed7f]                                                       + 0xe8d7f
[0x7ff58a03a149]                                                       + 0xe4149
[0x7ff589fcd0ad]    _PyObject_FastCallDict                             + 0x8d
[0x7ff58a0a8d78]                                                       + 0x152d78
[0x7ff58a0ae50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff58a0a8b9a]                                                       + 0x152b9a
[0x7ff58a0a91b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7ff589ffbf1e]                                                       + 0xa5f1e
[0x7ff589fccf2b]    PyObject_Call                                      + 0x4b
[0x7ff58a0ae770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7ff58a0a8b9a]                                                       + 0x152b9a
[0x7ff58a0a8f94]                                                       + 0x152f94
[0x7ff58a0ae867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7ff58a0a8b9a]                                                       + 0x152b9a
[0x7ff58a0a91b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7ff589ffbf1e]                                                       + 0xa5f1e
[0x7ff589fccf2b]    PyObject_Call                                      + 0x4b
[0x7ff58a0ae770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7ff58a0a8b9a]                                                       + 0x152b9a
[0x7ff58a0a8f94]                                                       + 0x152f94
[0x7ff58a0ae867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7ff58a0a8b9a]                                                       + 0x152b9a
[0x7ff58a0a8f94]                                                       + 0x152f94
[0x7ff58a0ae50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff58a0a8b9a]                                                       + 0x152b9a
[0x7ff58a0a91b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7ff589ffbf1e]                                                       + 0xa5f1e
[0x7ff589fccf2b]    PyObject_Call                                      + 0x4b
[0x7ff58a0ae770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7ff58a0a8b9a]                                                       + 0x152b9a
[0x7ff58a0a8f94]                                                       + 0x152f94
[0x7ff58a0ae50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff58a0a8b9a]                                                       + 0x152b9a
[0x7ff58a0a8f94]                                                       + 0x152f94
[0x7ff58a0ae50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff58a0a8b9a]                                                       + 0x152b9a
[0x7ff58a0a8f94]                                                       + 0x152f94
[0x7ff58a0ae50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff58a0a8b9a]                                                       + 0x152b9a
[0x7ff58a0a91b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7ff58a0a91df]    PyEval_EvalCode                                    + 0x1f
[0x7ff58a0de3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7ff58a0de56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7ff58a0f88e8]    Py_Main                                            + 0xff8
[0x55b8b98b42b8]    main                                               + 0x178
[0x7ff589d6d0b3]    __libc_start_main                                  + 0xf3
[0x55b8b98b436e]    _start                                             + 0x2e


======================================== core-js-pure/modules/es.string.split.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7fbfb0071a29]                                                       + 0x7c5a29
[0x7fbfb01f7d45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7fc0344c03a8]                                                       + 0x13b3a8
[0x7fc0344c2065]                                                       + 0x13d065
[0x7fc038f63bd9]    PyCFunction_Call                                   + 0xc9
[0x7fc038ff06e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7fc038fe8b9a]                                                       + 0x152b9a
[0x7fc038ff1aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7fc038f0d151]    _PyObject_FastCallDict                             + 0x131
[0x7fc038f0d2a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7fc038f0cf2b]    PyObject_Call                                      + 0x4b
[0x7fc038f7ed7f]                                                       + 0xe8d7f
[0x7fc038f7a149]                                                       + 0xe4149
[0x7fc038f0d0ad]    _PyObject_FastCallDict                             + 0x8d
[0x7fc038fe8d78]                                                       + 0x152d78
[0x7fc038fee50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc038fe8b9a]                                                       + 0x152b9a
[0x7fc038fe91b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fc038f3bf1e]                                                       + 0xa5f1e
[0x7fc038f0cf2b]    PyObject_Call                                      + 0x4b
[0x7fc038fee770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fc038fe8b9a]                                                       + 0x152b9a
[0x7fc038fe8f94]                                                       + 0x152f94
[0x7fc038fee867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7fc038fe8b9a]                                                       + 0x152b9a
[0x7fc038fe91b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fc038f3bf1e]                                                       + 0xa5f1e
[0x7fc038f0cf2b]    PyObject_Call                                      + 0x4b
[0x7fc038fee770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fc038fe8b9a]                                                       + 0x152b9a
[0x7fc038fe8f94]                                                       + 0x152f94
[0x7fc038fee867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7fc038fe8b9a]                                                       + 0x152b9a
[0x7fc038fe8f94]                                                       + 0x152f94
[0x7fc038fee50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc038fe8b9a]                                                       + 0x152b9a
[0x7fc038fe91b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fc038f3bf1e]                                                       + 0xa5f1e
[0x7fc038f0cf2b]    PyObject_Call                                      + 0x4b
[0x7fc038fee770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fc038fe8b9a]                                                       + 0x152b9a
[0x7fc038fe8f94]                                                       + 0x152f94
[0x7fc038fee50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc038fe8b9a]                                                       + 0x152b9a
[0x7fc038fe8f94]                                                       + 0x152f94
[0x7fc038fee50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc038fe8b9a]                                                       + 0x152b9a
[0x7fc038fe8f94]                                                       + 0x152f94
[0x7fc038fee50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc038fe8b9a]                                                       + 0x152b9a
[0x7fc038fe91b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fc038fe91df]    PyEval_EvalCode                                    + 0x1f
[0x7fc03901e3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fc03901e56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fc0390388e8]    Py_Main                                            + 0xff8
[0x55f37c40d2b8]    main                                               + 0x178
[0x7fc038cad0b3]    __libc_start_main                                  + 0xf3
[0x55f37c40d36e]    _start                                             + 0x2e


======================================== core-js-pure/modules/es.symbol.description.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f8737a7fa29]                                                       + 0x7c5a29
[0x7f8737c05d45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f87bbece3a8]                                                       + 0x13b3a8
[0x7f87bbed0065]                                                       + 0x13d065
[0x7f87c0971bd9]    PyCFunction_Call                                   + 0xc9
[0x7f87c09fe6e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f87c09f6b9a]                                                       + 0x152b9a
[0x7f87c09ffaa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f87c091b151]    _PyObject_FastCallDict                             + 0x131
[0x7f87c091b2a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f87c091af2b]    PyObject_Call                                      + 0x4b
[0x7f87c098cd7f]                                                       + 0xe8d7f
[0x7f87c0988149]                                                       + 0xe4149
[0x7f87c091b0ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f87c09f6d78]                                                       + 0x152d78
[0x7f87c09fc50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f87c09f6b9a]                                                       + 0x152b9a
[0x7f87c09f71b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f87c0949f1e]                                                       + 0xa5f1e
[0x7f87c091af2b]    PyObject_Call                                      + 0x4b
[0x7f87c09fc770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f87c09f6b9a]                                                       + 0x152b9a
[0x7f87c09f6f94]                                                       + 0x152f94
[0x7f87c09fc867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f87c09f6b9a]                                                       + 0x152b9a
[0x7f87c09f71b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f87c0949f1e]                                                       + 0xa5f1e
[0x7f87c091af2b]    PyObject_Call                                      + 0x4b
[0x7f87c09fc770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f87c09f6b9a]                                                       + 0x152b9a
[0x7f87c09f6f94]                                                       + 0x152f94
[0x7f87c09fc867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f87c09f6b9a]                                                       + 0x152b9a
[0x7f87c09f6f94]                                                       + 0x152f94
[0x7f87c09fc50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f87c09f6b9a]                                                       + 0x152b9a
[0x7f87c09f71b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f87c0949f1e]                                                       + 0xa5f1e
[0x7f87c091af2b]    PyObject_Call                                      + 0x4b
[0x7f87c09fc770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f87c09f6b9a]                                                       + 0x152b9a
[0x7f87c09f6f94]                                                       + 0x152f94
[0x7f87c09fc50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f87c09f6b9a]                                                       + 0x152b9a
[0x7f87c09f6f94]                                                       + 0x152f94
[0x7f87c09fc50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f87c09f6b9a]                                                       + 0x152b9a
[0x7f87c09f6f94]                                                       + 0x152f94
[0x7f87c09fc50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f87c09f6b9a]                                                       + 0x152b9a
[0x7f87c09f71b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f87c09f71df]    PyEval_EvalCode                                    + 0x1f
[0x7f87c0a2c3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f87c0a2c56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f87c0a468e8]    Py_Main                                            + 0xff8
[0x562b33bfb2b8]    main                                               + 0x178
[0x7f87c06bb0b3]    __libc_start_main                                  + 0xf3
[0x562b33bfb36e]    _start                                             + 0x2e


======================================== core-js-pure/modules/es.typed-array.at.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7fa6b34eba29]                                                       + 0x7c5a29
[0x7fa6b3671d45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7fa73793a3a8]                                                       + 0x13b3a8
[0x7fa73793c065]                                                       + 0x13d065
[0x7fa73c3ddbd9]    PyCFunction_Call                                   + 0xc9
[0x7fa73c46a6e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7fa73c462b9a]                                                       + 0x152b9a
[0x7fa73c46baa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7fa73c387151]    _PyObject_FastCallDict                             + 0x131
[0x7fa73c3872a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7fa73c386f2b]    PyObject_Call                                      + 0x4b
[0x7fa73c3f8d7f]                                                       + 0xe8d7f
[0x7fa73c3f4149]                                                       + 0xe4149
[0x7fa73c3870ad]    _PyObject_FastCallDict                             + 0x8d
[0x7fa73c462d78]                                                       + 0x152d78
[0x7fa73c46850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa73c462b9a]                                                       + 0x152b9a
[0x7fa73c4631b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fa73c3b5f1e]                                                       + 0xa5f1e
[0x7fa73c386f2b]    PyObject_Call                                      + 0x4b
[0x7fa73c468770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fa73c462b9a]                                                       + 0x152b9a
[0x7fa73c462f94]                                                       + 0x152f94
[0x7fa73c468867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7fa73c462b9a]                                                       + 0x152b9a
[0x7fa73c4631b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fa73c3b5f1e]                                                       + 0xa5f1e
[0x7fa73c386f2b]    PyObject_Call                                      + 0x4b
[0x7fa73c468770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fa73c462b9a]                                                       + 0x152b9a
[0x7fa73c462f94]                                                       + 0x152f94
[0x7fa73c468867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7fa73c462b9a]                                                       + 0x152b9a
[0x7fa73c462f94]                                                       + 0x152f94
[0x7fa73c46850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa73c462b9a]                                                       + 0x152b9a
[0x7fa73c4631b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fa73c3b5f1e]                                                       + 0xa5f1e
[0x7fa73c386f2b]    PyObject_Call                                      + 0x4b
[0x7fa73c468770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fa73c462b9a]                                                       + 0x152b9a
[0x7fa73c462f94]                                                       + 0x152f94
[0x7fa73c46850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa73c462b9a]                                                       + 0x152b9a
[0x7fa73c462f94]                                                       + 0x152f94
[0x7fa73c46850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa73c462b9a]                                                       + 0x152b9a
[0x7fa73c462f94]                                                       + 0x152f94
[0x7fa73c46850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa73c462b9a]                                                       + 0x152b9a
[0x7fa73c4631b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fa73c4631df]    PyEval_EvalCode                                    + 0x1f
[0x7fa73c4983d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fa73c49856f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fa73c4b28e8]    Py_Main                                            + 0xff8
[0x55f28fe542b8]    main                                               + 0x178
[0x7fa73c1270b3]    __libc_start_main                                  + 0xf3
[0x55f28fe5436e]    _start                                             + 0x2e


======================================== core-js-pure/modules/es.typed-array.copy-within.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7fc3d9e66a29]                                                       + 0x7c5a29
[0x7fc3d9fecd45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7fc45e2b53a8]                                                       + 0x13b3a8
[0x7fc45e2b7065]                                                       + 0x13d065
[0x7fc462d58bd9]    PyCFunction_Call                                   + 0xc9
[0x7fc462de56e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7fc462dddb9a]                                                       + 0x152b9a
[0x7fc462de6aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7fc462d02151]    _PyObject_FastCallDict                             + 0x131
[0x7fc462d022a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7fc462d01f2b]    PyObject_Call                                      + 0x4b
[0x7fc462d73d7f]                                                       + 0xe8d7f
[0x7fc462d6f149]                                                       + 0xe4149
[0x7fc462d020ad]    _PyObject_FastCallDict                             + 0x8d
[0x7fc462dddd78]                                                       + 0x152d78
[0x7fc462de350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc462dddb9a]                                                       + 0x152b9a
[0x7fc462dde1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fc462d30f1e]                                                       + 0xa5f1e
[0x7fc462d01f2b]    PyObject_Call                                      + 0x4b
[0x7fc462de3770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fc462dddb9a]                                                       + 0x152b9a
[0x7fc462dddf94]                                                       + 0x152f94
[0x7fc462de3867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7fc462dddb9a]                                                       + 0x152b9a
[0x7fc462dde1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fc462d30f1e]                                                       + 0xa5f1e
[0x7fc462d01f2b]    PyObject_Call                                      + 0x4b
[0x7fc462de3770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fc462dddb9a]                                                       + 0x152b9a
[0x7fc462dddf94]                                                       + 0x152f94
[0x7fc462de3867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7fc462dddb9a]                                                       + 0x152b9a
[0x7fc462dddf94]                                                       + 0x152f94
[0x7fc462de350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc462dddb9a]                                                       + 0x152b9a
[0x7fc462dde1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fc462d30f1e]                                                       + 0xa5f1e
[0x7fc462d01f2b]    PyObject_Call                                      + 0x4b
[0x7fc462de3770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fc462dddb9a]                                                       + 0x152b9a
[0x7fc462dddf94]                                                       + 0x152f94
[0x7fc462de350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc462dddb9a]                                                       + 0x152b9a
[0x7fc462dddf94]                                                       + 0x152f94
[0x7fc462de350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc462dddb9a]                                                       + 0x152b9a
[0x7fc462dddf94]                                                       + 0x152f94
[0x7fc462de350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc462dddb9a]                                                       + 0x152b9a
[0x7fc462dde1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fc462dde1df]    PyEval_EvalCode                                    + 0x1f
[0x7fc462e133d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fc462e1356f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fc462e2d8e8]    Py_Main                                            + 0xff8
[0x55b3b83702b8]    main                                               + 0x178
[0x7fc462aa20b3]    __libc_start_main                                  + 0xf3
[0x55b3b837036e]    _start                                             + 0x2e


======================================== core-js-pure/modules/es.typed-array.every.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f598bda6a29]                                                       + 0x7c5a29
[0x7f598bf2cd45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f5a101f53a8]                                                       + 0x13b3a8
[0x7f5a101f7065]                                                       + 0x13d065
[0x7f5a14c98bd9]    PyCFunction_Call                                   + 0xc9
[0x7f5a14d256e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f5a14d1db9a]                                                       + 0x152b9a
[0x7f5a14d26aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f5a14c42151]    _PyObject_FastCallDict                             + 0x131
[0x7f5a14c422a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f5a14c41f2b]    PyObject_Call                                      + 0x4b
[0x7f5a14cb3d7f]                                                       + 0xe8d7f
[0x7f5a14caf149]                                                       + 0xe4149
[0x7f5a14c420ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f5a14d1dd78]                                                       + 0x152d78
[0x7f5a14d2350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f5a14d1db9a]                                                       + 0x152b9a
[0x7f5a14d1e1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f5a14c70f1e]                                                       + 0xa5f1e
[0x7f5a14c41f2b]    PyObject_Call                                      + 0x4b
[0x7f5a14d23770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f5a14d1db9a]                                                       + 0x152b9a
[0x7f5a14d1df94]                                                       + 0x152f94
[0x7f5a14d23867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f5a14d1db9a]                                                       + 0x152b9a
[0x7f5a14d1e1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f5a14c70f1e]                                                       + 0xa5f1e
[0x7f5a14c41f2b]    PyObject_Call                                      + 0x4b
[0x7f5a14d23770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f5a14d1db9a]                                                       + 0x152b9a
[0x7f5a14d1df94]                                                       + 0x152f94
[0x7f5a14d23867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f5a14d1db9a]                                                       + 0x152b9a
[0x7f5a14d1df94]                                                       + 0x152f94
[0x7f5a14d2350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f5a14d1db9a]                                                       + 0x152b9a
[0x7f5a14d1e1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f5a14c70f1e]                                                       + 0xa5f1e
[0x7f5a14c41f2b]    PyObject_Call                                      + 0x4b
[0x7f5a14d23770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f5a14d1db9a]                                                       + 0x152b9a
[0x7f5a14d1df94]                                                       + 0x152f94
[0x7f5a14d2350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f5a14d1db9a]                                                       + 0x152b9a
[0x7f5a14d1df94]                                                       + 0x152f94
[0x7f5a14d2350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f5a14d1db9a]                                                       + 0x152b9a
[0x7f5a14d1df94]                                                       + 0x152f94
[0x7f5a14d2350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f5a14d1db9a]                                                       + 0x152b9a
[0x7f5a14d1e1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f5a14d1e1df]    PyEval_EvalCode                                    + 0x1f
[0x7f5a14d533d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f5a14d5356f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f5a14d6d8e8]    Py_Main                                            + 0xff8
[0x5602958b22b8]    main                                               + 0x178
[0x7f5a149e20b3]    __libc_start_main                                  + 0xf3
[0x5602958b236e]    _start                                             + 0x2e


======================================== core-js-pure/modules/es.typed-array.fill.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7ff86cc5aa29]                                                       + 0x7c5a29
[0x7ff86cde0d45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7ff8f10a93a8]                                                       + 0x13b3a8
[0x7ff8f10ab065]                                                       + 0x13d065
[0x7ff8f5b4cbd9]    PyCFunction_Call                                   + 0xc9
[0x7ff8f5bd96e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7ff8f5bd1b9a]                                                       + 0x152b9a
[0x7ff8f5bdaaa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7ff8f5af6151]    _PyObject_FastCallDict                             + 0x131
[0x7ff8f5af62a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7ff8f5af5f2b]    PyObject_Call                                      + 0x4b
[0x7ff8f5b67d7f]                                                       + 0xe8d7f
[0x7ff8f5b63149]                                                       + 0xe4149
[0x7ff8f5af60ad]    _PyObject_FastCallDict                             + 0x8d
[0x7ff8f5bd1d78]                                                       + 0x152d78
[0x7ff8f5bd750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff8f5bd1b9a]                                                       + 0x152b9a
[0x7ff8f5bd21b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7ff8f5b24f1e]                                                       + 0xa5f1e
[0x7ff8f5af5f2b]    PyObject_Call                                      + 0x4b
[0x7ff8f5bd7770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7ff8f5bd1b9a]                                                       + 0x152b9a
[0x7ff8f5bd1f94]                                                       + 0x152f94
[0x7ff8f5bd7867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7ff8f5bd1b9a]                                                       + 0x152b9a
[0x7ff8f5bd21b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7ff8f5b24f1e]                                                       + 0xa5f1e
[0x7ff8f5af5f2b]    PyObject_Call                                      + 0x4b
[0x7ff8f5bd7770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7ff8f5bd1b9a]                                                       + 0x152b9a
[0x7ff8f5bd1f94]                                                       + 0x152f94
[0x7ff8f5bd7867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7ff8f5bd1b9a]                                                       + 0x152b9a
[0x7ff8f5bd1f94]                                                       + 0x152f94
[0x7ff8f5bd750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff8f5bd1b9a]                                                       + 0x152b9a
[0x7ff8f5bd21b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7ff8f5b24f1e]                                                       + 0xa5f1e
[0x7ff8f5af5f2b]    PyObject_Call                                      + 0x4b
[0x7ff8f5bd7770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7ff8f5bd1b9a]                                                       + 0x152b9a
[0x7ff8f5bd1f94]                                                       + 0x152f94
[0x7ff8f5bd750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff8f5bd1b9a]                                                       + 0x152b9a
[0x7ff8f5bd1f94]                                                       + 0x152f94
[0x7ff8f5bd750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff8f5bd1b9a]                                                       + 0x152b9a
[0x7ff8f5bd1f94]                                                       + 0x152f94
[0x7ff8f5bd750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff8f5bd1b9a]                                                       + 0x152b9a
[0x7ff8f5bd21b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7ff8f5bd21df]    PyEval_EvalCode                                    + 0x1f
[0x7ff8f5c073d5]    PyRun_FileExFlags                                  + 0xb5
[0x7ff8f5c0756f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7ff8f5c218e8]    Py_Main                                            + 0xff8
[0x559c3befb2b8]    main                                               + 0x178
[0x7ff8f58960b3]    __libc_start_main                                  + 0xf3
[0x559c3befb36e]    _start                                             + 0x2e


======================================== core-js-pure/modules/es.typed-array.filter.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f84c8fa3a29]                                                       + 0x7c5a29
[0x7f84c9129d45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f854d3f23a8]                                                       + 0x13b3a8
[0x7f854d3f4065]                                                       + 0x13d065
[0x7f8551e95bd9]    PyCFunction_Call                                   + 0xc9
[0x7f8551f226e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f8551f1ab9a]                                                       + 0x152b9a
[0x7f8551f23aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f8551e3f151]    _PyObject_FastCallDict                             + 0x131
[0x7f8551e3f2a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f8551e3ef2b]    PyObject_Call                                      + 0x4b
[0x7f8551eb0d7f]                                                       + 0xe8d7f
[0x7f8551eac149]                                                       + 0xe4149
[0x7f8551e3f0ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f8551f1ad78]                                                       + 0x152d78
[0x7f8551f2050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f8551f1ab9a]                                                       + 0x152b9a
[0x7f8551f1b1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f8551e6df1e]                                                       + 0xa5f1e
[0x7f8551e3ef2b]    PyObject_Call                                      + 0x4b
[0x7f8551f20770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f8551f1ab9a]                                                       + 0x152b9a
[0x7f8551f1af94]                                                       + 0x152f94
[0x7f8551f20867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f8551f1ab9a]                                                       + 0x152b9a
[0x7f8551f1b1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f8551e6df1e]                                                       + 0xa5f1e
[0x7f8551e3ef2b]    PyObject_Call                                      + 0x4b
[0x7f8551f20770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f8551f1ab9a]                                                       + 0x152b9a
[0x7f8551f1af94]                                                       + 0x152f94
[0x7f8551f20867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f8551f1ab9a]                                                       + 0x152b9a
[0x7f8551f1af94]                                                       + 0x152f94
[0x7f8551f2050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f8551f1ab9a]                                                       + 0x152b9a
[0x7f8551f1b1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f8551e6df1e]                                                       + 0xa5f1e
[0x7f8551e3ef2b]    PyObject_Call                                      + 0x4b
[0x7f8551f20770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f8551f1ab9a]                                                       + 0x152b9a
[0x7f8551f1af94]                                                       + 0x152f94
[0x7f8551f2050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f8551f1ab9a]                                                       + 0x152b9a
[0x7f8551f1af94]                                                       + 0x152f94
[0x7f8551f2050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f8551f1ab9a]                                                       + 0x152b9a
[0x7f8551f1af94]                                                       + 0x152f94
[0x7f8551f2050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f8551f1ab9a]                                                       + 0x152b9a
[0x7f8551f1b1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f8551f1b1df]    PyEval_EvalCode                                    + 0x1f
[0x7f8551f503d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f8551f5056f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f8551f6a8e8]    Py_Main                                            + 0xff8
[0x558e160252b8]    main                                               + 0x178
[0x7f8551bdf0b3]    __libc_start_main                                  + 0xf3
[0x558e1602536e]    _start                                             + 0x2e


======================================== core-js-pure/modules/es.typed-array.find-index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7fb14a6e7a29]                                                       + 0x7c5a29
[0x7fb14a86dd45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7fb14b6293a8]                                                       + 0x13b3a8
[0x7fb14b62b065]                                                       + 0x13d065
[0x7fb1500ccbd9]    PyCFunction_Call                                   + 0xc9
[0x7fb1501596e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7fb150151b9a]                                                       + 0x152b9a
[0x7fb15015aaa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7fb150076151]    _PyObject_FastCallDict                             + 0x131
[0x7fb1500762a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7fb150075f2b]    PyObject_Call                                      + 0x4b
[0x7fb1500e7d7f]                                                       + 0xe8d7f
[0x7fb1500e3149]                                                       + 0xe4149
[0x7fb1500760ad]    _PyObject_FastCallDict                             + 0x8d
[0x7fb150151d78]                                                       + 0x152d78
[0x7fb15015750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb150151b9a]                                                       + 0x152b9a
[0x7fb1501521b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fb1500a4f1e]                                                       + 0xa5f1e
[0x7fb150075f2b]    PyObject_Call                                      + 0x4b
[0x7fb150157770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fb150151b9a]                                                       + 0x152b9a
[0x7fb150151f94]                                                       + 0x152f94
[0x7fb150157867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7fb150151b9a]                                                       + 0x152b9a
[0x7fb1501521b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fb1500a4f1e]                                                       + 0xa5f1e
[0x7fb150075f2b]    PyObject_Call                                      + 0x4b
[0x7fb150157770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fb150151b9a]                                                       + 0x152b9a
[0x7fb150151f94]                                                       + 0x152f94
[0x7fb150157867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7fb150151b9a]                                                       + 0x152b9a
[0x7fb150151f94]                                                       + 0x152f94
[0x7fb15015750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb150151b9a]                                                       + 0x152b9a
[0x7fb1501521b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fb1500a4f1e]                                                       + 0xa5f1e
[0x7fb150075f2b]    PyObject_Call                                      + 0x4b
[0x7fb150157770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fb150151b9a]                                                       + 0x152b9a
[0x7fb150151f94]                                                       + 0x152f94
[0x7fb15015750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb150151b9a]                                                       + 0x152b9a
[0x7fb150151f94]                                                       + 0x152f94
[0x7fb15015750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb150151b9a]                                                       + 0x152b9a
[0x7fb150151f94]                                                       + 0x152f94
[0x7fb15015750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb150151b9a]                                                       + 0x152b9a
[0x7fb1501521b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fb1501521df]    PyEval_EvalCode                                    + 0x1f
[0x7fb1501873d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fb15018756f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fb1501a18e8]    Py_Main                                            + 0xff8
[0x55f028f292b8]    main                                               + 0x178
[0x7fb14fe160b3]    __libc_start_main                                  + 0xf3
[0x55f028f2936e]    _start                                             + 0x2e


======================================== core-js-pure/modules/es.typed-array.find.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f72b1a26a29]                                                       + 0x7c5a29
[0x7f72b1bacd45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f72b29683a8]                                                       + 0x13b3a8
[0x7f72b296a065]                                                       + 0x13d065
[0x7f72b740bbd9]    PyCFunction_Call                                   + 0xc9
[0x7f72b74986e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f72b7490b9a]                                                       + 0x152b9a
[0x7f72b7499aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f72b73b5151]    _PyObject_FastCallDict                             + 0x131
[0x7f72b73b52a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f72b73b4f2b]    PyObject_Call                                      + 0x4b
[0x7f72b7426d7f]                                                       + 0xe8d7f
[0x7f72b7422149]                                                       + 0xe4149
[0x7f72b73b50ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f72b7490d78]                                                       + 0x152d78
[0x7f72b749650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f72b7490b9a]                                                       + 0x152b9a
[0x7f72b74911b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f72b73e3f1e]                                                       + 0xa5f1e
[0x7f72b73b4f2b]    PyObject_Call                                      + 0x4b
[0x7f72b7496770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f72b7490b9a]                                                       + 0x152b9a
[0x7f72b7490f94]                                                       + 0x152f94
[0x7f72b7496867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f72b7490b9a]                                                       + 0x152b9a
[0x7f72b74911b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f72b73e3f1e]                                                       + 0xa5f1e
[0x7f72b73b4f2b]    PyObject_Call                                      + 0x4b
[0x7f72b7496770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f72b7490b9a]                                                       + 0x152b9a
[0x7f72b7490f94]                                                       + 0x152f94
[0x7f72b7496867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f72b7490b9a]                                                       + 0x152b9a
[0x7f72b7490f94]                                                       + 0x152f94
[0x7f72b749650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f72b7490b9a]                                                       + 0x152b9a
[0x7f72b74911b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f72b73e3f1e]                                                       + 0xa5f1e
[0x7f72b73b4f2b]    PyObject_Call                                      + 0x4b
[0x7f72b7496770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f72b7490b9a]                                                       + 0x152b9a
[0x7f72b7490f94]                                                       + 0x152f94
[0x7f72b749650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f72b7490b9a]                                                       + 0x152b9a
[0x7f72b7490f94]                                                       + 0x152f94
[0x7f72b749650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f72b7490b9a]                                                       + 0x152b9a
[0x7f72b7490f94]                                                       + 0x152f94
[0x7f72b749650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f72b7490b9a]                                                       + 0x152b9a
[0x7f72b74911b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f72b74911df]    PyEval_EvalCode                                    + 0x1f
[0x7f72b74c63d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f72b74c656f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f72b74e08e8]    Py_Main                                            + 0xff8
[0x559c169e52b8]    main                                               + 0x178
[0x7f72b71550b3]    __libc_start_main                                  + 0xf3
[0x559c169e536e]    _start                                             + 0x2e


======================================== core-js-pure/modules/es.typed-array.float32-array.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f6d0fca3a29]                                                       + 0x7c5a29
[0x7f6d0fe29d45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f6d940f23a8]                                                       + 0x13b3a8
[0x7f6d940f4065]                                                       + 0x13d065
[0x7f6d98b95bd9]    PyCFunction_Call                                   + 0xc9
[0x7f6d98c226e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f6d98c1ab9a]                                                       + 0x152b9a
[0x7f6d98c23aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f6d98b3f151]    _PyObject_FastCallDict                             + 0x131
[0x7f6d98b3f2a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f6d98b3ef2b]    PyObject_Call                                      + 0x4b
[0x7f6d98bb0d7f]                                                       + 0xe8d7f
[0x7f6d98bac149]                                                       + 0xe4149
[0x7f6d98b3f0ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f6d98c1ad78]                                                       + 0x152d78
[0x7f6d98c2050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6d98c1ab9a]                                                       + 0x152b9a
[0x7f6d98c1b1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f6d98b6df1e]                                                       + 0xa5f1e
[0x7f6d98b3ef2b]    PyObject_Call                                      + 0x4b
[0x7f6d98c20770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f6d98c1ab9a]                                                       + 0x152b9a
[0x7f6d98c1af94]                                                       + 0x152f94
[0x7f6d98c20867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f6d98c1ab9a]                                                       + 0x152b9a
[0x7f6d98c1b1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f6d98b6df1e]                                                       + 0xa5f1e
[0x7f6d98b3ef2b]    PyObject_Call                                      + 0x4b
[0x7f6d98c20770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f6d98c1ab9a]                                                       + 0x152b9a
[0x7f6d98c1af94]                                                       + 0x152f94
[0x7f6d98c20867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f6d98c1ab9a]                                                       + 0x152b9a
[0x7f6d98c1af94]                                                       + 0x152f94
[0x7f6d98c2050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6d98c1ab9a]                                                       + 0x152b9a
[0x7f6d98c1b1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f6d98b6df1e]                                                       + 0xa5f1e
[0x7f6d98b3ef2b]    PyObject_Call                                      + 0x4b
[0x7f6d98c20770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f6d98c1ab9a]                                                       + 0x152b9a
[0x7f6d98c1af94]                                                       + 0x152f94
[0x7f6d98c2050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6d98c1ab9a]                                                       + 0x152b9a
[0x7f6d98c1af94]                                                       + 0x152f94
[0x7f6d98c2050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6d98c1ab9a]                                                       + 0x152b9a
[0x7f6d98c1af94]                                                       + 0x152f94
[0x7f6d98c2050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6d98c1ab9a]                                                       + 0x152b9a
[0x7f6d98c1b1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f6d98c1b1df]    PyEval_EvalCode                                    + 0x1f
[0x7f6d98c503d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f6d98c5056f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f6d98c6a8e8]    Py_Main                                            + 0xff8
[0x558600d1a2b8]    main                                               + 0x178
[0x7f6d988df0b3]    __libc_start_main                                  + 0xf3
[0x558600d1a36e]    _start                                             + 0x2e


======================================== core-js-pure/modules/es.typed-array.float64-array.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f21a47f0a29]                                                       + 0x7c5a29
[0x7f21a4976d45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f2228c3f3a8]                                                       + 0x13b3a8
[0x7f2228c41065]                                                       + 0x13d065
[0x7f222d6e2bd9]    PyCFunction_Call                                   + 0xc9
[0x7f222d76f6e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f222d767b9a]                                                       + 0x152b9a
[0x7f222d770aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f222d68c151]    _PyObject_FastCallDict                             + 0x131
[0x7f222d68c2a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f222d68bf2b]    PyObject_Call                                      + 0x4b
[0x7f222d6fdd7f]                                                       + 0xe8d7f
[0x7f222d6f9149]                                                       + 0xe4149
[0x7f222d68c0ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f222d767d78]                                                       + 0x152d78
[0x7f222d76d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f222d767b9a]                                                       + 0x152b9a
[0x7f222d7681b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f222d6baf1e]                                                       + 0xa5f1e
[0x7f222d68bf2b]    PyObject_Call                                      + 0x4b
[0x7f222d76d770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f222d767b9a]                                                       + 0x152b9a
[0x7f222d767f94]                                                       + 0x152f94
[0x7f222d76d867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f222d767b9a]                                                       + 0x152b9a
[0x7f222d7681b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f222d6baf1e]                                                       + 0xa5f1e
[0x7f222d68bf2b]    PyObject_Call                                      + 0x4b
[0x7f222d76d770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f222d767b9a]                                                       + 0x152b9a
[0x7f222d767f94]                                                       + 0x152f94
[0x7f222d76d867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f222d767b9a]                                                       + 0x152b9a
[0x7f222d767f94]                                                       + 0x152f94
[0x7f222d76d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f222d767b9a]                                                       + 0x152b9a
[0x7f222d7681b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f222d6baf1e]                                                       + 0xa5f1e
[0x7f222d68bf2b]    PyObject_Call                                      + 0x4b
[0x7f222d76d770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f222d767b9a]                                                       + 0x152b9a
[0x7f222d767f94]                                                       + 0x152f94
[0x7f222d76d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f222d767b9a]                                                       + 0x152b9a
[0x7f222d767f94]                                                       + 0x152f94
[0x7f222d76d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f222d767b9a]                                                       + 0x152b9a
[0x7f222d767f94]                                                       + 0x152f94
[0x7f222d76d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f222d767b9a]                                                       + 0x152b9a
[0x7f222d7681b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f222d7681df]    PyEval_EvalCode                                    + 0x1f
[0x7f222d79d3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f222d79d56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f222d7b78e8]    Py_Main                                            + 0xff8
[0x560f65f392b8]    main                                               + 0x178
[0x7f222d42c0b3]    __libc_start_main                                  + 0xf3
[0x560f65f3936e]    _start                                             + 0x2e


======================================== core-js-pure/modules/es.typed-array.for-each.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f58a01f4a29]                                                       + 0x7c5a29
[0x7f58a037ad45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f59246433a8]                                                       + 0x13b3a8
[0x7f5924645065]                                                       + 0x13d065
[0x7f59290e6bd9]    PyCFunction_Call                                   + 0xc9
[0x7f59291736e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f592916bb9a]                                                       + 0x152b9a
[0x7f5929174aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f5929090151]    _PyObject_FastCallDict                             + 0x131
[0x7f59290902a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f592908ff2b]    PyObject_Call                                      + 0x4b
[0x7f5929101d7f]                                                       + 0xe8d7f
[0x7f59290fd149]                                                       + 0xe4149
[0x7f59290900ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f592916bd78]                                                       + 0x152d78
[0x7f592917150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f592916bb9a]                                                       + 0x152b9a
[0x7f592916c1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f59290bef1e]                                                       + 0xa5f1e
[0x7f592908ff2b]    PyObject_Call                                      + 0x4b
[0x7f5929171770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f592916bb9a]                                                       + 0x152b9a
[0x7f592916bf94]                                                       + 0x152f94
[0x7f5929171867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f592916bb9a]                                                       + 0x152b9a
[0x7f592916c1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f59290bef1e]                                                       + 0xa5f1e
[0x7f592908ff2b]    PyObject_Call                                      + 0x4b
[0x7f5929171770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f592916bb9a]                                                       + 0x152b9a
[0x7f592916bf94]                                                       + 0x152f94
[0x7f5929171867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f592916bb9a]                                                       + 0x152b9a
[0x7f592916bf94]                                                       + 0x152f94
[0x7f592917150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f592916bb9a]                                                       + 0x152b9a
[0x7f592916c1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f59290bef1e]                                                       + 0xa5f1e
[0x7f592908ff2b]    PyObject_Call                                      + 0x4b
[0x7f5929171770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f592916bb9a]                                                       + 0x152b9a
[0x7f592916bf94]                                                       + 0x152f94
[0x7f592917150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f592916bb9a]                                                       + 0x152b9a
[0x7f592916bf94]                                                       + 0x152f94
[0x7f592917150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f592916bb9a]                                                       + 0x152b9a
[0x7f592916bf94]                                                       + 0x152f94
[0x7f592917150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f592916bb9a]                                                       + 0x152b9a
[0x7f592916c1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f592916c1df]    PyEval_EvalCode                                    + 0x1f
[0x7f59291a13d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f59291a156f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f59291bb8e8]    Py_Main                                            + 0xff8
[0x5601cc1c12b8]    main                                               + 0x178
[0x7f5928e300b3]    __libc_start_main                                  + 0xf3
[0x5601cc1c136e]    _start                                             + 0x2e


======================================== core-js-pure/modules/es.typed-array.from.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f7f00cc4a29]                                                       + 0x7c5a29
[0x7f7f00e4ad45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f7f851133a8]                                                       + 0x13b3a8
[0x7f7f85115065]                                                       + 0x13d065
[0x7f7f89bb6bd9]    PyCFunction_Call                                   + 0xc9
[0x7f7f89c436e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f7f89c3bb9a]                                                       + 0x152b9a
[0x7f7f89c44aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f7f89b60151]    _PyObject_FastCallDict                             + 0x131
[0x7f7f89b602a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f7f89b5ff2b]    PyObject_Call                                      + 0x4b
[0x7f7f89bd1d7f]                                                       + 0xe8d7f
[0x7f7f89bcd149]                                                       + 0xe4149
[0x7f7f89b600ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f7f89c3bd78]                                                       + 0x152d78
[0x7f7f89c4150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7f89c3bb9a]                                                       + 0x152b9a
[0x7f7f89c3c1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f7f89b8ef1e]                                                       + 0xa5f1e
[0x7f7f89b5ff2b]    PyObject_Call                                      + 0x4b
[0x7f7f89c41770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f7f89c3bb9a]                                                       + 0x152b9a
[0x7f7f89c3bf94]                                                       + 0x152f94
[0x7f7f89c41867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f7f89c3bb9a]                                                       + 0x152b9a
[0x7f7f89c3c1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f7f89b8ef1e]                                                       + 0xa5f1e
[0x7f7f89b5ff2b]    PyObject_Call                                      + 0x4b
[0x7f7f89c41770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f7f89c3bb9a]                                                       + 0x152b9a
[0x7f7f89c3bf94]                                                       + 0x152f94
[0x7f7f89c41867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f7f89c3bb9a]                                                       + 0x152b9a
[0x7f7f89c3bf94]                                                       + 0x152f94
[0x7f7f89c4150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7f89c3bb9a]                                                       + 0x152b9a
[0x7f7f89c3c1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f7f89b8ef1e]                                                       + 0xa5f1e
[0x7f7f89b5ff2b]    PyObject_Call                                      + 0x4b
[0x7f7f89c41770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f7f89c3bb9a]                                                       + 0x152b9a
[0x7f7f89c3bf94]                                                       + 0x152f94
[0x7f7f89c4150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7f89c3bb9a]                                                       + 0x152b9a
[0x7f7f89c3bf94]                                                       + 0x152f94
[0x7f7f89c4150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7f89c3bb9a]                                                       + 0x152b9a
[0x7f7f89c3bf94]                                                       + 0x152f94
[0x7f7f89c4150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7f89c3bb9a]                                                       + 0x152b9a
[0x7f7f89c3c1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f7f89c3c1df]    PyEval_EvalCode                                    + 0x1f
[0x7f7f89c713d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f7f89c7156f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f7f89c8b8e8]    Py_Main                                            + 0xff8
[0x55fdf6baf2b8]    main                                               + 0x178
[0x7f7f899000b3]    __libc_start_main                                  + 0xf3
[0x55fdf6baf36e]    _start                                             + 0x2e


======================================== core-js-pure/modules/es.typed-array.includes.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7fd162b4ba29]                                                       + 0x7c5a29
[0x7fd162cd1d45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7fd1e6f9a3a8]                                                       + 0x13b3a8
[0x7fd1e6f9c065]                                                       + 0x13d065
[0x7fd1eba3dbd9]    PyCFunction_Call                                   + 0xc9
[0x7fd1ebaca6e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7fd1ebac2b9a]                                                       + 0x152b9a
[0x7fd1ebacbaa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7fd1eb9e7151]    _PyObject_FastCallDict                             + 0x131
[0x7fd1eb9e72a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7fd1eb9e6f2b]    PyObject_Call                                      + 0x4b
[0x7fd1eba58d7f]                                                       + 0xe8d7f
[0x7fd1eba54149]                                                       + 0xe4149
[0x7fd1eb9e70ad]    _PyObject_FastCallDict                             + 0x8d
[0x7fd1ebac2d78]                                                       + 0x152d78
[0x7fd1ebac850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fd1ebac2b9a]                                                       + 0x152b9a
[0x7fd1ebac31b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fd1eba15f1e]                                                       + 0xa5f1e
[0x7fd1eb9e6f2b]    PyObject_Call                                      + 0x4b
[0x7fd1ebac8770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fd1ebac2b9a]                                                       + 0x152b9a
[0x7fd1ebac2f94]                                                       + 0x152f94
[0x7fd1ebac8867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7fd1ebac2b9a]                                                       + 0x152b9a
[0x7fd1ebac31b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fd1eba15f1e]                                                       + 0xa5f1e
[0x7fd1eb9e6f2b]    PyObject_Call                                      + 0x4b
[0x7fd1ebac8770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fd1ebac2b9a]                                                       + 0x152b9a
[0x7fd1ebac2f94]                                                       + 0x152f94
[0x7fd1ebac8867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7fd1ebac2b9a]                                                       + 0x152b9a
[0x7fd1ebac2f94]                                                       + 0x152f94
[0x7fd1ebac850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fd1ebac2b9a]                                                       + 0x152b9a
[0x7fd1ebac31b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fd1eba15f1e]                                                       + 0xa5f1e
[0x7fd1eb9e6f2b]    PyObject_Call                                      + 0x4b
[0x7fd1ebac8770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fd1ebac2b9a]                                                       + 0x152b9a
[0x7fd1ebac2f94]                                                       + 0x152f94
[0x7fd1ebac850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fd1ebac2b9a]                                                       + 0x152b9a
[0x7fd1ebac2f94]                                                       + 0x152f94
[0x7fd1ebac850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fd1ebac2b9a]                                                       + 0x152b9a
[0x7fd1ebac2f94]                                                       + 0x152f94
[0x7fd1ebac850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fd1ebac2b9a]                                                       + 0x152b9a
[0x7fd1ebac31b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fd1ebac31df]    PyEval_EvalCode                                    + 0x1f
[0x7fd1ebaf83d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fd1ebaf856f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fd1ebb128e8]    Py_Main                                            + 0xff8
[0x55c3268942b8]    main                                               + 0x178
[0x7fd1eb7870b3]    __libc_start_main                                  + 0xf3
[0x55c32689436e]    _start                                             + 0x2e


======================================== core-js-pure/modules/es.typed-array.index-of.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f1b304f3a29]                                                       + 0x7c5a29
[0x7f1b30679d45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f1bb49423a8]                                                       + 0x13b3a8
[0x7f1bb4944065]                                                       + 0x13d065
[0x7f1bb93e5bd9]    PyCFunction_Call                                   + 0xc9
[0x7f1bb94726e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f1bb946ab9a]                                                       + 0x152b9a
[0x7f1bb9473aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f1bb938f151]    _PyObject_FastCallDict                             + 0x131
[0x7f1bb938f2a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f1bb938ef2b]    PyObject_Call                                      + 0x4b
[0x7f1bb9400d7f]                                                       + 0xe8d7f
[0x7f1bb93fc149]                                                       + 0xe4149
[0x7f1bb938f0ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f1bb946ad78]                                                       + 0x152d78
[0x7f1bb947050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f1bb946ab9a]                                                       + 0x152b9a
[0x7f1bb946b1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f1bb93bdf1e]                                                       + 0xa5f1e
[0x7f1bb938ef2b]    PyObject_Call                                      + 0x4b
[0x7f1bb9470770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f1bb946ab9a]                                                       + 0x152b9a
[0x7f1bb946af94]                                                       + 0x152f94
[0x7f1bb9470867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f1bb946ab9a]                                                       + 0x152b9a
[0x7f1bb946b1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f1bb93bdf1e]                                                       + 0xa5f1e
[0x7f1bb938ef2b]    PyObject_Call                                      + 0x4b
[0x7f1bb9470770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f1bb946ab9a]                                                       + 0x152b9a
[0x7f1bb946af94]                                                       + 0x152f94
[0x7f1bb9470867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f1bb946ab9a]                                                       + 0x152b9a
[0x7f1bb946af94]                                                       + 0x152f94
[0x7f1bb947050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f1bb946ab9a]                                                       + 0x152b9a
[0x7f1bb946b1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f1bb93bdf1e]                                                       + 0xa5f1e
[0x7f1bb938ef2b]    PyObject_Call                                      + 0x4b
[0x7f1bb9470770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f1bb946ab9a]                                                       + 0x152b9a
[0x7f1bb946af94]                                                       + 0x152f94
[0x7f1bb947050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f1bb946ab9a]                                                       + 0x152b9a
[0x7f1bb946af94]                                                       + 0x152f94
[0x7f1bb947050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f1bb946ab9a]                                                       + 0x152b9a
[0x7f1bb946af94]                                                       + 0x152f94
[0x7f1bb947050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f1bb946ab9a]                                                       + 0x152b9a
[0x7f1bb946b1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f1bb946b1df]    PyEval_EvalCode                                    + 0x1f
[0x7f1bb94a03d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f1bb94a056f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f1bb94ba8e8]    Py_Main                                            + 0xff8
[0x55e7d104c2b8]    main                                               + 0x178
[0x7f1bb912f0b3]    __libc_start_main                                  + 0xf3
[0x55e7d104c36e]    _start                                             + 0x2e


======================================== core-js-pure/modules/es.typed-array.int16-array.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7effe0456a29]                                                       + 0x7c5a29
[0x7effe05dcd45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f00648a53a8]                                                       + 0x13b3a8
[0x7f00648a7065]                                                       + 0x13d065
[0x7f0069348bd9]    PyCFunction_Call                                   + 0xc9
[0x7f00693d56e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f00693cdb9a]                                                       + 0x152b9a
[0x7f00693d6aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f00692f2151]    _PyObject_FastCallDict                             + 0x131
[0x7f00692f22a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f00692f1f2b]    PyObject_Call                                      + 0x4b
[0x7f0069363d7f]                                                       + 0xe8d7f
[0x7f006935f149]                                                       + 0xe4149
[0x7f00692f20ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f00693cdd78]                                                       + 0x152d78
[0x7f00693d350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f00693cdb9a]                                                       + 0x152b9a
[0x7f00693ce1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f0069320f1e]                                                       + 0xa5f1e
[0x7f00692f1f2b]    PyObject_Call                                      + 0x4b
[0x7f00693d3770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f00693cdb9a]                                                       + 0x152b9a
[0x7f00693cdf94]                                                       + 0x152f94
[0x7f00693d3867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f00693cdb9a]                                                       + 0x152b9a
[0x7f00693ce1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f0069320f1e]                                                       + 0xa5f1e
[0x7f00692f1f2b]    PyObject_Call                                      + 0x4b
[0x7f00693d3770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f00693cdb9a]                                                       + 0x152b9a
[0x7f00693cdf94]                                                       + 0x152f94
[0x7f00693d3867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f00693cdb9a]                                                       + 0x152b9a
[0x7f00693cdf94]                                                       + 0x152f94
[0x7f00693d350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f00693cdb9a]                                                       + 0x152b9a
[0x7f00693ce1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f0069320f1e]                                                       + 0xa5f1e
[0x7f00692f1f2b]    PyObject_Call                                      + 0x4b
[0x7f00693d3770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f00693cdb9a]                                                       + 0x152b9a
[0x7f00693cdf94]                                                       + 0x152f94
[0x7f00693d350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f00693cdb9a]                                                       + 0x152b9a
[0x7f00693cdf94]                                                       + 0x152f94
[0x7f00693d350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f00693cdb9a]                                                       + 0x152b9a
[0x7f00693cdf94]                                                       + 0x152f94
[0x7f00693d350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f00693cdb9a]                                                       + 0x152b9a
[0x7f00693ce1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f00693ce1df]    PyEval_EvalCode                                    + 0x1f
[0x7f00694033d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f006940356f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f006941d8e8]    Py_Main                                            + 0xff8
[0x557dbfa3d2b8]    main                                               + 0x178
[0x7f00690920b3]    __libc_start_main                                  + 0xf3
[0x557dbfa3d36e]    _start                                             + 0x2e


======================================== core-js-pure/modules/es.typed-array.int32-array.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f360351ba29]                                                       + 0x7c5a29
[0x7f36036a1d45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f368796a3a8]                                                       + 0x13b3a8
[0x7f368796c065]                                                       + 0x13d065
[0x7f368c40dbd9]    PyCFunction_Call                                   + 0xc9
[0x7f368c49a6e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f368c492b9a]                                                       + 0x152b9a
[0x7f368c49baa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f368c3b7151]    _PyObject_FastCallDict                             + 0x131
[0x7f368c3b72a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f368c3b6f2b]    PyObject_Call                                      + 0x4b
[0x7f368c428d7f]                                                       + 0xe8d7f
[0x7f368c424149]                                                       + 0xe4149
[0x7f368c3b70ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f368c492d78]                                                       + 0x152d78
[0x7f368c49850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f368c492b9a]                                                       + 0x152b9a
[0x7f368c4931b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f368c3e5f1e]                                                       + 0xa5f1e
[0x7f368c3b6f2b]    PyObject_Call                                      + 0x4b
[0x7f368c498770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f368c492b9a]                                                       + 0x152b9a
[0x7f368c492f94]                                                       + 0x152f94
[0x7f368c498867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f368c492b9a]                                                       + 0x152b9a
[0x7f368c4931b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f368c3e5f1e]                                                       + 0xa5f1e
[0x7f368c3b6f2b]    PyObject_Call                                      + 0x4b
[0x7f368c498770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f368c492b9a]                                                       + 0x152b9a
[0x7f368c492f94]                                                       + 0x152f94
[0x7f368c498867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f368c492b9a]                                                       + 0x152b9a
[0x7f368c492f94]                                                       + 0x152f94
[0x7f368c49850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f368c492b9a]                                                       + 0x152b9a
[0x7f368c4931b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f368c3e5f1e]                                                       + 0xa5f1e
[0x7f368c3b6f2b]    PyObject_Call                                      + 0x4b
[0x7f368c498770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f368c492b9a]                                                       + 0x152b9a
[0x7f368c492f94]                                                       + 0x152f94
[0x7f368c49850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f368c492b9a]                                                       + 0x152b9a
[0x7f368c492f94]                                                       + 0x152f94
[0x7f368c49850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f368c492b9a]                                                       + 0x152b9a
[0x7f368c492f94]                                                       + 0x152f94
[0x7f368c49850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f368c492b9a]                                                       + 0x152b9a
[0x7f368c4931b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f368c4931df]    PyEval_EvalCode                                    + 0x1f
[0x7f368c4c83d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f368c4c856f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f368c4e28e8]    Py_Main                                            + 0xff8
[0x55ab90f0e2b8]    main                                               + 0x178
[0x7f368c1570b3]    __libc_start_main                                  + 0xf3
[0x55ab90f0e36e]    _start                                             + 0x2e


======================================== core-js-pure/modules/es.typed-array.int8-array.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7fcaf0451a29]                                                       + 0x7c5a29
[0x7fcaf05d7d45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7fcb748a03a8]                                                       + 0x13b3a8
[0x7fcb748a2065]                                                       + 0x13d065
[0x7fcb79343bd9]    PyCFunction_Call                                   + 0xc9
[0x7fcb793d06e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7fcb793c8b9a]                                                       + 0x152b9a
[0x7fcb793d1aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7fcb792ed151]    _PyObject_FastCallDict                             + 0x131
[0x7fcb792ed2a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7fcb792ecf2b]    PyObject_Call                                      + 0x4b
[0x7fcb7935ed7f]                                                       + 0xe8d7f
[0x7fcb7935a149]                                                       + 0xe4149
[0x7fcb792ed0ad]    _PyObject_FastCallDict                             + 0x8d
[0x7fcb793c8d78]                                                       + 0x152d78
[0x7fcb793ce50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fcb793c8b9a]                                                       + 0x152b9a
[0x7fcb793c91b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fcb7931bf1e]                                                       + 0xa5f1e
[0x7fcb792ecf2b]    PyObject_Call                                      + 0x4b
[0x7fcb793ce770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fcb793c8b9a]                                                       + 0x152b9a
[0x7fcb793c8f94]                                                       + 0x152f94
[0x7fcb793ce867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7fcb793c8b9a]                                                       + 0x152b9a
[0x7fcb793c91b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fcb7931bf1e]                                                       + 0xa5f1e
[0x7fcb792ecf2b]    PyObject_Call                                      + 0x4b
[0x7fcb793ce770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fcb793c8b9a]                                                       + 0x152b9a
[0x7fcb793c8f94]                                                       + 0x152f94
[0x7fcb793ce867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7fcb793c8b9a]                                                       + 0x152b9a
[0x7fcb793c8f94]                                                       + 0x152f94
[0x7fcb793ce50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fcb793c8b9a]                                                       + 0x152b9a
[0x7fcb793c91b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fcb7931bf1e]                                                       + 0xa5f1e
[0x7fcb792ecf2b]    PyObject_Call                                      + 0x4b
[0x7fcb793ce770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fcb793c8b9a]                                                       + 0x152b9a
[0x7fcb793c8f94]                                                       + 0x152f94
[0x7fcb793ce50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fcb793c8b9a]                                                       + 0x152b9a
[0x7fcb793c8f94]                                                       + 0x152f94
[0x7fcb793ce50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fcb793c8b9a]                                                       + 0x152b9a
[0x7fcb793c8f94]                                                       + 0x152f94
[0x7fcb793ce50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fcb793c8b9a]                                                       + 0x152b9a
[0x7fcb793c91b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fcb793c91df]    PyEval_EvalCode                                    + 0x1f
[0x7fcb793fe3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fcb793fe56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fcb794188e8]    Py_Main                                            + 0xff8
[0x55e5265652b8]    main                                               + 0x178
[0x7fcb7908d0b3]    __libc_start_main                                  + 0xf3
[0x55e52656536e]    _start                                             + 0x2e


======================================== core-js-pure/modules/es.typed-array.iterator.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7fb3303b4a29]                                                       + 0x7c5a29
[0x7fb33053ad45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7fb3312f63a8]                                                       + 0x13b3a8
[0x7fb3312f8065]                                                       + 0x13d065
[0x7fb335d99bd9]    PyCFunction_Call                                   + 0xc9
[0x7fb335e266e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7fb335e1eb9a]                                                       + 0x152b9a
[0x7fb335e27aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7fb335d43151]    _PyObject_FastCallDict                             + 0x131
[0x7fb335d432a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7fb335d42f2b]    PyObject_Call                                      + 0x4b
[0x7fb335db4d7f]                                                       + 0xe8d7f
[0x7fb335db0149]                                                       + 0xe4149
[0x7fb335d430ad]    _PyObject_FastCallDict                             + 0x8d
[0x7fb335e1ed78]                                                       + 0x152d78
[0x7fb335e2450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb335e1eb9a]                                                       + 0x152b9a
[0x7fb335e1f1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fb335d71f1e]                                                       + 0xa5f1e
[0x7fb335d42f2b]    PyObject_Call                                      + 0x4b
[0x7fb335e24770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fb335e1eb9a]                                                       + 0x152b9a
[0x7fb335e1ef94]                                                       + 0x152f94
[0x7fb335e24867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7fb335e1eb9a]                                                       + 0x152b9a
[0x7fb335e1f1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fb335d71f1e]                                                       + 0xa5f1e
[0x7fb335d42f2b]    PyObject_Call                                      + 0x4b
[0x7fb335e24770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fb335e1eb9a]                                                       + 0x152b9a
[0x7fb335e1ef94]                                                       + 0x152f94
[0x7fb335e24867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7fb335e1eb9a]                                                       + 0x152b9a
[0x7fb335e1ef94]                                                       + 0x152f94
[0x7fb335e2450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb335e1eb9a]                                                       + 0x152b9a
[0x7fb335e1f1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fb335d71f1e]                                                       + 0xa5f1e
[0x7fb335d42f2b]    PyObject_Call                                      + 0x4b
[0x7fb335e24770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fb335e1eb9a]                                                       + 0x152b9a
[0x7fb335e1ef94]                                                       + 0x152f94
[0x7fb335e2450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb335e1eb9a]                                                       + 0x152b9a
[0x7fb335e1ef94]                                                       + 0x152f94
[0x7fb335e2450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb335e1eb9a]                                                       + 0x152b9a
[0x7fb335e1ef94]                                                       + 0x152f94
[0x7fb335e2450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb335e1eb9a]                                                       + 0x152b9a
[0x7fb335e1f1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fb335e1f1df]    PyEval_EvalCode                                    + 0x1f
[0x7fb335e543d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fb335e5456f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fb335e6e8e8]    Py_Main                                            + 0xff8
[0x55f4321cc2b8]    main                                               + 0x178
[0x7fb335ae30b3]    __libc_start_main                                  + 0xf3
[0x55f4321cc36e]    _start                                             + 0x2e


======================================== core-js-pure/modules/es.typed-array.join.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f52d6aeba29]                                                       + 0x7c5a29
[0x7f52d6c71d45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f52d7a2d3a8]                                                       + 0x13b3a8
[0x7f52d7a2f065]                                                       + 0x13d065
[0x7f52dc4d0bd9]    PyCFunction_Call                                   + 0xc9
[0x7f52dc55d6e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f52dc555b9a]                                                       + 0x152b9a
[0x7f52dc55eaa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f52dc47a151]    _PyObject_FastCallDict                             + 0x131
[0x7f52dc47a2a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f52dc479f2b]    PyObject_Call                                      + 0x4b
[0x7f52dc4ebd7f]                                                       + 0xe8d7f
[0x7f52dc4e7149]                                                       + 0xe4149
[0x7f52dc47a0ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f52dc555d78]                                                       + 0x152d78
[0x7f52dc55b50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f52dc555b9a]                                                       + 0x152b9a
[0x7f52dc5561b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f52dc4a8f1e]                                                       + 0xa5f1e
[0x7f52dc479f2b]    PyObject_Call                                      + 0x4b
[0x7f52dc55b770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f52dc555b9a]                                                       + 0x152b9a
[0x7f52dc555f94]                                                       + 0x152f94
[0x7f52dc55b867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f52dc555b9a]                                                       + 0x152b9a
[0x7f52dc5561b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f52dc4a8f1e]                                                       + 0xa5f1e
[0x7f52dc479f2b]    PyObject_Call                                      + 0x4b
[0x7f52dc55b770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f52dc555b9a]                                                       + 0x152b9a
[0x7f52dc555f94]                                                       + 0x152f94
[0x7f52dc55b867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f52dc555b9a]                                                       + 0x152b9a
[0x7f52dc555f94]                                                       + 0x152f94
[0x7f52dc55b50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f52dc555b9a]                                                       + 0x152b9a
[0x7f52dc5561b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f52dc4a8f1e]                                                       + 0xa5f1e
[0x7f52dc479f2b]    PyObject_Call                                      + 0x4b
[0x7f52dc55b770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f52dc555b9a]                                                       + 0x152b9a
[0x7f52dc555f94]                                                       + 0x152f94
[0x7f52dc55b50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f52dc555b9a]                                                       + 0x152b9a
[0x7f52dc555f94]                                                       + 0x152f94
[0x7f52dc55b50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f52dc555b9a]                                                       + 0x152b9a
[0x7f52dc555f94]                                                       + 0x152f94
[0x7f52dc55b50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f52dc555b9a]                                                       + 0x152b9a
[0x7f52dc5561b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f52dc5561df]    PyEval_EvalCode                                    + 0x1f
[0x7f52dc58b3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f52dc58b56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f52dc5a58e8]    Py_Main                                            + 0xff8
[0x5623a5b6d2b8]    main                                               + 0x178
[0x7f52dc21a0b3]    __libc_start_main                                  + 0xf3
[0x5623a5b6d36e]    _start                                             + 0x2e


======================================== core-js-pure/modules/es.typed-array.last-index-of.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f89c06a4a29]                                                       + 0x7c5a29
[0x7f89c082ad45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f8a44af33a8]                                                       + 0x13b3a8
[0x7f8a44af5065]                                                       + 0x13d065
[0x7f8a49596bd9]    PyCFunction_Call                                   + 0xc9
[0x7f8a496236e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f8a4961bb9a]                                                       + 0x152b9a
[0x7f8a49624aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f8a49540151]    _PyObject_FastCallDict                             + 0x131
[0x7f8a495402a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f8a4953ff2b]    PyObject_Call                                      + 0x4b
[0x7f8a495b1d7f]                                                       + 0xe8d7f
[0x7f8a495ad149]                                                       + 0xe4149
[0x7f8a495400ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f8a4961bd78]                                                       + 0x152d78
[0x7f8a4962150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f8a4961bb9a]                                                       + 0x152b9a
[0x7f8a4961c1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f8a4956ef1e]                                                       + 0xa5f1e
[0x7f8a4953ff2b]    PyObject_Call                                      + 0x4b
[0x7f8a49621770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f8a4961bb9a]                                                       + 0x152b9a
[0x7f8a4961bf94]                                                       + 0x152f94
[0x7f8a49621867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f8a4961bb9a]                                                       + 0x152b9a
[0x7f8a4961c1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f8a4956ef1e]                                                       + 0xa5f1e
[0x7f8a4953ff2b]    PyObject_Call                                      + 0x4b
[0x7f8a49621770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f8a4961bb9a]                                                       + 0x152b9a
[0x7f8a4961bf94]                                                       + 0x152f94
[0x7f8a49621867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f8a4961bb9a]                                                       + 0x152b9a
[0x7f8a4961bf94]                                                       + 0x152f94
[0x7f8a4962150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f8a4961bb9a]                                                       + 0x152b9a
[0x7f8a4961c1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f8a4956ef1e]                                                       + 0xa5f1e
[0x7f8a4953ff2b]    PyObject_Call                                      + 0x4b
[0x7f8a49621770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f8a4961bb9a]                                                       + 0x152b9a
[0x7f8a4961bf94]                                                       + 0x152f94
[0x7f8a4962150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f8a4961bb9a]                                                       + 0x152b9a
[0x7f8a4961bf94]                                                       + 0x152f94
[0x7f8a4962150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f8a4961bb9a]                                                       + 0x152b9a
[0x7f8a4961bf94]                                                       + 0x152f94
[0x7f8a4962150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f8a4961bb9a]                                                       + 0x152b9a
[0x7f8a4961c1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f8a4961c1df]    PyEval_EvalCode                                    + 0x1f
[0x7f8a496513d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f8a4965156f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f8a4966b8e8]    Py_Main                                            + 0xff8
[0x5604fc4f72b8]    main                                               + 0x178
[0x7f8a492e00b3]    __libc_start_main                                  + 0xf3
[0x5604fc4f736e]    _start                                             + 0x2e


======================================== core-js-pure/modules/es.typed-array.map.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f67cfef0a29]                                                       + 0x7c5a29
[0x7f67d0076d45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f685433f3a8]                                                       + 0x13b3a8
[0x7f6854341065]                                                       + 0x13d065
[0x7f6858de2bd9]    PyCFunction_Call                                   + 0xc9
[0x7f6858e6f6e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f6858e67b9a]                                                       + 0x152b9a
[0x7f6858e70aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f6858d8c151]    _PyObject_FastCallDict                             + 0x131
[0x7f6858d8c2a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f6858d8bf2b]    PyObject_Call                                      + 0x4b
[0x7f6858dfdd7f]                                                       + 0xe8d7f
[0x7f6858df9149]                                                       + 0xe4149
[0x7f6858d8c0ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f6858e67d78]                                                       + 0x152d78
[0x7f6858e6d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6858e67b9a]                                                       + 0x152b9a
[0x7f6858e681b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f6858dbaf1e]                                                       + 0xa5f1e
[0x7f6858d8bf2b]    PyObject_Call                                      + 0x4b
[0x7f6858e6d770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f6858e67b9a]                                                       + 0x152b9a
[0x7f6858e67f94]                                                       + 0x152f94
[0x7f6858e6d867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f6858e67b9a]                                                       + 0x152b9a
[0x7f6858e681b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f6858dbaf1e]                                                       + 0xa5f1e
[0x7f6858d8bf2b]    PyObject_Call                                      + 0x4b
[0x7f6858e6d770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f6858e67b9a]                                                       + 0x152b9a
[0x7f6858e67f94]                                                       + 0x152f94
[0x7f6858e6d867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f6858e67b9a]                                                       + 0x152b9a
[0x7f6858e67f94]                                                       + 0x152f94
[0x7f6858e6d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6858e67b9a]                                                       + 0x152b9a
[0x7f6858e681b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f6858dbaf1e]                                                       + 0xa5f1e
[0x7f6858d8bf2b]    PyObject_Call                                      + 0x4b
[0x7f6858e6d770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f6858e67b9a]                                                       + 0x152b9a
[0x7f6858e67f94]                                                       + 0x152f94
[0x7f6858e6d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6858e67b9a]                                                       + 0x152b9a
[0x7f6858e67f94]                                                       + 0x152f94
[0x7f6858e6d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6858e67b9a]                                                       + 0x152b9a
[0x7f6858e67f94]                                                       + 0x152f94
[0x7f6858e6d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6858e67b9a]                                                       + 0x152b9a
[0x7f6858e681b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f6858e681df]    PyEval_EvalCode                                    + 0x1f
[0x7f6858e9d3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f6858e9d56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f6858eb78e8]    Py_Main                                            + 0xff8
[0x5606737ba2b8]    main                                               + 0x178
[0x7f6858b2c0b3]    __libc_start_main                                  + 0xf3
[0x5606737ba36e]    _start                                             + 0x2e


======================================== core-js-pure/modules/es.typed-array.of.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7fabeab86a29]                                                       + 0x7c5a29
[0x7fabead0cd45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7fac6efd53a8]                                                       + 0x13b3a8
[0x7fac6efd7065]                                                       + 0x13d065
[0x7fac73a78bd9]    PyCFunction_Call                                   + 0xc9
[0x7fac73b056e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7fac73afdb9a]                                                       + 0x152b9a
[0x7fac73b06aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7fac73a22151]    _PyObject_FastCallDict                             + 0x131
[0x7fac73a222a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7fac73a21f2b]    PyObject_Call                                      + 0x4b
[0x7fac73a93d7f]                                                       + 0xe8d7f
[0x7fac73a8f149]                                                       + 0xe4149
[0x7fac73a220ad]    _PyObject_FastCallDict                             + 0x8d
[0x7fac73afdd78]                                                       + 0x152d78
[0x7fac73b0350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fac73afdb9a]                                                       + 0x152b9a
[0x7fac73afe1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fac73a50f1e]                                                       + 0xa5f1e
[0x7fac73a21f2b]    PyObject_Call                                      + 0x4b
[0x7fac73b03770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fac73afdb9a]                                                       + 0x152b9a
[0x7fac73afdf94]                                                       + 0x152f94
[0x7fac73b03867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7fac73afdb9a]                                                       + 0x152b9a
[0x7fac73afe1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fac73a50f1e]                                                       + 0xa5f1e
[0x7fac73a21f2b]    PyObject_Call                                      + 0x4b
[0x7fac73b03770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fac73afdb9a]                                                       + 0x152b9a
[0x7fac73afdf94]                                                       + 0x152f94
[0x7fac73b03867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7fac73afdb9a]                                                       + 0x152b9a
[0x7fac73afdf94]                                                       + 0x152f94
[0x7fac73b0350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fac73afdb9a]                                                       + 0x152b9a
[0x7fac73afe1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fac73a50f1e]                                                       + 0xa5f1e
[0x7fac73a21f2b]    PyObject_Call                                      + 0x4b
[0x7fac73b03770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fac73afdb9a]                                                       + 0x152b9a
[0x7fac73afdf94]                                                       + 0x152f94
[0x7fac73b0350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fac73afdb9a]                                                       + 0x152b9a
[0x7fac73afdf94]                                                       + 0x152f94
[0x7fac73b0350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fac73afdb9a]                                                       + 0x152b9a
[0x7fac73afdf94]                                                       + 0x152f94
[0x7fac73b0350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fac73afdb9a]                                                       + 0x152b9a
[0x7fac73afe1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fac73afe1df]    PyEval_EvalCode                                    + 0x1f
[0x7fac73b333d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fac73b3356f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fac73b4d8e8]    Py_Main                                            + 0xff8
[0x55799f5f12b8]    main                                               + 0x178
[0x7fac737c20b3]    __libc_start_main                                  + 0xf3
[0x55799f5f136e]    _start                                             + 0x2e


======================================== core-js-pure/modules/es.typed-array.reduce-right.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f9a0b1c6a29]                                                       + 0x7c5a29
[0x7f9a0b34cd45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f9a0c1083a8]                                                       + 0x13b3a8
[0x7f9a0c10a065]                                                       + 0x13d065
[0x7f9a10babbd9]    PyCFunction_Call                                   + 0xc9
[0x7f9a10c386e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f9a10c30b9a]                                                       + 0x152b9a
[0x7f9a10c39aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f9a10b55151]    _PyObject_FastCallDict                             + 0x131
[0x7f9a10b552a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f9a10b54f2b]    PyObject_Call                                      + 0x4b
[0x7f9a10bc6d7f]                                                       + 0xe8d7f
[0x7f9a10bc2149]                                                       + 0xe4149
[0x7f9a10b550ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f9a10c30d78]                                                       + 0x152d78
[0x7f9a10c3650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f9a10c30b9a]                                                       + 0x152b9a
[0x7f9a10c311b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f9a10b83f1e]                                                       + 0xa5f1e
[0x7f9a10b54f2b]    PyObject_Call                                      + 0x4b
[0x7f9a10c36770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f9a10c30b9a]                                                       + 0x152b9a
[0x7f9a10c30f94]                                                       + 0x152f94
[0x7f9a10c36867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f9a10c30b9a]                                                       + 0x152b9a
[0x7f9a10c311b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f9a10b83f1e]                                                       + 0xa5f1e
[0x7f9a10b54f2b]    PyObject_Call                                      + 0x4b
[0x7f9a10c36770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f9a10c30b9a]                                                       + 0x152b9a
[0x7f9a10c30f94]                                                       + 0x152f94
[0x7f9a10c36867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f9a10c30b9a]                                                       + 0x152b9a
[0x7f9a10c30f94]                                                       + 0x152f94
[0x7f9a10c3650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f9a10c30b9a]                                                       + 0x152b9a
[0x7f9a10c311b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f9a10b83f1e]                                                       + 0xa5f1e
[0x7f9a10b54f2b]    PyObject_Call                                      + 0x4b
[0x7f9a10c36770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f9a10c30b9a]                                                       + 0x152b9a
[0x7f9a10c30f94]                                                       + 0x152f94
[0x7f9a10c3650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f9a10c30b9a]                                                       + 0x152b9a
[0x7f9a10c30f94]                                                       + 0x152f94
[0x7f9a10c3650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f9a10c30b9a]                                                       + 0x152b9a
[0x7f9a10c30f94]                                                       + 0x152f94
[0x7f9a10c3650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f9a10c30b9a]                                                       + 0x152b9a
[0x7f9a10c311b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f9a10c311df]    PyEval_EvalCode                                    + 0x1f
[0x7f9a10c663d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f9a10c6656f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f9a10c808e8]    Py_Main                                            + 0xff8
[0x559e1c41d2b8]    main                                               + 0x178
[0x7f9a108f50b3]    __libc_start_main                                  + 0xf3
[0x559e1c41d36e]    _start                                             + 0x2e


======================================== core-js-pure/modules/es.typed-array.reduce.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f6b353bda29]                                                       + 0x7c5a29
[0x7f6b35543d45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f6b362ff3a8]                                                       + 0x13b3a8
[0x7f6b36301065]                                                       + 0x13d065
[0x7f6b3ada2bd9]    PyCFunction_Call                                   + 0xc9
[0x7f6b3ae2f6e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f6b3ae27b9a]                                                       + 0x152b9a
[0x7f6b3ae30aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f6b3ad4c151]    _PyObject_FastCallDict                             + 0x131
[0x7f6b3ad4c2a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f6b3ad4bf2b]    PyObject_Call                                      + 0x4b
[0x7f6b3adbdd7f]                                                       + 0xe8d7f
[0x7f6b3adb9149]                                                       + 0xe4149
[0x7f6b3ad4c0ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f6b3ae27d78]                                                       + 0x152d78
[0x7f6b3ae2d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6b3ae27b9a]                                                       + 0x152b9a
[0x7f6b3ae281b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f6b3ad7af1e]                                                       + 0xa5f1e
[0x7f6b3ad4bf2b]    PyObject_Call                                      + 0x4b
[0x7f6b3ae2d770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f6b3ae27b9a]                                                       + 0x152b9a
[0x7f6b3ae27f94]                                                       + 0x152f94
[0x7f6b3ae2d867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f6b3ae27b9a]                                                       + 0x152b9a
[0x7f6b3ae281b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f6b3ad7af1e]                                                       + 0xa5f1e
[0x7f6b3ad4bf2b]    PyObject_Call                                      + 0x4b
[0x7f6b3ae2d770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f6b3ae27b9a]                                                       + 0x152b9a
[0x7f6b3ae27f94]                                                       + 0x152f94
[0x7f6b3ae2d867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f6b3ae27b9a]                                                       + 0x152b9a
[0x7f6b3ae27f94]                                                       + 0x152f94
[0x7f6b3ae2d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6b3ae27b9a]                                                       + 0x152b9a
[0x7f6b3ae281b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f6b3ad7af1e]                                                       + 0xa5f1e
[0x7f6b3ad4bf2b]    PyObject_Call                                      + 0x4b
[0x7f6b3ae2d770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f6b3ae27b9a]                                                       + 0x152b9a
[0x7f6b3ae27f94]                                                       + 0x152f94
[0x7f6b3ae2d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6b3ae27b9a]                                                       + 0x152b9a
[0x7f6b3ae27f94]                                                       + 0x152f94
[0x7f6b3ae2d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6b3ae27b9a]                                                       + 0x152b9a
[0x7f6b3ae27f94]                                                       + 0x152f94
[0x7f6b3ae2d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6b3ae27b9a]                                                       + 0x152b9a
[0x7f6b3ae281b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f6b3ae281df]    PyEval_EvalCode                                    + 0x1f
[0x7f6b3ae5d3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f6b3ae5d56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f6b3ae778e8]    Py_Main                                            + 0xff8
[0x557b6ae472b8]    main                                               + 0x178
[0x7f6b3aaec0b3]    __libc_start_main                                  + 0xf3
[0x557b6ae4736e]    _start                                             + 0x2e


======================================== core-js-pure/modules/es.typed-array.reverse.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7faa644b1a29]                                                       + 0x7c5a29
[0x7faa64637d45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7faae89003a8]                                                       + 0x13b3a8
[0x7faae8902065]                                                       + 0x13d065
[0x7faaed3a3bd9]    PyCFunction_Call                                   + 0xc9
[0x7faaed4306e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7faaed428b9a]                                                       + 0x152b9a
[0x7faaed431aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7faaed34d151]    _PyObject_FastCallDict                             + 0x131
[0x7faaed34d2a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7faaed34cf2b]    PyObject_Call                                      + 0x4b
[0x7faaed3bed7f]                                                       + 0xe8d7f
[0x7faaed3ba149]                                                       + 0xe4149
[0x7faaed34d0ad]    _PyObject_FastCallDict                             + 0x8d
[0x7faaed428d78]                                                       + 0x152d78
[0x7faaed42e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7faaed428b9a]                                                       + 0x152b9a
[0x7faaed4291b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7faaed37bf1e]                                                       + 0xa5f1e
[0x7faaed34cf2b]    PyObject_Call                                      + 0x4b
[0x7faaed42e770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7faaed428b9a]                                                       + 0x152b9a
[0x7faaed428f94]                                                       + 0x152f94
[0x7faaed42e867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7faaed428b9a]                                                       + 0x152b9a
[0x7faaed4291b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7faaed37bf1e]                                                       + 0xa5f1e
[0x7faaed34cf2b]    PyObject_Call                                      + 0x4b
[0x7faaed42e770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7faaed428b9a]                                                       + 0x152b9a
[0x7faaed428f94]                                                       + 0x152f94
[0x7faaed42e867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7faaed428b9a]                                                       + 0x152b9a
[0x7faaed428f94]                                                       + 0x152f94
[0x7faaed42e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7faaed428b9a]                                                       + 0x152b9a
[0x7faaed4291b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7faaed37bf1e]                                                       + 0xa5f1e
[0x7faaed34cf2b]    PyObject_Call                                      + 0x4b
[0x7faaed42e770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7faaed428b9a]                                                       + 0x152b9a
[0x7faaed428f94]                                                       + 0x152f94
[0x7faaed42e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7faaed428b9a]                                                       + 0x152b9a
[0x7faaed428f94]                                                       + 0x152f94
[0x7faaed42e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7faaed428b9a]                                                       + 0x152b9a
[0x7faaed428f94]                                                       + 0x152f94
[0x7faaed42e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7faaed428b9a]                                                       + 0x152b9a
[0x7faaed4291b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7faaed4291df]    PyEval_EvalCode                                    + 0x1f
[0x7faaed45e3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7faaed45e56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7faaed4788e8]    Py_Main                                            + 0xff8
[0x55dae1d942b8]    main                                               + 0x178
[0x7faaed0ed0b3]    __libc_start_main                                  + 0xf3
[0x55dae1d9436e]    _start                                             + 0x2e


======================================== core-js-pure/modules/es.typed-array.set.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7fe6894c9a29]                                                       + 0x7c5a29
[0x7fe68964fd45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7fe70d9183a8]                                                       + 0x13b3a8
[0x7fe70d91a065]                                                       + 0x13d065
[0x7fe7123bbbd9]    PyCFunction_Call                                   + 0xc9
[0x7fe7124486e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7fe712440b9a]                                                       + 0x152b9a
[0x7fe712449aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7fe712365151]    _PyObject_FastCallDict                             + 0x131
[0x7fe7123652a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7fe712364f2b]    PyObject_Call                                      + 0x4b
[0x7fe7123d6d7f]                                                       + 0xe8d7f
[0x7fe7123d2149]                                                       + 0xe4149
[0x7fe7123650ad]    _PyObject_FastCallDict                             + 0x8d
[0x7fe712440d78]                                                       + 0x152d78
[0x7fe71244650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe712440b9a]                                                       + 0x152b9a
[0x7fe7124411b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fe712393f1e]                                                       + 0xa5f1e
[0x7fe712364f2b]    PyObject_Call                                      + 0x4b
[0x7fe712446770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fe712440b9a]                                                       + 0x152b9a
[0x7fe712440f94]                                                       + 0x152f94
[0x7fe712446867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7fe712440b9a]                                                       + 0x152b9a
[0x7fe7124411b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fe712393f1e]                                                       + 0xa5f1e
[0x7fe712364f2b]    PyObject_Call                                      + 0x4b
[0x7fe712446770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fe712440b9a]                                                       + 0x152b9a
[0x7fe712440f94]                                                       + 0x152f94
[0x7fe712446867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7fe712440b9a]                                                       + 0x152b9a
[0x7fe712440f94]                                                       + 0x152f94
[0x7fe71244650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe712440b9a]                                                       + 0x152b9a
[0x7fe7124411b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fe712393f1e]                                                       + 0xa5f1e
[0x7fe712364f2b]    PyObject_Call                                      + 0x4b
[0x7fe712446770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fe712440b9a]                                                       + 0x152b9a
[0x7fe712440f94]                                                       + 0x152f94
[0x7fe71244650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe712440b9a]                                                       + 0x152b9a
[0x7fe712440f94]                                                       + 0x152f94
[0x7fe71244650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe712440b9a]                                                       + 0x152b9a
[0x7fe712440f94]                                                       + 0x152f94
[0x7fe71244650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe712440b9a]                                                       + 0x152b9a
[0x7fe7124411b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fe7124411df]    PyEval_EvalCode                                    + 0x1f
[0x7fe7124763d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fe71247656f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fe7124908e8]    Py_Main                                            + 0xff8
[0x5608837da2b8]    main                                               + 0x178
[0x7fe7121050b3]    __libc_start_main                                  + 0xf3
[0x5608837da36e]    _start                                             + 0x2e


======================================== core-js-pure/modules/es.typed-array.slice.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7fd5c8878a29]                                                       + 0x7c5a29
[0x7fd5c89fed45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7fd64ccc73a8]                                                       + 0x13b3a8
[0x7fd64ccc9065]                                                       + 0x13d065
[0x7fd65176abd9]    PyCFunction_Call                                   + 0xc9
[0x7fd6517f76e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7fd6517efb9a]                                                       + 0x152b9a
[0x7fd6517f8aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7fd651714151]    _PyObject_FastCallDict                             + 0x131
[0x7fd6517142a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7fd651713f2b]    PyObject_Call                                      + 0x4b
[0x7fd651785d7f]                                                       + 0xe8d7f
[0x7fd651781149]                                                       + 0xe4149
[0x7fd6517140ad]    _PyObject_FastCallDict                             + 0x8d
[0x7fd6517efd78]                                                       + 0x152d78
[0x7fd6517f550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fd6517efb9a]                                                       + 0x152b9a
[0x7fd6517f01b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fd651742f1e]                                                       + 0xa5f1e
[0x7fd651713f2b]    PyObject_Call                                      + 0x4b
[0x7fd6517f5770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fd6517efb9a]                                                       + 0x152b9a
[0x7fd6517eff94]                                                       + 0x152f94
[0x7fd6517f5867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7fd6517efb9a]                                                       + 0x152b9a
[0x7fd6517f01b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fd651742f1e]                                                       + 0xa5f1e
[0x7fd651713f2b]    PyObject_Call                                      + 0x4b
[0x7fd6517f5770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fd6517efb9a]                                                       + 0x152b9a
[0x7fd6517eff94]                                                       + 0x152f94
[0x7fd6517f5867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7fd6517efb9a]                                                       + 0x152b9a
[0x7fd6517eff94]                                                       + 0x152f94
[0x7fd6517f550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fd6517efb9a]                                                       + 0x152b9a
[0x7fd6517f01b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fd651742f1e]                                                       + 0xa5f1e
[0x7fd651713f2b]    PyObject_Call                                      + 0x4b
[0x7fd6517f5770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fd6517efb9a]                                                       + 0x152b9a
[0x7fd6517eff94]                                                       + 0x152f94
[0x7fd6517f550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fd6517efb9a]                                                       + 0x152b9a
[0x7fd6517eff94]                                                       + 0x152f94
[0x7fd6517f550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fd6517efb9a]                                                       + 0x152b9a
[0x7fd6517eff94]                                                       + 0x152f94
[0x7fd6517f550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fd6517efb9a]                                                       + 0x152b9a
[0x7fd6517f01b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fd6517f01df]    PyEval_EvalCode                                    + 0x1f
[0x7fd6518253d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fd65182556f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fd65183f8e8]    Py_Main                                            + 0xff8
[0x5600bf5642b8]    main                                               + 0x178
[0x7fd6514b40b3]    __libc_start_main                                  + 0xf3
[0x5600bf56436e]    _start                                             + 0x2e


======================================== core-js-pure/modules/es.typed-array.some.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f40fdf84a29]                                                       + 0x7c5a29
[0x7f40fe10ad45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f41823d33a8]                                                       + 0x13b3a8
[0x7f41823d5065]                                                       + 0x13d065
[0x7f4186e76bd9]    PyCFunction_Call                                   + 0xc9
[0x7f4186f036e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f4186efbb9a]                                                       + 0x152b9a
[0x7f4186f04aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f4186e20151]    _PyObject_FastCallDict                             + 0x131
[0x7f4186e202a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f4186e1ff2b]    PyObject_Call                                      + 0x4b
[0x7f4186e91d7f]                                                       + 0xe8d7f
[0x7f4186e8d149]                                                       + 0xe4149
[0x7f4186e200ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f4186efbd78]                                                       + 0x152d78
[0x7f4186f0150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4186efbb9a]                                                       + 0x152b9a
[0x7f4186efc1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f4186e4ef1e]                                                       + 0xa5f1e
[0x7f4186e1ff2b]    PyObject_Call                                      + 0x4b
[0x7f4186f01770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f4186efbb9a]                                                       + 0x152b9a
[0x7f4186efbf94]                                                       + 0x152f94
[0x7f4186f01867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f4186efbb9a]                                                       + 0x152b9a
[0x7f4186efc1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f4186e4ef1e]                                                       + 0xa5f1e
[0x7f4186e1ff2b]    PyObject_Call                                      + 0x4b
[0x7f4186f01770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f4186efbb9a]                                                       + 0x152b9a
[0x7f4186efbf94]                                                       + 0x152f94
[0x7f4186f01867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f4186efbb9a]                                                       + 0x152b9a
[0x7f4186efbf94]                                                       + 0x152f94
[0x7f4186f0150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4186efbb9a]                                                       + 0x152b9a
[0x7f4186efc1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f4186e4ef1e]                                                       + 0xa5f1e
[0x7f4186e1ff2b]    PyObject_Call                                      + 0x4b
[0x7f4186f01770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f4186efbb9a]                                                       + 0x152b9a
[0x7f4186efbf94]                                                       + 0x152f94
[0x7f4186f0150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4186efbb9a]                                                       + 0x152b9a
[0x7f4186efbf94]                                                       + 0x152f94
[0x7f4186f0150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4186efbb9a]                                                       + 0x152b9a
[0x7f4186efbf94]                                                       + 0x152f94
[0x7f4186f0150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4186efbb9a]                                                       + 0x152b9a
[0x7f4186efc1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f4186efc1df]    PyEval_EvalCode                                    + 0x1f
[0x7f4186f313d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f4186f3156f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f4186f4b8e8]    Py_Main                                            + 0xff8
[0x55d2934552b8]    main                                               + 0x178
[0x7f4186bc00b3]    __libc_start_main                                  + 0xf3
[0x55d29345536e]    _start                                             + 0x2e


======================================== core-js-pure/modules/es.typed-array.sort.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f0f488b3a29]                                                       + 0x7c5a29
[0x7f0f48a39d45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f0f497f53a8]                                                       + 0x13b3a8
[0x7f0f497f7065]                                                       + 0x13d065
[0x7f0f4e298bd9]    PyCFunction_Call                                   + 0xc9
[0x7f0f4e3256e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f0f4e31db9a]                                                       + 0x152b9a
[0x7f0f4e326aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f0f4e242151]    _PyObject_FastCallDict                             + 0x131
[0x7f0f4e2422a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f0f4e241f2b]    PyObject_Call                                      + 0x4b
[0x7f0f4e2b3d7f]                                                       + 0xe8d7f
[0x7f0f4e2af149]                                                       + 0xe4149
[0x7f0f4e2420ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f0f4e31dd78]                                                       + 0x152d78
[0x7f0f4e32350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f0f4e31db9a]                                                       + 0x152b9a
[0x7f0f4e31e1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f0f4e270f1e]                                                       + 0xa5f1e
[0x7f0f4e241f2b]    PyObject_Call                                      + 0x4b
[0x7f0f4e323770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f0f4e31db9a]                                                       + 0x152b9a
[0x7f0f4e31df94]                                                       + 0x152f94
[0x7f0f4e323867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f0f4e31db9a]                                                       + 0x152b9a
[0x7f0f4e31e1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f0f4e270f1e]                                                       + 0xa5f1e
[0x7f0f4e241f2b]    PyObject_Call                                      + 0x4b
[0x7f0f4e323770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f0f4e31db9a]                                                       + 0x152b9a
[0x7f0f4e31df94]                                                       + 0x152f94
[0x7f0f4e323867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f0f4e31db9a]                                                       + 0x152b9a
[0x7f0f4e31df94]                                                       + 0x152f94
[0x7f0f4e32350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f0f4e31db9a]                                                       + 0x152b9a
[0x7f0f4e31e1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f0f4e270f1e]                                                       + 0xa5f1e
[0x7f0f4e241f2b]    PyObject_Call                                      + 0x4b
[0x7f0f4e323770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f0f4e31db9a]                                                       + 0x152b9a
[0x7f0f4e31df94]                                                       + 0x152f94
[0x7f0f4e32350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f0f4e31db9a]                                                       + 0x152b9a
[0x7f0f4e31df94]                                                       + 0x152f94
[0x7f0f4e32350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f0f4e31db9a]                                                       + 0x152b9a
[0x7f0f4e31df94]                                                       + 0x152f94
[0x7f0f4e32350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f0f4e31db9a]                                                       + 0x152b9a
[0x7f0f4e31e1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f0f4e31e1df]    PyEval_EvalCode                                    + 0x1f
[0x7f0f4e3533d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f0f4e35356f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f0f4e36d8e8]    Py_Main                                            + 0xff8
[0x55846cc172b8]    main                                               + 0x178
[0x7f0f4dfe20b3]    __libc_start_main                                  + 0xf3
[0x55846cc1736e]    _start                                             + 0x2e


======================================== core-js-pure/modules/es.typed-array.subarray.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f08cd0bfa29]                                                       + 0x7c5a29
[0x7f08cd245d45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f095150e3a8]                                                       + 0x13b3a8
[0x7f0951510065]                                                       + 0x13d065
[0x7f0955fb1bd9]    PyCFunction_Call                                   + 0xc9
[0x7f095603e6e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f0956036b9a]                                                       + 0x152b9a
[0x7f095603faa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f0955f5b151]    _PyObject_FastCallDict                             + 0x131
[0x7f0955f5b2a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f0955f5af2b]    PyObject_Call                                      + 0x4b
[0x7f0955fccd7f]                                                       + 0xe8d7f
[0x7f0955fc8149]                                                       + 0xe4149
[0x7f0955f5b0ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f0956036d78]                                                       + 0x152d78
[0x7f095603c50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f0956036b9a]                                                       + 0x152b9a
[0x7f09560371b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f0955f89f1e]                                                       + 0xa5f1e
[0x7f0955f5af2b]    PyObject_Call                                      + 0x4b
[0x7f095603c770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f0956036b9a]                                                       + 0x152b9a
[0x7f0956036f94]                                                       + 0x152f94
[0x7f095603c867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f0956036b9a]                                                       + 0x152b9a
[0x7f09560371b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f0955f89f1e]                                                       + 0xa5f1e
[0x7f0955f5af2b]    PyObject_Call                                      + 0x4b
[0x7f095603c770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f0956036b9a]                                                       + 0x152b9a
[0x7f0956036f94]                                                       + 0x152f94
[0x7f095603c867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f0956036b9a]                                                       + 0x152b9a
[0x7f0956036f94]                                                       + 0x152f94
[0x7f095603c50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f0956036b9a]                                                       + 0x152b9a
[0x7f09560371b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f0955f89f1e]                                                       + 0xa5f1e
[0x7f0955f5af2b]    PyObject_Call                                      + 0x4b
[0x7f095603c770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f0956036b9a]                                                       + 0x152b9a
[0x7f0956036f94]                                                       + 0x152f94
[0x7f095603c50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f0956036b9a]                                                       + 0x152b9a
[0x7f0956036f94]                                                       + 0x152f94
[0x7f095603c50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f0956036b9a]                                                       + 0x152b9a
[0x7f0956036f94]                                                       + 0x152f94
[0x7f095603c50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f0956036b9a]                                                       + 0x152b9a
[0x7f09560371b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f09560371df]    PyEval_EvalCode                                    + 0x1f
[0x7f095606c3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f095606c56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f09560868e8]    Py_Main                                            + 0xff8
[0x55d5fbe822b8]    main                                               + 0x178
[0x7f0955cfb0b3]    __libc_start_main                                  + 0xf3
[0x55d5fbe8236e]    _start                                             + 0x2e


======================================== core-js-pure/modules/es.typed-array.to-locale-string.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f509bb8ba29]                                                       + 0x7c5a29
[0x7f509bd11d45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f511ffda3a8]                                                       + 0x13b3a8
[0x7f511ffdc065]                                                       + 0x13d065
[0x7f5124a7dbd9]    PyCFunction_Call                                   + 0xc9
[0x7f5124b0a6e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f5124b02b9a]                                                       + 0x152b9a
[0x7f5124b0baa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f5124a27151]    _PyObject_FastCallDict                             + 0x131
[0x7f5124a272a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f5124a26f2b]    PyObject_Call                                      + 0x4b
[0x7f5124a98d7f]                                                       + 0xe8d7f
[0x7f5124a94149]                                                       + 0xe4149
[0x7f5124a270ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f5124b02d78]                                                       + 0x152d78
[0x7f5124b0850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f5124b02b9a]                                                       + 0x152b9a
[0x7f5124b031b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f5124a55f1e]                                                       + 0xa5f1e
[0x7f5124a26f2b]    PyObject_Call                                      + 0x4b
[0x7f5124b08770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f5124b02b9a]                                                       + 0x152b9a
[0x7f5124b02f94]                                                       + 0x152f94
[0x7f5124b08867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f5124b02b9a]                                                       + 0x152b9a
[0x7f5124b031b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f5124a55f1e]                                                       + 0xa5f1e
[0x7f5124a26f2b]    PyObject_Call                                      + 0x4b
[0x7f5124b08770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f5124b02b9a]                                                       + 0x152b9a
[0x7f5124b02f94]                                                       + 0x152f94
[0x7f5124b08867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f5124b02b9a]                                                       + 0x152b9a
[0x7f5124b02f94]                                                       + 0x152f94
[0x7f5124b0850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f5124b02b9a]                                                       + 0x152b9a
[0x7f5124b031b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f5124a55f1e]                                                       + 0xa5f1e
[0x7f5124a26f2b]    PyObject_Call                                      + 0x4b
[0x7f5124b08770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f5124b02b9a]                                                       + 0x152b9a
[0x7f5124b02f94]                                                       + 0x152f94
[0x7f5124b0850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f5124b02b9a]                                                       + 0x152b9a
[0x7f5124b02f94]                                                       + 0x152f94
[0x7f5124b0850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f5124b02b9a]                                                       + 0x152b9a
[0x7f5124b02f94]                                                       + 0x152f94
[0x7f5124b0850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f5124b02b9a]                                                       + 0x152b9a
[0x7f5124b031b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f5124b031df]    PyEval_EvalCode                                    + 0x1f
[0x7f5124b383d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f5124b3856f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f5124b528e8]    Py_Main                                            + 0xff8
[0x558b87c882b8]    main                                               + 0x178
[0x7f51247c70b3]    __libc_start_main                                  + 0xf3
[0x558b87c8836e]    _start                                             + 0x2e


======================================== core-js-pure/modules/es.typed-array.to-string.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7fef409e7a29]                                                       + 0x7c5a29
[0x7fef40b6dd45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7fefc4e363a8]                                                       + 0x13b3a8
[0x7fefc4e38065]                                                       + 0x13d065
[0x7fefc98d9bd9]    PyCFunction_Call                                   + 0xc9
[0x7fefc99666e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7fefc995eb9a]                                                       + 0x152b9a
[0x7fefc9967aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7fefc9883151]    _PyObject_FastCallDict                             + 0x131
[0x7fefc98832a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7fefc9882f2b]    PyObject_Call                                      + 0x4b
[0x7fefc98f4d7f]                                                       + 0xe8d7f
[0x7fefc98f0149]                                                       + 0xe4149
[0x7fefc98830ad]    _PyObject_FastCallDict                             + 0x8d
[0x7fefc995ed78]                                                       + 0x152d78
[0x7fefc996450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fefc995eb9a]                                                       + 0x152b9a
[0x7fefc995f1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fefc98b1f1e]                                                       + 0xa5f1e
[0x7fefc9882f2b]    PyObject_Call                                      + 0x4b
[0x7fefc9964770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fefc995eb9a]                                                       + 0x152b9a
[0x7fefc995ef94]                                                       + 0x152f94
[0x7fefc9964867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7fefc995eb9a]                                                       + 0x152b9a
[0x7fefc995f1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fefc98b1f1e]                                                       + 0xa5f1e
[0x7fefc9882f2b]    PyObject_Call                                      + 0x4b
[0x7fefc9964770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fefc995eb9a]                                                       + 0x152b9a
[0x7fefc995ef94]                                                       + 0x152f94
[0x7fefc9964867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7fefc995eb9a]                                                       + 0x152b9a
[0x7fefc995ef94]                                                       + 0x152f94
[0x7fefc996450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fefc995eb9a]                                                       + 0x152b9a
[0x7fefc995f1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fefc98b1f1e]                                                       + 0xa5f1e
[0x7fefc9882f2b]    PyObject_Call                                      + 0x4b
[0x7fefc9964770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fefc995eb9a]                                                       + 0x152b9a
[0x7fefc995ef94]                                                       + 0x152f94
[0x7fefc996450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fefc995eb9a]                                                       + 0x152b9a
[0x7fefc995ef94]                                                       + 0x152f94
[0x7fefc996450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fefc995eb9a]                                                       + 0x152b9a
[0x7fefc995ef94]                                                       + 0x152f94
[0x7fefc996450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fefc995eb9a]                                                       + 0x152b9a
[0x7fefc995f1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fefc995f1df]    PyEval_EvalCode                                    + 0x1f
[0x7fefc99943d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fefc999456f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fefc99ae8e8]    Py_Main                                            + 0xff8
[0x559dee83b2b8]    main                                               + 0x178
[0x7fefc96230b3]    __libc_start_main                                  + 0xf3
[0x559dee83b36e]    _start                                             + 0x2e


======================================== core-js-pure/modules/es.typed-array.uint16-array.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f8b2f9ada29]                                                       + 0x7c5a29
[0x7f8b2fb33d45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f8bb3dfc3a8]                                                       + 0x13b3a8
[0x7f8bb3dfe065]                                                       + 0x13d065
[0x7f8bb889fbd9]    PyCFunction_Call                                   + 0xc9
[0x7f8bb892c6e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f8bb8924b9a]                                                       + 0x152b9a
[0x7f8bb892daa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f8bb8849151]    _PyObject_FastCallDict                             + 0x131
[0x7f8bb88492a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f8bb8848f2b]    PyObject_Call                                      + 0x4b
[0x7f8bb88bad7f]                                                       + 0xe8d7f
[0x7f8bb88b6149]                                                       + 0xe4149
[0x7f8bb88490ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f8bb8924d78]                                                       + 0x152d78
[0x7f8bb892a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f8bb8924b9a]                                                       + 0x152b9a
[0x7f8bb89251b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f8bb8877f1e]                                                       + 0xa5f1e
[0x7f8bb8848f2b]    PyObject_Call                                      + 0x4b
[0x7f8bb892a770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f8bb8924b9a]                                                       + 0x152b9a
[0x7f8bb8924f94]                                                       + 0x152f94
[0x7f8bb892a867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f8bb8924b9a]                                                       + 0x152b9a
[0x7f8bb89251b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f8bb8877f1e]                                                       + 0xa5f1e
[0x7f8bb8848f2b]    PyObject_Call                                      + 0x4b
[0x7f8bb892a770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f8bb8924b9a]                                                       + 0x152b9a
[0x7f8bb8924f94]                                                       + 0x152f94
[0x7f8bb892a867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f8bb8924b9a]                                                       + 0x152b9a
[0x7f8bb8924f94]                                                       + 0x152f94
[0x7f8bb892a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f8bb8924b9a]                                                       + 0x152b9a
[0x7f8bb89251b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f8bb8877f1e]                                                       + 0xa5f1e
[0x7f8bb8848f2b]    PyObject_Call                                      + 0x4b
[0x7f8bb892a770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f8bb8924b9a]                                                       + 0x152b9a
[0x7f8bb8924f94]                                                       + 0x152f94
[0x7f8bb892a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f8bb8924b9a]                                                       + 0x152b9a
[0x7f8bb8924f94]                                                       + 0x152f94
[0x7f8bb892a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f8bb8924b9a]                                                       + 0x152b9a
[0x7f8bb8924f94]                                                       + 0x152f94
[0x7f8bb892a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f8bb8924b9a]                                                       + 0x152b9a
[0x7f8bb89251b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f8bb89251df]    PyEval_EvalCode                                    + 0x1f
[0x7f8bb895a3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f8bb895a56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f8bb89748e8]    Py_Main                                            + 0xff8
[0x5635bcea62b8]    main                                               + 0x178
[0x7f8bb85e90b3]    __libc_start_main                                  + 0xf3
[0x5635bcea636e]    _start                                             + 0x2e


======================================== core-js-pure/modules/es.typed-array.uint32-array.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7fddb129ca29]                                                       + 0x7c5a29
[0x7fddb1422d45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7fde356eb3a8]                                                       + 0x13b3a8
[0x7fde356ed065]                                                       + 0x13d065
[0x7fde3a18ebd9]    PyCFunction_Call                                   + 0xc9
[0x7fde3a21b6e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7fde3a213b9a]                                                       + 0x152b9a
[0x7fde3a21caa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7fde3a138151]    _PyObject_FastCallDict                             + 0x131
[0x7fde3a1382a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7fde3a137f2b]    PyObject_Call                                      + 0x4b
[0x7fde3a1a9d7f]                                                       + 0xe8d7f
[0x7fde3a1a5149]                                                       + 0xe4149
[0x7fde3a1380ad]    _PyObject_FastCallDict                             + 0x8d
[0x7fde3a213d78]                                                       + 0x152d78
[0x7fde3a21950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fde3a213b9a]                                                       + 0x152b9a
[0x7fde3a2141b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fde3a166f1e]                                                       + 0xa5f1e
[0x7fde3a137f2b]    PyObject_Call                                      + 0x4b
[0x7fde3a219770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fde3a213b9a]                                                       + 0x152b9a
[0x7fde3a213f94]                                                       + 0x152f94
[0x7fde3a219867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7fde3a213b9a]                                                       + 0x152b9a
[0x7fde3a2141b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fde3a166f1e]                                                       + 0xa5f1e
[0x7fde3a137f2b]    PyObject_Call                                      + 0x4b
[0x7fde3a219770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fde3a213b9a]                                                       + 0x152b9a
[0x7fde3a213f94]                                                       + 0x152f94
[0x7fde3a219867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7fde3a213b9a]                                                       + 0x152b9a
[0x7fde3a213f94]                                                       + 0x152f94
[0x7fde3a21950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fde3a213b9a]                                                       + 0x152b9a
[0x7fde3a2141b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fde3a166f1e]                                                       + 0xa5f1e
[0x7fde3a137f2b]    PyObject_Call                                      + 0x4b
[0x7fde3a219770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fde3a213b9a]                                                       + 0x152b9a
[0x7fde3a213f94]                                                       + 0x152f94
[0x7fde3a21950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fde3a213b9a]                                                       + 0x152b9a
[0x7fde3a213f94]                                                       + 0x152f94
[0x7fde3a21950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fde3a213b9a]                                                       + 0x152b9a
[0x7fde3a213f94]                                                       + 0x152f94
[0x7fde3a21950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fde3a213b9a]                                                       + 0x152b9a
[0x7fde3a2141b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fde3a2141df]    PyEval_EvalCode                                    + 0x1f
[0x7fde3a2493d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fde3a24956f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fde3a2638e8]    Py_Main                                            + 0xff8
[0x562aa90db2b8]    main                                               + 0x178
[0x7fde39ed80b3]    __libc_start_main                                  + 0xf3
[0x562aa90db36e]    _start                                             + 0x2e


======================================== core-js-pure/modules/es.typed-array.uint8-array.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f0b26169a29]                                                       + 0x7c5a29
[0x7f0b262efd45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f0b270ab3a8]                                                       + 0x13b3a8
[0x7f0b270ad065]                                                       + 0x13d065
[0x7f0b2bb4ebd9]    PyCFunction_Call                                   + 0xc9
[0x7f0b2bbdb6e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f0b2bbd3b9a]                                                       + 0x152b9a
[0x7f0b2bbdcaa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f0b2baf8151]    _PyObject_FastCallDict                             + 0x131
[0x7f0b2baf82a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f0b2baf7f2b]    PyObject_Call                                      + 0x4b
[0x7f0b2bb69d7f]                                                       + 0xe8d7f
[0x7f0b2bb65149]                                                       + 0xe4149
[0x7f0b2baf80ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f0b2bbd3d78]                                                       + 0x152d78
[0x7f0b2bbd950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f0b2bbd3b9a]                                                       + 0x152b9a
[0x7f0b2bbd41b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f0b2bb26f1e]                                                       + 0xa5f1e
[0x7f0b2baf7f2b]    PyObject_Call                                      + 0x4b
[0x7f0b2bbd9770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f0b2bbd3b9a]                                                       + 0x152b9a
[0x7f0b2bbd3f94]                                                       + 0x152f94
[0x7f0b2bbd9867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f0b2bbd3b9a]                                                       + 0x152b9a
[0x7f0b2bbd41b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f0b2bb26f1e]                                                       + 0xa5f1e
[0x7f0b2baf7f2b]    PyObject_Call                                      + 0x4b
[0x7f0b2bbd9770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f0b2bbd3b9a]                                                       + 0x152b9a
[0x7f0b2bbd3f94]                                                       + 0x152f94
[0x7f0b2bbd9867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f0b2bbd3b9a]                                                       + 0x152b9a
[0x7f0b2bbd3f94]                                                       + 0x152f94
[0x7f0b2bbd950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f0b2bbd3b9a]                                                       + 0x152b9a
[0x7f0b2bbd41b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f0b2bb26f1e]                                                       + 0xa5f1e
[0x7f0b2baf7f2b]    PyObject_Call                                      + 0x4b
[0x7f0b2bbd9770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f0b2bbd3b9a]                                                       + 0x152b9a
[0x7f0b2bbd3f94]                                                       + 0x152f94
[0x7f0b2bbd950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f0b2bbd3b9a]                                                       + 0x152b9a
[0x7f0b2bbd3f94]                                                       + 0x152f94
[0x7f0b2bbd950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f0b2bbd3b9a]                                                       + 0x152b9a
[0x7f0b2bbd3f94]                                                       + 0x152f94
[0x7f0b2bbd950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f0b2bbd3b9a]                                                       + 0x152b9a
[0x7f0b2bbd41b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f0b2bbd41df]    PyEval_EvalCode                                    + 0x1f
[0x7f0b2bc093d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f0b2bc0956f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f0b2bc238e8]    Py_Main                                            + 0xff8
[0x56378c84f2b8]    main                                               + 0x178
[0x7f0b2b8980b3]    __libc_start_main                                  + 0xf3
[0x56378c84f36e]    _start                                             + 0x2e


======================================== core-js-pure/modules/es.typed-array.uint8-clamped-array.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f2523c04a29]                                                       + 0x7c5a29
[0x7f2523d8ad45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f25a80533a8]                                                       + 0x13b3a8
[0x7f25a8055065]                                                       + 0x13d065
[0x7f25acaf6bd9]    PyCFunction_Call                                   + 0xc9
[0x7f25acb836e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f25acb7bb9a]                                                       + 0x152b9a
[0x7f25acb84aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f25acaa0151]    _PyObject_FastCallDict                             + 0x131
[0x7f25acaa02a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f25aca9ff2b]    PyObject_Call                                      + 0x4b
[0x7f25acb11d7f]                                                       + 0xe8d7f
[0x7f25acb0d149]                                                       + 0xe4149
[0x7f25acaa00ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f25acb7bd78]                                                       + 0x152d78
[0x7f25acb8150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f25acb7bb9a]                                                       + 0x152b9a
[0x7f25acb7c1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f25acacef1e]                                                       + 0xa5f1e
[0x7f25aca9ff2b]    PyObject_Call                                      + 0x4b
[0x7f25acb81770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f25acb7bb9a]                                                       + 0x152b9a
[0x7f25acb7bf94]                                                       + 0x152f94
[0x7f25acb81867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f25acb7bb9a]                                                       + 0x152b9a
[0x7f25acb7c1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f25acacef1e]                                                       + 0xa5f1e
[0x7f25aca9ff2b]    PyObject_Call                                      + 0x4b
[0x7f25acb81770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f25acb7bb9a]                                                       + 0x152b9a
[0x7f25acb7bf94]                                                       + 0x152f94
[0x7f25acb81867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f25acb7bb9a]                                                       + 0x152b9a
[0x7f25acb7bf94]                                                       + 0x152f94
[0x7f25acb8150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f25acb7bb9a]                                                       + 0x152b9a
[0x7f25acb7c1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f25acacef1e]                                                       + 0xa5f1e
[0x7f25aca9ff2b]    PyObject_Call                                      + 0x4b
[0x7f25acb81770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f25acb7bb9a]                                                       + 0x152b9a
[0x7f25acb7bf94]                                                       + 0x152f94
[0x7f25acb8150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f25acb7bb9a]                                                       + 0x152b9a
[0x7f25acb7bf94]                                                       + 0x152f94
[0x7f25acb8150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f25acb7bb9a]                                                       + 0x152b9a
[0x7f25acb7bf94]                                                       + 0x152f94
[0x7f25acb8150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f25acb7bb9a]                                                       + 0x152b9a
[0x7f25acb7c1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f25acb7c1df]    PyEval_EvalCode                                    + 0x1f
[0x7f25acbb13d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f25acbb156f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f25acbcb8e8]    Py_Main                                            + 0xff8
[0x55f2bac942b8]    main                                               + 0x178
[0x7f25ac8400b3]    __libc_start_main                                  + 0xf3
[0x55f2bac9436e]    _start                                             + 0x2e


======================================== core-js-pure/modules/esnext.array.last-index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f0c47a82a29]                                                       + 0x7c5a29
[0x7f0c47c08d45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f0ccbed13a8]                                                       + 0x13b3a8
[0x7f0ccbed3065]                                                       + 0x13d065
[0x7f0cd0974bd9]    PyCFunction_Call                                   + 0xc9
[0x7f0cd0a016e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f0cd09f9b9a]                                                       + 0x152b9a
[0x7f0cd0a02aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f0cd091e151]    _PyObject_FastCallDict                             + 0x131
[0x7f0cd091e2a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f0cd091df2b]    PyObject_Call                                      + 0x4b
[0x7f0cd098fd7f]                                                       + 0xe8d7f
[0x7f0cd098b149]                                                       + 0xe4149
[0x7f0cd091e0ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f0cd09f9d78]                                                       + 0x152d78
[0x7f0cd09ff50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f0cd09f9b9a]                                                       + 0x152b9a
[0x7f0cd09fa1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f0cd094cf1e]                                                       + 0xa5f1e
[0x7f0cd091df2b]    PyObject_Call                                      + 0x4b
[0x7f0cd09ff770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f0cd09f9b9a]                                                       + 0x152b9a
[0x7f0cd09f9f94]                                                       + 0x152f94
[0x7f0cd09ff867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f0cd09f9b9a]                                                       + 0x152b9a
[0x7f0cd09fa1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f0cd094cf1e]                                                       + 0xa5f1e
[0x7f0cd091df2b]    PyObject_Call                                      + 0x4b
[0x7f0cd09ff770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f0cd09f9b9a]                                                       + 0x152b9a
[0x7f0cd09f9f94]                                                       + 0x152f94
[0x7f0cd09ff867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f0cd09f9b9a]                                                       + 0x152b9a
[0x7f0cd09f9f94]                                                       + 0x152f94
[0x7f0cd09ff50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f0cd09f9b9a]                                                       + 0x152b9a
[0x7f0cd09fa1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f0cd094cf1e]                                                       + 0xa5f1e
[0x7f0cd091df2b]    PyObject_Call                                      + 0x4b
[0x7f0cd09ff770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f0cd09f9b9a]                                                       + 0x152b9a
[0x7f0cd09f9f94]                                                       + 0x152f94
[0x7f0cd09ff50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f0cd09f9b9a]                                                       + 0x152b9a
[0x7f0cd09f9f94]                                                       + 0x152f94
[0x7f0cd09ff50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f0cd09f9b9a]                                                       + 0x152b9a
[0x7f0cd09f9f94]                                                       + 0x152f94
[0x7f0cd09ff50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f0cd09f9b9a]                                                       + 0x152b9a
[0x7f0cd09fa1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f0cd09fa1df]    PyEval_EvalCode                                    + 0x1f
[0x7f0cd0a2f3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f0cd0a2f56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f0cd0a498e8]    Py_Main                                            + 0xff8
[0x55ce562912b8]    main                                               + 0x178
[0x7f0cd06be0b3]    __libc_start_main                                  + 0xf3
[0x55ce5629136e]    _start                                             + 0x2e


======================================== core-js-pure/modules/esnext.array.last-item.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f06c8a7ba29]                                                       + 0x7c5a29
[0x7f06c8c01d45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f06c99bd3a8]                                                       + 0x13b3a8
[0x7f06c99bf065]                                                       + 0x13d065
[0x7f06ce460bd9]    PyCFunction_Call                                   + 0xc9
[0x7f06ce4ed6e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f06ce4e5b9a]                                                       + 0x152b9a
[0x7f06ce4eeaa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f06ce40a151]    _PyObject_FastCallDict                             + 0x131
[0x7f06ce40a2a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f06ce409f2b]    PyObject_Call                                      + 0x4b
[0x7f06ce47bd7f]                                                       + 0xe8d7f
[0x7f06ce477149]                                                       + 0xe4149
[0x7f06ce40a0ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f06ce4e5d78]                                                       + 0x152d78
[0x7f06ce4eb50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f06ce4e5b9a]                                                       + 0x152b9a
[0x7f06ce4e61b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f06ce438f1e]                                                       + 0xa5f1e
[0x7f06ce409f2b]    PyObject_Call                                      + 0x4b
[0x7f06ce4eb770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f06ce4e5b9a]                                                       + 0x152b9a
[0x7f06ce4e5f94]                                                       + 0x152f94
[0x7f06ce4eb867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f06ce4e5b9a]                                                       + 0x152b9a
[0x7f06ce4e61b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f06ce438f1e]                                                       + 0xa5f1e
[0x7f06ce409f2b]    PyObject_Call                                      + 0x4b
[0x7f06ce4eb770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f06ce4e5b9a]                                                       + 0x152b9a
[0x7f06ce4e5f94]                                                       + 0x152f94
[0x7f06ce4eb867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f06ce4e5b9a]                                                       + 0x152b9a
[0x7f06ce4e5f94]                                                       + 0x152f94
[0x7f06ce4eb50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f06ce4e5b9a]                                                       + 0x152b9a
[0x7f06ce4e61b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f06ce438f1e]                                                       + 0xa5f1e
[0x7f06ce409f2b]    PyObject_Call                                      + 0x4b
[0x7f06ce4eb770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f06ce4e5b9a]                                                       + 0x152b9a
[0x7f06ce4e5f94]                                                       + 0x152f94
[0x7f06ce4eb50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f06ce4e5b9a]                                                       + 0x152b9a
[0x7f06ce4e5f94]                                                       + 0x152f94
[0x7f06ce4eb50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f06ce4e5b9a]                                                       + 0x152b9a
[0x7f06ce4e5f94]                                                       + 0x152f94
[0x7f06ce4eb50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f06ce4e5b9a]                                                       + 0x152b9a
[0x7f06ce4e61b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f06ce4e61df]    PyEval_EvalCode                                    + 0x1f
[0x7f06ce51b3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f06ce51b56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f06ce5358e8]    Py_Main                                            + 0xff8
[0x564c9f5e22b8]    main                                               + 0x178
[0x7f06ce1aa0b3]    __libc_start_main                                  + 0xf3
[0x564c9f5e236e]    _start                                             + 0x2e


======================================== core-js-pure/modules/esnext.typed-array.at.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f1d299f4a29]                                                       + 0x7c5a29
[0x7f1d29b7ad45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f1d2a9363a8]                                                       + 0x13b3a8
[0x7f1d2a938065]                                                       + 0x13d065
[0x7f1d2f3d9bd9]    PyCFunction_Call                                   + 0xc9
[0x7f1d2f4666e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f1d2f45eb9a]                                                       + 0x152b9a
[0x7f1d2f467aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f1d2f383151]    _PyObject_FastCallDict                             + 0x131
[0x7f1d2f3832a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f1d2f382f2b]    PyObject_Call                                      + 0x4b
[0x7f1d2f3f4d7f]                                                       + 0xe8d7f
[0x7f1d2f3f0149]                                                       + 0xe4149
[0x7f1d2f3830ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f1d2f45ed78]                                                       + 0x152d78
[0x7f1d2f46450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f1d2f45eb9a]                                                       + 0x152b9a
[0x7f1d2f45f1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f1d2f3b1f1e]                                                       + 0xa5f1e
[0x7f1d2f382f2b]    PyObject_Call                                      + 0x4b
[0x7f1d2f464770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f1d2f45eb9a]                                                       + 0x152b9a
[0x7f1d2f45ef94]                                                       + 0x152f94
[0x7f1d2f464867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f1d2f45eb9a]                                                       + 0x152b9a
[0x7f1d2f45f1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f1d2f3b1f1e]                                                       + 0xa5f1e
[0x7f1d2f382f2b]    PyObject_Call                                      + 0x4b
[0x7f1d2f464770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f1d2f45eb9a]                                                       + 0x152b9a
[0x7f1d2f45ef94]                                                       + 0x152f94
[0x7f1d2f464867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f1d2f45eb9a]                                                       + 0x152b9a
[0x7f1d2f45ef94]                                                       + 0x152f94
[0x7f1d2f46450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f1d2f45eb9a]                                                       + 0x152b9a
[0x7f1d2f45f1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f1d2f3b1f1e]                                                       + 0xa5f1e
[0x7f1d2f382f2b]    PyObject_Call                                      + 0x4b
[0x7f1d2f464770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f1d2f45eb9a]                                                       + 0x152b9a
[0x7f1d2f45ef94]                                                       + 0x152f94
[0x7f1d2f46450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f1d2f45eb9a]                                                       + 0x152b9a
[0x7f1d2f45ef94]                                                       + 0x152f94
[0x7f1d2f46450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f1d2f45eb9a]                                                       + 0x152b9a
[0x7f1d2f45ef94]                                                       + 0x152f94
[0x7f1d2f46450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f1d2f45eb9a]                                                       + 0x152b9a
[0x7f1d2f45f1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f1d2f45f1df]    PyEval_EvalCode                                    + 0x1f
[0x7f1d2f4943d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f1d2f49456f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f1d2f4ae8e8]    Py_Main                                            + 0xff8
[0x55e6024242b8]    main                                               + 0x178
[0x7f1d2f1230b3]    __libc_start_main                                  + 0xf3
[0x55e60242436e]    _start                                             + 0x2e


======================================== core-js-pure/modules/esnext.typed-array.filter-out.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f1adbacaa29]                                                       + 0x7c5a29
[0x7f1adbc50d45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f1b5ff193a8]                                                       + 0x13b3a8
[0x7f1b5ff1b065]                                                       + 0x13d065
[0x7f1b649bcbd9]    PyCFunction_Call                                   + 0xc9
[0x7f1b64a496e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f1b64a41b9a]                                                       + 0x152b9a
[0x7f1b64a4aaa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f1b64966151]    _PyObject_FastCallDict                             + 0x131
[0x7f1b649662a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f1b64965f2b]    PyObject_Call                                      + 0x4b
[0x7f1b649d7d7f]                                                       + 0xe8d7f
[0x7f1b649d3149]                                                       + 0xe4149
[0x7f1b649660ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f1b64a41d78]                                                       + 0x152d78
[0x7f1b64a4750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f1b64a41b9a]                                                       + 0x152b9a
[0x7f1b64a421b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f1b64994f1e]                                                       + 0xa5f1e
[0x7f1b64965f2b]    PyObject_Call                                      + 0x4b
[0x7f1b64a47770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f1b64a41b9a]                                                       + 0x152b9a
[0x7f1b64a41f94]                                                       + 0x152f94
[0x7f1b64a47867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f1b64a41b9a]                                                       + 0x152b9a
[0x7f1b64a421b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f1b64994f1e]                                                       + 0xa5f1e
[0x7f1b64965f2b]    PyObject_Call                                      + 0x4b
[0x7f1b64a47770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f1b64a41b9a]                                                       + 0x152b9a
[0x7f1b64a41f94]                                                       + 0x152f94
[0x7f1b64a47867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f1b64a41b9a]                                                       + 0x152b9a
[0x7f1b64a41f94]                                                       + 0x152f94
[0x7f1b64a4750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f1b64a41b9a]                                                       + 0x152b9a
[0x7f1b64a421b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f1b64994f1e]                                                       + 0xa5f1e
[0x7f1b64965f2b]    PyObject_Call                                      + 0x4b
[0x7f1b64a47770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f1b64a41b9a]                                                       + 0x152b9a
[0x7f1b64a41f94]                                                       + 0x152f94
[0x7f1b64a4750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f1b64a41b9a]                                                       + 0x152b9a
[0x7f1b64a41f94]                                                       + 0x152f94
[0x7f1b64a4750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f1b64a41b9a]                                                       + 0x152b9a
[0x7f1b64a41f94]                                                       + 0x152f94
[0x7f1b64a4750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f1b64a41b9a]                                                       + 0x152b9a
[0x7f1b64a421b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f1b64a421df]    PyEval_EvalCode                                    + 0x1f
[0x7f1b64a773d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f1b64a7756f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f1b64a918e8]    Py_Main                                            + 0xff8
[0x55ac6270c2b8]    main                                               + 0x178
[0x7f1b647060b3]    __libc_start_main                                  + 0xf3
[0x55ac6270c36e]    _start                                             + 0x2e


======================================== core-js-pure/modules/esnext.typed-array.filter-reject.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f5ff973fa29]                                                       + 0x7c5a29
[0x7f5ff98c5d45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f607db8e3a8]                                                       + 0x13b3a8
[0x7f607db90065]                                                       + 0x13d065
[0x7f6082631bd9]    PyCFunction_Call                                   + 0xc9
[0x7f60826be6e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f60826b6b9a]                                                       + 0x152b9a
[0x7f60826bfaa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f60825db151]    _PyObject_FastCallDict                             + 0x131
[0x7f60825db2a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f60825daf2b]    PyObject_Call                                      + 0x4b
[0x7f608264cd7f]                                                       + 0xe8d7f
[0x7f6082648149]                                                       + 0xe4149
[0x7f60825db0ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f60826b6d78]                                                       + 0x152d78
[0x7f60826bc50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f60826b6b9a]                                                       + 0x152b9a
[0x7f60826b71b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f6082609f1e]                                                       + 0xa5f1e
[0x7f60825daf2b]    PyObject_Call                                      + 0x4b
[0x7f60826bc770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f60826b6b9a]                                                       + 0x152b9a
[0x7f60826b6f94]                                                       + 0x152f94
[0x7f60826bc867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f60826b6b9a]                                                       + 0x152b9a
[0x7f60826b71b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f6082609f1e]                                                       + 0xa5f1e
[0x7f60825daf2b]    PyObject_Call                                      + 0x4b
[0x7f60826bc770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f60826b6b9a]                                                       + 0x152b9a
[0x7f60826b6f94]                                                       + 0x152f94
[0x7f60826bc867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f60826b6b9a]                                                       + 0x152b9a
[0x7f60826b6f94]                                                       + 0x152f94
[0x7f60826bc50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f60826b6b9a]                                                       + 0x152b9a
[0x7f60826b71b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f6082609f1e]                                                       + 0xa5f1e
[0x7f60825daf2b]    PyObject_Call                                      + 0x4b
[0x7f60826bc770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f60826b6b9a]                                                       + 0x152b9a
[0x7f60826b6f94]                                                       + 0x152f94
[0x7f60826bc50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f60826b6b9a]                                                       + 0x152b9a
[0x7f60826b6f94]                                                       + 0x152f94
[0x7f60826bc50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f60826b6b9a]                                                       + 0x152b9a
[0x7f60826b6f94]                                                       + 0x152f94
[0x7f60826bc50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f60826b6b9a]                                                       + 0x152b9a
[0x7f60826b71b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f60826b71df]    PyEval_EvalCode                                    + 0x1f
[0x7f60826ec3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f60826ec56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f60827068e8]    Py_Main                                            + 0xff8
[0x5587d7acf2b8]    main                                               + 0x178
[0x7f608237b0b3]    __libc_start_main                                  + 0xf3
[0x5587d7acf36e]    _start                                             + 0x2e


======================================== core-js-pure/modules/esnext.typed-array.find-last-index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f12d0734a29]                                                       + 0x7c5a29
[0x7f12d08bad45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f12d16763a8]                                                       + 0x13b3a8
[0x7f12d1678065]                                                       + 0x13d065
[0x7f12d6119bd9]    PyCFunction_Call                                   + 0xc9
[0x7f12d61a66e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f12d619eb9a]                                                       + 0x152b9a
[0x7f12d61a7aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f12d60c3151]    _PyObject_FastCallDict                             + 0x131
[0x7f12d60c32a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f12d60c2f2b]    PyObject_Call                                      + 0x4b
[0x7f12d6134d7f]                                                       + 0xe8d7f
[0x7f12d6130149]                                                       + 0xe4149
[0x7f12d60c30ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f12d619ed78]                                                       + 0x152d78
[0x7f12d61a450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f12d619eb9a]                                                       + 0x152b9a
[0x7f12d619f1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f12d60f1f1e]                                                       + 0xa5f1e
[0x7f12d60c2f2b]    PyObject_Call                                      + 0x4b
[0x7f12d61a4770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f12d619eb9a]                                                       + 0x152b9a
[0x7f12d619ef94]                                                       + 0x152f94
[0x7f12d61a4867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f12d619eb9a]                                                       + 0x152b9a
[0x7f12d619f1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f12d60f1f1e]                                                       + 0xa5f1e
[0x7f12d60c2f2b]    PyObject_Call                                      + 0x4b
[0x7f12d61a4770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f12d619eb9a]                                                       + 0x152b9a
[0x7f12d619ef94]                                                       + 0x152f94
[0x7f12d61a4867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f12d619eb9a]                                                       + 0x152b9a
[0x7f12d619ef94]                                                       + 0x152f94
[0x7f12d61a450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f12d619eb9a]                                                       + 0x152b9a
[0x7f12d619f1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f12d60f1f1e]                                                       + 0xa5f1e
[0x7f12d60c2f2b]    PyObject_Call                                      + 0x4b
[0x7f12d61a4770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f12d619eb9a]                                                       + 0x152b9a
[0x7f12d619ef94]                                                       + 0x152f94
[0x7f12d61a450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f12d619eb9a]                                                       + 0x152b9a
[0x7f12d619ef94]                                                       + 0x152f94
[0x7f12d61a450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f12d619eb9a]                                                       + 0x152b9a
[0x7f12d619ef94]                                                       + 0x152f94
[0x7f12d61a450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f12d619eb9a]                                                       + 0x152b9a
[0x7f12d619f1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f12d619f1df]    PyEval_EvalCode                                    + 0x1f
[0x7f12d61d43d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f12d61d456f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f12d61ee8e8]    Py_Main                                            + 0xff8
[0x563e271aa2b8]    main                                               + 0x178
[0x7f12d5e630b3]    __libc_start_main                                  + 0xf3
[0x563e271aa36e]    _start                                             + 0x2e


======================================== core-js-pure/modules/esnext.typed-array.find-last.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f52c9115a29]                                                       + 0x7c5a29
[0x7f52c929bd45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f534d5643a8]                                                       + 0x13b3a8
[0x7f534d566065]                                                       + 0x13d065
[0x7f5352007bd9]    PyCFunction_Call                                   + 0xc9
[0x7f53520946e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f535208cb9a]                                                       + 0x152b9a
[0x7f5352095aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f5351fb1151]    _PyObject_FastCallDict                             + 0x131
[0x7f5351fb12a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f5351fb0f2b]    PyObject_Call                                      + 0x4b
[0x7f5352022d7f]                                                       + 0xe8d7f
[0x7f535201e149]                                                       + 0xe4149
[0x7f5351fb10ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f535208cd78]                                                       + 0x152d78
[0x7f535209250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f535208cb9a]                                                       + 0x152b9a
[0x7f535208d1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f5351fdff1e]                                                       + 0xa5f1e
[0x7f5351fb0f2b]    PyObject_Call                                      + 0x4b
[0x7f5352092770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f535208cb9a]                                                       + 0x152b9a
[0x7f535208cf94]                                                       + 0x152f94
[0x7f5352092867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f535208cb9a]                                                       + 0x152b9a
[0x7f535208d1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f5351fdff1e]                                                       + 0xa5f1e
[0x7f5351fb0f2b]    PyObject_Call                                      + 0x4b
[0x7f5352092770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f535208cb9a]                                                       + 0x152b9a
[0x7f535208cf94]                                                       + 0x152f94
[0x7f5352092867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f535208cb9a]                                                       + 0x152b9a
[0x7f535208cf94]                                                       + 0x152f94
[0x7f535209250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f535208cb9a]                                                       + 0x152b9a
[0x7f535208d1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f5351fdff1e]                                                       + 0xa5f1e
[0x7f5351fb0f2b]    PyObject_Call                                      + 0x4b
[0x7f5352092770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f535208cb9a]                                                       + 0x152b9a
[0x7f535208cf94]                                                       + 0x152f94
[0x7f535209250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f535208cb9a]                                                       + 0x152b9a
[0x7f535208cf94]                                                       + 0x152f94
[0x7f535209250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f535208cb9a]                                                       + 0x152b9a
[0x7f535208cf94]                                                       + 0x152f94
[0x7f535209250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f535208cb9a]                                                       + 0x152b9a
[0x7f535208d1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f535208d1df]    PyEval_EvalCode                                    + 0x1f
[0x7f53520c23d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f53520c256f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f53520dc8e8]    Py_Main                                            + 0xff8
[0x5555bd0422b8]    main                                               + 0x178
[0x7f5351d510b3]    __libc_start_main                                  + 0xf3
[0x5555bd04236e]    _start                                             + 0x2e


======================================== core-js-pure/modules/esnext.typed-array.from-async.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f5f30707a29]                                                       + 0x7c5a29
[0x7f5f3088dd45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f5fb4b563a8]                                                       + 0x13b3a8
[0x7f5fb4b58065]                                                       + 0x13d065
[0x7f5fb95f9bd9]    PyCFunction_Call                                   + 0xc9
[0x7f5fb96866e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f5fb967eb9a]                                                       + 0x152b9a
[0x7f5fb9687aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f5fb95a3151]    _PyObject_FastCallDict                             + 0x131
[0x7f5fb95a32a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f5fb95a2f2b]    PyObject_Call                                      + 0x4b
[0x7f5fb9614d7f]                                                       + 0xe8d7f
[0x7f5fb9610149]                                                       + 0xe4149
[0x7f5fb95a30ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f5fb967ed78]                                                       + 0x152d78
[0x7f5fb968450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f5fb967eb9a]                                                       + 0x152b9a
[0x7f5fb967f1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f5fb95d1f1e]                                                       + 0xa5f1e
[0x7f5fb95a2f2b]    PyObject_Call                                      + 0x4b
[0x7f5fb9684770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f5fb967eb9a]                                                       + 0x152b9a
[0x7f5fb967ef94]                                                       + 0x152f94
[0x7f5fb9684867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f5fb967eb9a]                                                       + 0x152b9a
[0x7f5fb967f1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f5fb95d1f1e]                                                       + 0xa5f1e
[0x7f5fb95a2f2b]    PyObject_Call                                      + 0x4b
[0x7f5fb9684770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f5fb967eb9a]                                                       + 0x152b9a
[0x7f5fb967ef94]                                                       + 0x152f94
[0x7f5fb9684867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f5fb967eb9a]                                                       + 0x152b9a
[0x7f5fb967ef94]                                                       + 0x152f94
[0x7f5fb968450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f5fb967eb9a]                                                       + 0x152b9a
[0x7f5fb967f1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f5fb95d1f1e]                                                       + 0xa5f1e
[0x7f5fb95a2f2b]    PyObject_Call                                      + 0x4b
[0x7f5fb9684770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f5fb967eb9a]                                                       + 0x152b9a
[0x7f5fb967ef94]                                                       + 0x152f94
[0x7f5fb968450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f5fb967eb9a]                                                       + 0x152b9a
[0x7f5fb967ef94]                                                       + 0x152f94
[0x7f5fb968450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f5fb967eb9a]                                                       + 0x152b9a
[0x7f5fb967ef94]                                                       + 0x152f94
[0x7f5fb968450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f5fb967eb9a]                                                       + 0x152b9a
[0x7f5fb967f1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f5fb967f1df]    PyEval_EvalCode                                    + 0x1f
[0x7f5fb96b43d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f5fb96b456f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f5fb96ce8e8]    Py_Main                                            + 0xff8
[0x555dca2a22b8]    main                                               + 0x178
[0x7f5fb93430b3]    __libc_start_main                                  + 0xf3
[0x555dca2a236e]    _start                                             + 0x2e


======================================== core-js-pure/modules/esnext.typed-array.group-by.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7fe630c17a29]                                                       + 0x7c5a29
[0x7fe630d9dd45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7fe631b593a8]                                                       + 0x13b3a8
[0x7fe631b5b065]                                                       + 0x13d065
[0x7fe6365fcbd9]    PyCFunction_Call                                   + 0xc9
[0x7fe6366896e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7fe636681b9a]                                                       + 0x152b9a
[0x7fe63668aaa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7fe6365a6151]    _PyObject_FastCallDict                             + 0x131
[0x7fe6365a62a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7fe6365a5f2b]    PyObject_Call                                      + 0x4b
[0x7fe636617d7f]                                                       + 0xe8d7f
[0x7fe636613149]                                                       + 0xe4149
[0x7fe6365a60ad]    _PyObject_FastCallDict                             + 0x8d
[0x7fe636681d78]                                                       + 0x152d78
[0x7fe63668750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe636681b9a]                                                       + 0x152b9a
[0x7fe6366821b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fe6365d4f1e]                                                       + 0xa5f1e
[0x7fe6365a5f2b]    PyObject_Call                                      + 0x4b
[0x7fe636687770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fe636681b9a]                                                       + 0x152b9a
[0x7fe636681f94]                                                       + 0x152f94
[0x7fe636687867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7fe636681b9a]                                                       + 0x152b9a
[0x7fe6366821b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fe6365d4f1e]                                                       + 0xa5f1e
[0x7fe6365a5f2b]    PyObject_Call                                      + 0x4b
[0x7fe636687770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fe636681b9a]                                                       + 0x152b9a
[0x7fe636681f94]                                                       + 0x152f94
[0x7fe636687867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7fe636681b9a]                                                       + 0x152b9a
[0x7fe636681f94]                                                       + 0x152f94
[0x7fe63668750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe636681b9a]                                                       + 0x152b9a
[0x7fe6366821b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fe6365d4f1e]                                                       + 0xa5f1e
[0x7fe6365a5f2b]    PyObject_Call                                      + 0x4b
[0x7fe636687770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fe636681b9a]                                                       + 0x152b9a
[0x7fe636681f94]                                                       + 0x152f94
[0x7fe63668750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe636681b9a]                                                       + 0x152b9a
[0x7fe636681f94]                                                       + 0x152f94
[0x7fe63668750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe636681b9a]                                                       + 0x152b9a
[0x7fe636681f94]                                                       + 0x152f94
[0x7fe63668750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe636681b9a]                                                       + 0x152b9a
[0x7fe6366821b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fe6366821df]    PyEval_EvalCode                                    + 0x1f
[0x7fe6366b73d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fe6366b756f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fe6366d18e8]    Py_Main                                            + 0xff8
[0x55d08a6ca2b8]    main                                               + 0x178
[0x7fe6363460b3]    __libc_start_main                                  + 0xf3
[0x55d08a6ca36e]    _start                                             + 0x2e


======================================== core-js-pure/modules/esnext.typed-array.unique-by.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f8daede9a29]                                                       + 0x7c5a29
[0x7f8daef6fd45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f8e332383a8]                                                       + 0x13b3a8
[0x7f8e3323a065]                                                       + 0x13d065
[0x7f8e37cdbbd9]    PyCFunction_Call                                   + 0xc9
[0x7f8e37d686e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f8e37d60b9a]                                                       + 0x152b9a
[0x7f8e37d69aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f8e37c85151]    _PyObject_FastCallDict                             + 0x131
[0x7f8e37c852a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f8e37c84f2b]    PyObject_Call                                      + 0x4b
[0x7f8e37cf6d7f]                                                       + 0xe8d7f
[0x7f8e37cf2149]                                                       + 0xe4149
[0x7f8e37c850ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f8e37d60d78]                                                       + 0x152d78
[0x7f8e37d6650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f8e37d60b9a]                                                       + 0x152b9a
[0x7f8e37d611b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f8e37cb3f1e]                                                       + 0xa5f1e
[0x7f8e37c84f2b]    PyObject_Call                                      + 0x4b
[0x7f8e37d66770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f8e37d60b9a]                                                       + 0x152b9a
[0x7f8e37d60f94]                                                       + 0x152f94
[0x7f8e37d66867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f8e37d60b9a]                                                       + 0x152b9a
[0x7f8e37d611b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f8e37cb3f1e]                                                       + 0xa5f1e
[0x7f8e37c84f2b]    PyObject_Call                                      + 0x4b
[0x7f8e37d66770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f8e37d60b9a]                                                       + 0x152b9a
[0x7f8e37d60f94]                                                       + 0x152f94
[0x7f8e37d66867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f8e37d60b9a]                                                       + 0x152b9a
[0x7f8e37d60f94]                                                       + 0x152f94
[0x7f8e37d6650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f8e37d60b9a]                                                       + 0x152b9a
[0x7f8e37d611b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f8e37cb3f1e]                                                       + 0xa5f1e
[0x7f8e37c84f2b]    PyObject_Call                                      + 0x4b
[0x7f8e37d66770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f8e37d60b9a]                                                       + 0x152b9a
[0x7f8e37d60f94]                                                       + 0x152f94
[0x7f8e37d6650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f8e37d60b9a]                                                       + 0x152b9a
[0x7f8e37d60f94]                                                       + 0x152f94
[0x7f8e37d6650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f8e37d60b9a]                                                       + 0x152b9a
[0x7f8e37d60f94]                                                       + 0x152f94
[0x7f8e37d6650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f8e37d60b9a]                                                       + 0x152b9a
[0x7f8e37d611b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f8e37d611df]    PyEval_EvalCode                                    + 0x1f
[0x7f8e37d963d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f8e37d9656f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f8e37db08e8]    Py_Main                                            + 0xff8
[0x564a326c72b8]    main                                               + 0x178
[0x7f8e37a250b3]    __libc_start_main                                  + 0xf3
[0x564a326c736e]    _start                                             + 0x2e


======================================== core-js-pure/modules/web.dom-collections.for-each.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7fee0d557a29]                                                       + 0x7c5a29
[0x7fee0d6ddd45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7fee919a63a8]                                                       + 0x13b3a8
[0x7fee919a8065]                                                       + 0x13d065
[0x7fee96449bd9]    PyCFunction_Call                                   + 0xc9
[0x7fee964d66e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7fee964ceb9a]                                                       + 0x152b9a
[0x7fee964d7aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7fee963f3151]    _PyObject_FastCallDict                             + 0x131
[0x7fee963f32a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7fee963f2f2b]    PyObject_Call                                      + 0x4b
[0x7fee96464d7f]                                                       + 0xe8d7f
[0x7fee96460149]                                                       + 0xe4149
[0x7fee963f30ad]    _PyObject_FastCallDict                             + 0x8d
[0x7fee964ced78]                                                       + 0x152d78
[0x7fee964d450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fee964ceb9a]                                                       + 0x152b9a
[0x7fee964cf1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fee96421f1e]                                                       + 0xa5f1e
[0x7fee963f2f2b]    PyObject_Call                                      + 0x4b
[0x7fee964d4770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fee964ceb9a]                                                       + 0x152b9a
[0x7fee964cef94]                                                       + 0x152f94
[0x7fee964d4867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7fee964ceb9a]                                                       + 0x152b9a
[0x7fee964cf1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fee96421f1e]                                                       + 0xa5f1e
[0x7fee963f2f2b]    PyObject_Call                                      + 0x4b
[0x7fee964d4770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fee964ceb9a]                                                       + 0x152b9a
[0x7fee964cef94]                                                       + 0x152f94
[0x7fee964d4867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7fee964ceb9a]                                                       + 0x152b9a
[0x7fee964cef94]                                                       + 0x152f94
[0x7fee964d450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fee964ceb9a]                                                       + 0x152b9a
[0x7fee964cf1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fee96421f1e]                                                       + 0xa5f1e
[0x7fee963f2f2b]    PyObject_Call                                      + 0x4b
[0x7fee964d4770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fee964ceb9a]                                                       + 0x152b9a
[0x7fee964cef94]                                                       + 0x152f94
[0x7fee964d450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fee964ceb9a]                                                       + 0x152b9a
[0x7fee964cef94]                                                       + 0x152f94
[0x7fee964d450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fee964ceb9a]                                                       + 0x152b9a
[0x7fee964cef94]                                                       + 0x152f94
[0x7fee964d450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fee964ceb9a]                                                       + 0x152b9a
[0x7fee964cf1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fee964cf1df]    PyEval_EvalCode                                    + 0x1f
[0x7fee965043d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fee9650456f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fee9651e8e8]    Py_Main                                            + 0xff8
[0x55f5bd3f52b8]    main                                               + 0x178
[0x7fee961930b3]    __libc_start_main                                  + 0xf3
[0x55f5bd3f536e]    _start                                             + 0x2e


======================================== core-js-pure/modules/web.url.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f3743dd8a29]                                                       + 0x7c5a29
[0x7f3743f99289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f37c83c3741]                                                       + 0x2d7741
[0x7f37cccca9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f37ccd50084]                                                       + 0x153084
[0x7f37ccd5550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f37ccd4fb9a]                                                       + 0x152b9a
[0x7f37ccd501b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f37ccca2f1e]                                                       + 0xa5f1e
[0x7f37ccc73f2b]    PyObject_Call                                      + 0x4b
[0x7f37ccd55770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f37ccd4fb9a]                                                       + 0x152b9a
[0x7f37ccd4ff94]                                                       + 0x152f94
[0x7f37ccd5550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f37ccd4fb9a]                                                       + 0x152b9a
[0x7f37ccd4ff94]                                                       + 0x152f94
[0x7f37ccd5550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f37ccd4f193]                                                       + 0x152193
[0x7f37ccd5015c]                                                       + 0x15315c
[0x7f37ccd5550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f37ccd4fb9a]                                                       + 0x152b9a
[0x7f37ccd4ff94]                                                       + 0x152f94
[0x7f37ccd5550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f37ccd4fb9a]                                                       + 0x152b9a
[0x7f37ccd501b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f37ccd501df]    PyEval_EvalCode                                    + 0x1f
[0x7f37ccd853d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f37ccd8556f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f37ccd9f8e8]    Py_Main                                            + 0xff8
[0x55cf697ba2b8]    main                                               + 0x178
[0x7f37cca140b3]    __libc_start_main                                  + 0xf3
[0x55cf697ba36e]    _start                                             + 0x2e


======================================== core-js-pure/modules/web.url.to-json.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f2ddeee3a29]                                                       + 0x7c5a29
[0x7f2ddf069d45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f2e633323a8]                                                       + 0x13b3a8
[0x7f2e63334065]                                                       + 0x13d065
[0x7f2e67dd5bd9]    PyCFunction_Call                                   + 0xc9
[0x7f2e67e626e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f2e67e5ab9a]                                                       + 0x152b9a
[0x7f2e67e63aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f2e67d7f151]    _PyObject_FastCallDict                             + 0x131
[0x7f2e67d7f2a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f2e67d7ef2b]    PyObject_Call                                      + 0x4b
[0x7f2e67df0d7f]                                                       + 0xe8d7f
[0x7f2e67dec149]                                                       + 0xe4149
[0x7f2e67d7f0ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f2e67e5ad78]                                                       + 0x152d78
[0x7f2e67e6050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f2e67e5ab9a]                                                       + 0x152b9a
[0x7f2e67e5b1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f2e67dadf1e]                                                       + 0xa5f1e
[0x7f2e67d7ef2b]    PyObject_Call                                      + 0x4b
[0x7f2e67e60770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f2e67e5ab9a]                                                       + 0x152b9a
[0x7f2e67e5af94]                                                       + 0x152f94
[0x7f2e67e60867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f2e67e5ab9a]                                                       + 0x152b9a
[0x7f2e67e5b1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f2e67dadf1e]                                                       + 0xa5f1e
[0x7f2e67d7ef2b]    PyObject_Call                                      + 0x4b
[0x7f2e67e60770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f2e67e5ab9a]                                                       + 0x152b9a
[0x7f2e67e5af94]                                                       + 0x152f94
[0x7f2e67e60867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f2e67e5ab9a]                                                       + 0x152b9a
[0x7f2e67e5af94]                                                       + 0x152f94
[0x7f2e67e6050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f2e67e5ab9a]                                                       + 0x152b9a
[0x7f2e67e5b1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f2e67dadf1e]                                                       + 0xa5f1e
[0x7f2e67d7ef2b]    PyObject_Call                                      + 0x4b
[0x7f2e67e60770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f2e67e5ab9a]                                                       + 0x152b9a
[0x7f2e67e5af94]                                                       + 0x152f94
[0x7f2e67e6050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f2e67e5ab9a]                                                       + 0x152b9a
[0x7f2e67e5af94]                                                       + 0x152f94
[0x7f2e67e6050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f2e67e5ab9a]                                                       + 0x152b9a
[0x7f2e67e5af94]                                                       + 0x152f94
[0x7f2e67e6050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f2e67e5ab9a]                                                       + 0x152b9a
[0x7f2e67e5b1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f2e67e5b1df]    PyEval_EvalCode                                    + 0x1f
[0x7f2e67e903d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f2e67e9056f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f2e67eaa8e8]    Py_Main                                            + 0xff8
[0x562da95422b8]    main                                               + 0x178
[0x7f2e67b1f0b3]    __libc_start_main                                  + 0xf3
[0x562da954236e]    _start                                             + 0x2e


======================================== cosmiconfig/dist/index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 452 is out of bounds for axis 0 with size 452

======================================== css-loader/dist/utils.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f9670b08a29]                                                       + 0x7c5a29
[0x7f9670cc9289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f96f50f3741]                                                       + 0x2d7741
[0x7f96f99fa9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f96f9a80084]                                                       + 0x153084
[0x7f96f9a8550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f96f9a7fb9a]                                                       + 0x152b9a
[0x7f96f9a801b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f96f99d2f1e]                                                       + 0xa5f1e
[0x7f96f99a3f2b]    PyObject_Call                                      + 0x4b
[0x7f96f9a85770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f96f9a7fb9a]                                                       + 0x152b9a
[0x7f96f9a7ff94]                                                       + 0x152f94
[0x7f96f9a8550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f96f9a7fb9a]                                                       + 0x152b9a
[0x7f96f9a7ff94]                                                       + 0x152f94
[0x7f96f9a8550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f96f9a7f193]                                                       + 0x152193
[0x7f96f9a8015c]                                                       + 0x15315c
[0x7f96f9a8550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f96f9a7fb9a]                                                       + 0x152b9a
[0x7f96f9a7ff94]                                                       + 0x152f94
[0x7f96f9a8550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f96f9a7fb9a]                                                       + 0x152b9a
[0x7f96f9a801b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f96f9a801df]    PyEval_EvalCode                                    + 0x1f
[0x7f96f9ab53d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f96f9ab556f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f96f9acf8e8]    Py_Main                                            + 0xff8
[0x563e238d32b8]    main                                               + 0x178
[0x7f96f97440b3]    __libc_start_main                                  + 0xf3
[0x563e238d336e]    _start                                             + 0x2e


======================================== css-tree/dist/csstree.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== css-tree/dist/csstree.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== csso/dist/csso.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== csso/dist/csso.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== cssstyle/lib/properties.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f582212da29]                                                       + 0x7c5a29
[0x7f58222ee289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f58a6718741]                                                       + 0x2d7741
[0x7f58ab01f9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f58ab0a5084]                                                       + 0x153084
[0x7f58ab0aa50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f58ab0a4b9a]                                                       + 0x152b9a
[0x7f58ab0a51b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f58aaff7f1e]                                                       + 0xa5f1e
[0x7f58aafc8f2b]    PyObject_Call                                      + 0x4b
[0x7f58ab0aa770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f58ab0a4b9a]                                                       + 0x152b9a
[0x7f58ab0a4f94]                                                       + 0x152f94
[0x7f58ab0aa50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f58ab0a4b9a]                                                       + 0x152b9a
[0x7f58ab0a4f94]                                                       + 0x152f94
[0x7f58ab0aa50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f58ab0a4193]                                                       + 0x152193
[0x7f58ab0a515c]                                                       + 0x15315c
[0x7f58ab0aa50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f58ab0a4b9a]                                                       + 0x152b9a
[0x7f58ab0a4f94]                                                       + 0x152f94
[0x7f58ab0aa50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f58ab0a4b9a]                                                       + 0x152b9a
[0x7f58ab0a51b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f58ab0a51df]    PyEval_EvalCode                                    + 0x1f
[0x7f58ab0da3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f58ab0da56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f58ab0f48e8]    Py_Main                                            + 0xff8
[0x55bad44962b8]    main                                               + 0x178
[0x7f58aad690b3]    __libc_start_main                                  + 0xf3
[0x55bad449636e]    _start                                             + 0x2e


======================================== date-fns/esm/locale/types.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f0ea549da29]                                                       + 0x7c5a29
[0x7f0ea5623d45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f0f298ec3a8]                                                       + 0x13b3a8
[0x7f0f298ee065]                                                       + 0x13d065
[0x7f0f2e38fbd9]    PyCFunction_Call                                   + 0xc9
[0x7f0f2e41c6e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f0f2e414b9a]                                                       + 0x152b9a
[0x7f0f2e41daa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f0f2e339151]    _PyObject_FastCallDict                             + 0x131
[0x7f0f2e3392a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f0f2e338f2b]    PyObject_Call                                      + 0x4b
[0x7f0f2e3aad7f]                                                       + 0xe8d7f
[0x7f0f2e3a6149]                                                       + 0xe4149
[0x7f0f2e3390ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f0f2e414d78]                                                       + 0x152d78
[0x7f0f2e41a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f0f2e414b9a]                                                       + 0x152b9a
[0x7f0f2e4151b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f0f2e367f1e]                                                       + 0xa5f1e
[0x7f0f2e338f2b]    PyObject_Call                                      + 0x4b
[0x7f0f2e41a770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f0f2e414b9a]                                                       + 0x152b9a
[0x7f0f2e414f94]                                                       + 0x152f94
[0x7f0f2e41a867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f0f2e414b9a]                                                       + 0x152b9a
[0x7f0f2e4151b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f0f2e367f1e]                                                       + 0xa5f1e
[0x7f0f2e338f2b]    PyObject_Call                                      + 0x4b
[0x7f0f2e41a770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f0f2e414b9a]                                                       + 0x152b9a
[0x7f0f2e414f94]                                                       + 0x152f94
[0x7f0f2e41a867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f0f2e414b9a]                                                       + 0x152b9a
[0x7f0f2e414f94]                                                       + 0x152f94
[0x7f0f2e41a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f0f2e414b9a]                                                       + 0x152b9a
[0x7f0f2e4151b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f0f2e367f1e]                                                       + 0xa5f1e
[0x7f0f2e338f2b]    PyObject_Call                                      + 0x4b
[0x7f0f2e41a770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f0f2e414b9a]                                                       + 0x152b9a
[0x7f0f2e414f94]                                                       + 0x152f94
[0x7f0f2e41a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f0f2e414b9a]                                                       + 0x152b9a
[0x7f0f2e414f94]                                                       + 0x152f94
[0x7f0f2e41a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f0f2e414b9a]                                                       + 0x152b9a
[0x7f0f2e414f94]                                                       + 0x152f94
[0x7f0f2e41a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f0f2e414b9a]                                                       + 0x152b9a
[0x7f0f2e4151b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f0f2e4151df]    PyEval_EvalCode                                    + 0x1f
[0x7f0f2e44a3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f0f2e44a56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f0f2e4648e8]    Py_Main                                            + 0xff8
[0x55ff743ca2b8]    main                                               + 0x178
[0x7f0f2e0d90b3]    __libc_start_main                                  + 0xf3
[0x55ff743ca36e]    _start                                             + 0x2e


======================================== date-fns/esm/parse/_lib/parsers/index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f366f52da29]                                                       + 0x7c5a29
[0x7f366f6ee289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f36f3b18741]                                                       + 0x2d7741
[0x7f36f841f9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f36f84a5084]                                                       + 0x153084
[0x7f36f84aa50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f36f84a4b9a]                                                       + 0x152b9a
[0x7f36f84a51b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f36f83f7f1e]                                                       + 0xa5f1e
[0x7f36f83c8f2b]    PyObject_Call                                      + 0x4b
[0x7f36f84aa770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f36f84a4b9a]                                                       + 0x152b9a
[0x7f36f84a4f94]                                                       + 0x152f94
[0x7f36f84aa50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f36f84a4b9a]                                                       + 0x152b9a
[0x7f36f84a4f94]                                                       + 0x152f94
[0x7f36f84aa50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f36f84a4193]                                                       + 0x152193
[0x7f36f84a515c]                                                       + 0x15315c
[0x7f36f84aa50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f36f84a4b9a]                                                       + 0x152b9a
[0x7f36f84a4f94]                                                       + 0x152f94
[0x7f36f84aa50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f36f84a4b9a]                                                       + 0x152b9a
[0x7f36f84a51b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f36f84a51df]    PyEval_EvalCode                                    + 0x1f
[0x7f36f84da3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f36f84da56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f36f84f48e8]    Py_Main                                            + 0xff8
[0x563f27d4c2b8]    main                                               + 0x178
[0x7f36f81690b3]    __libc_start_main                                  + 0xf3
[0x563f27d4c36e]    _start                                             + 0x2e


======================================== date-fns/esm/types.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f1265fd5a29]                                                       + 0x7c5a29
[0x7f126615bd45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f12ea4243a8]                                                       + 0x13b3a8
[0x7f12ea426065]                                                       + 0x13d065
[0x7f12eeec7bd9]    PyCFunction_Call                                   + 0xc9
[0x7f12eef546e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f12eef4cb9a]                                                       + 0x152b9a
[0x7f12eef55aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f12eee71151]    _PyObject_FastCallDict                             + 0x131
[0x7f12eee712a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f12eee70f2b]    PyObject_Call                                      + 0x4b
[0x7f12eeee2d7f]                                                       + 0xe8d7f
[0x7f12eeede149]                                                       + 0xe4149
[0x7f12eee710ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f12eef4cd78]                                                       + 0x152d78
[0x7f12eef5250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f12eef4cb9a]                                                       + 0x152b9a
[0x7f12eef4d1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f12eee9ff1e]                                                       + 0xa5f1e
[0x7f12eee70f2b]    PyObject_Call                                      + 0x4b
[0x7f12eef52770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f12eef4cb9a]                                                       + 0x152b9a
[0x7f12eef4cf94]                                                       + 0x152f94
[0x7f12eef52867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f12eef4cb9a]                                                       + 0x152b9a
[0x7f12eef4d1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f12eee9ff1e]                                                       + 0xa5f1e
[0x7f12eee70f2b]    PyObject_Call                                      + 0x4b
[0x7f12eef52770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f12eef4cb9a]                                                       + 0x152b9a
[0x7f12eef4cf94]                                                       + 0x152f94
[0x7f12eef52867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f12eef4cb9a]                                                       + 0x152b9a
[0x7f12eef4cf94]                                                       + 0x152f94
[0x7f12eef5250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f12eef4cb9a]                                                       + 0x152b9a
[0x7f12eef4d1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f12eee9ff1e]                                                       + 0xa5f1e
[0x7f12eee70f2b]    PyObject_Call                                      + 0x4b
[0x7f12eef52770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f12eef4cb9a]                                                       + 0x152b9a
[0x7f12eef4cf94]                                                       + 0x152f94
[0x7f12eef5250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f12eef4cb9a]                                                       + 0x152b9a
[0x7f12eef4cf94]                                                       + 0x152f94
[0x7f12eef5250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f12eef4cb9a]                                                       + 0x152b9a
[0x7f12eef4cf94]                                                       + 0x152f94
[0x7f12eef5250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f12eef4cb9a]                                                       + 0x152b9a
[0x7f12eef4d1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f12eef4d1df]    PyEval_EvalCode                                    + 0x1f
[0x7f12eef823d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f12eef8256f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f12eef9c8e8]    Py_Main                                            + 0xff8
[0x55d7a7f322b8]    main                                               + 0x178
[0x7f12eec110b3]    __libc_start_main                                  + 0xf3
[0x55d7a7f3236e]    _start                                             + 0x2e


======================================== date-fns/fp/index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fed813ffa29]                                                       + 0x7c5a29
[0x7fed815c0289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fed824dd741]                                                       + 0x2d7741
[0x7fed86de49e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fed86e6a084]                                                       + 0x153084
[0x7fed86e6f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fed86e69b9a]                                                       + 0x152b9a
[0x7fed86e6a1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fed86dbcf1e]                                                       + 0xa5f1e
[0x7fed86d8df2b]    PyObject_Call                                      + 0x4b
[0x7fed86e6f770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fed86e69b9a]                                                       + 0x152b9a
[0x7fed86e69f94]                                                       + 0x152f94
[0x7fed86e6f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fed86e69b9a]                                                       + 0x152b9a
[0x7fed86e69f94]                                                       + 0x152f94
[0x7fed86e6f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fed86e69193]                                                       + 0x152193
[0x7fed86e6a15c]                                                       + 0x15315c
[0x7fed86e6f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fed86e69b9a]                                                       + 0x152b9a
[0x7fed86e69f94]                                                       + 0x152f94
[0x7fed86e6f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fed86e69b9a]                                                       + 0x152b9a
[0x7fed86e6a1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fed86e6a1df]    PyEval_EvalCode                                    + 0x1f
[0x7fed86e9f3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fed86e9f56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fed86eb98e8]    Py_Main                                            + 0xff8
[0x56038a3ee2b8]    main                                               + 0x178
[0x7fed86b2e0b3]    __libc_start_main                                  + 0xf3
[0x56038a3ee36e]    _start                                             + 0x2e


======================================== date-fns/index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7faf14421a29]                                                       + 0x7c5a29
[0x7faf145e2289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7faf98a0c741]                                                       + 0x2d7741
[0x7faf9d3139e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7faf9d399084]                                                       + 0x153084
[0x7faf9d39e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7faf9d398b9a]                                                       + 0x152b9a
[0x7faf9d3991b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7faf9d2ebf1e]                                                       + 0xa5f1e
[0x7faf9d2bcf2b]    PyObject_Call                                      + 0x4b
[0x7faf9d39e770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7faf9d398b9a]                                                       + 0x152b9a
[0x7faf9d398f94]                                                       + 0x152f94
[0x7faf9d39e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7faf9d398b9a]                                                       + 0x152b9a
[0x7faf9d398f94]                                                       + 0x152f94
[0x7faf9d39e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7faf9d398193]                                                       + 0x152193
[0x7faf9d39915c]                                                       + 0x15315c
[0x7faf9d39e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7faf9d398b9a]                                                       + 0x152b9a
[0x7faf9d398f94]                                                       + 0x152f94
[0x7faf9d39e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7faf9d398b9a]                                                       + 0x152b9a
[0x7faf9d3991b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7faf9d3991df]    PyEval_EvalCode                                    + 0x1f
[0x7faf9d3ce3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7faf9d3ce56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7faf9d3e88e8]    Py_Main                                            + 0xff8
[0x5628a72312b8]    main                                               + 0x178
[0x7faf9d05d0b3]    __libc_start_main                                  + 0xf3
[0x5628a723136e]    _start                                             + 0x2e


======================================== date-fns/parse/_lib/parsers/index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f3c8bd50a29]                                                       + 0x7c5a29
[0x7f3c8bf11289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f3d1033b741]                                                       + 0x2d7741
[0x7f3d14c429e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f3d14cc8084]                                                       + 0x153084
[0x7f3d14ccd50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f3d14cc7b9a]                                                       + 0x152b9a
[0x7f3d14cc81b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f3d14c1af1e]                                                       + 0xa5f1e
[0x7f3d14bebf2b]    PyObject_Call                                      + 0x4b
[0x7f3d14ccd770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f3d14cc7b9a]                                                       + 0x152b9a
[0x7f3d14cc7f94]                                                       + 0x152f94
[0x7f3d14ccd50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f3d14cc7b9a]                                                       + 0x152b9a
[0x7f3d14cc7f94]                                                       + 0x152f94
[0x7f3d14ccd50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f3d14cc7193]                                                       + 0x152193
[0x7f3d14cc815c]                                                       + 0x15315c
[0x7f3d14ccd50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f3d14cc7b9a]                                                       + 0x152b9a
[0x7f3d14cc7f94]                                                       + 0x152f94
[0x7f3d14ccd50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f3d14cc7b9a]                                                       + 0x152b9a
[0x7f3d14cc81b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f3d14cc81df]    PyEval_EvalCode                                    + 0x1f
[0x7f3d14cfd3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f3d14cfd56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f3d14d178e8]    Py_Main                                            + 0xff8
[0x558c0c2f82b8]    main                                               + 0x178
[0x7f3d1498c0b3]    __libc_start_main                                  + 0xf3
[0x558c0c2f836e]    _start                                             + 0x2e


======================================== decimal.js/decimal.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fc5b9d90a29]                                                       + 0x7c5a29
[0x7fc5b9f51289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fc63e37b741]                                                       + 0x2d7741
[0x7fc642c829e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fc642d08084]                                                       + 0x153084
[0x7fc642d0d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc642d07b9a]                                                       + 0x152b9a
[0x7fc642d081b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fc642c5af1e]                                                       + 0xa5f1e
[0x7fc642c2bf2b]    PyObject_Call                                      + 0x4b
[0x7fc642d0d770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fc642d07b9a]                                                       + 0x152b9a
[0x7fc642d07f94]                                                       + 0x152f94
[0x7fc642d0d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc642d07b9a]                                                       + 0x152b9a
[0x7fc642d07f94]                                                       + 0x152f94
[0x7fc642d0d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc642d07193]                                                       + 0x152193
[0x7fc642d0815c]                                                       + 0x15315c
[0x7fc642d0d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc642d07b9a]                                                       + 0x152b9a
[0x7fc642d07f94]                                                       + 0x152f94
[0x7fc642d0d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc642d07b9a]                                                       + 0x152b9a
[0x7fc642d081b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fc642d081df]    PyEval_EvalCode                                    + 0x1f
[0x7fc642d3d3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fc642d3d56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fc642d578e8]    Py_Main                                            + 0xff8
[0x5577fcc7a2b8]    main                                               + 0x178
[0x7fc6429cc0b3]    __libc_start_main                                  + 0xf3
[0x5577fcc7a36e]    _start                                             + 0x2e


======================================== deep-equal/test/cmp.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f2c32619a29]                                                       + 0x7c5a29
[0x7f2c327da289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f2c336f7741]                                                       + 0x2d7741
[0x7f2c37ffe9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f2c38084084]                                                       + 0x153084
[0x7f2c3808950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f2c38083b9a]                                                       + 0x152b9a
[0x7f2c380841b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f2c37fd6f1e]                                                       + 0xa5f1e
[0x7f2c37fa7f2b]    PyObject_Call                                      + 0x4b
[0x7f2c38089770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f2c38083b9a]                                                       + 0x152b9a
[0x7f2c38083f94]                                                       + 0x152f94
[0x7f2c3808950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f2c38083b9a]                                                       + 0x152b9a
[0x7f2c38083f94]                                                       + 0x152f94
[0x7f2c3808950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f2c38083193]                                                       + 0x152193
[0x7f2c3808415c]                                                       + 0x15315c
[0x7f2c3808950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f2c38083b9a]                                                       + 0x152b9a
[0x7f2c38083f94]                                                       + 0x152f94
[0x7f2c3808950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f2c38083b9a]                                                       + 0x152b9a
[0x7f2c380841b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f2c380841df]    PyEval_EvalCode                                    + 0x1f
[0x7f2c380b93d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f2c380b956f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f2c380d38e8]    Py_Main                                            + 0xff8
[0x55998fb3c2b8]    main                                               + 0x178
[0x7f2c37d480b3]    __libc_start_main                                  + 0xf3
[0x55998fb3c36e]    _start                                             + 0x2e


======================================== diff/dist/diff.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fefa2efba29]                                                       + 0x7c5a29
[0x7fefa30bc289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7ff0274e6741]                                                       + 0x2d7741
[0x7ff02bded9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7ff02be73084]                                                       + 0x153084
[0x7ff02be7850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff02be72b9a]                                                       + 0x152b9a
[0x7ff02be731b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7ff02bdc5f1e]                                                       + 0xa5f1e
[0x7ff02bd96f2b]    PyObject_Call                                      + 0x4b
[0x7ff02be78770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7ff02be72b9a]                                                       + 0x152b9a
[0x7ff02be72f94]                                                       + 0x152f94
[0x7ff02be7850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff02be72b9a]                                                       + 0x152b9a
[0x7ff02be72f94]                                                       + 0x152f94
[0x7ff02be7850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff02be72193]                                                       + 0x152193
[0x7ff02be7315c]                                                       + 0x15315c
[0x7ff02be7850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff02be72b9a]                                                       + 0x152b9a
[0x7ff02be72f94]                                                       + 0x152f94
[0x7ff02be7850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff02be72b9a]                                                       + 0x152b9a
[0x7ff02be731b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7ff02be731df]    PyEval_EvalCode                                    + 0x1f
[0x7ff02bea83d5]    PyRun_FileExFlags                                  + 0xb5
[0x7ff02bea856f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7ff02bec28e8]    Py_Main                                            + 0xff8
[0x556d846f92b8]    main                                               + 0x178
[0x7ff02bb370b3]    __libc_start_main                                  + 0xf3
[0x556d846f936e]    _start                                             + 0x2e


======================================== diff/lib/index.es6.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7ffa0d4a8a29]                                                       + 0x7c5a29
[0x7ffa0d669289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7ffa0e586741]                                                       + 0x2d7741
[0x7ffa12e8d9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7ffa12f13084]                                                       + 0x153084
[0x7ffa12f1850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ffa12f12b9a]                                                       + 0x152b9a
[0x7ffa12f131b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7ffa12e65f1e]                                                       + 0xa5f1e
[0x7ffa12e36f2b]    PyObject_Call                                      + 0x4b
[0x7ffa12f18770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7ffa12f12b9a]                                                       + 0x152b9a
[0x7ffa12f12f94]                                                       + 0x152f94
[0x7ffa12f1850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ffa12f12b9a]                                                       + 0x152b9a
[0x7ffa12f12f94]                                                       + 0x152f94
[0x7ffa12f1850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ffa12f12193]                                                       + 0x152193
[0x7ffa12f1315c]                                                       + 0x15315c
[0x7ffa12f1850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ffa12f12b9a]                                                       + 0x152b9a
[0x7ffa12f12f94]                                                       + 0x152f94
[0x7ffa12f1850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ffa12f12b9a]                                                       + 0x152b9a
[0x7ffa12f131b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7ffa12f131df]    PyEval_EvalCode                                    + 0x1f
[0x7ffa12f483d5]    PyRun_FileExFlags                                  + 0xb5
[0x7ffa12f4856f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7ffa12f628e8]    Py_Main                                            + 0xff8
[0x55ad5d59a2b8]    main                                               + 0x178
[0x7ffa12bd70b3]    __libc_start_main                                  + 0xf3
[0x55ad5d59a36e]    _start                                             + 0x2e


======================================== diff-sequences/perf/index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 849 is out of bounds for axis 0 with size 849

======================================== doctrine/lib/typed.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f5146bbca29]                                                       + 0x7c5a29
[0x7f5146d7d289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f51cb1a7741]                                                       + 0x2d7741
[0x7f51cfaae9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f51cfb34084]                                                       + 0x153084
[0x7f51cfb3950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f51cfb33b9a]                                                       + 0x152b9a
[0x7f51cfb341b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f51cfa86f1e]                                                       + 0xa5f1e
[0x7f51cfa57f2b]    PyObject_Call                                      + 0x4b
[0x7f51cfb39770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f51cfb33b9a]                                                       + 0x152b9a
[0x7f51cfb33f94]                                                       + 0x152f94
[0x7f51cfb3950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f51cfb33b9a]                                                       + 0x152b9a
[0x7f51cfb33f94]                                                       + 0x152f94
[0x7f51cfb3950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f51cfb33193]                                                       + 0x152193
[0x7f51cfb3415c]                                                       + 0x15315c
[0x7f51cfb3950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f51cfb33b9a]                                                       + 0x152b9a
[0x7f51cfb33f94]                                                       + 0x152f94
[0x7f51cfb3950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f51cfb33b9a]                                                       + 0x152b9a
[0x7f51cfb341b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f51cfb341df]    PyEval_EvalCode                                    + 0x1f
[0x7f51cfb693d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f51cfb6956f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f51cfb838e8]    Py_Main                                            + 0xff8
[0x55d91b99b2b8]    main                                               + 0x178
[0x7f51cf7f80b3]    __libc_start_main                                  + 0xf3
[0x55d91b99b36e]    _start                                             + 0x2e


======================================== elliptic/lib/elliptic/curve/short.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7faed27e7a29]                                                       + 0x7c5a29
[0x7faed29a8289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7faf56dd2741]                                                       + 0x2d7741
[0x7faf5b6d99e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7faf5b75f084]                                                       + 0x153084
[0x7faf5b76450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7faf5b75eb9a]                                                       + 0x152b9a
[0x7faf5b75f1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7faf5b6b1f1e]                                                       + 0xa5f1e
[0x7faf5b682f2b]    PyObject_Call                                      + 0x4b
[0x7faf5b764770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7faf5b75eb9a]                                                       + 0x152b9a
[0x7faf5b75ef94]                                                       + 0x152f94
[0x7faf5b76450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7faf5b75eb9a]                                                       + 0x152b9a
[0x7faf5b75ef94]                                                       + 0x152f94
[0x7faf5b76450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7faf5b75e193]                                                       + 0x152193
[0x7faf5b75f15c]                                                       + 0x15315c
[0x7faf5b76450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7faf5b75eb9a]                                                       + 0x152b9a
[0x7faf5b75ef94]                                                       + 0x152f94
[0x7faf5b76450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7faf5b75eb9a]                                                       + 0x152b9a
[0x7faf5b75f1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7faf5b75f1df]    PyEval_EvalCode                                    + 0x1f
[0x7faf5b7943d5]    PyRun_FileExFlags                                  + 0xb5
[0x7faf5b79456f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7faf5b7ae8e8]    Py_Main                                            + 0xff8
[0x55af711242b8]    main                                               + 0x178
[0x7faf5b4230b3]    __libc_start_main                                  + 0xf3
[0x55af7112436e]    _start                                             + 0x2e


======================================== emojis-list/index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7ff2c5baca29]                                                       + 0x7c5a29
[0x7ff2c5d6d289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7ff34a197741]                                                       + 0x2d7741
[0x7ff34ea9e9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7ff34eb24084]                                                       + 0x153084
[0x7ff34eb2950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff34eb23b9a]                                                       + 0x152b9a
[0x7ff34eb241b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7ff34ea76f1e]                                                       + 0xa5f1e
[0x7ff34ea47f2b]    PyObject_Call                                      + 0x4b
[0x7ff34eb29770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7ff34eb23b9a]                                                       + 0x152b9a
[0x7ff34eb23f94]                                                       + 0x152f94
[0x7ff34eb2950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff34eb23b9a]                                                       + 0x152b9a
[0x7ff34eb23f94]                                                       + 0x152f94
[0x7ff34eb2950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff34eb23193]                                                       + 0x152193
[0x7ff34eb2415c]                                                       + 0x15315c
[0x7ff34eb2950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff34eb23b9a]                                                       + 0x152b9a
[0x7ff34eb23f94]                                                       + 0x152f94
[0x7ff34eb2950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff34eb23b9a]                                                       + 0x152b9a
[0x7ff34eb241b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7ff34eb241df]    PyEval_EvalCode                                    + 0x1f
[0x7ff34eb593d5]    PyRun_FileExFlags                                  + 0xb5
[0x7ff34eb5956f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7ff34eb738e8]    Py_Main                                            + 0xff8
[0x55ade2bef2b8]    main                                               + 0x178
[0x7ff34e7e80b3]    __libc_start_main                                  + 0xf3
[0x55ade2bef36e]    _start                                             + 0x2e


======================================== enhanced-resolve/lib/util/entrypoints.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 2298 is out of bounds for axis 0 with size 2298

======================================== enquirer/lib/ansi.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 974 is out of bounds for axis 0 with size 974

======================================== entities/lib/generated/decode-data-html.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== es-module-lexer/dist/lexer.asm.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7eff19fe6a29]                                                       + 0x7c5a29
[0x7eff1a1a7289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7eff9e5d1741]                                                       + 0x2d7741
[0x7effa2ed89e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7effa2f5e084]                                                       + 0x153084
[0x7effa2f6350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7effa2f5db9a]                                                       + 0x152b9a
[0x7effa2f5e1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7effa2eb0f1e]                                                       + 0xa5f1e
[0x7effa2e81f2b]    PyObject_Call                                      + 0x4b
[0x7effa2f63770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7effa2f5db9a]                                                       + 0x152b9a
[0x7effa2f5df94]                                                       + 0x152f94
[0x7effa2f6350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7effa2f5db9a]                                                       + 0x152b9a
[0x7effa2f5df94]                                                       + 0x152f94
[0x7effa2f6350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7effa2f5d193]                                                       + 0x152193
[0x7effa2f5e15c]                                                       + 0x15315c
[0x7effa2f6350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7effa2f5db9a]                                                       + 0x152b9a
[0x7effa2f5df94]                                                       + 0x152f94
[0x7effa2f6350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7effa2f5db9a]                                                       + 0x152b9a
[0x7effa2f5e1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7effa2f5e1df]    PyEval_EvalCode                                    + 0x1f
[0x7effa2f933d5]    PyRun_FileExFlags                                  + 0xb5
[0x7effa2f9356f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7effa2fad8e8]    Py_Main                                            + 0xff8
[0x55fc514b62b8]    main                                               + 0x178
[0x7effa2c220b3]    __libc_start_main                                  + 0xf3
[0x55fc514b636e]    _start                                             + 0x2e


======================================== es5-ext/string/#/normalize/_data.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== escodegen/escodegen.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f0ba2244a29]                                                       + 0x7c5a29
[0x7f0ba2405289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f0c2682f741]                                                       + 0x2d7741
[0x7f0c2b1369e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f0c2b1bc084]                                                       + 0x153084
[0x7f0c2b1c150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f0c2b1bbb9a]                                                       + 0x152b9a
[0x7f0c2b1bc1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f0c2b10ef1e]                                                       + 0xa5f1e
[0x7f0c2b0dff2b]    PyObject_Call                                      + 0x4b
[0x7f0c2b1c1770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f0c2b1bbb9a]                                                       + 0x152b9a
[0x7f0c2b1bbf94]                                                       + 0x152f94
[0x7f0c2b1c150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f0c2b1bbb9a]                                                       + 0x152b9a
[0x7f0c2b1bbf94]                                                       + 0x152f94
[0x7f0c2b1c150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f0c2b1bb193]                                                       + 0x152193
[0x7f0c2b1bc15c]                                                       + 0x15315c
[0x7f0c2b1c150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f0c2b1bbb9a]                                                       + 0x152b9a
[0x7f0c2b1bbf94]                                                       + 0x152f94
[0x7f0c2b1c150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f0c2b1bbb9a]                                                       + 0x152b9a
[0x7f0c2b1bc1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f0c2b1bc1df]    PyEval_EvalCode                                    + 0x1f
[0x7f0c2b1f13d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f0c2b1f156f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f0c2b20b8e8]    Py_Main                                            + 0xff8
[0x56117f4102b8]    main                                               + 0x178
[0x7f0c2ae800b3]    __libc_start_main                                  + 0xf3
[0x56117f41036e]    _start                                             + 0x2e


======================================== eslint/lib/cli-engine/formatters/checkstyle.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 212 is out of bounds for axis 0 with size 212

======================================== eslint/lib/cli-engine/formatters/codeframe.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 690 is out of bounds for axis 0 with size 690

======================================== eslint/lib/cli-engine/formatters/jslint-xml.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 153 is out of bounds for axis 0 with size 153

======================================== eslint/lib/init/config-initializer.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 3203 is out of bounds for axis 0 with size 3203

======================================== eslint/lib/linter/code-path-analysis/debug-helpers.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 812 is out of bounds for axis 0 with size 812

======================================== eslint/lib/linter/linter.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fb33c5baa29]                                                       + 0x7c5a29
[0x7fb33c77b289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fb3c0ba5741]                                                       + 0x2d7741
[0x7fb3c54ac9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fb3c5532084]                                                       + 0x153084
[0x7fb3c553750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb3c5531b9a]                                                       + 0x152b9a
[0x7fb3c55321b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fb3c5484f1e]                                                       + 0xa5f1e
[0x7fb3c5455f2b]    PyObject_Call                                      + 0x4b
[0x7fb3c5537770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fb3c5531b9a]                                                       + 0x152b9a
[0x7fb3c5531f94]                                                       + 0x152f94
[0x7fb3c553750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb3c5531b9a]                                                       + 0x152b9a
[0x7fb3c5531f94]                                                       + 0x152f94
[0x7fb3c553750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb3c5531193]                                                       + 0x152193
[0x7fb3c553215c]                                                       + 0x15315c
[0x7fb3c553750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb3c5531b9a]                                                       + 0x152b9a
[0x7fb3c5531f94]                                                       + 0x152f94
[0x7fb3c553750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb3c5531b9a]                                                       + 0x152b9a
[0x7fb3c55321b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fb3c55321df]    PyEval_EvalCode                                    + 0x1f
[0x7fb3c55673d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fb3c556756f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fb3c55818e8]    Py_Main                                            + 0xff8
[0x55d1bec412b8]    main                                               + 0x178
[0x7fb3c51f60b3]    __libc_start_main                                  + 0xf3
[0x55d1bec4136e]    _start                                             + 0x2e


======================================== eslint/lib/rules/indent.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fc27ea99a29]                                                       + 0x7c5a29
[0x7fc27ec5a289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fc303084741]                                                       + 0x2d7741
[0x7fc30798b9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fc307a11084]                                                       + 0x153084
[0x7fc307a1650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc307a10b9a]                                                       + 0x152b9a
[0x7fc307a111b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fc307963f1e]                                                       + 0xa5f1e
[0x7fc307934f2b]    PyObject_Call                                      + 0x4b
[0x7fc307a16770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fc307a10b9a]                                                       + 0x152b9a
[0x7fc307a10f94]                                                       + 0x152f94
[0x7fc307a1650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc307a10b9a]                                                       + 0x152b9a
[0x7fc307a10f94]                                                       + 0x152f94
[0x7fc307a1650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc307a10193]                                                       + 0x152193
[0x7fc307a1115c]                                                       + 0x15315c
[0x7fc307a1650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc307a10b9a]                                                       + 0x152b9a
[0x7fc307a10f94]                                                       + 0x152f94
[0x7fc307a1650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc307a10b9a]                                                       + 0x152b9a
[0x7fc307a111b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fc307a111df]    PyEval_EvalCode                                    + 0x1f
[0x7fc307a463d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fc307a4656f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fc307a608e8]    Py_Main                                            + 0xff8
[0x560ea01be2b8]    main                                               + 0x178
[0x7fc3076d50b3]    __libc_start_main                                  + 0xf3
[0x560ea01be36e]    _start                                             + 0x2e


======================================== eslint/lib/shared/runtime-info.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 598 is out of bounds for axis 0 with size 598

======================================== eslint-plugin-import/lib/rules/no-unused-modules.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f0b38153a29]                                                       + 0x7c5a29
[0x7f0b38314289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f0b39231741]                                                       + 0x2d7741
[0x7f0b3db389e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f0b3dbbe084]                                                       + 0x153084
[0x7f0b3dbc350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f0b3dbbdb9a]                                                       + 0x152b9a
[0x7f0b3dbbe1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f0b3db10f1e]                                                       + 0xa5f1e
[0x7f0b3dae1f2b]    PyObject_Call                                      + 0x4b
[0x7f0b3dbc3770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f0b3dbbdb9a]                                                       + 0x152b9a
[0x7f0b3dbbdf94]                                                       + 0x152f94
[0x7f0b3dbc350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f0b3dbbdb9a]                                                       + 0x152b9a
[0x7f0b3dbbdf94]                                                       + 0x152f94
[0x7f0b3dbc350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f0b3dbbd193]                                                       + 0x152193
[0x7f0b3dbbe15c]                                                       + 0x15315c
[0x7f0b3dbc350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f0b3dbbdb9a]                                                       + 0x152b9a
[0x7f0b3dbbdf94]                                                       + 0x152f94
[0x7f0b3dbc350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f0b3dbbdb9a]                                                       + 0x152b9a
[0x7f0b3dbbe1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f0b3dbbe1df]    PyEval_EvalCode                                    + 0x1f
[0x7f0b3dbf33d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f0b3dbf356f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f0b3dc0d8e8]    Py_Main                                            + 0xff8
[0x5577e1c492b8]    main                                               + 0x178
[0x7f0b3d8820b3]    __libc_start_main                                  + 0xf3
[0x5577e1c4936e]    _start                                             + 0x2e


======================================== eslint-utils/index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fa2f65a9a29]                                                       + 0x7c5a29
[0x7fa2f676a289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fa2f7687741]                                                       + 0x2d7741
[0x7fa2fbf8e9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fa2fc014084]                                                       + 0x153084
[0x7fa2fc01950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa2fc013b9a]                                                       + 0x152b9a
[0x7fa2fc0141b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fa2fbf66f1e]                                                       + 0xa5f1e
[0x7fa2fbf37f2b]    PyObject_Call                                      + 0x4b
[0x7fa2fc019770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fa2fc013b9a]                                                       + 0x152b9a
[0x7fa2fc013f94]                                                       + 0x152f94
[0x7fa2fc01950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa2fc013b9a]                                                       + 0x152b9a
[0x7fa2fc013f94]                                                       + 0x152f94
[0x7fa2fc01950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa2fc013193]                                                       + 0x152193
[0x7fa2fc01415c]                                                       + 0x15315c
[0x7fa2fc01950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa2fc013b9a]                                                       + 0x152b9a
[0x7fa2fc013f94]                                                       + 0x152f94
[0x7fa2fc01950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa2fc013b9a]                                                       + 0x152b9a
[0x7fa2fc0141b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fa2fc0141df]    PyEval_EvalCode                                    + 0x1f
[0x7fa2fc0493d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fa2fc04956f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fa2fc0638e8]    Py_Main                                            + 0xff8
[0x56065c7342b8]    main                                               + 0x178
[0x7fa2fbcd80b3]    __libc_start_main                                  + 0xf3
[0x56065c73436e]    _start                                             + 0x2e


======================================== esprima/dist/esprima.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== esquery/dist/esquery.esm.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f7f71172a29]                                                       + 0x7c5a29
[0x7f7f71333289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f7ff575d741]                                                       + 0x2d7741
[0x7f7ffa0649e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f7ffa0ea084]                                                       + 0x153084
[0x7f7ffa0ef50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7ffa0e9b9a]                                                       + 0x152b9a
[0x7f7ffa0ea1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f7ffa03cf1e]                                                       + 0xa5f1e
[0x7f7ffa00df2b]    PyObject_Call                                      + 0x4b
[0x7f7ffa0ef770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f7ffa0e9b9a]                                                       + 0x152b9a
[0x7f7ffa0e9f94]                                                       + 0x152f94
[0x7f7ffa0ef50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7ffa0e9b9a]                                                       + 0x152b9a
[0x7f7ffa0e9f94]                                                       + 0x152f94
[0x7f7ffa0ef50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7ffa0e9193]                                                       + 0x152193
[0x7f7ffa0ea15c]                                                       + 0x15315c
[0x7f7ffa0ef50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7ffa0e9b9a]                                                       + 0x152b9a
[0x7f7ffa0e9f94]                                                       + 0x152f94
[0x7f7ffa0ef50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7ffa0e9b9a]                                                       + 0x152b9a
[0x7f7ffa0ea1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f7ffa0ea1df]    PyEval_EvalCode                                    + 0x1f
[0x7f7ffa11f3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f7ffa11f56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f7ffa1398e8]    Py_Main                                            + 0xff8
[0x55ce65e392b8]    main                                               + 0x178
[0x7f7ff9dae0b3]    __libc_start_main                                  + 0xf3
[0x55ce65e3936e]    _start                                             + 0x2e


======================================== esquery/dist/esquery.esm.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f30eb4f3a29]                                                       + 0x7c5a29
[0x7f30eb6b4289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f30ec5d1741]                                                       + 0x2d7741
[0x7f30f0ed89e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f30f0f5e084]                                                       + 0x153084
[0x7f30f0f6350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f30f0f5db9a]                                                       + 0x152b9a
[0x7f30f0f5e1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f30f0eb0f1e]                                                       + 0xa5f1e
[0x7f30f0e81f2b]    PyObject_Call                                      + 0x4b
[0x7f30f0f63770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f30f0f5db9a]                                                       + 0x152b9a
[0x7f30f0f5df94]                                                       + 0x152f94
[0x7f30f0f6350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f30f0f5db9a]                                                       + 0x152b9a
[0x7f30f0f5df94]                                                       + 0x152f94
[0x7f30f0f6350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f30f0f5d193]                                                       + 0x152193
[0x7f30f0f5e15c]                                                       + 0x15315c
[0x7f30f0f6350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f30f0f5db9a]                                                       + 0x152b9a
[0x7f30f0f5df94]                                                       + 0x152f94
[0x7f30f0f6350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f30f0f5db9a]                                                       + 0x152b9a
[0x7f30f0f5e1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f30f0f5e1df]    PyEval_EvalCode                                    + 0x1f
[0x7f30f0f933d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f30f0f9356f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f30f0fad8e8]    Py_Main                                            + 0xff8
[0x5579440522b8]    main                                               + 0x178
[0x7f30f0c220b3]    __libc_start_main                                  + 0xf3
[0x55794405236e]    _start                                             + 0x2e


======================================== esquery/dist/esquery.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== esquery/dist/esquery.lite.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f741b52ba29]                                                       + 0x7c5a29
[0x7f741b6ec289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f743572d741]                                                       + 0x2d7741
[0x7f743a0349e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f743a0ba084]                                                       + 0x153084
[0x7f743a0bf50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f743a0b9b9a]                                                       + 0x152b9a
[0x7f743a0ba1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f743a00cf1e]                                                       + 0xa5f1e
[0x7f7439fddf2b]    PyObject_Call                                      + 0x4b
[0x7f743a0bf770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f743a0b9b9a]                                                       + 0x152b9a
[0x7f743a0b9f94]                                                       + 0x152f94
[0x7f743a0bf50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f743a0b9b9a]                                                       + 0x152b9a
[0x7f743a0b9f94]                                                       + 0x152f94
[0x7f743a0bf50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f743a0b9193]                                                       + 0x152193
[0x7f743a0ba15c]                                                       + 0x15315c
[0x7f743a0bf50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f743a0b9b9a]                                                       + 0x152b9a
[0x7f743a0b9f94]                                                       + 0x152f94
[0x7f743a0bf50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f743a0b9b9a]                                                       + 0x152b9a
[0x7f743a0ba1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f743a0ba1df]    PyEval_EvalCode                                    + 0x1f
[0x7f743a0ef3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f743a0ef56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f743a1098e8]    Py_Main                                            + 0xff8
[0x559015d552b8]    main                                               + 0x178
[0x7f7439d7e0b3]    __libc_start_main                                  + 0xf3
[0x559015d5536e]    _start                                             + 0x2e


======================================== esquery/dist/esquery.lite.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f68d5449a29]                                                       + 0x7c5a29
[0x7f68d560a289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f68d6527741]                                                       + 0x2d7741
[0x7f68dae2e9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f68daeb4084]                                                       + 0x153084
[0x7f68daeb950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f68daeb3b9a]                                                       + 0x152b9a
[0x7f68daeb41b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f68dae06f1e]                                                       + 0xa5f1e
[0x7f68dadd7f2b]    PyObject_Call                                      + 0x4b
[0x7f68daeb9770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f68daeb3b9a]                                                       + 0x152b9a
[0x7f68daeb3f94]                                                       + 0x152f94
[0x7f68daeb950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f68daeb3b9a]                                                       + 0x152b9a
[0x7f68daeb3f94]                                                       + 0x152f94
[0x7f68daeb950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f68daeb3193]                                                       + 0x152193
[0x7f68daeb415c]                                                       + 0x15315c
[0x7f68daeb950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f68daeb3b9a]                                                       + 0x152b9a
[0x7f68daeb3f94]                                                       + 0x152f94
[0x7f68daeb950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f68daeb3b9a]                                                       + 0x152b9a
[0x7f68daeb41b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f68daeb41df]    PyEval_EvalCode                                    + 0x1f
[0x7f68daee93d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f68daee956f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f68daf038e8]    Py_Main                                            + 0xff8
[0x55c325ac42b8]    main                                               + 0x178
[0x7f68dab780b3]    __libc_start_main                                  + 0xf3
[0x55c325ac436e]    _start                                             + 0x2e


======================================== esquery/dist/esquery.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f2870c93a29]                                                       + 0x7c5a29
[0x7f2870e54289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f28f527e741]                                                       + 0x2d7741
[0x7f28f9b859e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f28f9c0b084]                                                       + 0x153084
[0x7f28f9c1050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f28f9c0ab9a]                                                       + 0x152b9a
[0x7f28f9c0b1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f28f9b5df1e]                                                       + 0xa5f1e
[0x7f28f9b2ef2b]    PyObject_Call                                      + 0x4b
[0x7f28f9c10770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f28f9c0ab9a]                                                       + 0x152b9a
[0x7f28f9c0af94]                                                       + 0x152f94
[0x7f28f9c1050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f28f9c0ab9a]                                                       + 0x152b9a
[0x7f28f9c0af94]                                                       + 0x152f94
[0x7f28f9c1050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f28f9c0a193]                                                       + 0x152193
[0x7f28f9c0b15c]                                                       + 0x15315c
[0x7f28f9c1050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f28f9c0ab9a]                                                       + 0x152b9a
[0x7f28f9c0af94]                                                       + 0x152f94
[0x7f28f9c1050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f28f9c0ab9a]                                                       + 0x152b9a
[0x7f28f9c0b1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f28f9c0b1df]    PyEval_EvalCode                                    + 0x1f
[0x7f28f9c403d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f28f9c4056f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f28f9c5a8e8]    Py_Main                                            + 0xff8
[0x55ba600f52b8]    main                                               + 0x178
[0x7f28f98cf0b3]    __libc_start_main                                  + 0xf3
[0x55ba600f536e]    _start                                             + 0x2e


======================================== esquery/parser.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f281ff54a29]                                                       + 0x7c5a29
[0x7f2820115289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f28a453f741]                                                       + 0x2d7741
[0x7f28a8e469e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f28a8ecc084]                                                       + 0x153084
[0x7f28a8ed150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f28a8ecbb9a]                                                       + 0x152b9a
[0x7f28a8ecc1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f28a8e1ef1e]                                                       + 0xa5f1e
[0x7f28a8deff2b]    PyObject_Call                                      + 0x4b
[0x7f28a8ed1770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f28a8ecbb9a]                                                       + 0x152b9a
[0x7f28a8ecbf94]                                                       + 0x152f94
[0x7f28a8ed150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f28a8ecbb9a]                                                       + 0x152b9a
[0x7f28a8ecbf94]                                                       + 0x152f94
[0x7f28a8ed150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f28a8ecb193]                                                       + 0x152193
[0x7f28a8ecc15c]                                                       + 0x15315c
[0x7f28a8ed150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f28a8ecbb9a]                                                       + 0x152b9a
[0x7f28a8ecbf94]                                                       + 0x152f94
[0x7f28a8ed150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f28a8ecbb9a]                                                       + 0x152b9a
[0x7f28a8ecc1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f28a8ecc1df]    PyEval_EvalCode                                    + 0x1f
[0x7f28a8f013d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f28a8f0156f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f28a8f1b8e8]    Py_Main                                            + 0xff8
[0x560bd1b232b8]    main                                               + 0x178
[0x7f28a8b900b3]    __libc_start_main                                  + 0xf3
[0x560bd1b2336e]    _start                                             + 0x2e


======================================== eventsource/example/eventsource-polyfill.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== expect/build/index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 2312 is out of bounds for axis 0 with size 2312

======================================== expect/build/matchers.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f2833f88a29]                                                       + 0x7c5a29
[0x7f2834149289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f28b8573741]                                                       + 0x2d7741
[0x7f28bce7a9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f28bcf00084]                                                       + 0x153084
[0x7f28bcf0550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f28bceffb9a]                                                       + 0x152b9a
[0x7f28bcf001b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f28bce52f1e]                                                       + 0xa5f1e
[0x7f28bce23f2b]    PyObject_Call                                      + 0x4b
[0x7f28bcf05770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f28bceffb9a]                                                       + 0x152b9a
[0x7f28bcefff94]                                                       + 0x152f94
[0x7f28bcf0550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f28bceffb9a]                                                       + 0x152b9a
[0x7f28bcefff94]                                                       + 0x152f94
[0x7f28bcf0550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f28bceff193]                                                       + 0x152193
[0x7f28bcf0015c]                                                       + 0x15315c
[0x7f28bcf0550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f28bceffb9a]                                                       + 0x152b9a
[0x7f28bcefff94]                                                       + 0x152f94
[0x7f28bcf0550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f28bceffb9a]                                                       + 0x152b9a
[0x7f28bcf001b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f28bcf001df]    PyEval_EvalCode                                    + 0x1f
[0x7f28bcf353d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f28bcf3556f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f28bcf4f8e8]    Py_Main                                            + 0xff8
[0x56378c15a2b8]    main                                               + 0x178
[0x7f28bcbc40b3]    __libc_start_main                                  + 0xf3
[0x56378c15a36e]    _start                                             + 0x2e


======================================== expect/build/print.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 704 is out of bounds for axis 0 with size 704

======================================== expect/build/spyMatchers.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f19656daa29]                                                       + 0x7c5a29
[0x7f196589b289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f19e9cc5741]                                                       + 0x2d7741
[0x7f19ee5cc9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f19ee652084]                                                       + 0x153084
[0x7f19ee65750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f19ee651b9a]                                                       + 0x152b9a
[0x7f19ee6521b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f19ee5a4f1e]                                                       + 0xa5f1e
[0x7f19ee575f2b]    PyObject_Call                                      + 0x4b
[0x7f19ee657770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f19ee651b9a]                                                       + 0x152b9a
[0x7f19ee651f94]                                                       + 0x152f94
[0x7f19ee65750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f19ee651b9a]                                                       + 0x152b9a
[0x7f19ee651f94]                                                       + 0x152f94
[0x7f19ee65750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f19ee651193]                                                       + 0x152193
[0x7f19ee65215c]                                                       + 0x15315c
[0x7f19ee65750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f19ee651b9a]                                                       + 0x152b9a
[0x7f19ee651f94]                                                       + 0x152f94
[0x7f19ee65750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f19ee651b9a]                                                       + 0x152b9a
[0x7f19ee6521b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f19ee6521df]    PyEval_EvalCode                                    + 0x1f
[0x7f19ee6873d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f19ee68756f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f19ee6a18e8]    Py_Main                                            + 0xff8
[0x5567dd2842b8]    main                                               + 0x178
[0x7f19ee3160b3]    __libc_start_main                                  + 0xf3
[0x5567dd28436e]    _start                                             + 0x2e


======================================== file-type/core.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f620584ea29]                                                       + 0x7c5a29
[0x7f6205a0f289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f6289e39741]                                                       + 0x2d7741
[0x7f628e7409e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f628e7c6084]                                                       + 0x153084
[0x7f628e7cb50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f628e7c5b9a]                                                       + 0x152b9a
[0x7f628e7c61b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f628e718f1e]                                                       + 0xa5f1e
[0x7f628e6e9f2b]    PyObject_Call                                      + 0x4b
[0x7f628e7cb770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f628e7c5b9a]                                                       + 0x152b9a
[0x7f628e7c5f94]                                                       + 0x152f94
[0x7f628e7cb50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f628e7c5b9a]                                                       + 0x152b9a
[0x7f628e7c5f94]                                                       + 0x152f94
[0x7f628e7cb50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f628e7c5193]                                                       + 0x152193
[0x7f628e7c615c]                                                       + 0x15315c
[0x7f628e7cb50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f628e7c5b9a]                                                       + 0x152b9a
[0x7f628e7c5f94]                                                       + 0x152f94
[0x7f628e7cb50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f628e7c5b9a]                                                       + 0x152b9a
[0x7f628e7c61b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f628e7c61df]    PyEval_EvalCode                                    + 0x1f
[0x7f628e7fb3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f628e7fb56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f628e8158e8]    Py_Main                                            + 0xff8
[0x557c1e0232b8]    main                                               + 0x178
[0x7f628e48a0b3]    __libc_start_main                                  + 0xf3
[0x557c1e02336e]    _start                                             + 0x2e


======================================== functional-red-black-tree/rbtree.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f4d131f2a29]                                                       + 0x7c5a29
[0x7f4d133b3289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f4d977dd741]                                                       + 0x2d7741
[0x7f4d9c0e49e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f4d9c16a084]                                                       + 0x153084
[0x7f4d9c16f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4d9c169b9a]                                                       + 0x152b9a
[0x7f4d9c16a1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f4d9c0bcf1e]                                                       + 0xa5f1e
[0x7f4d9c08df2b]    PyObject_Call                                      + 0x4b
[0x7f4d9c16f770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f4d9c169b9a]                                                       + 0x152b9a
[0x7f4d9c169f94]                                                       + 0x152f94
[0x7f4d9c16f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4d9c169b9a]                                                       + 0x152b9a
[0x7f4d9c169f94]                                                       + 0x152f94
[0x7f4d9c16f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4d9c169193]                                                       + 0x152193
[0x7f4d9c16a15c]                                                       + 0x15315c
[0x7f4d9c16f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4d9c169b9a]                                                       + 0x152b9a
[0x7f4d9c169f94]                                                       + 0x152f94
[0x7f4d9c16f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4d9c169b9a]                                                       + 0x152b9a
[0x7f4d9c16a1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f4d9c16a1df]    PyEval_EvalCode                                    + 0x1f
[0x7f4d9c19f3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f4d9c19f56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f4d9c1b98e8]    Py_Main                                            + 0xff8
[0x55fddd0462b8]    main                                               + 0x178
[0x7f4d9be2e0b3]    __libc_start_main                                  + 0xf3
[0x55fddd04636e]    _start                                             + 0x2e


======================================== got/dist/source/core/index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fbc60afca29]                                                       + 0x7c5a29
[0x7fbc60cbd289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fbce50e7741]                                                       + 0x2d7741
[0x7fbce99ee9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fbce9a74084]                                                       + 0x153084
[0x7fbce9a7950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fbce9a73b9a]                                                       + 0x152b9a
[0x7fbce9a741b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fbce99c6f1e]                                                       + 0xa5f1e
[0x7fbce9997f2b]    PyObject_Call                                      + 0x4b
[0x7fbce9a79770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fbce9a73b9a]                                                       + 0x152b9a
[0x7fbce9a73f94]                                                       + 0x152f94
[0x7fbce9a7950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fbce9a73b9a]                                                       + 0x152b9a
[0x7fbce9a73f94]                                                       + 0x152f94
[0x7fbce9a7950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fbce9a73193]                                                       + 0x152193
[0x7fbce9a7415c]                                                       + 0x15315c
[0x7fbce9a7950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fbce9a73b9a]                                                       + 0x152b9a
[0x7fbce9a73f94]                                                       + 0x152f94
[0x7fbce9a7950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fbce9a73b9a]                                                       + 0x152b9a
[0x7fbce9a741b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fbce9a741df]    PyEval_EvalCode                                    + 0x1f
[0x7fbce9aa93d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fbce9aa956f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fbce9ac38e8]    Py_Main                                            + 0xff8
[0x55af599932b8]    main                                               + 0x178
[0x7fbce97380b3]    __libc_start_main                                  + 0xf3
[0x55af5999336e]    _start                                             + 0x2e


======================================== he/he.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fd9bba96a29]                                                       + 0x7c5a29
[0x7fd9bbc57289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fda40081741]                                                       + 0x2d7741
[0x7fda449889e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fda44a0e084]                                                       + 0x153084
[0x7fda44a1350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fda44a0db9a]                                                       + 0x152b9a
[0x7fda44a0e1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fda44960f1e]                                                       + 0xa5f1e
[0x7fda44931f2b]    PyObject_Call                                      + 0x4b
[0x7fda44a13770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fda44a0db9a]                                                       + 0x152b9a
[0x7fda44a0df94]                                                       + 0x152f94
[0x7fda44a1350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fda44a0db9a]                                                       + 0x152b9a
[0x7fda44a0df94]                                                       + 0x152f94
[0x7fda44a1350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fda44a0d193]                                                       + 0x152193
[0x7fda44a0e15c]                                                       + 0x15315c
[0x7fda44a1350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fda44a0db9a]                                                       + 0x152b9a
[0x7fda44a0df94]                                                       + 0x152f94
[0x7fda44a1350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fda44a0db9a]                                                       + 0x152b9a
[0x7fda44a0e1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fda44a0e1df]    PyEval_EvalCode                                    + 0x1f
[0x7fda44a433d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fda44a4356f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fda44a5d8e8]    Py_Main                                            + 0xff8
[0x5649439072b8]    main                                               + 0x178
[0x7fda446d20b3]    __libc_start_main                                  + 0xf3
[0x56494390736e]    _start                                             + 0x2e


======================================== html-entities/lib/named-references.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fe893d85a29]                                                       + 0x7c5a29
[0x7fe893f46289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fe894e63741]                                                       + 0x2d7741
[0x7fe89976a9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fe8997f0084]                                                       + 0x153084
[0x7fe8997f550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe8997efb9a]                                                       + 0x152b9a
[0x7fe8997f01b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fe899742f1e]                                                       + 0xa5f1e
[0x7fe899713f2b]    PyObject_Call                                      + 0x4b
[0x7fe8997f5770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fe8997efb9a]                                                       + 0x152b9a
[0x7fe8997eff94]                                                       + 0x152f94
[0x7fe8997f550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe8997efb9a]                                                       + 0x152b9a
[0x7fe8997eff94]                                                       + 0x152f94
[0x7fe8997f550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe8997ef193]                                                       + 0x152193
[0x7fe8997f015c]                                                       + 0x15315c
[0x7fe8997f550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe8997efb9a]                                                       + 0x152b9a
[0x7fe8997eff94]                                                       + 0x152f94
[0x7fe8997f550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe8997efb9a]                                                       + 0x152b9a
[0x7fe8997f01b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fe8997f01df]    PyEval_EvalCode                                    + 0x1f
[0x7fe8998253d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fe89982556f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fe89983f8e8]    Py_Main                                            + 0xff8
[0x55dc8abc82b8]    main                                               + 0x178
[0x7fe8994b40b3]    __libc_start_main                                  + 0xf3
[0x55dc8abc836e]    _start                                             + 0x2e


======================================== htmlparser2/lib/Tokenizer.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fe639cbca29]                                                       + 0x7c5a29
[0x7fe639e7d289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fe6be2a7741]                                                       + 0x2d7741
[0x7fe6c2bae9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fe6c2c34084]                                                       + 0x153084
[0x7fe6c2c3950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe6c2c33b9a]                                                       + 0x152b9a
[0x7fe6c2c341b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fe6c2b86f1e]                                                       + 0xa5f1e
[0x7fe6c2b57f2b]    PyObject_Call                                      + 0x4b
[0x7fe6c2c39770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fe6c2c33b9a]                                                       + 0x152b9a
[0x7fe6c2c33f94]                                                       + 0x152f94
[0x7fe6c2c3950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe6c2c33b9a]                                                       + 0x152b9a
[0x7fe6c2c33f94]                                                       + 0x152f94
[0x7fe6c2c3950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe6c2c33193]                                                       + 0x152193
[0x7fe6c2c3415c]                                                       + 0x15315c
[0x7fe6c2c3950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe6c2c33b9a]                                                       + 0x152b9a
[0x7fe6c2c33f94]                                                       + 0x152f94
[0x7fe6c2c3950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe6c2c33b9a]                                                       + 0x152b9a
[0x7fe6c2c341b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fe6c2c341df]    PyEval_EvalCode                                    + 0x1f
[0x7fe6c2c693d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fe6c2c6956f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fe6c2c838e8]    Py_Main                                            + 0xff8
[0x560fb34a52b8]    main                                               + 0x178
[0x7fe6c28f80b3]    __libc_start_main                                  + 0xf3
[0x560fb34a536e]    _start                                             + 0x2e


======================================== ignore/index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 1507 is out of bounds for axis 0 with size 1507

======================================== ipaddr.js/ipaddr.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f38dcc97a29]                                                       + 0x7c5a29
[0x7f38dce58289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f3961282741]                                                       + 0x2d7741
[0x7f3965b899e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f3965c0f084]                                                       + 0x153084
[0x7f3965c1450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f3965c0eb9a]                                                       + 0x152b9a
[0x7f3965c0f1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f3965b61f1e]                                                       + 0xa5f1e
[0x7f3965b32f2b]    PyObject_Call                                      + 0x4b
[0x7f3965c14770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f3965c0eb9a]                                                       + 0x152b9a
[0x7f3965c0ef94]                                                       + 0x152f94
[0x7f3965c1450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f3965c0eb9a]                                                       + 0x152b9a
[0x7f3965c0ef94]                                                       + 0x152f94
[0x7f3965c1450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f3965c0e193]                                                       + 0x152193
[0x7f3965c0f15c]                                                       + 0x15315c
[0x7f3965c1450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f3965c0eb9a]                                                       + 0x152b9a
[0x7f3965c0ef94]                                                       + 0x152f94
[0x7f3965c1450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f3965c0eb9a]                                                       + 0x152b9a
[0x7f3965c0f1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f3965c0f1df]    PyEval_EvalCode                                    + 0x1f
[0x7f3965c443d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f3965c4456f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f3965c5e8e8]    Py_Main                                            + 0xff8
[0x5635973dd2b8]    main                                               + 0x178
[0x7f39658d30b3]    __libc_start_main                                  + 0xf3
[0x5635973dd36e]    _start                                             + 0x2e


======================================== ipaddr.js/lib/ipaddr.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f56373cca29]                                                       + 0x7c5a29
[0x7f563758d289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f56bb9b7741]                                                       + 0x2d7741
[0x7f56c02be9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f56c0344084]                                                       + 0x153084
[0x7f56c034950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f56c0343b9a]                                                       + 0x152b9a
[0x7f56c03441b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f56c0296f1e]                                                       + 0xa5f1e
[0x7f56c0267f2b]    PyObject_Call                                      + 0x4b
[0x7f56c0349770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f56c0343b9a]                                                       + 0x152b9a
[0x7f56c0343f94]                                                       + 0x152f94
[0x7f56c034950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f56c0343b9a]                                                       + 0x152b9a
[0x7f56c0343f94]                                                       + 0x152f94
[0x7f56c034950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f56c0343193]                                                       + 0x152193
[0x7f56c034415c]                                                       + 0x15315c
[0x7f56c034950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f56c0343b9a]                                                       + 0x152b9a
[0x7f56c0343f94]                                                       + 0x152f94
[0x7f56c034950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f56c0343b9a]                                                       + 0x152b9a
[0x7f56c03441b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f56c03441df]    PyEval_EvalCode                                    + 0x1f
[0x7f56c03793d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f56c037956f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f56c03938e8]    Py_Main                                            + 0xff8
[0x55cf5ee512b8]    main                                               + 0x178
[0x7f56c00080b3]    __libc_start_main                                  + 0xf3
[0x55cf5ee5136e]    _start                                             + 0x2e


======================================== istanbul-reports/lib/html/assets/vendor/prettify.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fc66aa11a29]                                                       + 0x7c5a29
[0x7fc66abd2289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fc6eeffc741]                                                       + 0x2d7741
[0x7fc6f39039e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fc6f3989084]                                                       + 0x153084
[0x7fc6f398e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc6f3988b9a]                                                       + 0x152b9a
[0x7fc6f39891b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fc6f38dbf1e]                                                       + 0xa5f1e
[0x7fc6f38acf2b]    PyObject_Call                                      + 0x4b
[0x7fc6f398e770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fc6f3988b9a]                                                       + 0x152b9a
[0x7fc6f3988f94]                                                       + 0x152f94
[0x7fc6f398e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc6f3988b9a]                                                       + 0x152b9a
[0x7fc6f3988f94]                                                       + 0x152f94
[0x7fc6f398e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc6f3988193]                                                       + 0x152193
[0x7fc6f398915c]                                                       + 0x15315c
[0x7fc6f398e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc6f3988b9a]                                                       + 0x152b9a
[0x7fc6f3988f94]                                                       + 0x152f94
[0x7fc6f398e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc6f3988b9a]                                                       + 0x152b9a
[0x7fc6f39891b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fc6f39891df]    PyEval_EvalCode                                    + 0x1f
[0x7fc6f39be3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fc6f39be56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fc6f39d88e8]    Py_Main                                            + 0xff8
[0x559068a3c2b8]    main                                               + 0x178
[0x7fc6f364d0b3]    __libc_start_main                                  + 0xf3
[0x559068a3c36e]    _start                                             + 0x2e


======================================== istanbul-reports/lib/html/index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 2047 is out of bounds for axis 0 with size 2047

======================================== istanbul-reports/lib/html-spa/assets/bundle.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== jest-config/build/ReporterValidationErrors.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 537 is out of bounds for axis 0 with size 537

======================================== jest-config/build/normalize.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f7dece33a29]                                                       + 0x7c5a29
[0x7f7decff4289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f7dedf11741]                                                       + 0x2d7741
[0x7f7df28189e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f7df289e084]                                                       + 0x153084
[0x7f7df28a350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7df289db9a]                                                       + 0x152b9a
[0x7f7df289e1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f7df27f0f1e]                                                       + 0xa5f1e
[0x7f7df27c1f2b]    PyObject_Call                                      + 0x4b
[0x7f7df28a3770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f7df289db9a]                                                       + 0x152b9a
[0x7f7df289df94]                                                       + 0x152f94
[0x7f7df28a350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7df289db9a]                                                       + 0x152b9a
[0x7f7df289df94]                                                       + 0x152f94
[0x7f7df28a350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7df289d193]                                                       + 0x152193
[0x7f7df289e15c]                                                       + 0x15315c
[0x7f7df28a350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7df289db9a]                                                       + 0x152b9a
[0x7f7df289df94]                                                       + 0x152f94
[0x7f7df28a350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7df289db9a]                                                       + 0x152b9a
[0x7f7df289e1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f7df289e1df]    PyEval_EvalCode                                    + 0x1f
[0x7f7df28d33d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f7df28d356f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f7df28ed8e8]    Py_Main                                            + 0xff8
[0x55a4ce7502b8]    main                                               + 0x178
[0x7f7df25620b3]    __libc_start_main                                  + 0xf3
[0x55a4ce75036e]    _start                                             + 0x2e


======================================== jest-config/build/readConfigFileAndSetRootDir.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 792 is out of bounds for axis 0 with size 792

======================================== jest-config/build/resolveConfigPath.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 710 is out of bounds for axis 0 with size 710

======================================== jest-diff/build/index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 1317 is out of bounds for axis 0 with size 1317

======================================== jest-haste-map/build/ModuleMap.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 1429 is out of bounds for axis 0 with size 1429

======================================== jest-haste-map/build/crawlers/watchman.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 1738 is out of bounds for axis 0 with size 1738

======================================== jest-haste-map/build/index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f9e792baa29]                                                       + 0x7c5a29
[0x7f9e7947b289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f9efd8a5741]                                                       + 0x2d7741
[0x7f9f021ac9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f9f02232084]                                                       + 0x153084
[0x7f9f0223750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f9f02231b9a]                                                       + 0x152b9a
[0x7f9f022321b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f9f02184f1e]                                                       + 0xa5f1e
[0x7f9f02155f2b]    PyObject_Call                                      + 0x4b
[0x7f9f02237770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f9f02231b9a]                                                       + 0x152b9a
[0x7f9f02231f94]                                                       + 0x152f94
[0x7f9f0223750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f9f02231b9a]                                                       + 0x152b9a
[0x7f9f02231f94]                                                       + 0x152f94
[0x7f9f0223750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f9f02231193]                                                       + 0x152193
[0x7f9f0223215c]                                                       + 0x15315c
[0x7f9f0223750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f9f02231b9a]                                                       + 0x152b9a
[0x7f9f02231f94]                                                       + 0x152f94
[0x7f9f0223750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f9f02231b9a]                                                       + 0x152b9a
[0x7f9f022321b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f9f022321df]    PyEval_EvalCode                                    + 0x1f
[0x7f9f022673d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f9f0226756f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f9f022818e8]    Py_Main                                            + 0xff8
[0x5654429052b8]    main                                               + 0x178
[0x7f9f01ef60b3]    __libc_start_main                                  + 0xf3
[0x56544290536e]    _start                                             + 0x2e


======================================== jest-message-util/build/index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 2331 is out of bounds for axis 0 with size 2331

======================================== jest-runtime/build/index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7ff4dbd5fa29]                                                       + 0x7c5a29
[0x7ff4dbf20289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7ff56034a741]                                                       + 0x2d7741
[0x7ff564c519e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7ff564cd7084]                                                       + 0x153084
[0x7ff564cdc50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff564cd6b9a]                                                       + 0x152b9a
[0x7ff564cd71b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7ff564c29f1e]                                                       + 0xa5f1e
[0x7ff564bfaf2b]    PyObject_Call                                      + 0x4b
[0x7ff564cdc770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7ff564cd6b9a]                                                       + 0x152b9a
[0x7ff564cd6f94]                                                       + 0x152f94
[0x7ff564cdc50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff564cd6b9a]                                                       + 0x152b9a
[0x7ff564cd6f94]                                                       + 0x152f94
[0x7ff564cdc50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff564cd6193]                                                       + 0x152193
[0x7ff564cd715c]                                                       + 0x15315c
[0x7ff564cdc50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff564cd6b9a]                                                       + 0x152b9a
[0x7ff564cd6f94]                                                       + 0x152f94
[0x7ff564cdc50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff564cd6b9a]                                                       + 0x152b9a
[0x7ff564cd71b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7ff564cd71df]    PyEval_EvalCode                                    + 0x1f
[0x7ff564d0c3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7ff564d0c56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7ff564d268e8]    Py_Main                                            + 0xff8
[0x5622b157d2b8]    main                                               + 0x178
[0x7ff56499b0b3]    __libc_start_main                                  + 0xf3
[0x5622b157d36e]    _start                                             + 0x2e


======================================== jest-snapshot/build/index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 2675 is out of bounds for axis 0 with size 2675

======================================== jest-snapshot/build/utils.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 2333 is out of bounds for axis 0 with size 2333

======================================== jest-validate/build/validate.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 582 is out of bounds for axis 0 with size 582

======================================== jest-validate/build/validateCLIOptions.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 712 is out of bounds for axis 0 with size 712

======================================== jest-watcher/build/PatternPrompt.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 558 is out of bounds for axis 0 with size 558

======================================== jquery/dist/jquery.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== jquery/dist/jquery.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== jquery/dist/jquery.slim.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== jquery/dist/jquery.slim.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== jquery/external/sizzle/dist/sizzle.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fde71c3da29]                                                       + 0x7c5a29
[0x7fde71dfe289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fdef6228741]                                                       + 0x2d7741
[0x7fdefab2f9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fdefabb5084]                                                       + 0x153084
[0x7fdefabba50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fdefabb4b9a]                                                       + 0x152b9a
[0x7fdefabb51b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fdefab07f1e]                                                       + 0xa5f1e
[0x7fdefaad8f2b]    PyObject_Call                                      + 0x4b
[0x7fdefabba770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fdefabb4b9a]                                                       + 0x152b9a
[0x7fdefabb4f94]                                                       + 0x152f94
[0x7fdefabba50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fdefabb4b9a]                                                       + 0x152b9a
[0x7fdefabb4f94]                                                       + 0x152f94
[0x7fdefabba50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fdefabb4193]                                                       + 0x152193
[0x7fdefabb515c]                                                       + 0x15315c
[0x7fdefabba50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fdefabb4b9a]                                                       + 0x152b9a
[0x7fdefabb4f94]                                                       + 0x152f94
[0x7fdefabba50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fdefabb4b9a]                                                       + 0x152b9a
[0x7fdefabb51b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fdefabb51df]    PyEval_EvalCode                                    + 0x1f
[0x7fdefabea3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fdefabea56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fdefac048e8]    Py_Main                                            + 0xff8
[0x5602895432b8]    main                                               + 0x178
[0x7fdefa8790b3]    __libc_start_main                                  + 0xf3
[0x56028954336e]    _start                                             + 0x2e


======================================== jquery/external/sizzle/dist/sizzle.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fc5c0e3fa29]                                                       + 0x7c5a29
[0x7fc5c1000289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fc64542a741]                                                       + 0x2d7741
[0x7fc649d319e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fc649db7084]                                                       + 0x153084
[0x7fc649dbc50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc649db6b9a]                                                       + 0x152b9a
[0x7fc649db71b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fc649d09f1e]                                                       + 0xa5f1e
[0x7fc649cdaf2b]    PyObject_Call                                      + 0x4b
[0x7fc649dbc770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fc649db6b9a]                                                       + 0x152b9a
[0x7fc649db6f94]                                                       + 0x152f94
[0x7fc649dbc50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc649db6b9a]                                                       + 0x152b9a
[0x7fc649db6f94]                                                       + 0x152f94
[0x7fc649dbc50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc649db6193]                                                       + 0x152193
[0x7fc649db715c]                                                       + 0x15315c
[0x7fc649dbc50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc649db6b9a]                                                       + 0x152b9a
[0x7fc649db6f94]                                                       + 0x152f94
[0x7fc649dbc50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc649db6b9a]                                                       + 0x152b9a
[0x7fc649db71b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fc649db71df]    PyEval_EvalCode                                    + 0x1f
[0x7fc649dec3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fc649dec56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fc649e068e8]    Py_Main                                            + 0xff8
[0x557bd3b7e2b8]    main                                               + 0x178
[0x7fc649a7b0b3]    __libc_start_main                                  + 0xf3
[0x557bd3b7e36e]    _start                                             + 0x2e


======================================== js-yaml/dist/js-yaml.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f9b85331a29]                                                       + 0x7c5a29
[0x7f9b854f2289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f9b8640f741]                                                       + 0x2d7741
[0x7f9b8ad169e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f9b8ad9c084]                                                       + 0x153084
[0x7f9b8ada150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f9b8ad9bb9a]                                                       + 0x152b9a
[0x7f9b8ad9c1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f9b8aceef1e]                                                       + 0xa5f1e
[0x7f9b8acbff2b]    PyObject_Call                                      + 0x4b
[0x7f9b8ada1770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f9b8ad9bb9a]                                                       + 0x152b9a
[0x7f9b8ad9bf94]                                                       + 0x152f94
[0x7f9b8ada150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f9b8ad9bb9a]                                                       + 0x152b9a
[0x7f9b8ad9bf94]                                                       + 0x152f94
[0x7f9b8ada150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f9b8ad9b193]                                                       + 0x152193
[0x7f9b8ad9c15c]                                                       + 0x15315c
[0x7f9b8ada150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f9b8ad9bb9a]                                                       + 0x152b9a
[0x7f9b8ad9bf94]                                                       + 0x152f94
[0x7f9b8ada150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f9b8ad9bb9a]                                                       + 0x152b9a
[0x7f9b8ad9c1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f9b8ad9c1df]    PyEval_EvalCode                                    + 0x1f
[0x7f9b8add13d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f9b8add156f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f9b8adeb8e8]    Py_Main                                            + 0xff8
[0x55862a56e2b8]    main                                               + 0x178
[0x7f9b8aa600b3]    __libc_start_main                                  + 0xf3
[0x55862a56e36e]    _start                                             + 0x2e


======================================== js-yaml/dist/js-yaml.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f79d531ca29]                                                       + 0x7c5a29
[0x7f79d54dd289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f7a59907741]                                                       + 0x2d7741
[0x7f7a5e20e9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f7a5e294084]                                                       + 0x153084
[0x7f7a5e29950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7a5e293b9a]                                                       + 0x152b9a
[0x7f7a5e2941b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f7a5e1e6f1e]                                                       + 0xa5f1e
[0x7f7a5e1b7f2b]    PyObject_Call                                      + 0x4b
[0x7f7a5e299770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f7a5e293b9a]                                                       + 0x152b9a
[0x7f7a5e293f94]                                                       + 0x152f94
[0x7f7a5e29950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7a5e293b9a]                                                       + 0x152b9a
[0x7f7a5e293f94]                                                       + 0x152f94
[0x7f7a5e29950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7a5e293193]                                                       + 0x152193
[0x7f7a5e29415c]                                                       + 0x15315c
[0x7f7a5e29950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7a5e293b9a]                                                       + 0x152b9a
[0x7f7a5e293f94]                                                       + 0x152f94
[0x7f7a5e29950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7a5e293b9a]                                                       + 0x152b9a
[0x7f7a5e2941b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f7a5e2941df]    PyEval_EvalCode                                    + 0x1f
[0x7f7a5e2c93d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f7a5e2c956f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f7a5e2e38e8]    Py_Main                                            + 0xff8
[0x5593ed2d02b8]    main                                               + 0x178
[0x7f7a5df580b3]    __libc_start_main                                  + 0xf3
[0x5593ed2d036e]    _start                                             + 0x2e


======================================== js-yaml/lib/loader.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fa93de7aa29]                                                       + 0x7c5a29
[0x7fa93e03b289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fa93ef58741]                                                       + 0x2d7741
[0x7fa94385f9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fa9438e5084]                                                       + 0x153084
[0x7fa9438ea50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa9438e4b9a]                                                       + 0x152b9a
[0x7fa9438e51b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fa943837f1e]                                                       + 0xa5f1e
[0x7fa943808f2b]    PyObject_Call                                      + 0x4b
[0x7fa9438ea770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fa9438e4b9a]                                                       + 0x152b9a
[0x7fa9438e4f94]                                                       + 0x152f94
[0x7fa9438ea50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa9438e4b9a]                                                       + 0x152b9a
[0x7fa9438e4f94]                                                       + 0x152f94
[0x7fa9438ea50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa9438e4193]                                                       + 0x152193
[0x7fa9438e515c]                                                       + 0x15315c
[0x7fa9438ea50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa9438e4b9a]                                                       + 0x152b9a
[0x7fa9438e4f94]                                                       + 0x152f94
[0x7fa9438ea50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa9438e4b9a]                                                       + 0x152b9a
[0x7fa9438e51b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fa9438e51df]    PyEval_EvalCode                                    + 0x1f
[0x7fa94391a3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fa94391a56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fa9439348e8]    Py_Main                                            + 0xff8
[0x55ab8c8d22b8]    main                                               + 0x178
[0x7fa9435a90b3]    __libc_start_main                                  + 0xf3
[0x55ab8c8d236e]    _start                                             + 0x2e


======================================== jsbn/index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f12b8120a29]                                                       + 0x7c5a29
[0x7f12b82e1289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f133c70b741]                                                       + 0x2d7741
[0x7f13410129e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f1341098084]                                                       + 0x153084
[0x7f134109d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f1341097b9a]                                                       + 0x152b9a
[0x7f13410981b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f1340feaf1e]                                                       + 0xa5f1e
[0x7f1340fbbf2b]    PyObject_Call                                      + 0x4b
[0x7f134109d770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f1341097b9a]                                                       + 0x152b9a
[0x7f1341097f94]                                                       + 0x152f94
[0x7f134109d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f1341097b9a]                                                       + 0x152b9a
[0x7f1341097f94]                                                       + 0x152f94
[0x7f134109d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f1341097193]                                                       + 0x152193
[0x7f134109815c]                                                       + 0x15315c
[0x7f134109d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f1341097b9a]                                                       + 0x152b9a
[0x7f1341097f94]                                                       + 0x152f94
[0x7f134109d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f1341097b9a]                                                       + 0x152b9a
[0x7f13410981b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f13410981df]    PyEval_EvalCode                                    + 0x1f
[0x7f13410cd3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f13410cd56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f13410e78e8]    Py_Main                                            + 0xff8
[0x559b113d32b8]    main                                               + 0x178
[0x7f1340d5c0b3]    __libc_start_main                                  + 0xf3
[0x559b113d336e]    _start                                             + 0x2e


======================================== jsdom/lib/jsdom/browser/resources/resource-loader.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 761 is out of bounds for axis 0 with size 761

======================================== jsdom/lib/jsdom/level3/xpath.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fa018d08a29]                                                       + 0x7c5a29
[0x7fa018ec9289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fa09d2f3741]                                                       + 0x2d7741
[0x7fa0a1bfa9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fa0a1c80084]                                                       + 0x153084
[0x7fa0a1c8550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa0a1c7fb9a]                                                       + 0x152b9a
[0x7fa0a1c801b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fa0a1bd2f1e]                                                       + 0xa5f1e
[0x7fa0a1ba3f2b]    PyObject_Call                                      + 0x4b
[0x7fa0a1c85770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fa0a1c7fb9a]                                                       + 0x152b9a
[0x7fa0a1c7ff94]                                                       + 0x152f94
[0x7fa0a1c8550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa0a1c7fb9a]                                                       + 0x152b9a
[0x7fa0a1c7ff94]                                                       + 0x152f94
[0x7fa0a1c8550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa0a1c7f193]                                                       + 0x152193
[0x7fa0a1c8015c]                                                       + 0x15315c
[0x7fa0a1c8550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa0a1c7fb9a]                                                       + 0x152b9a
[0x7fa0a1c7ff94]                                                       + 0x152f94
[0x7fa0a1c8550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa0a1c7fb9a]                                                       + 0x152b9a
[0x7fa0a1c801b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fa0a1c801df]    PyEval_EvalCode                                    + 0x1f
[0x7fa0a1cb53d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fa0a1cb556f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fa0a1ccf8e8]    Py_Main                                            + 0xff8
[0x5561c354c2b8]    main                                               + 0x178
[0x7fa0a19440b3]    __libc_start_main                                  + 0xf3
[0x5561c354c36e]    _start                                             + 0x2e


======================================== jsdom/lib/jsdom/living/generated/Document.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fa7c98eda29]                                                       + 0x7c5a29
[0x7fa7c9aae289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fa7fdaf3741]                                                       + 0x2d7741
[0x7fa8023fa9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fa802480084]                                                       + 0x153084
[0x7fa80248550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa80247fb9a]                                                       + 0x152b9a
[0x7fa8024801b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fa8023d2f1e]                                                       + 0xa5f1e
[0x7fa8023a3f2b]    PyObject_Call                                      + 0x4b
[0x7fa802485770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fa80247fb9a]                                                       + 0x152b9a
[0x7fa80247ff94]                                                       + 0x152f94
[0x7fa80248550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa80247fb9a]                                                       + 0x152b9a
[0x7fa80247ff94]                                                       + 0x152f94
[0x7fa80248550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa80247f193]                                                       + 0x152193
[0x7fa80248015c]                                                       + 0x15315c
[0x7fa80248550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa80247fb9a]                                                       + 0x152b9a
[0x7fa80247ff94]                                                       + 0x152f94
[0x7fa80248550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa80247fb9a]                                                       + 0x152b9a
[0x7fa8024801b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fa8024801df]    PyEval_EvalCode                                    + 0x1f
[0x7fa8024b53d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fa8024b556f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fa8024cf8e8]    Py_Main                                            + 0xff8
[0x560f225fc2b8]    main                                               + 0x178
[0x7fa8021440b3]    __libc_start_main                                  + 0xf3
[0x560f225fc36e]    _start                                             + 0x2e


======================================== jsdom/lib/jsdom/living/generated/Element.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f5ec469ea29]                                                       + 0x7c5a29
[0x7f5ec485f289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f5f48c89741]                                                       + 0x2d7741
[0x7f5f4d5909e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f5f4d616084]                                                       + 0x153084
[0x7f5f4d61b50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f5f4d615b9a]                                                       + 0x152b9a
[0x7f5f4d6161b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f5f4d568f1e]                                                       + 0xa5f1e
[0x7f5f4d539f2b]    PyObject_Call                                      + 0x4b
[0x7f5f4d61b770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f5f4d615b9a]                                                       + 0x152b9a
[0x7f5f4d615f94]                                                       + 0x152f94
[0x7f5f4d61b50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f5f4d615b9a]                                                       + 0x152b9a
[0x7f5f4d615f94]                                                       + 0x152f94
[0x7f5f4d61b50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f5f4d615193]                                                       + 0x152193
[0x7f5f4d61615c]                                                       + 0x15315c
[0x7f5f4d61b50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f5f4d615b9a]                                                       + 0x152b9a
[0x7f5f4d615f94]                                                       + 0x152f94
[0x7f5f4d61b50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f5f4d615b9a]                                                       + 0x152b9a
[0x7f5f4d6161b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f5f4d6161df]    PyEval_EvalCode                                    + 0x1f
[0x7f5f4d64b3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f5f4d64b56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f5f4d6658e8]    Py_Main                                            + 0xff8
[0x56522d4ba2b8]    main                                               + 0x178
[0x7f5f4d2da0b3]    __libc_start_main                                  + 0xf3
[0x56522d4ba36e]    _start                                             + 0x2e


======================================== jsdom/lib/jsdom/living/generated/HTMLElement.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f3c168cea29]                                                       + 0x7c5a29
[0x7f3c16a8f289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f3c9aeb9741]                                                       + 0x2d7741
[0x7f3c9f7c09e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f3c9f846084]                                                       + 0x153084
[0x7f3c9f84b50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f3c9f845b9a]                                                       + 0x152b9a
[0x7f3c9f8461b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f3c9f798f1e]                                                       + 0xa5f1e
[0x7f3c9f769f2b]    PyObject_Call                                      + 0x4b
[0x7f3c9f84b770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f3c9f845b9a]                                                       + 0x152b9a
[0x7f3c9f845f94]                                                       + 0x152f94
[0x7f3c9f84b50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f3c9f845b9a]                                                       + 0x152b9a
[0x7f3c9f845f94]                                                       + 0x152f94
[0x7f3c9f84b50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f3c9f845193]                                                       + 0x152193
[0x7f3c9f84615c]                                                       + 0x15315c
[0x7f3c9f84b50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f3c9f845b9a]                                                       + 0x152b9a
[0x7f3c9f845f94]                                                       + 0x152f94
[0x7f3c9f84b50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f3c9f845b9a]                                                       + 0x152b9a
[0x7f3c9f8461b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f3c9f8461df]    PyEval_EvalCode                                    + 0x1f
[0x7f3c9f87b3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f3c9f87b56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f3c9f8958e8]    Py_Main                                            + 0xff8
[0x55a38d16a2b8]    main                                               + 0x178
[0x7f3c9f50a0b3]    __libc_start_main                                  + 0xf3
[0x55a38d16a36e]    _start                                             + 0x2e


======================================== jsdom/lib/jsdom/living/generated/HTMLInputElement.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fc723545a29]                                                       + 0x7c5a29
[0x7fc723706289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fc7a7b30741]                                                       + 0x2d7741
[0x7fc7ac4379e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fc7ac4bd084]                                                       + 0x153084
[0x7fc7ac4c250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc7ac4bcb9a]                                                       + 0x152b9a
[0x7fc7ac4bd1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fc7ac40ff1e]                                                       + 0xa5f1e
[0x7fc7ac3e0f2b]    PyObject_Call                                      + 0x4b
[0x7fc7ac4c2770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fc7ac4bcb9a]                                                       + 0x152b9a
[0x7fc7ac4bcf94]                                                       + 0x152f94
[0x7fc7ac4c250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc7ac4bcb9a]                                                       + 0x152b9a
[0x7fc7ac4bcf94]                                                       + 0x152f94
[0x7fc7ac4c250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc7ac4bc193]                                                       + 0x152193
[0x7fc7ac4bd15c]                                                       + 0x15315c
[0x7fc7ac4c250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc7ac4bcb9a]                                                       + 0x152b9a
[0x7fc7ac4bcf94]                                                       + 0x152f94
[0x7fc7ac4c250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc7ac4bcb9a]                                                       + 0x152b9a
[0x7fc7ac4bd1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fc7ac4bd1df]    PyEval_EvalCode                                    + 0x1f
[0x7fc7ac4f23d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fc7ac4f256f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fc7ac50c8e8]    Py_Main                                            + 0xff8
[0x5625c3f4a2b8]    main                                               + 0x178
[0x7fc7ac1810b3]    __libc_start_main                                  + 0xf3
[0x5625c3f4a36e]    _start                                             + 0x2e


======================================== jsdom/lib/jsdom/living/generated/HTMLTextAreaElement.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f90a7136a29]                                                       + 0x7c5a29
[0x7f90a72f7289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f90a8214741]                                                       + 0x2d7741
[0x7f90acb1b9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f90acba1084]                                                       + 0x153084
[0x7f90acba650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f90acba0b9a]                                                       + 0x152b9a
[0x7f90acba11b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f90acaf3f1e]                                                       + 0xa5f1e
[0x7f90acac4f2b]    PyObject_Call                                      + 0x4b
[0x7f90acba6770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f90acba0b9a]                                                       + 0x152b9a
[0x7f90acba0f94]                                                       + 0x152f94
[0x7f90acba650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f90acba0b9a]                                                       + 0x152b9a
[0x7f90acba0f94]                                                       + 0x152f94
[0x7f90acba650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f90acba0193]                                                       + 0x152193
[0x7f90acba115c]                                                       + 0x15315c
[0x7f90acba650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f90acba0b9a]                                                       + 0x152b9a
[0x7f90acba0f94]                                                       + 0x152f94
[0x7f90acba650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f90acba0b9a]                                                       + 0x152b9a
[0x7f90acba11b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f90acba11df]    PyEval_EvalCode                                    + 0x1f
[0x7f90acbd63d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f90acbd656f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f90acbf08e8]    Py_Main                                            + 0xff8
[0x55f7e51292b8]    main                                               + 0x178
[0x7f90ac8650b3]    __libc_start_main                                  + 0xf3
[0x55f7e512936e]    _start                                             + 0x2e


======================================== jsdom/lib/jsdom/living/generated/SVGElement.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f303ea05a29]                                                       + 0x7c5a29
[0x7f303ebc6289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f30c2ff0741]                                                       + 0x2d7741
[0x7f30c78f79e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f30c797d084]                                                       + 0x153084
[0x7f30c798250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f30c797cb9a]                                                       + 0x152b9a
[0x7f30c797d1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f30c78cff1e]                                                       + 0xa5f1e
[0x7f30c78a0f2b]    PyObject_Call                                      + 0x4b
[0x7f30c7982770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f30c797cb9a]                                                       + 0x152b9a
[0x7f30c797cf94]                                                       + 0x152f94
[0x7f30c798250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f30c797cb9a]                                                       + 0x152b9a
[0x7f30c797cf94]                                                       + 0x152f94
[0x7f30c798250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f30c797c193]                                                       + 0x152193
[0x7f30c797d15c]                                                       + 0x15315c
[0x7f30c798250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f30c797cb9a]                                                       + 0x152b9a
[0x7f30c797cf94]                                                       + 0x152f94
[0x7f30c798250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f30c797cb9a]                                                       + 0x152b9a
[0x7f30c797d1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f30c797d1df]    PyEval_EvalCode                                    + 0x1f
[0x7f30c79b23d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f30c79b256f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f30c79cc8e8]    Py_Main                                            + 0xff8
[0x55c0bacdb2b8]    main                                               + 0x178
[0x7f30c76410b3]    __libc_start_main                                  + 0xf3
[0x55c0bacdb36e]    _start                                             + 0x2e


======================================== jsdom/lib/jsdom/living/helpers/stylesheets.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 537 is out of bounds for axis 0 with size 537

======================================== jsdom/lib/jsdom/living/nodes/HTMLInputElement-impl.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fce68991a29]                                                       + 0x7c5a29
[0x7fce68b52289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fceecf7c741]                                                       + 0x2d7741
[0x7fcef18839e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fcef1909084]                                                       + 0x153084
[0x7fcef190e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fcef1908b9a]                                                       + 0x152b9a
[0x7fcef19091b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fcef185bf1e]                                                       + 0xa5f1e
[0x7fcef182cf2b]    PyObject_Call                                      + 0x4b
[0x7fcef190e770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fcef1908b9a]                                                       + 0x152b9a
[0x7fcef1908f94]                                                       + 0x152f94
[0x7fcef190e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fcef1908b9a]                                                       + 0x152b9a
[0x7fcef1908f94]                                                       + 0x152f94
[0x7fcef190e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fcef1908193]                                                       + 0x152193
[0x7fcef190915c]                                                       + 0x15315c
[0x7fcef190e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fcef1908b9a]                                                       + 0x152b9a
[0x7fcef1908f94]                                                       + 0x152f94
[0x7fcef190e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fcef1908b9a]                                                       + 0x152b9a
[0x7fcef19091b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fcef19091df]    PyEval_EvalCode                                    + 0x1f
[0x7fcef193e3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fcef193e56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fcef19588e8]    Py_Main                                            + 0xff8
[0x55a5e72492b8]    main                                               + 0x178
[0x7fcef15cd0b3]    __libc_start_main                                  + 0xf3
[0x55a5e724936e]    _start                                             + 0x2e


======================================== jsdom/lib/jsdom/living/nodes/Node-impl.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f40c38e4a29]                                                       + 0x7c5a29
[0x7f40c3aa5289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f40c49c2741]                                                       + 0x2d7741
[0x7f40c92c99e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f40c934f084]                                                       + 0x153084
[0x7f40c935450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f40c934eb9a]                                                       + 0x152b9a
[0x7f40c934f1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f40c92a1f1e]                                                       + 0xa5f1e
[0x7f40c9272f2b]    PyObject_Call                                      + 0x4b
[0x7f40c9354770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f40c934eb9a]                                                       + 0x152b9a
[0x7f40c934ef94]                                                       + 0x152f94
[0x7f40c935450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f40c934eb9a]                                                       + 0x152b9a
[0x7f40c934ef94]                                                       + 0x152f94
[0x7f40c935450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f40c934e193]                                                       + 0x152193
[0x7f40c934f15c]                                                       + 0x15315c
[0x7f40c935450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f40c934eb9a]                                                       + 0x152b9a
[0x7f40c934ef94]                                                       + 0x152f94
[0x7f40c935450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f40c934eb9a]                                                       + 0x152b9a
[0x7f40c934f1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f40c934f1df]    PyEval_EvalCode                                    + 0x1f
[0x7f40c93843d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f40c938456f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f40c939e8e8]    Py_Main                                            + 0xff8
[0x55cf278fe2b8]    main                                               + 0x178
[0x7f40c90130b3]    __libc_start_main                                  + 0xf3
[0x55cf278fe36e]    _start                                             + 0x2e


======================================== jsdom/lib/jsdom/living/window/History-impl.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 585 is out of bounds for axis 0 with size 585

======================================== jsdom/lib/jsdom/living/xhr/XMLHttpRequest-impl.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7ffa82536a29]                                                       + 0x7c5a29
[0x7ffa826f7289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7ffa83614741]                                                       + 0x2d7741
[0x7ffa87f1b9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7ffa87fa1084]                                                       + 0x153084
[0x7ffa87fa650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ffa87fa0b9a]                                                       + 0x152b9a
[0x7ffa87fa11b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7ffa87ef3f1e]                                                       + 0xa5f1e
[0x7ffa87ec4f2b]    PyObject_Call                                      + 0x4b
[0x7ffa87fa6770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7ffa87fa0b9a]                                                       + 0x152b9a
[0x7ffa87fa0f94]                                                       + 0x152f94
[0x7ffa87fa650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ffa87fa0b9a]                                                       + 0x152b9a
[0x7ffa87fa0f94]                                                       + 0x152f94
[0x7ffa87fa650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ffa87fa0193]                                                       + 0x152193
[0x7ffa87fa115c]                                                       + 0x15315c
[0x7ffa87fa650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ffa87fa0b9a]                                                       + 0x152b9a
[0x7ffa87fa0f94]                                                       + 0x152f94
[0x7ffa87fa650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ffa87fa0b9a]                                                       + 0x152b9a
[0x7ffa87fa11b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7ffa87fa11df]    PyEval_EvalCode                                    + 0x1f
[0x7ffa87fd63d5]    PyRun_FileExFlags                                  + 0xb5
[0x7ffa87fd656f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7ffa87ff08e8]    Py_Main                                            + 0xff8
[0x555f65c4a2b8]    main                                               + 0x178
[0x7ffa87c650b3]    __libc_start_main                                  + 0xf3
[0x555f65c4a36e]    _start                                             + 0x2e


======================================== json5/dist/index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f388b61ba29]                                                       + 0x7c5a29
[0x7f388b7dc289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f390fc06741]                                                       + 0x2d7741
[0x7f391450d9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f3914593084]                                                       + 0x153084
[0x7f391459850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f3914592b9a]                                                       + 0x152b9a
[0x7f39145931b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f39144e5f1e]                                                       + 0xa5f1e
[0x7f39144b6f2b]    PyObject_Call                                      + 0x4b
[0x7f3914598770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f3914592b9a]                                                       + 0x152b9a
[0x7f3914592f94]                                                       + 0x152f94
[0x7f391459850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f3914592b9a]                                                       + 0x152b9a
[0x7f3914592f94]                                                       + 0x152f94
[0x7f391459850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f3914592193]                                                       + 0x152193
[0x7f391459315c]                                                       + 0x15315c
[0x7f391459850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f3914592b9a]                                                       + 0x152b9a
[0x7f3914592f94]                                                       + 0x152f94
[0x7f391459850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f3914592b9a]                                                       + 0x152b9a
[0x7f39145931b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f39145931df]    PyEval_EvalCode                                    + 0x1f
[0x7f39145c83d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f39145c856f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f39145e28e8]    Py_Main                                            + 0xff8
[0x5560623ab2b8]    main                                               + 0x178
[0x7f39142570b3]    __libc_start_main                                  + 0xf3
[0x5560623ab36e]    _start                                             + 0x2e


======================================== json5/dist/index.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f7b0442ea29]                                                       + 0x7c5a29
[0x7f7b045ef289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f7b88a19741]                                                       + 0x2d7741
[0x7f7b8d3209e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f7b8d3a6084]                                                       + 0x153084
[0x7f7b8d3ab50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7b8d3a5b9a]                                                       + 0x152b9a
[0x7f7b8d3a61b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f7b8d2f8f1e]                                                       + 0xa5f1e
[0x7f7b8d2c9f2b]    PyObject_Call                                      + 0x4b
[0x7f7b8d3ab770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f7b8d3a5b9a]                                                       + 0x152b9a
[0x7f7b8d3a5f94]                                                       + 0x152f94
[0x7f7b8d3ab50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7b8d3a5b9a]                                                       + 0x152b9a
[0x7f7b8d3a5f94]                                                       + 0x152f94
[0x7f7b8d3ab50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7b8d3a5193]                                                       + 0x152193
[0x7f7b8d3a615c]                                                       + 0x15315c
[0x7f7b8d3ab50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7b8d3a5b9a]                                                       + 0x152b9a
[0x7f7b8d3a5f94]                                                       + 0x152f94
[0x7f7b8d3ab50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7b8d3a5b9a]                                                       + 0x152b9a
[0x7f7b8d3a61b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f7b8d3a61df]    PyEval_EvalCode                                    + 0x1f
[0x7f7b8d3db3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f7b8d3db56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f7b8d3f58e8]    Py_Main                                            + 0xff8
[0x55b0b0b4c2b8]    main                                               + 0x178
[0x7f7b8d06a0b3]    __libc_start_main                                  + 0xf3
[0x55b0b0b4c36e]    _start                                             + 0x2e


======================================== lodash/core.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7ff7e6b3da29]                                                       + 0x7c5a29
[0x7ff7e6cfe289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7ff86b128741]                                                       + 0x2d7741
[0x7ff86fa2f9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7ff86fab5084]                                                       + 0x153084
[0x7ff86faba50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff86fab4b9a]                                                       + 0x152b9a
[0x7ff86fab51b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7ff86fa07f1e]                                                       + 0xa5f1e
[0x7ff86f9d8f2b]    PyObject_Call                                      + 0x4b
[0x7ff86faba770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7ff86fab4b9a]                                                       + 0x152b9a
[0x7ff86fab4f94]                                                       + 0x152f94
[0x7ff86faba50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff86fab4b9a]                                                       + 0x152b9a
[0x7ff86fab4f94]                                                       + 0x152f94
[0x7ff86faba50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff86fab4193]                                                       + 0x152193
[0x7ff86fab515c]                                                       + 0x15315c
[0x7ff86faba50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff86fab4b9a]                                                       + 0x152b9a
[0x7ff86fab4f94]                                                       + 0x152f94
[0x7ff86faba50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff86fab4b9a]                                                       + 0x152b9a
[0x7ff86fab51b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7ff86fab51df]    PyEval_EvalCode                                    + 0x1f
[0x7ff86faea3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7ff86faea56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7ff86fb048e8]    Py_Main                                            + 0xff8
[0x5619bbb2d2b8]    main                                               + 0x178
[0x7ff86f7790b3]    __libc_start_main                                  + 0xf3
[0x5619bbb2d36e]    _start                                             + 0x2e


======================================== lodash/core.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fb0f4433a29]                                                       + 0x7c5a29
[0x7fb0f45f4289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fb0f5511741]                                                       + 0x2d7741
[0x7fb0f9e189e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fb0f9e9e084]                                                       + 0x153084
[0x7fb0f9ea350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb0f9e9db9a]                                                       + 0x152b9a
[0x7fb0f9e9e1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fb0f9df0f1e]                                                       + 0xa5f1e
[0x7fb0f9dc1f2b]    PyObject_Call                                      + 0x4b
[0x7fb0f9ea3770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fb0f9e9db9a]                                                       + 0x152b9a
[0x7fb0f9e9df94]                                                       + 0x152f94
[0x7fb0f9ea350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb0f9e9db9a]                                                       + 0x152b9a
[0x7fb0f9e9df94]                                                       + 0x152f94
[0x7fb0f9ea350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb0f9e9d193]                                                       + 0x152193
[0x7fb0f9e9e15c]                                                       + 0x15315c
[0x7fb0f9ea350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb0f9e9db9a]                                                       + 0x152b9a
[0x7fb0f9e9df94]                                                       + 0x152f94
[0x7fb0f9ea350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb0f9e9db9a]                                                       + 0x152b9a
[0x7fb0f9e9e1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fb0f9e9e1df]    PyEval_EvalCode                                    + 0x1f
[0x7fb0f9ed33d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fb0f9ed356f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fb0f9eed8e8]    Py_Main                                            + 0xff8
[0x56430ea242b8]    main                                               + 0x178
[0x7fb0f9b620b3]    __libc_start_main                                  + 0xf3
[0x56430ea2436e]    _start                                             + 0x2e


======================================== lodash/lodash.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== lodash/lodash.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== lodash.merge/index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f895df30a29]                                                       + 0x7c5a29
[0x7f895e0f1289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f89e251b741]                                                       + 0x2d7741
[0x7f89e6e229e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f89e6ea8084]                                                       + 0x153084
[0x7f89e6ead50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f89e6ea7b9a]                                                       + 0x152b9a
[0x7f89e6ea81b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f89e6dfaf1e]                                                       + 0xa5f1e
[0x7f89e6dcbf2b]    PyObject_Call                                      + 0x4b
[0x7f89e6ead770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f89e6ea7b9a]                                                       + 0x152b9a
[0x7f89e6ea7f94]                                                       + 0x152f94
[0x7f89e6ead50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f89e6ea7b9a]                                                       + 0x152b9a
[0x7f89e6ea7f94]                                                       + 0x152f94
[0x7f89e6ead50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f89e6ea7193]                                                       + 0x152193
[0x7f89e6ea815c]                                                       + 0x15315c
[0x7f89e6ead50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f89e6ea7b9a]                                                       + 0x152b9a
[0x7f89e6ea7f94]                                                       + 0x152f94
[0x7f89e6ead50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f89e6ea7b9a]                                                       + 0x152b9a
[0x7f89e6ea81b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f89e6ea81df]    PyEval_EvalCode                                    + 0x1f
[0x7f89e6edd3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f89e6edd56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f89e6ef78e8]    Py_Main                                            + 0xff8
[0x55729aa922b8]    main                                               + 0x178
[0x7f89e6b6c0b3]    __libc_start_main                                  + 0xf3
[0x55729aa9236e]    _start                                             + 0x2e


======================================== lodash.sortby/index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f62cea71a29]                                                       + 0x7c5a29
[0x7f62cec32289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f635305c741]                                                       + 0x2d7741
[0x7f63579639e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f63579e9084]                                                       + 0x153084
[0x7f63579ee50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f63579e8b9a]                                                       + 0x152b9a
[0x7f63579e91b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f635793bf1e]                                                       + 0xa5f1e
[0x7f635790cf2b]    PyObject_Call                                      + 0x4b
[0x7f63579ee770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f63579e8b9a]                                                       + 0x152b9a
[0x7f63579e8f94]                                                       + 0x152f94
[0x7f63579ee50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f63579e8b9a]                                                       + 0x152b9a
[0x7f63579e8f94]                                                       + 0x152f94
[0x7f63579ee50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f63579e8193]                                                       + 0x152193
[0x7f63579e915c]                                                       + 0x15315c
[0x7f63579ee50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f63579e8b9a]                                                       + 0x152b9a
[0x7f63579e8f94]                                                       + 0x152f94
[0x7f63579ee50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f63579e8b9a]                                                       + 0x152b9a
[0x7f63579e91b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f63579e91df]    PyEval_EvalCode                                    + 0x1f
[0x7f6357a1e3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f6357a1e56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f6357a388e8]    Py_Main                                            + 0xff8
[0x563743e9e2b8]    main                                               + 0x178
[0x7f63576ad0b3]    __libc_start_main                                  + 0xf3
[0x563743e9e36e]    _start                                             + 0x2e


======================================== memfs/lib/volume.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fb219375a29]                                                       + 0x7c5a29
[0x7fb219536289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fb21a453741]                                                       + 0x2d7741
[0x7fb21ed5a9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fb21ede0084]                                                       + 0x153084
[0x7fb21ede550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb21eddfb9a]                                                       + 0x152b9a
[0x7fb21ede01b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fb21ed32f1e]                                                       + 0xa5f1e
[0x7fb21ed03f2b]    PyObject_Call                                      + 0x4b
[0x7fb21ede5770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fb21eddfb9a]                                                       + 0x152b9a
[0x7fb21eddff94]                                                       + 0x152f94
[0x7fb21ede550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb21eddfb9a]                                                       + 0x152b9a
[0x7fb21eddff94]                                                       + 0x152f94
[0x7fb21ede550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb21eddf193]                                                       + 0x152193
[0x7fb21ede015c]                                                       + 0x15315c
[0x7fb21ede550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb21eddfb9a]                                                       + 0x152b9a
[0x7fb21eddff94]                                                       + 0x152f94
[0x7fb21ede550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb21eddfb9a]                                                       + 0x152b9a
[0x7fb21ede01b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fb21ede01df]    PyEval_EvalCode                                    + 0x1f
[0x7fb21ee153d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fb21ee1556f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fb21ee2f8e8]    Py_Main                                            + 0xff8
[0x563592e7e2b8]    main                                               + 0x178
[0x7fb21eaa40b3]    __libc_start_main                                  + 0xf3
[0x563592e7e36e]    _start                                             + 0x2e


======================================== memory-fs/lib/MemoryFileSystemError.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 145 is out of bounds for axis 0 with size 145

======================================== moment/dist/moment.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== moment/min/locales.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== moment/min/locales.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== moment/min/moment-with-locales.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== moment/min/moment-with-locales.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== moment/min/moment.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== moment/moment.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== neo-async/async.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== neo-async/async.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== node-domexception/.history/index_20210527203842.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f8933bdba29]                                                       + 0x7c5a29
[0x7f8933d61d45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f89b802a3a8]                                                       + 0x13b3a8
[0x7f89b802c065]                                                       + 0x13d065
[0x7f89bcacdbd9]    PyCFunction_Call                                   + 0xc9
[0x7f89bcb5a6e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f89bcb52b9a]                                                       + 0x152b9a
[0x7f89bcb5baa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f89bca77151]    _PyObject_FastCallDict                             + 0x131
[0x7f89bca772a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f89bca76f2b]    PyObject_Call                                      + 0x4b
[0x7f89bcae8d7f]                                                       + 0xe8d7f
[0x7f89bcae4149]                                                       + 0xe4149
[0x7f89bca770ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f89bcb52d78]                                                       + 0x152d78
[0x7f89bcb5850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f89bcb52b9a]                                                       + 0x152b9a
[0x7f89bcb531b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f89bcaa5f1e]                                                       + 0xa5f1e
[0x7f89bca76f2b]    PyObject_Call                                      + 0x4b
[0x7f89bcb58770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f89bcb52b9a]                                                       + 0x152b9a
[0x7f89bcb52f94]                                                       + 0x152f94
[0x7f89bcb58867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f89bcb52b9a]                                                       + 0x152b9a
[0x7f89bcb531b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f89bcaa5f1e]                                                       + 0xa5f1e
[0x7f89bca76f2b]    PyObject_Call                                      + 0x4b
[0x7f89bcb58770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f89bcb52b9a]                                                       + 0x152b9a
[0x7f89bcb52f94]                                                       + 0x152f94
[0x7f89bcb58867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f89bcb52b9a]                                                       + 0x152b9a
[0x7f89bcb52f94]                                                       + 0x152f94
[0x7f89bcb5850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f89bcb52b9a]                                                       + 0x152b9a
[0x7f89bcb531b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f89bcaa5f1e]                                                       + 0xa5f1e
[0x7f89bca76f2b]    PyObject_Call                                      + 0x4b
[0x7f89bcb58770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f89bcb52b9a]                                                       + 0x152b9a
[0x7f89bcb52f94]                                                       + 0x152f94
[0x7f89bcb5850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f89bcb52b9a]                                                       + 0x152b9a
[0x7f89bcb52f94]                                                       + 0x152f94
[0x7f89bcb5850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f89bcb52b9a]                                                       + 0x152b9a
[0x7f89bcb52f94]                                                       + 0x152f94
[0x7f89bcb5850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f89bcb52b9a]                                                       + 0x152b9a
[0x7f89bcb531b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f89bcb531df]    PyEval_EvalCode                                    + 0x1f
[0x7f89bcb883d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f89bcb8856f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f89bcba28e8]    Py_Main                                            + 0xff8
[0x55b34e3772b8]    main                                               + 0x178
[0x7f89bc8170b3]    __libc_start_main                                  + 0xf3
[0x55b34e37736e]    _start                                             + 0x2e


======================================== node-domexception/.history/test_20210527205603.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7fec3051ea29]                                                       + 0x7c5a29
[0x7fec306a4d45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7fecb496d3a8]                                                       + 0x13b3a8
[0x7fecb496f065]                                                       + 0x13d065
[0x7fecb9410bd9]    PyCFunction_Call                                   + 0xc9
[0x7fecb949d6e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7fecb9495b9a]                                                       + 0x152b9a
[0x7fecb949eaa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7fecb93ba151]    _PyObject_FastCallDict                             + 0x131
[0x7fecb93ba2a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7fecb93b9f2b]    PyObject_Call                                      + 0x4b
[0x7fecb942bd7f]                                                       + 0xe8d7f
[0x7fecb9427149]                                                       + 0xe4149
[0x7fecb93ba0ad]    _PyObject_FastCallDict                             + 0x8d
[0x7fecb9495d78]                                                       + 0x152d78
[0x7fecb949b50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fecb9495b9a]                                                       + 0x152b9a
[0x7fecb94961b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fecb93e8f1e]                                                       + 0xa5f1e
[0x7fecb93b9f2b]    PyObject_Call                                      + 0x4b
[0x7fecb949b770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fecb9495b9a]                                                       + 0x152b9a
[0x7fecb9495f94]                                                       + 0x152f94
[0x7fecb949b867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7fecb9495b9a]                                                       + 0x152b9a
[0x7fecb94961b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fecb93e8f1e]                                                       + 0xa5f1e
[0x7fecb93b9f2b]    PyObject_Call                                      + 0x4b
[0x7fecb949b770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fecb9495b9a]                                                       + 0x152b9a
[0x7fecb9495f94]                                                       + 0x152f94
[0x7fecb949b867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7fecb9495b9a]                                                       + 0x152b9a
[0x7fecb9495f94]                                                       + 0x152f94
[0x7fecb949b50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fecb9495b9a]                                                       + 0x152b9a
[0x7fecb94961b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fecb93e8f1e]                                                       + 0xa5f1e
[0x7fecb93b9f2b]    PyObject_Call                                      + 0x4b
[0x7fecb949b770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fecb9495b9a]                                                       + 0x152b9a
[0x7fecb9495f94]                                                       + 0x152f94
[0x7fecb949b50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fecb9495b9a]                                                       + 0x152b9a
[0x7fecb9495f94]                                                       + 0x152f94
[0x7fecb949b50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fecb9495b9a]                                                       + 0x152b9a
[0x7fecb9495f94]                                                       + 0x152f94
[0x7fecb949b50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fecb9495b9a]                                                       + 0x152b9a
[0x7fecb94961b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fecb94961df]    PyEval_EvalCode                                    + 0x1f
[0x7fecb94cb3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fecb94cb56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fecb94e58e8]    Py_Main                                            + 0xff8
[0x563eb6a902b8]    main                                               + 0x178
[0x7fecb915a0b3]    __libc_start_main                                  + 0xf3
[0x563eb6a9036e]    _start                                             + 0x2e


======================================== node-forge/dist/forge.all.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== node-forge/dist/forge.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== node-forge/dist/prime.worker.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f72d6328a29]                                                       + 0x7c5a29
[0x7f72d64e9289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f72f052a741]                                                       + 0x2d7741
[0x7f72f4e319e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f72f4eb7084]                                                       + 0x153084
[0x7f72f4ebc50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f72f4eb6b9a]                                                       + 0x152b9a
[0x7f72f4eb71b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f72f4e09f1e]                                                       + 0xa5f1e
[0x7f72f4ddaf2b]    PyObject_Call                                      + 0x4b
[0x7f72f4ebc770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f72f4eb6b9a]                                                       + 0x152b9a
[0x7f72f4eb6f94]                                                       + 0x152f94
[0x7f72f4ebc50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f72f4eb6b9a]                                                       + 0x152b9a
[0x7f72f4eb6f94]                                                       + 0x152f94
[0x7f72f4ebc50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f72f4eb6193]                                                       + 0x152193
[0x7f72f4eb715c]                                                       + 0x15315c
[0x7f72f4ebc50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f72f4eb6b9a]                                                       + 0x152b9a
[0x7f72f4eb6f94]                                                       + 0x152f94
[0x7f72f4ebc50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f72f4eb6b9a]                                                       + 0x152b9a
[0x7f72f4eb71b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f72f4eb71df]    PyEval_EvalCode                                    + 0x1f
[0x7f72f4eec3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f72f4eec56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f72f4f068e8]    Py_Main                                            + 0xff8
[0x5646220772b8]    main                                               + 0x178
[0x7f72f4b7b0b3]    __libc_start_main                                  + 0xf3
[0x56462207736e]    _start                                             + 0x2e


======================================== node-forge/lib/asn1.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fc6b37cda29]                                                       + 0x7c5a29
[0x7fc6b398e289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fc737db8741]                                                       + 0x2d7741
[0x7fc73c6bf9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fc73c745084]                                                       + 0x153084
[0x7fc73c74a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc73c744b9a]                                                       + 0x152b9a
[0x7fc73c7451b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fc73c697f1e]                                                       + 0xa5f1e
[0x7fc73c668f2b]    PyObject_Call                                      + 0x4b
[0x7fc73c74a770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fc73c744b9a]                                                       + 0x152b9a
[0x7fc73c744f94]                                                       + 0x152f94
[0x7fc73c74a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc73c744b9a]                                                       + 0x152b9a
[0x7fc73c744f94]                                                       + 0x152f94
[0x7fc73c74a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc73c744193]                                                       + 0x152193
[0x7fc73c74515c]                                                       + 0x15315c
[0x7fc73c74a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc73c744b9a]                                                       + 0x152b9a
[0x7fc73c744f94]                                                       + 0x152f94
[0x7fc73c74a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc73c744b9a]                                                       + 0x152b9a
[0x7fc73c7451b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fc73c7451df]    PyEval_EvalCode                                    + 0x1f
[0x7fc73c77a3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fc73c77a56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fc73c7948e8]    Py_Main                                            + 0xff8
[0x5639dadf32b8]    main                                               + 0x178
[0x7fc73c4090b3]    __libc_start_main                                  + 0xf3
[0x5639dadf336e]    _start                                             + 0x2e


======================================== node-forge/lib/cipherModes.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fe3181f2a29]                                                       + 0x7c5a29
[0x7fe3183b3289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fe39c7dd741]                                                       + 0x2d7741
[0x7fe3a10e49e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fe3a116a084]                                                       + 0x153084
[0x7fe3a116f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe3a1169b9a]                                                       + 0x152b9a
[0x7fe3a116a1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fe3a10bcf1e]                                                       + 0xa5f1e
[0x7fe3a108df2b]    PyObject_Call                                      + 0x4b
[0x7fe3a116f770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fe3a1169b9a]                                                       + 0x152b9a
[0x7fe3a1169f94]                                                       + 0x152f94
[0x7fe3a116f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe3a1169b9a]                                                       + 0x152b9a
[0x7fe3a1169f94]                                                       + 0x152f94
[0x7fe3a116f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe3a1169193]                                                       + 0x152193
[0x7fe3a116a15c]                                                       + 0x15315c
[0x7fe3a116f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe3a1169b9a]                                                       + 0x152b9a
[0x7fe3a1169f94]                                                       + 0x152f94
[0x7fe3a116f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe3a1169b9a]                                                       + 0x152b9a
[0x7fe3a116a1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fe3a116a1df]    PyEval_EvalCode                                    + 0x1f
[0x7fe3a119f3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fe3a119f56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fe3a11b98e8]    Py_Main                                            + 0xff8
[0x563abf0942b8]    main                                               + 0x178
[0x7fe3a0e2e0b3]    __libc_start_main                                  + 0xf3
[0x563abf09436e]    _start                                             + 0x2e


======================================== node-forge/lib/ed25519.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7efdea26da29]                                                       + 0x7c5a29
[0x7efdea42e289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7efe6e858741]                                                       + 0x2d7741
[0x7efe7315f9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7efe731e5084]                                                       + 0x153084
[0x7efe731ea50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7efe731e4b9a]                                                       + 0x152b9a
[0x7efe731e51b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7efe73137f1e]                                                       + 0xa5f1e
[0x7efe73108f2b]    PyObject_Call                                      + 0x4b
[0x7efe731ea770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7efe731e4b9a]                                                       + 0x152b9a
[0x7efe731e4f94]                                                       + 0x152f94
[0x7efe731ea50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7efe731e4b9a]                                                       + 0x152b9a
[0x7efe731e4f94]                                                       + 0x152f94
[0x7efe731ea50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7efe731e4193]                                                       + 0x152193
[0x7efe731e515c]                                                       + 0x15315c
[0x7efe731ea50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7efe731e4b9a]                                                       + 0x152b9a
[0x7efe731e4f94]                                                       + 0x152f94
[0x7efe731ea50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7efe731e4b9a]                                                       + 0x152b9a
[0x7efe731e51b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7efe731e51df]    PyEval_EvalCode                                    + 0x1f
[0x7efe7321a3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7efe7321a56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7efe732348e8]    Py_Main                                            + 0xff8
[0x55e0723492b8]    main                                               + 0x178
[0x7efe72ea90b3]    __libc_start_main                                  + 0xf3
[0x55e07234936e]    _start                                             + 0x2e


======================================== node-forge/lib/http.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f83b7e4aa29]                                                       + 0x7c5a29
[0x7f83b800b289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f83b8f28741]                                                       + 0x2d7741
[0x7f83bd82f9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f83bd8b5084]                                                       + 0x153084
[0x7f83bd8ba50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f83bd8b4b9a]                                                       + 0x152b9a
[0x7f83bd8b51b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f83bd807f1e]                                                       + 0xa5f1e
[0x7f83bd7d8f2b]    PyObject_Call                                      + 0x4b
[0x7f83bd8ba770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f83bd8b4b9a]                                                       + 0x152b9a
[0x7f83bd8b4f94]                                                       + 0x152f94
[0x7f83bd8ba50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f83bd8b4b9a]                                                       + 0x152b9a
[0x7f83bd8b4f94]                                                       + 0x152f94
[0x7f83bd8ba50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f83bd8b4193]                                                       + 0x152193
[0x7f83bd8b515c]                                                       + 0x15315c
[0x7f83bd8ba50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f83bd8b4b9a]                                                       + 0x152b9a
[0x7f83bd8b4f94]                                                       + 0x152f94
[0x7f83bd8ba50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f83bd8b4b9a]                                                       + 0x152b9a
[0x7f83bd8b51b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f83bd8b51df]    PyEval_EvalCode                                    + 0x1f
[0x7f83bd8ea3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f83bd8ea56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f83bd9048e8]    Py_Main                                            + 0xff8
[0x564a824102b8]    main                                               + 0x178
[0x7f83bd5790b3]    __libc_start_main                                  + 0xf3
[0x564a8241036e]    _start                                             + 0x2e


======================================== node-forge/lib/jsbn.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f4ab00a3a29]                                                       + 0x7c5a29
[0x7f4ab0264289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f4b3468e741]                                                       + 0x2d7741
[0x7f4b38f959e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f4b3901b084]                                                       + 0x153084
[0x7f4b3902050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4b3901ab9a]                                                       + 0x152b9a
[0x7f4b3901b1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f4b38f6df1e]                                                       + 0xa5f1e
[0x7f4b38f3ef2b]    PyObject_Call                                      + 0x4b
[0x7f4b39020770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f4b3901ab9a]                                                       + 0x152b9a
[0x7f4b3901af94]                                                       + 0x152f94
[0x7f4b3902050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4b3901ab9a]                                                       + 0x152b9a
[0x7f4b3901af94]                                                       + 0x152f94
[0x7f4b3902050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4b3901a193]                                                       + 0x152193
[0x7f4b3901b15c]                                                       + 0x15315c
[0x7f4b3902050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4b3901ab9a]                                                       + 0x152b9a
[0x7f4b3901af94]                                                       + 0x152f94
[0x7f4b3902050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4b3901ab9a]                                                       + 0x152b9a
[0x7f4b3901b1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f4b3901b1df]    PyEval_EvalCode                                    + 0x1f
[0x7f4b390503d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f4b3905056f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f4b3906a8e8]    Py_Main                                            + 0xff8
[0x559f6eb5d2b8]    main                                               + 0x178
[0x7f4b38cdf0b3]    __libc_start_main                                  + 0xf3
[0x559f6eb5d36e]    _start                                             + 0x2e


======================================== node-forge/lib/pkcs7.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fc84d4e3a29]                                                       + 0x7c5a29
[0x7fc84d6a4289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fc84e5c1741]                                                       + 0x2d7741
[0x7fc852ec89e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fc852f4e084]                                                       + 0x153084
[0x7fc852f5350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc852f4db9a]                                                       + 0x152b9a
[0x7fc852f4e1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fc852ea0f1e]                                                       + 0xa5f1e
[0x7fc852e71f2b]    PyObject_Call                                      + 0x4b
[0x7fc852f53770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fc852f4db9a]                                                       + 0x152b9a
[0x7fc852f4df94]                                                       + 0x152f94
[0x7fc852f5350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc852f4db9a]                                                       + 0x152b9a
[0x7fc852f4df94]                                                       + 0x152f94
[0x7fc852f5350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc852f4d193]                                                       + 0x152193
[0x7fc852f4e15c]                                                       + 0x15315c
[0x7fc852f5350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc852f4db9a]                                                       + 0x152b9a
[0x7fc852f4df94]                                                       + 0x152f94
[0x7fc852f5350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc852f4db9a]                                                       + 0x152b9a
[0x7fc852f4e1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fc852f4e1df]    PyEval_EvalCode                                    + 0x1f
[0x7fc852f833d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fc852f8356f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fc852f9d8e8]    Py_Main                                            + 0xff8
[0x55e7dfe0b2b8]    main                                               + 0x178
[0x7fc852c120b3]    __libc_start_main                                  + 0xf3
[0x55e7dfe0b36e]    _start                                             + 0x2e


======================================== node-forge/lib/rsa.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fe894d51a29]                                                       + 0x7c5a29
[0x7fe894f12289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fe895e2f741]                                                       + 0x2d7741
[0x7fe89a7369e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fe89a7bc084]                                                       + 0x153084
[0x7fe89a7c150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe89a7bbb9a]                                                       + 0x152b9a
[0x7fe89a7bc1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fe89a70ef1e]                                                       + 0xa5f1e
[0x7fe89a6dff2b]    PyObject_Call                                      + 0x4b
[0x7fe89a7c1770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fe89a7bbb9a]                                                       + 0x152b9a
[0x7fe89a7bbf94]                                                       + 0x152f94
[0x7fe89a7c150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe89a7bbb9a]                                                       + 0x152b9a
[0x7fe89a7bbf94]                                                       + 0x152f94
[0x7fe89a7c150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe89a7bb193]                                                       + 0x152193
[0x7fe89a7bc15c]                                                       + 0x15315c
[0x7fe89a7c150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe89a7bbb9a]                                                       + 0x152b9a
[0x7fe89a7bbf94]                                                       + 0x152f94
[0x7fe89a7c150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe89a7bbb9a]                                                       + 0x152b9a
[0x7fe89a7bc1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fe89a7bc1df]    PyEval_EvalCode                                    + 0x1f
[0x7fe89a7f13d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fe89a7f156f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fe89a80b8e8]    Py_Main                                            + 0xff8
[0x55a3982692b8]    main                                               + 0x178
[0x7fe89a4800b3]    __libc_start_main                                  + 0xf3
[0x55a39826936e]    _start                                             + 0x2e


======================================== node-forge/lib/tls.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f177e524a29]                                                       + 0x7c5a29
[0x7f177e6e5289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f177f602741]                                                       + 0x2d7741
[0x7f1783f099e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f1783f8f084]                                                       + 0x153084
[0x7f1783f9450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f1783f8eb9a]                                                       + 0x152b9a
[0x7f1783f8f1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f1783ee1f1e]                                                       + 0xa5f1e
[0x7f1783eb2f2b]    PyObject_Call                                      + 0x4b
[0x7f1783f94770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f1783f8eb9a]                                                       + 0x152b9a
[0x7f1783f8ef94]                                                       + 0x152f94
[0x7f1783f9450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f1783f8eb9a]                                                       + 0x152b9a
[0x7f1783f8ef94]                                                       + 0x152f94
[0x7f1783f9450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f1783f8e193]                                                       + 0x152193
[0x7f1783f8f15c]                                                       + 0x15315c
[0x7f1783f9450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f1783f8eb9a]                                                       + 0x152b9a
[0x7f1783f8ef94]                                                       + 0x152f94
[0x7f1783f9450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f1783f8eb9a]                                                       + 0x152b9a
[0x7f1783f8f1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f1783f8f1df]    PyEval_EvalCode                                    + 0x1f
[0x7f1783fc43d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f1783fc456f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f1783fde8e8]    Py_Main                                            + 0xff8
[0x564fb0f7d2b8]    main                                               + 0x178
[0x7f1783c530b3]    __libc_start_main                                  + 0xf3
[0x564fb0f7d36e]    _start                                             + 0x2e


======================================== node-forge/lib/util.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fb2dbc22a29]                                                       + 0x7c5a29
[0x7fb2dbde3289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fb36020d741]                                                       + 0x2d7741
[0x7fb364b149e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fb364b9a084]                                                       + 0x153084
[0x7fb364b9f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb364b99b9a]                                                       + 0x152b9a
[0x7fb364b9a1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fb364aecf1e]                                                       + 0xa5f1e
[0x7fb364abdf2b]    PyObject_Call                                      + 0x4b
[0x7fb364b9f770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fb364b99b9a]                                                       + 0x152b9a
[0x7fb364b99f94]                                                       + 0x152f94
[0x7fb364b9f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb364b99b9a]                                                       + 0x152b9a
[0x7fb364b99f94]                                                       + 0x152f94
[0x7fb364b9f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb364b99193]                                                       + 0x152193
[0x7fb364b9a15c]                                                       + 0x15315c
[0x7fb364b9f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb364b99b9a]                                                       + 0x152b9a
[0x7fb364b99f94]                                                       + 0x152f94
[0x7fb364b9f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb364b99b9a]                                                       + 0x152b9a
[0x7fb364b9a1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fb364b9a1df]    PyEval_EvalCode                                    + 0x1f
[0x7fb364bcf3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fb364bcf56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fb364be98e8]    Py_Main                                            + 0xff8
[0x55c470cfb2b8]    main                                               + 0x178
[0x7fb36485e0b3]    __libc_start_main                                  + 0xf3
[0x55c470cfb36e]    _start                                             + 0x2e


======================================== node-forge/lib/x509.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f5c968cea29]                                                       + 0x7c5a29
[0x7f5c96a8f289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f5d1aeb9741]                                                       + 0x2d7741
[0x7f5d1f7c09e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f5d1f846084]                                                       + 0x153084
[0x7f5d1f84b50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f5d1f845b9a]                                                       + 0x152b9a
[0x7f5d1f8461b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f5d1f798f1e]                                                       + 0xa5f1e
[0x7f5d1f769f2b]    PyObject_Call                                      + 0x4b
[0x7f5d1f84b770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f5d1f845b9a]                                                       + 0x152b9a
[0x7f5d1f845f94]                                                       + 0x152f94
[0x7f5d1f84b50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f5d1f845b9a]                                                       + 0x152b9a
[0x7f5d1f845f94]                                                       + 0x152f94
[0x7f5d1f84b50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f5d1f845193]                                                       + 0x152193
[0x7f5d1f84615c]                                                       + 0x15315c
[0x7f5d1f84b50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f5d1f845b9a]                                                       + 0x152b9a
[0x7f5d1f845f94]                                                       + 0x152f94
[0x7f5d1f84b50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f5d1f845b9a]                                                       + 0x152b9a
[0x7f5d1f8461b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f5d1f8461df]    PyEval_EvalCode                                    + 0x1f
[0x7f5d1f87b3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f5d1f87b56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f5d1f8958e8]    Py_Main                                            + 0xff8
[0x556be33852b8]    main                                               + 0x178
[0x7f5d1f50a0b3]    __libc_start_main                                  + 0xf3
[0x556be338536e]    _start                                             + 0x2e


======================================== node-libs-browser/mock/empty.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f78def82a29]                                                       + 0x7c5a29
[0x7f78df108d45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f78dfec43a8]                                                       + 0x13b3a8
[0x7f78dfec6065]                                                       + 0x13d065
[0x7f78e4967bd9]    PyCFunction_Call                                   + 0xc9
[0x7f78e49f46e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f78e49ecb9a]                                                       + 0x152b9a
[0x7f78e49f5aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f78e4911151]    _PyObject_FastCallDict                             + 0x131
[0x7f78e49112a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f78e4910f2b]    PyObject_Call                                      + 0x4b
[0x7f78e4982d7f]                                                       + 0xe8d7f
[0x7f78e497e149]                                                       + 0xe4149
[0x7f78e49110ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f78e49ecd78]                                                       + 0x152d78
[0x7f78e49f250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f78e49ecb9a]                                                       + 0x152b9a
[0x7f78e49ed1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f78e493ff1e]                                                       + 0xa5f1e
[0x7f78e4910f2b]    PyObject_Call                                      + 0x4b
[0x7f78e49f2770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f78e49ecb9a]                                                       + 0x152b9a
[0x7f78e49ecf94]                                                       + 0x152f94
[0x7f78e49f2867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f78e49ecb9a]                                                       + 0x152b9a
[0x7f78e49ed1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f78e493ff1e]                                                       + 0xa5f1e
[0x7f78e4910f2b]    PyObject_Call                                      + 0x4b
[0x7f78e49f2770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f78e49ecb9a]                                                       + 0x152b9a
[0x7f78e49ecf94]                                                       + 0x152f94
[0x7f78e49f2867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f78e49ecb9a]                                                       + 0x152b9a
[0x7f78e49ecf94]                                                       + 0x152f94
[0x7f78e49f250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f78e49ecb9a]                                                       + 0x152b9a
[0x7f78e49ed1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f78e493ff1e]                                                       + 0xa5f1e
[0x7f78e4910f2b]    PyObject_Call                                      + 0x4b
[0x7f78e49f2770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f78e49ecb9a]                                                       + 0x152b9a
[0x7f78e49ecf94]                                                       + 0x152f94
[0x7f78e49f250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f78e49ecb9a]                                                       + 0x152b9a
[0x7f78e49ecf94]                                                       + 0x152f94
[0x7f78e49f250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f78e49ecb9a]                                                       + 0x152b9a
[0x7f78e49ecf94]                                                       + 0x152f94
[0x7f78e49f250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f78e49ecb9a]                                                       + 0x152b9a
[0x7f78e49ed1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f78e49ed1df]    PyEval_EvalCode                                    + 0x1f
[0x7f78e4a223d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f78e4a2256f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f78e4a3c8e8]    Py_Main                                            + 0xff8
[0x559cb8fbd2b8]    main                                               + 0x178
[0x7f78e46b10b3]    __libc_start_main                                  + 0xf3
[0x559cb8fbd36e]    _start                                             + 0x2e


======================================== node-libs-browser/mock/tls.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f284e734a29]                                                       + 0x7c5a29
[0x7f284e8bad45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f28d2b833a8]                                                       + 0x13b3a8
[0x7f28d2b85065]                                                       + 0x13d065
[0x7f28d7626bd9]    PyCFunction_Call                                   + 0xc9
[0x7f28d76b36e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f28d76abb9a]                                                       + 0x152b9a
[0x7f28d76b4aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f28d75d0151]    _PyObject_FastCallDict                             + 0x131
[0x7f28d75d02a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f28d75cff2b]    PyObject_Call                                      + 0x4b
[0x7f28d7641d7f]                                                       + 0xe8d7f
[0x7f28d763d149]                                                       + 0xe4149
[0x7f28d75d00ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f28d76abd78]                                                       + 0x152d78
[0x7f28d76b150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f28d76abb9a]                                                       + 0x152b9a
[0x7f28d76ac1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f28d75fef1e]                                                       + 0xa5f1e
[0x7f28d75cff2b]    PyObject_Call                                      + 0x4b
[0x7f28d76b1770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f28d76abb9a]                                                       + 0x152b9a
[0x7f28d76abf94]                                                       + 0x152f94
[0x7f28d76b1867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f28d76abb9a]                                                       + 0x152b9a
[0x7f28d76ac1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f28d75fef1e]                                                       + 0xa5f1e
[0x7f28d75cff2b]    PyObject_Call                                      + 0x4b
[0x7f28d76b1770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f28d76abb9a]                                                       + 0x152b9a
[0x7f28d76abf94]                                                       + 0x152f94
[0x7f28d76b1867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f28d76abb9a]                                                       + 0x152b9a
[0x7f28d76abf94]                                                       + 0x152f94
[0x7f28d76b150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f28d76abb9a]                                                       + 0x152b9a
[0x7f28d76ac1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f28d75fef1e]                                                       + 0xa5f1e
[0x7f28d75cff2b]    PyObject_Call                                      + 0x4b
[0x7f28d76b1770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f28d76abb9a]                                                       + 0x152b9a
[0x7f28d76abf94]                                                       + 0x152f94
[0x7f28d76b150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f28d76abb9a]                                                       + 0x152b9a
[0x7f28d76abf94]                                                       + 0x152f94
[0x7f28d76b150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f28d76abb9a]                                                       + 0x152b9a
[0x7f28d76abf94]                                                       + 0x152f94
[0x7f28d76b150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f28d76abb9a]                                                       + 0x152b9a
[0x7f28d76ac1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f28d76ac1df]    PyEval_EvalCode                                    + 0x1f
[0x7f28d76e13d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f28d76e156f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f28d76fb8e8]    Py_Main                                            + 0xff8
[0x55fa0f52a2b8]    main                                               + 0x178
[0x7f28d73700b3]    __libc_start_main                                  + 0xf3
[0x55fa0f52a36e]    _start                                             + 0x2e


======================================== nwsapi/src/nwsapi.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f66f8360a29]                                                       + 0x7c5a29
[0x7f66f8521289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f677c94b741]                                                       + 0x2d7741
[0x7f67812529e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f67812d8084]                                                       + 0x153084
[0x7f67812dd50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f67812d7b9a]                                                       + 0x152b9a
[0x7f67812d81b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f678122af1e]                                                       + 0xa5f1e
[0x7f67811fbf2b]    PyObject_Call                                      + 0x4b
[0x7f67812dd770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f67812d7b9a]                                                       + 0x152b9a
[0x7f67812d7f94]                                                       + 0x152f94
[0x7f67812dd50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f67812d7b9a]                                                       + 0x152b9a
[0x7f67812d7f94]                                                       + 0x152f94
[0x7f67812dd50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f67812d7193]                                                       + 0x152193
[0x7f67812d815c]                                                       + 0x15315c
[0x7f67812dd50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f67812d7b9a]                                                       + 0x152b9a
[0x7f67812d7f94]                                                       + 0x152f94
[0x7f67812dd50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f67812d7b9a]                                                       + 0x152b9a
[0x7f67812d81b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f67812d81df]    PyEval_EvalCode                                    + 0x1f
[0x7f678130d3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f678130d56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f67813278e8]    Py_Main                                            + 0xff8
[0x55732e07f2b8]    main                                               + 0x178
[0x7f6780f9c0b3]    __libc_start_main                                  + 0xf3
[0x55732e07f36e]    _start                                             + 0x2e


======================================== object.assign/dist/browser.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7facaf8e2a29]                                                       + 0x7c5a29
[0x7facafaa3289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fad33ecd741]                                                       + 0x2d7741
[0x7fad387d49e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fad3885a084]                                                       + 0x153084
[0x7fad3885f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fad38859b9a]                                                       + 0x152b9a
[0x7fad3885a1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fad387acf1e]                                                       + 0xa5f1e
[0x7fad3877df2b]    PyObject_Call                                      + 0x4b
[0x7fad3885f770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fad38859b9a]                                                       + 0x152b9a
[0x7fad38859f94]                                                       + 0x152f94
[0x7fad3885f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fad38859b9a]                                                       + 0x152b9a
[0x7fad38859f94]                                                       + 0x152f94
[0x7fad3885f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fad38859193]                                                       + 0x152193
[0x7fad3885a15c]                                                       + 0x15315c
[0x7fad3885f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fad38859b9a]                                                       + 0x152b9a
[0x7fad38859f94]                                                       + 0x152f94
[0x7fad3885f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fad38859b9a]                                                       + 0x152b9a
[0x7fad3885a1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fad3885a1df]    PyEval_EvalCode                                    + 0x1f
[0x7fad3888f3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fad3888f56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fad388a98e8]    Py_Main                                            + 0xff8
[0x5588db1092b8]    main                                               + 0x178
[0x7fad3851e0b3]    __libc_start_main                                  + 0xf3
[0x5588db10936e]    _start                                             + 0x2e


======================================== open/index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 1228 is out of bounds for axis 0 with size 1228

======================================== pako/dist/pako.es5.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== pako/dist/pako.es5.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== pako/dist/pako.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== pako/dist/pako.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== pako/dist/pako_deflate.es5.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f1164f76a29]                                                       + 0x7c5a29
[0x7f1165137289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f11e9561741]                                                       + 0x2d7741
[0x7f11ede689e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f11edeee084]                                                       + 0x153084
[0x7f11edef350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f11edeedb9a]                                                       + 0x152b9a
[0x7f11edeee1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f11ede40f1e]                                                       + 0xa5f1e
[0x7f11ede11f2b]    PyObject_Call                                      + 0x4b
[0x7f11edef3770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f11edeedb9a]                                                       + 0x152b9a
[0x7f11edeedf94]                                                       + 0x152f94
[0x7f11edef350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f11edeedb9a]                                                       + 0x152b9a
[0x7f11edeedf94]                                                       + 0x152f94
[0x7f11edef350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f11edeed193]                                                       + 0x152193
[0x7f11edeee15c]                                                       + 0x15315c
[0x7f11edef350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f11edeedb9a]                                                       + 0x152b9a
[0x7f11edeedf94]                                                       + 0x152f94
[0x7f11edef350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f11edeedb9a]                                                       + 0x152b9a
[0x7f11edeee1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f11edeee1df]    PyEval_EvalCode                                    + 0x1f
[0x7f11edf233d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f11edf2356f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f11edf3d8e8]    Py_Main                                            + 0xff8
[0x5627e3a0b2b8]    main                                               + 0x178
[0x7f11edbb20b3]    __libc_start_main                                  + 0xf3
[0x5627e3a0b36e]    _start                                             + 0x2e


======================================== pako/dist/pako_deflate.es5.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fe26da89a29]                                                       + 0x7c5a29
[0x7fe26dc4a289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fe2f2074741]                                                       + 0x2d7741
[0x7fe2f697b9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fe2f6a01084]                                                       + 0x153084
[0x7fe2f6a0650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe2f6a00b9a]                                                       + 0x152b9a
[0x7fe2f6a011b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fe2f6953f1e]                                                       + 0xa5f1e
[0x7fe2f6924f2b]    PyObject_Call                                      + 0x4b
[0x7fe2f6a06770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fe2f6a00b9a]                                                       + 0x152b9a
[0x7fe2f6a00f94]                                                       + 0x152f94
[0x7fe2f6a0650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe2f6a00b9a]                                                       + 0x152b9a
[0x7fe2f6a00f94]                                                       + 0x152f94
[0x7fe2f6a0650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe2f6a00193]                                                       + 0x152193
[0x7fe2f6a0115c]                                                       + 0x15315c
[0x7fe2f6a0650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe2f6a00b9a]                                                       + 0x152b9a
[0x7fe2f6a00f94]                                                       + 0x152f94
[0x7fe2f6a0650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe2f6a00b9a]                                                       + 0x152b9a
[0x7fe2f6a011b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fe2f6a011df]    PyEval_EvalCode                                    + 0x1f
[0x7fe2f6a363d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fe2f6a3656f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fe2f6a508e8]    Py_Main                                            + 0xff8
[0x5614b99a72b8]    main                                               + 0x178
[0x7fe2f66c50b3]    __libc_start_main                                  + 0xf3
[0x5614b99a736e]    _start                                             + 0x2e


======================================== pako/dist/pako_deflate.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fd5053f9a29]                                                       + 0x7c5a29
[0x7fd5055ba289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fd5899e4741]                                                       + 0x2d7741
[0x7fd58e2eb9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fd58e371084]                                                       + 0x153084
[0x7fd58e37650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fd58e370b9a]                                                       + 0x152b9a
[0x7fd58e3711b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fd58e2c3f1e]                                                       + 0xa5f1e
[0x7fd58e294f2b]    PyObject_Call                                      + 0x4b
[0x7fd58e376770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fd58e370b9a]                                                       + 0x152b9a
[0x7fd58e370f94]                                                       + 0x152f94
[0x7fd58e37650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fd58e370b9a]                                                       + 0x152b9a
[0x7fd58e370f94]                                                       + 0x152f94
[0x7fd58e37650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fd58e370193]                                                       + 0x152193
[0x7fd58e37115c]                                                       + 0x15315c
[0x7fd58e37650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fd58e370b9a]                                                       + 0x152b9a
[0x7fd58e370f94]                                                       + 0x152f94
[0x7fd58e37650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fd58e370b9a]                                                       + 0x152b9a
[0x7fd58e3711b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fd58e3711df]    PyEval_EvalCode                                    + 0x1f
[0x7fd58e3a63d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fd58e3a656f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fd58e3c08e8]    Py_Main                                            + 0xff8
[0x557005dce2b8]    main                                               + 0x178
[0x7fd58e0350b3]    __libc_start_main                                  + 0xf3
[0x557005dce36e]    _start                                             + 0x2e


======================================== pako/dist/pako_deflate.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f7e81c5aa29]                                                       + 0x7c5a29
[0x7f7e81e1b289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f7f06245741]                                                       + 0x2d7741
[0x7f7f0ab4c9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f7f0abd2084]                                                       + 0x153084
[0x7f7f0abd750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7f0abd1b9a]                                                       + 0x152b9a
[0x7f7f0abd21b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f7f0ab24f1e]                                                       + 0xa5f1e
[0x7f7f0aaf5f2b]    PyObject_Call                                      + 0x4b
[0x7f7f0abd7770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f7f0abd1b9a]                                                       + 0x152b9a
[0x7f7f0abd1f94]                                                       + 0x152f94
[0x7f7f0abd750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7f0abd1b9a]                                                       + 0x152b9a
[0x7f7f0abd1f94]                                                       + 0x152f94
[0x7f7f0abd750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7f0abd1193]                                                       + 0x152193
[0x7f7f0abd215c]                                                       + 0x15315c
[0x7f7f0abd750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7f0abd1b9a]                                                       + 0x152b9a
[0x7f7f0abd1f94]                                                       + 0x152f94
[0x7f7f0abd750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7f0abd1b9a]                                                       + 0x152b9a
[0x7f7f0abd21b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f7f0abd21df]    PyEval_EvalCode                                    + 0x1f
[0x7f7f0ac073d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f7f0ac0756f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f7f0ac218e8]    Py_Main                                            + 0xff8
[0x55aca0e5f2b8]    main                                               + 0x178
[0x7f7f0a8960b3]    __libc_start_main                                  + 0xf3
[0x55aca0e5f36e]    _start                                             + 0x2e


======================================== pako/dist/pako_inflate.es5.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fc1c23f1a29]                                                       + 0x7c5a29
[0x7fc1c25b2289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fc2469dc741]                                                       + 0x2d7741
[0x7fc24b2e39e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fc24b369084]                                                       + 0x153084
[0x7fc24b36e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc24b368b9a]                                                       + 0x152b9a
[0x7fc24b3691b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fc24b2bbf1e]                                                       + 0xa5f1e
[0x7fc24b28cf2b]    PyObject_Call                                      + 0x4b
[0x7fc24b36e770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fc24b368b9a]                                                       + 0x152b9a
[0x7fc24b368f94]                                                       + 0x152f94
[0x7fc24b36e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc24b368b9a]                                                       + 0x152b9a
[0x7fc24b368f94]                                                       + 0x152f94
[0x7fc24b36e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc24b368193]                                                       + 0x152193
[0x7fc24b36915c]                                                       + 0x15315c
[0x7fc24b36e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc24b368b9a]                                                       + 0x152b9a
[0x7fc24b368f94]                                                       + 0x152f94
[0x7fc24b36e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc24b368b9a]                                                       + 0x152b9a
[0x7fc24b3691b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fc24b3691df]    PyEval_EvalCode                                    + 0x1f
[0x7fc24b39e3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fc24b39e56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fc24b3b88e8]    Py_Main                                            + 0xff8
[0x55fa0f0b22b8]    main                                               + 0x178
[0x7fc24b02d0b3]    __libc_start_main                                  + 0xf3
[0x55fa0f0b236e]    _start                                             + 0x2e


======================================== pako/dist/pako_inflate.es5.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fcb51907a29]                                                       + 0x7c5a29
[0x7fcb51ac8289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fcbd5ef2741]                                                       + 0x2d7741
[0x7fcbda7f99e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fcbda87f084]                                                       + 0x153084
[0x7fcbda88450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fcbda87eb9a]                                                       + 0x152b9a
[0x7fcbda87f1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fcbda7d1f1e]                                                       + 0xa5f1e
[0x7fcbda7a2f2b]    PyObject_Call                                      + 0x4b
[0x7fcbda884770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fcbda87eb9a]                                                       + 0x152b9a
[0x7fcbda87ef94]                                                       + 0x152f94
[0x7fcbda88450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fcbda87eb9a]                                                       + 0x152b9a
[0x7fcbda87ef94]                                                       + 0x152f94
[0x7fcbda88450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fcbda87e193]                                                       + 0x152193
[0x7fcbda87f15c]                                                       + 0x15315c
[0x7fcbda88450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fcbda87eb9a]                                                       + 0x152b9a
[0x7fcbda87ef94]                                                       + 0x152f94
[0x7fcbda88450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fcbda87eb9a]                                                       + 0x152b9a
[0x7fcbda87f1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fcbda87f1df]    PyEval_EvalCode                                    + 0x1f
[0x7fcbda8b43d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fcbda8b456f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fcbda8ce8e8]    Py_Main                                            + 0xff8
[0x5651778b62b8]    main                                               + 0x178
[0x7fcbda5430b3]    __libc_start_main                                  + 0xf3
[0x5651778b636e]    _start                                             + 0x2e


======================================== pako/dist/pako_inflate.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fcfd7367a29]                                                       + 0x7c5a29
[0x7fcfd7528289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fcfd8445741]                                                       + 0x2d7741
[0x7fcfdcd4c9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fcfdcdd2084]                                                       + 0x153084
[0x7fcfdcdd750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fcfdcdd1b9a]                                                       + 0x152b9a
[0x7fcfdcdd21b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fcfdcd24f1e]                                                       + 0xa5f1e
[0x7fcfdccf5f2b]    PyObject_Call                                      + 0x4b
[0x7fcfdcdd7770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fcfdcdd1b9a]                                                       + 0x152b9a
[0x7fcfdcdd1f94]                                                       + 0x152f94
[0x7fcfdcdd750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fcfdcdd1b9a]                                                       + 0x152b9a
[0x7fcfdcdd1f94]                                                       + 0x152f94
[0x7fcfdcdd750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fcfdcdd1193]                                                       + 0x152193
[0x7fcfdcdd215c]                                                       + 0x15315c
[0x7fcfdcdd750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fcfdcdd1b9a]                                                       + 0x152b9a
[0x7fcfdcdd1f94]                                                       + 0x152f94
[0x7fcfdcdd750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fcfdcdd1b9a]                                                       + 0x152b9a
[0x7fcfdcdd21b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fcfdcdd21df]    PyEval_EvalCode                                    + 0x1f
[0x7fcfdce073d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fcfdce0756f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fcfdce218e8]    Py_Main                                            + 0xff8
[0x5560b6ca42b8]    main                                               + 0x178
[0x7fcfdca960b3]    __libc_start_main                                  + 0xf3
[0x5560b6ca436e]    _start                                             + 0x2e


======================================== pako/dist/pako_inflate.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f40e2c07a29]                                                       + 0x7c5a29
[0x7f40e2dc8289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f41671f2741]                                                       + 0x2d7741
[0x7f416baf99e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f416bb7f084]                                                       + 0x153084
[0x7f416bb8450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f416bb7eb9a]                                                       + 0x152b9a
[0x7f416bb7f1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f416bad1f1e]                                                       + 0xa5f1e
[0x7f416baa2f2b]    PyObject_Call                                      + 0x4b
[0x7f416bb84770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f416bb7eb9a]                                                       + 0x152b9a
[0x7f416bb7ef94]                                                       + 0x152f94
[0x7f416bb8450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f416bb7eb9a]                                                       + 0x152b9a
[0x7f416bb7ef94]                                                       + 0x152f94
[0x7f416bb8450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f416bb7e193]                                                       + 0x152193
[0x7f416bb7f15c]                                                       + 0x15315c
[0x7f416bb8450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f416bb7eb9a]                                                       + 0x152b9a
[0x7f416bb7ef94]                                                       + 0x152f94
[0x7f416bb8450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f416bb7eb9a]                                                       + 0x152b9a
[0x7f416bb7f1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f416bb7f1df]    PyEval_EvalCode                                    + 0x1f
[0x7f416bbb43d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f416bbb456f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f416bbce8e8]    Py_Main                                            + 0xff8
[0x55ed9241f2b8]    main                                               + 0x178
[0x7f416b8430b3]    __libc_start_main                                  + 0xf3
[0x55ed9241f36e]    _start                                             + 0x2e


======================================== pako/lib/zlib/deflate.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f73837d0a29]                                                       + 0x7c5a29
[0x7f7383991289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f7407dbb741]                                                       + 0x2d7741
[0x7f740c6c29e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f740c748084]                                                       + 0x153084
[0x7f740c74d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f740c747b9a]                                                       + 0x152b9a
[0x7f740c7481b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f740c69af1e]                                                       + 0xa5f1e
[0x7f740c66bf2b]    PyObject_Call                                      + 0x4b
[0x7f740c74d770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f740c747b9a]                                                       + 0x152b9a
[0x7f740c747f94]                                                       + 0x152f94
[0x7f740c74d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f740c747b9a]                                                       + 0x152b9a
[0x7f740c747f94]                                                       + 0x152f94
[0x7f740c74d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f740c747193]                                                       + 0x152193
[0x7f740c74815c]                                                       + 0x15315c
[0x7f740c74d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f740c747b9a]                                                       + 0x152b9a
[0x7f740c747f94]                                                       + 0x152f94
[0x7f740c74d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f740c747b9a]                                                       + 0x152b9a
[0x7f740c7481b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f740c7481df]    PyEval_EvalCode                                    + 0x1f
[0x7f740c77d3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f740c77d56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f740c7978e8]    Py_Main                                            + 0xff8
[0x55750a2332b8]    main                                               + 0x178
[0x7f740c40c0b3]    __libc_start_main                                  + 0xf3
[0x55750a23336e]    _start                                             + 0x2e


======================================== pako/lib/zlib/inflate.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f4887661a29]                                                       + 0x7c5a29
[0x7f4887822289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f490bc4c741]                                                       + 0x2d7741
[0x7f49105539e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f49105d9084]                                                       + 0x153084
[0x7f49105de50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f49105d8b9a]                                                       + 0x152b9a
[0x7f49105d91b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f491052bf1e]                                                       + 0xa5f1e
[0x7f49104fcf2b]    PyObject_Call                                      + 0x4b
[0x7f49105de770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f49105d8b9a]                                                       + 0x152b9a
[0x7f49105d8f94]                                                       + 0x152f94
[0x7f49105de50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f49105d8b9a]                                                       + 0x152b9a
[0x7f49105d8f94]                                                       + 0x152f94
[0x7f49105de50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f49105d8193]                                                       + 0x152193
[0x7f49105d915c]                                                       + 0x15315c
[0x7f49105de50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f49105d8b9a]                                                       + 0x152b9a
[0x7f49105d8f94]                                                       + 0x152f94
[0x7f49105de50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f49105d8b9a]                                                       + 0x152b9a
[0x7f49105d91b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f49105d91df]    PyEval_EvalCode                                    + 0x1f
[0x7f491060e3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f491060e56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f49106288e8]    Py_Main                                            + 0xff8
[0x555fe89522b8]    main                                               + 0x178
[0x7f491029d0b3]    __libc_start_main                                  + 0xf3
[0x555fe895236e]    _start                                             + 0x2e


======================================== parse5/lib/parser/index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f7d4600ea29]                                                       + 0x7c5a29
[0x7f7d461cf289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f7dca5f9741]                                                       + 0x2d7741
[0x7f7dcef009e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f7dcef86084]                                                       + 0x153084
[0x7f7dcef8b50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7dcef85b9a]                                                       + 0x152b9a
[0x7f7dcef861b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f7dceed8f1e]                                                       + 0xa5f1e
[0x7f7dceea9f2b]    PyObject_Call                                      + 0x4b
[0x7f7dcef8b770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f7dcef85b9a]                                                       + 0x152b9a
[0x7f7dcef85f94]                                                       + 0x152f94
[0x7f7dcef8b50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7dcef85b9a]                                                       + 0x152b9a
[0x7f7dcef85f94]                                                       + 0x152f94
[0x7f7dcef8b50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7dcef85193]                                                       + 0x152193
[0x7f7dcef8615c]                                                       + 0x15315c
[0x7f7dcef8b50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7dcef85b9a]                                                       + 0x152b9a
[0x7f7dcef85f94]                                                       + 0x152f94
[0x7f7dcef8b50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7dcef85b9a]                                                       + 0x152b9a
[0x7f7dcef861b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f7dcef861df]    PyEval_EvalCode                                    + 0x1f
[0x7f7dcefbb3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f7dcefbb56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f7dcefd58e8]    Py_Main                                            + 0xff8
[0x5635727e42b8]    main                                               + 0x178
[0x7f7dcec4a0b3]    __libc_start_main                                  + 0xf3
[0x5635727e436e]    _start                                             + 0x2e


======================================== parse5/lib/tokenizer/index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f7805736a29]                                                       + 0x7c5a29
[0x7f78058f7289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f7889d21741]                                                       + 0x2d7741
[0x7f788e6289e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f788e6ae084]                                                       + 0x153084
[0x7f788e6b350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f788e6adb9a]                                                       + 0x152b9a
[0x7f788e6ae1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f788e600f1e]                                                       + 0xa5f1e
[0x7f788e5d1f2b]    PyObject_Call                                      + 0x4b
[0x7f788e6b3770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f788e6adb9a]                                                       + 0x152b9a
[0x7f788e6adf94]                                                       + 0x152f94
[0x7f788e6b350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f788e6adb9a]                                                       + 0x152b9a
[0x7f788e6adf94]                                                       + 0x152f94
[0x7f788e6b350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f788e6ad193]                                                       + 0x152193
[0x7f788e6ae15c]                                                       + 0x15315c
[0x7f788e6b350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f788e6adb9a]                                                       + 0x152b9a
[0x7f788e6adf94]                                                       + 0x152f94
[0x7f788e6b350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f788e6adb9a]                                                       + 0x152b9a
[0x7f788e6ae1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f788e6ae1df]    PyEval_EvalCode                                    + 0x1f
[0x7f788e6e33d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f788e6e356f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f788e6fd8e8]    Py_Main                                            + 0xff8
[0x564b8521a2b8]    main                                               + 0x178
[0x7f788e3720b3]    __libc_start_main                                  + 0xf3
[0x564b8521a36e]    _start                                             + 0x2e


======================================== parse5/lib/tokenizer/named-entity-data.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== picomatch/lib/parse.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f9eb6a54a29]                                                       + 0x7c5a29
[0x7f9eb6c15289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f9f3b03f741]                                                       + 0x2d7741
[0x7f9f3f9469e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f9f3f9cc084]                                                       + 0x153084
[0x7f9f3f9d150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f9f3f9cbb9a]                                                       + 0x152b9a
[0x7f9f3f9cc1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f9f3f91ef1e]                                                       + 0xa5f1e
[0x7f9f3f8eff2b]    PyObject_Call                                      + 0x4b
[0x7f9f3f9d1770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f9f3f9cbb9a]                                                       + 0x152b9a
[0x7f9f3f9cbf94]                                                       + 0x152f94
[0x7f9f3f9d150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f9f3f9cbb9a]                                                       + 0x152b9a
[0x7f9f3f9cbf94]                                                       + 0x152f94
[0x7f9f3f9d150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f9f3f9cb193]                                                       + 0x152193
[0x7f9f3f9cc15c]                                                       + 0x15315c
[0x7f9f3f9d150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f9f3f9cbb9a]                                                       + 0x152b9a
[0x7f9f3f9cbf94]                                                       + 0x152f94
[0x7f9f3f9d150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f9f3f9cbb9a]                                                       + 0x152b9a
[0x7f9f3f9cc1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f9f3f9cc1df]    PyEval_EvalCode                                    + 0x1f
[0x7f9f3fa013d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f9f3fa0156f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f9f3fa1b8e8]    Py_Main                                            + 0xff8
[0x5558969e42b8]    main                                               + 0x178
[0x7f9f3f6900b3]    __libc_start_main                                  + 0xf3
[0x5558969e436e]    _start                                             + 0x2e


======================================== postcss/lib/lazy-result.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 2811 is out of bounds for axis 0 with size 2811

======================================== postcss-selector-parser/dist/__tests__/attributes.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f6e6c700a29]                                                       + 0x7c5a29
[0x7f6e6c8c1289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f6ef0ceb741]                                                       + 0x2d7741
[0x7f6ef55f29e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f6ef5678084]                                                       + 0x153084
[0x7f6ef567d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6ef5677b9a]                                                       + 0x152b9a
[0x7f6ef56781b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f6ef55caf1e]                                                       + 0xa5f1e
[0x7f6ef559bf2b]    PyObject_Call                                      + 0x4b
[0x7f6ef567d770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f6ef5677b9a]                                                       + 0x152b9a
[0x7f6ef5677f94]                                                       + 0x152f94
[0x7f6ef567d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6ef5677b9a]                                                       + 0x152b9a
[0x7f6ef5677f94]                                                       + 0x152f94
[0x7f6ef567d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6ef5677193]                                                       + 0x152193
[0x7f6ef567815c]                                                       + 0x15315c
[0x7f6ef567d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6ef5677b9a]                                                       + 0x152b9a
[0x7f6ef5677f94]                                                       + 0x152f94
[0x7f6ef567d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6ef5677b9a]                                                       + 0x152b9a
[0x7f6ef56781b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f6ef56781df]    PyEval_EvalCode                                    + 0x1f
[0x7f6ef56ad3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f6ef56ad56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f6ef56c78e8]    Py_Main                                            + 0xff8
[0x561a3a5562b8]    main                                               + 0x178
[0x7f6ef533c0b3]    __libc_start_main                                  + 0xf3
[0x561a3a55636e]    _start                                             + 0x2e


======================================== postcss-selector-parser/dist/__tests__/sourceIndex.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7feb8629ca29]                                                       + 0x7c5a29
[0x7feb8645d289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7feb8737a741]                                                       + 0x2d7741
[0x7feb8bc819e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7feb8bd07084]                                                       + 0x153084
[0x7feb8bd0c50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7feb8bd06b9a]                                                       + 0x152b9a
[0x7feb8bd071b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7feb8bc59f1e]                                                       + 0xa5f1e
[0x7feb8bc2af2b]    PyObject_Call                                      + 0x4b
[0x7feb8bd0c770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7feb8bd06b9a]                                                       + 0x152b9a
[0x7feb8bd06f94]                                                       + 0x152f94
[0x7feb8bd0c50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7feb8bd06b9a]                                                       + 0x152b9a
[0x7feb8bd06f94]                                                       + 0x152f94
[0x7feb8bd0c50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7feb8bd06193]                                                       + 0x152193
[0x7feb8bd0715c]                                                       + 0x15315c
[0x7feb8bd0c50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7feb8bd06b9a]                                                       + 0x152b9a
[0x7feb8bd06f94]                                                       + 0x152f94
[0x7feb8bd0c50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7feb8bd06b9a]                                                       + 0x152b9a
[0x7feb8bd071b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7feb8bd071df]    PyEval_EvalCode                                    + 0x1f
[0x7feb8bd3c3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7feb8bd3c56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7feb8bd568e8]    Py_Main                                            + 0xff8
[0x56275dcaf2b8]    main                                               + 0x178
[0x7feb8b9cb0b3]    __libc_start_main                                  + 0xf3
[0x56275dcaf36e]    _start                                             + 0x2e


======================================== postcss-selector-parser/dist/parser.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f421112fa29]                                                       + 0x7c5a29
[0x7f42112f0289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f429571a741]                                                       + 0x2d7741
[0x7f429a0219e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f429a0a7084]                                                       + 0x153084
[0x7f429a0ac50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f429a0a6b9a]                                                       + 0x152b9a
[0x7f429a0a71b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f4299ff9f1e]                                                       + 0xa5f1e
[0x7f4299fcaf2b]    PyObject_Call                                      + 0x4b
[0x7f429a0ac770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f429a0a6b9a]                                                       + 0x152b9a
[0x7f429a0a6f94]                                                       + 0x152f94
[0x7f429a0ac50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f429a0a6b9a]                                                       + 0x152b9a
[0x7f429a0a6f94]                                                       + 0x152f94
[0x7f429a0ac50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f429a0a6193]                                                       + 0x152193
[0x7f429a0a715c]                                                       + 0x15315c
[0x7f429a0ac50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f429a0a6b9a]                                                       + 0x152b9a
[0x7f429a0a6f94]                                                       + 0x152f94
[0x7f429a0ac50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f429a0a6b9a]                                                       + 0x152b9a
[0x7f429a0a71b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f429a0a71df]    PyEval_EvalCode                                    + 0x1f
[0x7f429a0dc3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f429a0dc56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f429a0f68e8]    Py_Main                                            + 0xff8
[0x5585c16232b8]    main                                               + 0x178
[0x7f4299d6b0b3]    __libc_start_main                                  + 0xf3
[0x5585c162336e]    _start                                             + 0x2e


======================================== prelude-ls/lib/List.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fa57d56ea29]                                                       + 0x7c5a29
[0x7fa57d72f289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fa601b59741]                                                       + 0x2d7741
[0x7fa6064609e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fa6064e6084]                                                       + 0x153084
[0x7fa6064eb50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa6064e5b9a]                                                       + 0x152b9a
[0x7fa6064e61b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fa606438f1e]                                                       + 0xa5f1e
[0x7fa606409f2b]    PyObject_Call                                      + 0x4b
[0x7fa6064eb770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fa6064e5b9a]                                                       + 0x152b9a
[0x7fa6064e5f94]                                                       + 0x152f94
[0x7fa6064eb50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa6064e5b9a]                                                       + 0x152b9a
[0x7fa6064e5f94]                                                       + 0x152f94
[0x7fa6064eb50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa6064e5193]                                                       + 0x152193
[0x7fa6064e615c]                                                       + 0x15315c
[0x7fa6064eb50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa6064e5b9a]                                                       + 0x152b9a
[0x7fa6064e5f94]                                                       + 0x152f94
[0x7fa6064eb50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa6064e5b9a]                                                       + 0x152b9a
[0x7fa6064e61b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fa6064e61df]    PyEval_EvalCode                                    + 0x1f
[0x7fa60651b3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fa60651b56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fa6065358e8]    Py_Main                                            + 0xff8
[0x55faf8e3c2b8]    main                                               + 0x178
[0x7fa6061aa0b3]    __libc_start_main                                  + 0xf3
[0x55faf8e3c36e]    _start                                             + 0x2e


======================================== prettier/bin-prettier.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== prettier/doc.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== prettier/index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== prettier/parser-angular.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== prettier/parser-babel.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== prettier/parser-espree.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== prettier/parser-flow.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== prettier/parser-glimmer.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== prettier/parser-graphql.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f96d9654a29]                                                       + 0x7c5a29
[0x7f96d9815289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f975dc3f741]                                                       + 0x2d7741
[0x7f97625469e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f97625cc084]                                                       + 0x153084
[0x7f97625d150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f97625cbb9a]                                                       + 0x152b9a
[0x7f97625cc1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f976251ef1e]                                                       + 0xa5f1e
[0x7f97624eff2b]    PyObject_Call                                      + 0x4b
[0x7f97625d1770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f97625cbb9a]                                                       + 0x152b9a
[0x7f97625cbf94]                                                       + 0x152f94
[0x7f97625d150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f97625cbb9a]                                                       + 0x152b9a
[0x7f97625cbf94]                                                       + 0x152f94
[0x7f97625d150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f97625cb193]                                                       + 0x152193
[0x7f97625cc15c]                                                       + 0x15315c
[0x7f97625d150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f97625cbb9a]                                                       + 0x152b9a
[0x7f97625cbf94]                                                       + 0x152f94
[0x7f97625d150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f97625cbb9a]                                                       + 0x152b9a
[0x7f97625cc1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f97625cc1df]    PyEval_EvalCode                                    + 0x1f
[0x7f97626013d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f976260156f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f976261b8e8]    Py_Main                                            + 0xff8
[0x55bc1e6fe2b8]    main                                               + 0x178
[0x7f97622900b3]    __libc_start_main                                  + 0xf3
[0x55bc1e6fe36e]    _start                                             + 0x2e


======================================== prettier/parser-html.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== prettier/parser-markdown.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== prettier/parser-meriyah.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== prettier/parser-postcss.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== prettier/parser-typescript.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== prettier/parser-yaml.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== prettier/standalone.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== prettier/third-party.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== prompts/dist/elements/date.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 1604 is out of bounds for axis 0 with size 1604

======================================== prompts/dist/elements/multiselect.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 1677 is out of bounds for axis 0 with size 1677

======================================== prompts/dist/elements/number.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 1651 is out of bounds for axis 0 with size 1651

======================================== prompts/dist/elements/text.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 1612 is out of bounds for axis 0 with size 1612

======================================== prompts/lib/elements/date.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 1345 is out of bounds for axis 0 with size 1345

======================================== prompts/lib/elements/multiselect.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 1645 is out of bounds for axis 0 with size 1645

======================================== prompts/lib/elements/number.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 1408 is out of bounds for axis 0 with size 1408

======================================== prompts/lib/elements/text.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 1369 is out of bounds for axis 0 with size 1369

======================================== prop-types/prop-types.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fb74f27ba29]                                                       + 0x7c5a29
[0x7fb74f43c289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fb7d3866741]                                                       + 0x2d7741
[0x7fb7d816d9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fb7d81f3084]                                                       + 0x153084
[0x7fb7d81f850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb7d81f2b9a]                                                       + 0x152b9a
[0x7fb7d81f31b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fb7d8145f1e]                                                       + 0xa5f1e
[0x7fb7d8116f2b]    PyObject_Call                                      + 0x4b
[0x7fb7d81f8770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fb7d81f2b9a]                                                       + 0x152b9a
[0x7fb7d81f2f94]                                                       + 0x152f94
[0x7fb7d81f850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb7d81f2b9a]                                                       + 0x152b9a
[0x7fb7d81f2f94]                                                       + 0x152f94
[0x7fb7d81f850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb7d81f2193]                                                       + 0x152193
[0x7fb7d81f315c]                                                       + 0x15315c
[0x7fb7d81f850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb7d81f2b9a]                                                       + 0x152b9a
[0x7fb7d81f2f94]                                                       + 0x152f94
[0x7fb7d81f850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb7d81f2b9a]                                                       + 0x152b9a
[0x7fb7d81f31b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fb7d81f31df]    PyEval_EvalCode                                    + 0x1f
[0x7fb7d82283d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fb7d822856f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fb7d82428e8]    Py_Main                                            + 0xff8
[0x564a547602b8]    main                                               + 0x178
[0x7fb7d7eb70b3]    __libc_start_main                                  + 0xf3
[0x564a5476036e]    _start                                             + 0x2e


======================================== psl/dist/psl.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== psl/dist/psl.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== q/q.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fc89649da29]                                                       + 0x7c5a29
[0x7fc89665e289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fc91aa88741]                                                       + 0x2d7741
[0x7fc91f38f9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fc91f415084]                                                       + 0x153084
[0x7fc91f41a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc91f414b9a]                                                       + 0x152b9a
[0x7fc91f4151b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fc91f367f1e]                                                       + 0xa5f1e
[0x7fc91f338f2b]    PyObject_Call                                      + 0x4b
[0x7fc91f41a770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fc91f414b9a]                                                       + 0x152b9a
[0x7fc91f414f94]                                                       + 0x152f94
[0x7fc91f41a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc91f414b9a]                                                       + 0x152b9a
[0x7fc91f414f94]                                                       + 0x152f94
[0x7fc91f41a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc91f414193]                                                       + 0x152193
[0x7fc91f41515c]                                                       + 0x15315c
[0x7fc91f41a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc91f414b9a]                                                       + 0x152b9a
[0x7fc91f414f94]                                                       + 0x152f94
[0x7fc91f41a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc91f414b9a]                                                       + 0x152b9a
[0x7fc91f4151b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fc91f4151df]    PyEval_EvalCode                                    + 0x1f
[0x7fc91f44a3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fc91f44a56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fc91f4648e8]    Py_Main                                            + 0xff8
[0x557b9af4f2b8]    main                                               + 0x178
[0x7fc91f0d90b3]    __libc_start_main                                  + 0xf3
[0x557b9af4f36e]    _start                                             + 0x2e


======================================== qs/dist/qs.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f1de8fb5a29]                                                       + 0x7c5a29
[0x7f1de9176289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f1e6d5a0741]                                                       + 0x2d7741
[0x7f1e71ea79e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f1e71f2d084]                                                       + 0x153084
[0x7f1e71f3250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f1e71f2cb9a]                                                       + 0x152b9a
[0x7f1e71f2d1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f1e71e7ff1e]                                                       + 0xa5f1e
[0x7f1e71e50f2b]    PyObject_Call                                      + 0x4b
[0x7f1e71f32770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f1e71f2cb9a]                                                       + 0x152b9a
[0x7f1e71f2cf94]                                                       + 0x152f94
[0x7f1e71f3250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f1e71f2cb9a]                                                       + 0x152b9a
[0x7f1e71f2cf94]                                                       + 0x152f94
[0x7f1e71f3250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f1e71f2c193]                                                       + 0x152193
[0x7f1e71f2d15c]                                                       + 0x15315c
[0x7f1e71f3250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f1e71f2cb9a]                                                       + 0x152b9a
[0x7f1e71f2cf94]                                                       + 0x152f94
[0x7f1e71f3250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f1e71f2cb9a]                                                       + 0x152b9a
[0x7f1e71f2d1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f1e71f2d1df]    PyEval_EvalCode                                    + 0x1f
[0x7f1e71f623d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f1e71f6256f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f1e71f7c8e8]    Py_Main                                            + 0xff8
[0x5636168f82b8]    main                                               + 0x178
[0x7f1e71bf10b3]    __libc_start_main                                  + 0xf3
[0x5636168f836e]    _start                                             + 0x2e


======================================== qs/test/parse.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fbf71c3da29]                                                       + 0x7c5a29
[0x7fbf71dfe289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fbff6228741]                                                       + 0x2d7741
[0x7fbffab2f9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fbffabb5084]                                                       + 0x153084
[0x7fbffabba50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fbffabb4b9a]                                                       + 0x152b9a
[0x7fbffabb51b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fbffab07f1e]                                                       + 0xa5f1e
[0x7fbffaad8f2b]    PyObject_Call                                      + 0x4b
[0x7fbffabba770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fbffabb4b9a]                                                       + 0x152b9a
[0x7fbffabb4f94]                                                       + 0x152f94
[0x7fbffabba50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fbffabb4b9a]                                                       + 0x152b9a
[0x7fbffabb4f94]                                                       + 0x152f94
[0x7fbffabba50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fbffabb4193]                                                       + 0x152193
[0x7fbffabb515c]                                                       + 0x15315c
[0x7fbffabba50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fbffabb4b9a]                                                       + 0x152b9a
[0x7fbffabb4f94]                                                       + 0x152f94
[0x7fbffabba50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fbffabb4b9a]                                                       + 0x152b9a
[0x7fbffabb51b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fbffabb51df]    PyEval_EvalCode                                    + 0x1f
[0x7fbffabea3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fbffabea56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fbffac048e8]    Py_Main                                            + 0xff8
[0x564286db12b8]    main                                               + 0x178
[0x7fbffa8790b3]    __libc_start_main                                  + 0xf3
[0x564286db136e]    _start                                             + 0x2e


======================================== qs/test/stringify.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f45eb4e1a29]                                                       + 0x7c5a29
[0x7f45eb6a2289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f466facc741]                                                       + 0x2d7741
[0x7f46743d39e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f4674459084]                                                       + 0x153084
[0x7f467445e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4674458b9a]                                                       + 0x152b9a
[0x7f46744591b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f46743abf1e]                                                       + 0xa5f1e
[0x7f467437cf2b]    PyObject_Call                                      + 0x4b
[0x7f467445e770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f4674458b9a]                                                       + 0x152b9a
[0x7f4674458f94]                                                       + 0x152f94
[0x7f467445e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4674458b9a]                                                       + 0x152b9a
[0x7f4674458f94]                                                       + 0x152f94
[0x7f467445e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4674458193]                                                       + 0x152193
[0x7f467445915c]                                                       + 0x15315c
[0x7f467445e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4674458b9a]                                                       + 0x152b9a
[0x7f4674458f94]                                                       + 0x152f94
[0x7f467445e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4674458b9a]                                                       + 0x152b9a
[0x7f46744591b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f46744591df]    PyEval_EvalCode                                    + 0x1f
[0x7f467448e3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f467448e56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f46744a88e8]    Py_Main                                            + 0xff8
[0x5559010332b8]    main                                               + 0x178
[0x7f467411d0b3]    __libc_start_main                                  + 0xf3
[0x55590103336e]    _start                                             + 0x2e


======================================== react/cjs/react.development.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f5874a5aa29]                                                       + 0x7c5a29
[0x7f5874c1b289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f58f9045741]                                                       + 0x2d7741
[0x7f58fd94c9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f58fd9d2084]                                                       + 0x153084
[0x7f58fd9d750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f58fd9d1b9a]                                                       + 0x152b9a
[0x7f58fd9d21b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f58fd924f1e]                                                       + 0xa5f1e
[0x7f58fd8f5f2b]    PyObject_Call                                      + 0x4b
[0x7f58fd9d7770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f58fd9d1b9a]                                                       + 0x152b9a
[0x7f58fd9d1f94]                                                       + 0x152f94
[0x7f58fd9d750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f58fd9d1b9a]                                                       + 0x152b9a
[0x7f58fd9d1f94]                                                       + 0x152f94
[0x7f58fd9d750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f58fd9d1193]                                                       + 0x152193
[0x7f58fd9d215c]                                                       + 0x15315c
[0x7f58fd9d750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f58fd9d1b9a]                                                       + 0x152b9a
[0x7f58fd9d1f94]                                                       + 0x152f94
[0x7f58fd9d750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f58fd9d1b9a]                                                       + 0x152b9a
[0x7f58fd9d21b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f58fd9d21df]    PyEval_EvalCode                                    + 0x1f
[0x7f58fda073d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f58fda0756f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f58fda218e8]    Py_Main                                            + 0xff8
[0x55a639c232b8]    main                                               + 0x178
[0x7f58fd6960b3]    __libc_start_main                                  + 0xf3
[0x55a639c2336e]    _start                                             + 0x2e


======================================== react/umd/react.development.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f48cd0d1a29]                                                       + 0x7c5a29
[0x7f48cd292289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f49516bc741]                                                       + 0x2d7741
[0x7f4955fc39e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f4956049084]                                                       + 0x153084
[0x7f495604e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4956048b9a]                                                       + 0x152b9a
[0x7f49560491b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f4955f9bf1e]                                                       + 0xa5f1e
[0x7f4955f6cf2b]    PyObject_Call                                      + 0x4b
[0x7f495604e770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f4956048b9a]                                                       + 0x152b9a
[0x7f4956048f94]                                                       + 0x152f94
[0x7f495604e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4956048b9a]                                                       + 0x152b9a
[0x7f4956048f94]                                                       + 0x152f94
[0x7f495604e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4956048193]                                                       + 0x152193
[0x7f495604915c]                                                       + 0x15315c
[0x7f495604e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4956048b9a]                                                       + 0x152b9a
[0x7f4956048f94]                                                       + 0x152f94
[0x7f495604e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4956048b9a]                                                       + 0x152b9a
[0x7f49560491b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f49560491df]    PyEval_EvalCode                                    + 0x1f
[0x7f495607e3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f495607e56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f49560988e8]    Py_Main                                            + 0xff8
[0x5570fa28d2b8]    main                                               + 0x178
[0x7f4955d0d0b3]    __libc_start_main                                  + 0xf3
[0x5570fa28d36e]    _start                                             + 0x2e


======================================== react/umd/react.profiling.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f4c905a7a29]                                                       + 0x7c5a29
[0x7f4c90768289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f4d14b92741]                                                       + 0x2d7741
[0x7f4d194999e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f4d1951f084]                                                       + 0x153084
[0x7f4d1952450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4d1951eb9a]                                                       + 0x152b9a
[0x7f4d1951f1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f4d19471f1e]                                                       + 0xa5f1e
[0x7f4d19442f2b]    PyObject_Call                                      + 0x4b
[0x7f4d19524770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f4d1951eb9a]                                                       + 0x152b9a
[0x7f4d1951ef94]                                                       + 0x152f94
[0x7f4d1952450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4d1951eb9a]                                                       + 0x152b9a
[0x7f4d1951ef94]                                                       + 0x152f94
[0x7f4d1952450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4d1951e193]                                                       + 0x152193
[0x7f4d1951f15c]                                                       + 0x15315c
[0x7f4d1952450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4d1951eb9a]                                                       + 0x152b9a
[0x7f4d1951ef94]                                                       + 0x152f94
[0x7f4d1952450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4d1951eb9a]                                                       + 0x152b9a
[0x7f4d1951f1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f4d1951f1df]    PyEval_EvalCode                                    + 0x1f
[0x7f4d195543d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f4d1955456f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f4d1956e8e8]    Py_Main                                            + 0xff8
[0x5604948952b8]    main                                               + 0x178
[0x7f4d191e30b3]    __libc_start_main                                  + 0xf3
[0x56049489536e]    _start                                             + 0x2e


======================================== react-dom/cjs/react-dom-server.browser.development.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fdea7294a29]                                                       + 0x7c5a29
[0x7fdea7455289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fdf2b87f741]                                                       + 0x2d7741
[0x7fdf301869e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fdf3020c084]                                                       + 0x153084
[0x7fdf3021150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fdf3020bb9a]                                                       + 0x152b9a
[0x7fdf3020c1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fdf3015ef1e]                                                       + 0xa5f1e
[0x7fdf3012ff2b]    PyObject_Call                                      + 0x4b
[0x7fdf30211770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fdf3020bb9a]                                                       + 0x152b9a
[0x7fdf3020bf94]                                                       + 0x152f94
[0x7fdf3021150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fdf3020bb9a]                                                       + 0x152b9a
[0x7fdf3020bf94]                                                       + 0x152f94
[0x7fdf3021150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fdf3020b193]                                                       + 0x152193
[0x7fdf3020c15c]                                                       + 0x15315c
[0x7fdf3021150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fdf3020bb9a]                                                       + 0x152b9a
[0x7fdf3020bf94]                                                       + 0x152f94
[0x7fdf3021150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fdf3020bb9a]                                                       + 0x152b9a
[0x7fdf3020c1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fdf3020c1df]    PyEval_EvalCode                                    + 0x1f
[0x7fdf302413d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fdf3024156f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fdf3025b8e8]    Py_Main                                            + 0xff8
[0x563a2936d2b8]    main                                               + 0x178
[0x7fdf2fed00b3]    __libc_start_main                                  + 0xf3
[0x563a2936d36e]    _start                                             + 0x2e


======================================== react-dom/cjs/react-dom-server.browser.production.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f570857da29]                                                       + 0x7c5a29
[0x7f570873e289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f578cb68741]                                                       + 0x2d7741
[0x7f579146f9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f57914f5084]                                                       + 0x153084
[0x7f57914fa50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f57914f4b9a]                                                       + 0x152b9a
[0x7f57914f51b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f5791447f1e]                                                       + 0xa5f1e
[0x7f5791418f2b]    PyObject_Call                                      + 0x4b
[0x7f57914fa770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f57914f4b9a]                                                       + 0x152b9a
[0x7f57914f4f94]                                                       + 0x152f94
[0x7f57914fa50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f57914f4b9a]                                                       + 0x152b9a
[0x7f57914f4f94]                                                       + 0x152f94
[0x7f57914fa50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f57914f4193]                                                       + 0x152193
[0x7f57914f515c]                                                       + 0x15315c
[0x7f57914fa50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f57914f4b9a]                                                       + 0x152b9a
[0x7f57914f4f94]                                                       + 0x152f94
[0x7f57914fa50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f57914f4b9a]                                                       + 0x152b9a
[0x7f57914f51b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f57914f51df]    PyEval_EvalCode                                    + 0x1f
[0x7f579152a3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f579152a56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f57915448e8]    Py_Main                                            + 0xff8
[0x55bd43ee22b8]    main                                               + 0x178
[0x7f57911b90b3]    __libc_start_main                                  + 0xf3
[0x55bd43ee236e]    _start                                             + 0x2e


======================================== react-dom/cjs/react-dom-server.node.development.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f5eaa08ea29]                                                       + 0x7c5a29
[0x7f5eaa24f289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f5f2e679741]                                                       + 0x2d7741
[0x7f5f32f809e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f5f33006084]                                                       + 0x153084
[0x7f5f3300b50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f5f33005b9a]                                                       + 0x152b9a
[0x7f5f330061b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f5f32f58f1e]                                                       + 0xa5f1e
[0x7f5f32f29f2b]    PyObject_Call                                      + 0x4b
[0x7f5f3300b770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f5f33005b9a]                                                       + 0x152b9a
[0x7f5f33005f94]                                                       + 0x152f94
[0x7f5f3300b50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f5f33005b9a]                                                       + 0x152b9a
[0x7f5f33005f94]                                                       + 0x152f94
[0x7f5f3300b50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f5f33005193]                                                       + 0x152193
[0x7f5f3300615c]                                                       + 0x15315c
[0x7f5f3300b50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f5f33005b9a]                                                       + 0x152b9a
[0x7f5f33005f94]                                                       + 0x152f94
[0x7f5f3300b50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f5f33005b9a]                                                       + 0x152b9a
[0x7f5f330061b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f5f330061df]    PyEval_EvalCode                                    + 0x1f
[0x7f5f3303b3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f5f3303b56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f5f330558e8]    Py_Main                                            + 0xff8
[0x55c1416da2b8]    main                                               + 0x178
[0x7f5f32cca0b3]    __libc_start_main                                  + 0xf3
[0x55c1416da36e]    _start                                             + 0x2e


======================================== react-dom/cjs/react-dom-server.node.production.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f510d549a29]                                                       + 0x7c5a29
[0x7f510d70a289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f5191b34741]                                                       + 0x2d7741
[0x7f519643b9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f51964c1084]                                                       + 0x153084
[0x7f51964c650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f51964c0b9a]                                                       + 0x152b9a
[0x7f51964c11b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f5196413f1e]                                                       + 0xa5f1e
[0x7f51963e4f2b]    PyObject_Call                                      + 0x4b
[0x7f51964c6770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f51964c0b9a]                                                       + 0x152b9a
[0x7f51964c0f94]                                                       + 0x152f94
[0x7f51964c650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f51964c0b9a]                                                       + 0x152b9a
[0x7f51964c0f94]                                                       + 0x152f94
[0x7f51964c650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f51964c0193]                                                       + 0x152193
[0x7f51964c115c]                                                       + 0x15315c
[0x7f51964c650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f51964c0b9a]                                                       + 0x152b9a
[0x7f51964c0f94]                                                       + 0x152f94
[0x7f51964c650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f51964c0b9a]                                                       + 0x152b9a
[0x7f51964c11b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f51964c11df]    PyEval_EvalCode                                    + 0x1f
[0x7f51964f63d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f51964f656f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f51965108e8]    Py_Main                                            + 0xff8
[0x5595c13f92b8]    main                                               + 0x178
[0x7f51961850b3]    __libc_start_main                                  + 0xf3
[0x5595c13f936e]    _start                                             + 0x2e


======================================== react-dom/cjs/react-dom-test-utils.development.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fdf75427a29]                                                       + 0x7c5a29
[0x7fdf755e8289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fdf76505741]                                                       + 0x2d7741
[0x7fdf7ae0c9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fdf7ae92084]                                                       + 0x153084
[0x7fdf7ae9750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fdf7ae91b9a]                                                       + 0x152b9a
[0x7fdf7ae921b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fdf7ade4f1e]                                                       + 0xa5f1e
[0x7fdf7adb5f2b]    PyObject_Call                                      + 0x4b
[0x7fdf7ae97770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fdf7ae91b9a]                                                       + 0x152b9a
[0x7fdf7ae91f94]                                                       + 0x152f94
[0x7fdf7ae9750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fdf7ae91b9a]                                                       + 0x152b9a
[0x7fdf7ae91f94]                                                       + 0x152f94
[0x7fdf7ae9750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fdf7ae91193]                                                       + 0x152193
[0x7fdf7ae9215c]                                                       + 0x15315c
[0x7fdf7ae9750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fdf7ae91b9a]                                                       + 0x152b9a
[0x7fdf7ae91f94]                                                       + 0x152f94
[0x7fdf7ae9750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fdf7ae91b9a]                                                       + 0x152b9a
[0x7fdf7ae921b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fdf7ae921df]    PyEval_EvalCode                                    + 0x1f
[0x7fdf7aec73d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fdf7aec756f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fdf7aee18e8]    Py_Main                                            + 0xff8
[0x55caf0dcd2b8]    main                                               + 0x178
[0x7fdf7ab560b3]    __libc_start_main                                  + 0xf3
[0x55caf0dcd36e]    _start                                             + 0x2e


======================================== react-dom/cjs/react-dom.development.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== react-dom/cjs/react-dom.production.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== react-dom/cjs/react-dom.profiling.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== react-dom/umd/react-dom-server.browser.development.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f6d5878aa29]                                                       + 0x7c5a29
[0x7f6d5894b289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f6ddcd75741]                                                       + 0x2d7741
[0x7f6de167c9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f6de1702084]                                                       + 0x153084
[0x7f6de170750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6de1701b9a]                                                       + 0x152b9a
[0x7f6de17021b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f6de1654f1e]                                                       + 0xa5f1e
[0x7f6de1625f2b]    PyObject_Call                                      + 0x4b
[0x7f6de1707770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f6de1701b9a]                                                       + 0x152b9a
[0x7f6de1701f94]                                                       + 0x152f94
[0x7f6de170750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6de1701b9a]                                                       + 0x152b9a
[0x7f6de1701f94]                                                       + 0x152f94
[0x7f6de170750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6de1701193]                                                       + 0x152193
[0x7f6de170215c]                                                       + 0x15315c
[0x7f6de170750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6de1701b9a]                                                       + 0x152b9a
[0x7f6de1701f94]                                                       + 0x152f94
[0x7f6de170750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6de1701b9a]                                                       + 0x152b9a
[0x7f6de17021b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f6de17021df]    PyEval_EvalCode                                    + 0x1f
[0x7f6de17373d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f6de173756f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f6de17518e8]    Py_Main                                            + 0xff8
[0x557386d662b8]    main                                               + 0x178
[0x7f6de13c60b3]    __libc_start_main                                  + 0xf3
[0x557386d6636e]    _start                                             + 0x2e


======================================== react-dom/umd/react-dom-server.browser.production.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f19c198da29]                                                       + 0x7c5a29
[0x7f19c1b4e289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f1a45f78741]                                                       + 0x2d7741
[0x7f1a4a87f9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f1a4a905084]                                                       + 0x153084
[0x7f1a4a90a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f1a4a904b9a]                                                       + 0x152b9a
[0x7f1a4a9051b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f1a4a857f1e]                                                       + 0xa5f1e
[0x7f1a4a828f2b]    PyObject_Call                                      + 0x4b
[0x7f1a4a90a770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f1a4a904b9a]                                                       + 0x152b9a
[0x7f1a4a904f94]                                                       + 0x152f94
[0x7f1a4a90a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f1a4a904b9a]                                                       + 0x152b9a
[0x7f1a4a904f94]                                                       + 0x152f94
[0x7f1a4a90a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f1a4a904193]                                                       + 0x152193
[0x7f1a4a90515c]                                                       + 0x15315c
[0x7f1a4a90a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f1a4a904b9a]                                                       + 0x152b9a
[0x7f1a4a904f94]                                                       + 0x152f94
[0x7f1a4a90a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f1a4a904b9a]                                                       + 0x152b9a
[0x7f1a4a9051b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f1a4a9051df]    PyEval_EvalCode                                    + 0x1f
[0x7f1a4a93a3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f1a4a93a56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f1a4a9548e8]    Py_Main                                            + 0xff8
[0x561b6216a2b8]    main                                               + 0x178
[0x7f1a4a5c90b3]    __libc_start_main                                  + 0xf3
[0x561b6216a36e]    _start                                             + 0x2e


======================================== react-dom/umd/react-dom-test-utils.development.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fca7b640a29]                                                       + 0x7c5a29
[0x7fca7b801289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fca7c71e741]                                                       + 0x2d7741
[0x7fca810259e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fca810ab084]                                                       + 0x153084
[0x7fca810b050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fca810aab9a]                                                       + 0x152b9a
[0x7fca810ab1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fca80ffdf1e]                                                       + 0xa5f1e
[0x7fca80fcef2b]    PyObject_Call                                      + 0x4b
[0x7fca810b0770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fca810aab9a]                                                       + 0x152b9a
[0x7fca810aaf94]                                                       + 0x152f94
[0x7fca810b050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fca810aab9a]                                                       + 0x152b9a
[0x7fca810aaf94]                                                       + 0x152f94
[0x7fca810b050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fca810aa193]                                                       + 0x152193
[0x7fca810ab15c]                                                       + 0x15315c
[0x7fca810b050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fca810aab9a]                                                       + 0x152b9a
[0x7fca810aaf94]                                                       + 0x152f94
[0x7fca810b050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fca810aab9a]                                                       + 0x152b9a
[0x7fca810ab1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fca810ab1df]    PyEval_EvalCode                                    + 0x1f
[0x7fca810e03d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fca810e056f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fca810fa8e8]    Py_Main                                            + 0xff8
[0x55849ac462b8]    main                                               + 0x178
[0x7fca80d6f0b3]    __libc_start_main                                  + 0xf3
[0x55849ac4636e]    _start                                             + 0x2e


======================================== react-dom/umd/react-dom-test-utils.production.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7ff092686a29]                                                       + 0x7c5a29
[0x7ff092847289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7ff116c71741]                                                       + 0x2d7741
[0x7ff11b5789e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7ff11b5fe084]                                                       + 0x153084
[0x7ff11b60350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff11b5fdb9a]                                                       + 0x152b9a
[0x7ff11b5fe1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7ff11b550f1e]                                                       + 0xa5f1e
[0x7ff11b521f2b]    PyObject_Call                                      + 0x4b
[0x7ff11b603770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7ff11b5fdb9a]                                                       + 0x152b9a
[0x7ff11b5fdf94]                                                       + 0x152f94
[0x7ff11b60350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff11b5fdb9a]                                                       + 0x152b9a
[0x7ff11b5fdf94]                                                       + 0x152f94
[0x7ff11b60350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff11b5fd193]                                                       + 0x152193
[0x7ff11b5fe15c]                                                       + 0x15315c
[0x7ff11b60350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff11b5fdb9a]                                                       + 0x152b9a
[0x7ff11b5fdf94]                                                       + 0x152f94
[0x7ff11b60350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff11b5fdb9a]                                                       + 0x152b9a
[0x7ff11b5fe1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7ff11b5fe1df]    PyEval_EvalCode                                    + 0x1f
[0x7ff11b6333d5]    PyRun_FileExFlags                                  + 0xb5
[0x7ff11b63356f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7ff11b64d8e8]    Py_Main                                            + 0xff8
[0x55baf27052b8]    main                                               + 0x178
[0x7ff11b2c20b3]    __libc_start_main                                  + 0xf3
[0x55baf270536e]    _start                                             + 0x2e


======================================== react-dom/umd/react-dom.development.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== react-dom/umd/react-dom.production.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== react-dom/umd/react-dom.profiling.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== readable-stream/lib/_stream_readable.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f1d2f3a4a29]                                                       + 0x7c5a29
[0x7f1d2f565289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f1db398f741]                                                       + 0x2d7741
[0x7f1db82969e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f1db831c084]                                                       + 0x153084
[0x7f1db832150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f1db831bb9a]                                                       + 0x152b9a
[0x7f1db831c1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f1db826ef1e]                                                       + 0xa5f1e
[0x7f1db823ff2b]    PyObject_Call                                      + 0x4b
[0x7f1db8321770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f1db831bb9a]                                                       + 0x152b9a
[0x7f1db831bf94]                                                       + 0x152f94
[0x7f1db832150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f1db831bb9a]                                                       + 0x152b9a
[0x7f1db831bf94]                                                       + 0x152f94
[0x7f1db832150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f1db831b193]                                                       + 0x152193
[0x7f1db831c15c]                                                       + 0x15315c
[0x7f1db832150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f1db831bb9a]                                                       + 0x152b9a
[0x7f1db831bf94]                                                       + 0x152f94
[0x7f1db832150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f1db831bb9a]                                                       + 0x152b9a
[0x7f1db831c1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f1db831c1df]    PyEval_EvalCode                                    + 0x1f
[0x7f1db83513d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f1db835156f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f1db836b8e8]    Py_Main                                            + 0xff8
[0x55f5011be2b8]    main                                               + 0x178
[0x7f1db7fe00b3]    __libc_start_main                                  + 0xf3
[0x55f5011be36e]    _start                                             + 0x2e


======================================== regenerate/regenerate.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f66add67a29]                                                       + 0x7c5a29
[0x7f66adf28289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f6732352741]                                                       + 0x2d7741
[0x7f6736c599e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f6736cdf084]                                                       + 0x153084
[0x7f6736ce450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6736cdeb9a]                                                       + 0x152b9a
[0x7f6736cdf1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f6736c31f1e]                                                       + 0xa5f1e
[0x7f6736c02f2b]    PyObject_Call                                      + 0x4b
[0x7f6736ce4770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f6736cdeb9a]                                                       + 0x152b9a
[0x7f6736cdef94]                                                       + 0x152f94
[0x7f6736ce450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6736cdeb9a]                                                       + 0x152b9a
[0x7f6736cdef94]                                                       + 0x152f94
[0x7f6736ce450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6736cde193]                                                       + 0x152193
[0x7f6736cdf15c]                                                       + 0x15315c
[0x7f6736ce450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6736cdeb9a]                                                       + 0x152b9a
[0x7f6736cdef94]                                                       + 0x152f94
[0x7f6736ce450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6736cdeb9a]                                                       + 0x152b9a
[0x7f6736cdf1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f6736cdf1df]    PyEval_EvalCode                                    + 0x1f
[0x7f6736d143d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f6736d1456f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f6736d2e8e8]    Py_Main                                            + 0xff8
[0x55e899a092b8]    main                                               + 0x178
[0x7f67369a30b3]    __libc_start_main                                  + 0xf3
[0x55e899a0936e]    _start                                             + 0x2e


======================================== regenerate-unicode-properties/Binary_Property/Grapheme_Base.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f8f90314a29]                                                       + 0x7c5a29
[0x7f8f904d5289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f90148ff741]                                                       + 0x2d7741
[0x7f90192069e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f901928c084]                                                       + 0x153084
[0x7f901929150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f901928bb9a]                                                       + 0x152b9a
[0x7f901928c1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f90191def1e]                                                       + 0xa5f1e
[0x7f90191aff2b]    PyObject_Call                                      + 0x4b
[0x7f9019291770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f901928bb9a]                                                       + 0x152b9a
[0x7f901928bf94]                                                       + 0x152f94
[0x7f901929150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f901928bb9a]                                                       + 0x152b9a
[0x7f901928bf94]                                                       + 0x152f94
[0x7f901929150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f901928b193]                                                       + 0x152193
[0x7f901928c15c]                                                       + 0x15315c
[0x7f901929150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f901928bb9a]                                                       + 0x152b9a
[0x7f901928bf94]                                                       + 0x152f94
[0x7f901929150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f901928bb9a]                                                       + 0x152b9a
[0x7f901928c1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f901928c1df]    PyEval_EvalCode                                    + 0x1f
[0x7f90192c13d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f90192c156f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f90192db8e8]    Py_Main                                            + 0xff8
[0x561c6444c2b8]    main                                               + 0x178
[0x7f9018f500b3]    __libc_start_main                                  + 0xf3
[0x561c6444c36e]    _start                                             + 0x2e


======================================== regenerator-transform/lib/emit.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fa260285a29]                                                       + 0x7c5a29
[0x7fa260446289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fa2e4870741]                                                       + 0x2d7741
[0x7fa2e91779e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fa2e91fd084]                                                       + 0x153084
[0x7fa2e920250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa2e91fcb9a]                                                       + 0x152b9a
[0x7fa2e91fd1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fa2e914ff1e]                                                       + 0xa5f1e
[0x7fa2e9120f2b]    PyObject_Call                                      + 0x4b
[0x7fa2e9202770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fa2e91fcb9a]                                                       + 0x152b9a
[0x7fa2e91fcf94]                                                       + 0x152f94
[0x7fa2e920250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa2e91fcb9a]                                                       + 0x152b9a
[0x7fa2e91fcf94]                                                       + 0x152f94
[0x7fa2e920250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa2e91fc193]                                                       + 0x152193
[0x7fa2e91fd15c]                                                       + 0x15315c
[0x7fa2e920250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa2e91fcb9a]                                                       + 0x152b9a
[0x7fa2e91fcf94]                                                       + 0x152f94
[0x7fa2e920250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa2e91fcb9a]                                                       + 0x152b9a
[0x7fa2e91fd1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fa2e91fd1df]    PyEval_EvalCode                                    + 0x1f
[0x7fa2e92323d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fa2e923256f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fa2e924c8e8]    Py_Main                                            + 0xff8
[0x5649c9c7b2b8]    main                                               + 0x178
[0x7fa2e8ec10b3]    __libc_start_main                                  + 0xf3
[0x5649c9c7b36e]    _start                                             + 0x2e


======================================== regenerator-transform/src/emit.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f84629b9a29]                                                       + 0x7c5a29
[0x7f8462b7a289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f8463a97741]                                                       + 0x2d7741
[0x7f846839e9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f8468424084]                                                       + 0x153084
[0x7f846842950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f8468423b9a]                                                       + 0x152b9a
[0x7f84684241b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f8468376f1e]                                                       + 0xa5f1e
[0x7f8468347f2b]    PyObject_Call                                      + 0x4b
[0x7f8468429770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f8468423b9a]                                                       + 0x152b9a
[0x7f8468423f94]                                                       + 0x152f94
[0x7f846842950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f8468423b9a]                                                       + 0x152b9a
[0x7f8468423f94]                                                       + 0x152f94
[0x7f846842950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f8468423193]                                                       + 0x152193
[0x7f846842415c]                                                       + 0x15315c
[0x7f846842950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f8468423b9a]                                                       + 0x152b9a
[0x7f8468423f94]                                                       + 0x152f94
[0x7f846842950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f8468423b9a]                                                       + 0x152b9a
[0x7f84684241b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f84684241df]    PyEval_EvalCode                                    + 0x1f
[0x7f84684593d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f846845956f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f84684738e8]    Py_Main                                            + 0xff8
[0x564cdb2772b8]    main                                               + 0x178
[0x7f84680e80b3]    __libc_start_main                                  + 0xf3
[0x564cdb27736e]    _start                                             + 0x2e


======================================== regexp-tree/dist/parser/generated/regexp-tree.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f38d34b6a29]                                                       + 0x7c5a29
[0x7f38d3677289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f38d4594741]                                                       + 0x2d7741
[0x7f38d8e9b9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f38d8f21084]                                                       + 0x153084
[0x7f38d8f2650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f38d8f20b9a]                                                       + 0x152b9a
[0x7f38d8f211b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f38d8e73f1e]                                                       + 0xa5f1e
[0x7f38d8e44f2b]    PyObject_Call                                      + 0x4b
[0x7f38d8f26770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f38d8f20b9a]                                                       + 0x152b9a
[0x7f38d8f20f94]                                                       + 0x152f94
[0x7f38d8f2650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f38d8f20b9a]                                                       + 0x152b9a
[0x7f38d8f20f94]                                                       + 0x152f94
[0x7f38d8f2650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f38d8f20193]                                                       + 0x152193
[0x7f38d8f2115c]                                                       + 0x15315c
[0x7f38d8f2650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f38d8f20b9a]                                                       + 0x152b9a
[0x7f38d8f20f94]                                                       + 0x152f94
[0x7f38d8f2650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f38d8f20b9a]                                                       + 0x152b9a
[0x7f38d8f211b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f38d8f211df]    PyEval_EvalCode                                    + 0x1f
[0x7f38d8f563d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f38d8f5656f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f38d8f708e8]    Py_Main                                            + 0xff8
[0x55d3e05172b8]    main                                               + 0x178
[0x7f38d8be50b3]    __libc_start_main                                  + 0xf3
[0x55d3e051736e]    _start                                             + 0x2e


======================================== regexpp/index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fa7afac8a29]                                                       + 0x7c5a29
[0x7fa7afc89289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fa8340b3741]                                                       + 0x2d7741
[0x7fa8389ba9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fa838a40084]                                                       + 0x153084
[0x7fa838a4550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa838a3fb9a]                                                       + 0x152b9a
[0x7fa838a401b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fa838992f1e]                                                       + 0xa5f1e
[0x7fa838963f2b]    PyObject_Call                                      + 0x4b
[0x7fa838a45770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fa838a3fb9a]                                                       + 0x152b9a
[0x7fa838a3ff94]                                                       + 0x152f94
[0x7fa838a4550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa838a3fb9a]                                                       + 0x152b9a
[0x7fa838a3ff94]                                                       + 0x152f94
[0x7fa838a4550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa838a3f193]                                                       + 0x152193
[0x7fa838a4015c]                                                       + 0x15315c
[0x7fa838a4550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa838a3fb9a]                                                       + 0x152b9a
[0x7fa838a3ff94]                                                       + 0x152f94
[0x7fa838a4550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa838a3fb9a]                                                       + 0x152b9a
[0x7fa838a401b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fa838a401df]    PyEval_EvalCode                                    + 0x1f
[0x7fa838a753d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fa838a7556f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fa838a8f8e8]    Py_Main                                            + 0xff8
[0x557954ef42b8]    main                                               + 0x178
[0x7fa8387040b3]    __libc_start_main                                  + 0xf3
[0x557954ef436e]    _start                                             + 0x2e


======================================== regexpu-core/rewrite-pattern.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 1717 is out of bounds for axis 0 with size 1717

======================================== regjsparser/parser.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fdb7ca27a29]                                                       + 0x7c5a29
[0x7fdb7cbe8289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fdc01012741]                                                       + 0x2d7741
[0x7fdc059199e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fdc0599f084]                                                       + 0x153084
[0x7fdc059a450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fdc0599eb9a]                                                       + 0x152b9a
[0x7fdc0599f1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fdc058f1f1e]                                                       + 0xa5f1e
[0x7fdc058c2f2b]    PyObject_Call                                      + 0x4b
[0x7fdc059a4770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fdc0599eb9a]                                                       + 0x152b9a
[0x7fdc0599ef94]                                                       + 0x152f94
[0x7fdc059a450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fdc0599eb9a]                                                       + 0x152b9a
[0x7fdc0599ef94]                                                       + 0x152f94
[0x7fdc059a450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fdc0599e193]                                                       + 0x152193
[0x7fdc0599f15c]                                                       + 0x15315c
[0x7fdc059a450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fdc0599eb9a]                                                       + 0x152b9a
[0x7fdc0599ef94]                                                       + 0x152f94
[0x7fdc059a450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fdc0599eb9a]                                                       + 0x152b9a
[0x7fdc0599f1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fdc0599f1df]    PyEval_EvalCode                                    + 0x1f
[0x7fdc059d43d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fdc059d456f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fdc059ee8e8]    Py_Main                                            + 0xff8
[0x55ed1f7df2b8]    main                                               + 0x178
[0x7fdc056630b3]    __libc_start_main                                  + 0xf3
[0x55ed1f7df36e]    _start                                             + 0x2e


======================================== request/request.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fb861500a29]                                                       + 0x7c5a29
[0x7fb8616c1289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fb8e5aeb741]                                                       + 0x2d7741
[0x7fb8ea3f29e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fb8ea478084]                                                       + 0x153084
[0x7fb8ea47d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb8ea477b9a]                                                       + 0x152b9a
[0x7fb8ea4781b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fb8ea3caf1e]                                                       + 0xa5f1e
[0x7fb8ea39bf2b]    PyObject_Call                                      + 0x4b
[0x7fb8ea47d770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fb8ea477b9a]                                                       + 0x152b9a
[0x7fb8ea477f94]                                                       + 0x152f94
[0x7fb8ea47d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb8ea477b9a]                                                       + 0x152b9a
[0x7fb8ea477f94]                                                       + 0x152f94
[0x7fb8ea47d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb8ea477193]                                                       + 0x152193
[0x7fb8ea47815c]                                                       + 0x15315c
[0x7fb8ea47d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb8ea477b9a]                                                       + 0x152b9a
[0x7fb8ea477f94]                                                       + 0x152f94
[0x7fb8ea47d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb8ea477b9a]                                                       + 0x152b9a
[0x7fb8ea4781b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fb8ea4781df]    PyEval_EvalCode                                    + 0x1f
[0x7fb8ea4ad3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fb8ea4ad56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fb8ea4c78e8]    Py_Main                                            + 0xff8
[0x5580fc5792b8]    main                                               + 0x178
[0x7fb8ea13c0b3]    __libc_start_main                                  + 0xf3
[0x5580fc57936e]    _start                                             + 0x2e


======================================== resolve/test/pathfilter/deep_ref/main.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f947af68a29]                                                       + 0x7c5a29
[0x7f947b0eed45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f94ff3b73a8]                                                       + 0x13b3a8
[0x7f94ff3b9065]                                                       + 0x13d065
[0x7f9503e5abd9]    PyCFunction_Call                                   + 0xc9
[0x7f9503ee76e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f9503edfb9a]                                                       + 0x152b9a
[0x7f9503ee8aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f9503e04151]    _PyObject_FastCallDict                             + 0x131
[0x7f9503e042a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f9503e03f2b]    PyObject_Call                                      + 0x4b
[0x7f9503e75d7f]                                                       + 0xe8d7f
[0x7f9503e71149]                                                       + 0xe4149
[0x7f9503e040ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f9503edfd78]                                                       + 0x152d78
[0x7f9503ee550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f9503edfb9a]                                                       + 0x152b9a
[0x7f9503ee01b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f9503e32f1e]                                                       + 0xa5f1e
[0x7f9503e03f2b]    PyObject_Call                                      + 0x4b
[0x7f9503ee5770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f9503edfb9a]                                                       + 0x152b9a
[0x7f9503edff94]                                                       + 0x152f94
[0x7f9503ee5867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f9503edfb9a]                                                       + 0x152b9a
[0x7f9503ee01b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f9503e32f1e]                                                       + 0xa5f1e
[0x7f9503e03f2b]    PyObject_Call                                      + 0x4b
[0x7f9503ee5770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f9503edfb9a]                                                       + 0x152b9a
[0x7f9503edff94]                                                       + 0x152f94
[0x7f9503ee5867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f9503edfb9a]                                                       + 0x152b9a
[0x7f9503edff94]                                                       + 0x152f94
[0x7f9503ee550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f9503edfb9a]                                                       + 0x152b9a
[0x7f9503ee01b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f9503e32f1e]                                                       + 0xa5f1e
[0x7f9503e03f2b]    PyObject_Call                                      + 0x4b
[0x7f9503ee5770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f9503edfb9a]                                                       + 0x152b9a
[0x7f9503edff94]                                                       + 0x152f94
[0x7f9503ee550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f9503edfb9a]                                                       + 0x152b9a
[0x7f9503edff94]                                                       + 0x152f94
[0x7f9503ee550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f9503edfb9a]                                                       + 0x152b9a
[0x7f9503edff94]                                                       + 0x152f94
[0x7f9503ee550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f9503edfb9a]                                                       + 0x152b9a
[0x7f9503ee01b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f9503ee01df]    PyEval_EvalCode                                    + 0x1f
[0x7f9503f153d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f9503f1556f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f9503f2f8e8]    Py_Main                                            + 0xff8
[0x5618efb512b8]    main                                               + 0x178
[0x7f9503ba40b3]    __libc_start_main                                  + 0xf3
[0x5618efb5136e]    _start                                             + 0x2e


======================================== resolve/test/resolver/baz/doom.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7fd8fc0f9a29]                                                       + 0x7c5a29
[0x7fd8fc27fd45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7fd90d95e3a8]                                                       + 0x13b3a8
[0x7fd90d960065]                                                       + 0x13d065
[0x7fd912401bd9]    PyCFunction_Call                                   + 0xc9
[0x7fd91248e6e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7fd912486b9a]                                                       + 0x152b9a
[0x7fd91248faa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7fd9123ab151]    _PyObject_FastCallDict                             + 0x131
[0x7fd9123ab2a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7fd9123aaf2b]    PyObject_Call                                      + 0x4b
[0x7fd91241cd7f]                                                       + 0xe8d7f
[0x7fd912418149]                                                       + 0xe4149
[0x7fd9123ab0ad]    _PyObject_FastCallDict                             + 0x8d
[0x7fd912486d78]                                                       + 0x152d78
[0x7fd91248c50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fd912486b9a]                                                       + 0x152b9a
[0x7fd9124871b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fd9123d9f1e]                                                       + 0xa5f1e
[0x7fd9123aaf2b]    PyObject_Call                                      + 0x4b
[0x7fd91248c770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fd912486b9a]                                                       + 0x152b9a
[0x7fd912486f94]                                                       + 0x152f94
[0x7fd91248c867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7fd912486b9a]                                                       + 0x152b9a
[0x7fd9124871b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fd9123d9f1e]                                                       + 0xa5f1e
[0x7fd9123aaf2b]    PyObject_Call                                      + 0x4b
[0x7fd91248c770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fd912486b9a]                                                       + 0x152b9a
[0x7fd912486f94]                                                       + 0x152f94
[0x7fd91248c867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7fd912486b9a]                                                       + 0x152b9a
[0x7fd912486f94]                                                       + 0x152f94
[0x7fd91248c50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fd912486b9a]                                                       + 0x152b9a
[0x7fd9124871b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fd9123d9f1e]                                                       + 0xa5f1e
[0x7fd9123aaf2b]    PyObject_Call                                      + 0x4b
[0x7fd91248c770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fd912486b9a]                                                       + 0x152b9a
[0x7fd912486f94]                                                       + 0x152f94
[0x7fd91248c50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fd912486b9a]                                                       + 0x152b9a
[0x7fd912486f94]                                                       + 0x152f94
[0x7fd91248c50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fd912486b9a]                                                       + 0x152b9a
[0x7fd912486f94]                                                       + 0x152f94
[0x7fd91248c50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fd912486b9a]                                                       + 0x152b9a
[0x7fd9124871b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fd9124871df]    PyEval_EvalCode                                    + 0x1f
[0x7fd9124bc3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fd9124bc56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fd9124d68e8]    Py_Main                                            + 0xff8
[0x557a0b46b2b8]    main                                               + 0x178
[0x7fd91214b0b3]    __libc_start_main                                  + 0xf3
[0x557a0b46b36e]    _start                                             + 0x2e


======================================== resolve/test/resolver/browser_field/a.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7fa6f1668a29]                                                       + 0x7c5a29
[0x7fa6f17eed45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7fa775ab73a8]                                                       + 0x13b3a8
[0x7fa775ab9065]                                                       + 0x13d065
[0x7fa77a55abd9]    PyCFunction_Call                                   + 0xc9
[0x7fa77a5e76e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7fa77a5dfb9a]                                                       + 0x152b9a
[0x7fa77a5e8aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7fa77a504151]    _PyObject_FastCallDict                             + 0x131
[0x7fa77a5042a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7fa77a503f2b]    PyObject_Call                                      + 0x4b
[0x7fa77a575d7f]                                                       + 0xe8d7f
[0x7fa77a571149]                                                       + 0xe4149
[0x7fa77a5040ad]    _PyObject_FastCallDict                             + 0x8d
[0x7fa77a5dfd78]                                                       + 0x152d78
[0x7fa77a5e550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa77a5dfb9a]                                                       + 0x152b9a
[0x7fa77a5e01b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fa77a532f1e]                                                       + 0xa5f1e
[0x7fa77a503f2b]    PyObject_Call                                      + 0x4b
[0x7fa77a5e5770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fa77a5dfb9a]                                                       + 0x152b9a
[0x7fa77a5dff94]                                                       + 0x152f94
[0x7fa77a5e5867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7fa77a5dfb9a]                                                       + 0x152b9a
[0x7fa77a5e01b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fa77a532f1e]                                                       + 0xa5f1e
[0x7fa77a503f2b]    PyObject_Call                                      + 0x4b
[0x7fa77a5e5770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fa77a5dfb9a]                                                       + 0x152b9a
[0x7fa77a5dff94]                                                       + 0x152f94
[0x7fa77a5e5867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7fa77a5dfb9a]                                                       + 0x152b9a
[0x7fa77a5dff94]                                                       + 0x152f94
[0x7fa77a5e550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa77a5dfb9a]                                                       + 0x152b9a
[0x7fa77a5e01b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fa77a532f1e]                                                       + 0xa5f1e
[0x7fa77a503f2b]    PyObject_Call                                      + 0x4b
[0x7fa77a5e5770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fa77a5dfb9a]                                                       + 0x152b9a
[0x7fa77a5dff94]                                                       + 0x152f94
[0x7fa77a5e550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa77a5dfb9a]                                                       + 0x152b9a
[0x7fa77a5dff94]                                                       + 0x152f94
[0x7fa77a5e550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa77a5dfb9a]                                                       + 0x152b9a
[0x7fa77a5dff94]                                                       + 0x152f94
[0x7fa77a5e550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa77a5dfb9a]                                                       + 0x152b9a
[0x7fa77a5e01b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fa77a5e01df]    PyEval_EvalCode                                    + 0x1f
[0x7fa77a6153d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fa77a61556f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fa77a62f8e8]    Py_Main                                            + 0xff8
[0x55fc07dc32b8]    main                                               + 0x178
[0x7fa77a2a40b3]    __libc_start_main                                  + 0xf3
[0x55fc07dc336e]    _start                                             + 0x2e


======================================== resolve/test/resolver/browser_field/b.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f6d0e07ea29]                                                       + 0x7c5a29
[0x7f6d0e204d45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f6d924cd3a8]                                                       + 0x13b3a8
[0x7f6d924cf065]                                                       + 0x13d065
[0x7f6d96f70bd9]    PyCFunction_Call                                   + 0xc9
[0x7f6d96ffd6e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f6d96ff5b9a]                                                       + 0x152b9a
[0x7f6d96ffeaa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f6d96f1a151]    _PyObject_FastCallDict                             + 0x131
[0x7f6d96f1a2a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f6d96f19f2b]    PyObject_Call                                      + 0x4b
[0x7f6d96f8bd7f]                                                       + 0xe8d7f
[0x7f6d96f87149]                                                       + 0xe4149
[0x7f6d96f1a0ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f6d96ff5d78]                                                       + 0x152d78
[0x7f6d96ffb50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6d96ff5b9a]                                                       + 0x152b9a
[0x7f6d96ff61b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f6d96f48f1e]                                                       + 0xa5f1e
[0x7f6d96f19f2b]    PyObject_Call                                      + 0x4b
[0x7f6d96ffb770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f6d96ff5b9a]                                                       + 0x152b9a
[0x7f6d96ff5f94]                                                       + 0x152f94
[0x7f6d96ffb867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f6d96ff5b9a]                                                       + 0x152b9a
[0x7f6d96ff61b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f6d96f48f1e]                                                       + 0xa5f1e
[0x7f6d96f19f2b]    PyObject_Call                                      + 0x4b
[0x7f6d96ffb770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f6d96ff5b9a]                                                       + 0x152b9a
[0x7f6d96ff5f94]                                                       + 0x152f94
[0x7f6d96ffb867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f6d96ff5b9a]                                                       + 0x152b9a
[0x7f6d96ff5f94]                                                       + 0x152f94
[0x7f6d96ffb50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6d96ff5b9a]                                                       + 0x152b9a
[0x7f6d96ff61b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f6d96f48f1e]                                                       + 0xa5f1e
[0x7f6d96f19f2b]    PyObject_Call                                      + 0x4b
[0x7f6d96ffb770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f6d96ff5b9a]                                                       + 0x152b9a
[0x7f6d96ff5f94]                                                       + 0x152f94
[0x7f6d96ffb50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6d96ff5b9a]                                                       + 0x152b9a
[0x7f6d96ff5f94]                                                       + 0x152f94
[0x7f6d96ffb50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6d96ff5b9a]                                                       + 0x152b9a
[0x7f6d96ff5f94]                                                       + 0x152f94
[0x7f6d96ffb50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6d96ff5b9a]                                                       + 0x152b9a
[0x7f6d96ff61b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f6d96ff61df]    PyEval_EvalCode                                    + 0x1f
[0x7f6d9702b3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f6d9702b56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f6d970458e8]    Py_Main                                            + 0xff8
[0x5592cfa6e2b8]    main                                               + 0x178
[0x7f6d96cba0b3]    __libc_start_main                                  + 0xf3
[0x5592cfa6e36e]    _start                                             + 0x2e


======================================== resolve/test/resolver/mug.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f11af385a29]                                                       + 0x7c5a29
[0x7f11af50bd45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f11b02c73a8]                                                       + 0x13b3a8
[0x7f11b02c9065]                                                       + 0x13d065
[0x7f11b4d6abd9]    PyCFunction_Call                                   + 0xc9
[0x7f11b4df76e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f11b4defb9a]                                                       + 0x152b9a
[0x7f11b4df8aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f11b4d14151]    _PyObject_FastCallDict                             + 0x131
[0x7f11b4d142a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f11b4d13f2b]    PyObject_Call                                      + 0x4b
[0x7f11b4d85d7f]                                                       + 0xe8d7f
[0x7f11b4d81149]                                                       + 0xe4149
[0x7f11b4d140ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f11b4defd78]                                                       + 0x152d78
[0x7f11b4df550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f11b4defb9a]                                                       + 0x152b9a
[0x7f11b4df01b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f11b4d42f1e]                                                       + 0xa5f1e
[0x7f11b4d13f2b]    PyObject_Call                                      + 0x4b
[0x7f11b4df5770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f11b4defb9a]                                                       + 0x152b9a
[0x7f11b4deff94]                                                       + 0x152f94
[0x7f11b4df5867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f11b4defb9a]                                                       + 0x152b9a
[0x7f11b4df01b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f11b4d42f1e]                                                       + 0xa5f1e
[0x7f11b4d13f2b]    PyObject_Call                                      + 0x4b
[0x7f11b4df5770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f11b4defb9a]                                                       + 0x152b9a
[0x7f11b4deff94]                                                       + 0x152f94
[0x7f11b4df5867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f11b4defb9a]                                                       + 0x152b9a
[0x7f11b4deff94]                                                       + 0x152f94
[0x7f11b4df550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f11b4defb9a]                                                       + 0x152b9a
[0x7f11b4df01b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f11b4d42f1e]                                                       + 0xa5f1e
[0x7f11b4d13f2b]    PyObject_Call                                      + 0x4b
[0x7f11b4df5770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f11b4defb9a]                                                       + 0x152b9a
[0x7f11b4deff94]                                                       + 0x152f94
[0x7f11b4df550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f11b4defb9a]                                                       + 0x152b9a
[0x7f11b4deff94]                                                       + 0x152f94
[0x7f11b4df550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f11b4defb9a]                                                       + 0x152b9a
[0x7f11b4deff94]                                                       + 0x152f94
[0x7f11b4df550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f11b4defb9a]                                                       + 0x152b9a
[0x7f11b4df01b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f11b4df01df]    PyEval_EvalCode                                    + 0x1f
[0x7f11b4e253d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f11b4e2556f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f11b4e3f8e8]    Py_Main                                            + 0xff8
[0x564d8c29d2b8]    main                                               + 0x178
[0x7f11b4ab40b3]    __libc_start_main                                  + 0xf3
[0x564d8c29d36e]    _start                                             + 0x2e


======================================== resolve/test/resolver/multirepo/packages/package-b/index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f6627d33a29]                                                       + 0x7c5a29
[0x7f6627eb9d45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f66ac1823a8]                                                       + 0x13b3a8
[0x7f66ac184065]                                                       + 0x13d065
[0x7f66b0c25bd9]    PyCFunction_Call                                   + 0xc9
[0x7f66b0cb26e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f66b0caab9a]                                                       + 0x152b9a
[0x7f66b0cb3aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f66b0bcf151]    _PyObject_FastCallDict                             + 0x131
[0x7f66b0bcf2a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f66b0bcef2b]    PyObject_Call                                      + 0x4b
[0x7f66b0c40d7f]                                                       + 0xe8d7f
[0x7f66b0c3c149]                                                       + 0xe4149
[0x7f66b0bcf0ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f66b0caad78]                                                       + 0x152d78
[0x7f66b0cb050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f66b0caab9a]                                                       + 0x152b9a
[0x7f66b0cab1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f66b0bfdf1e]                                                       + 0xa5f1e
[0x7f66b0bcef2b]    PyObject_Call                                      + 0x4b
[0x7f66b0cb0770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f66b0caab9a]                                                       + 0x152b9a
[0x7f66b0caaf94]                                                       + 0x152f94
[0x7f66b0cb0867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f66b0caab9a]                                                       + 0x152b9a
[0x7f66b0cab1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f66b0bfdf1e]                                                       + 0xa5f1e
[0x7f66b0bcef2b]    PyObject_Call                                      + 0x4b
[0x7f66b0cb0770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f66b0caab9a]                                                       + 0x152b9a
[0x7f66b0caaf94]                                                       + 0x152f94
[0x7f66b0cb0867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f66b0caab9a]                                                       + 0x152b9a
[0x7f66b0caaf94]                                                       + 0x152f94
[0x7f66b0cb050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f66b0caab9a]                                                       + 0x152b9a
[0x7f66b0cab1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f66b0bfdf1e]                                                       + 0xa5f1e
[0x7f66b0bcef2b]    PyObject_Call                                      + 0x4b
[0x7f66b0cb0770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f66b0caab9a]                                                       + 0x152b9a
[0x7f66b0caaf94]                                                       + 0x152f94
[0x7f66b0cb050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f66b0caab9a]                                                       + 0x152b9a
[0x7f66b0caaf94]                                                       + 0x152f94
[0x7f66b0cb050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f66b0caab9a]                                                       + 0x152b9a
[0x7f66b0caaf94]                                                       + 0x152f94
[0x7f66b0cb050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f66b0caab9a]                                                       + 0x152b9a
[0x7f66b0cab1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f66b0cab1df]    PyEval_EvalCode                                    + 0x1f
[0x7f66b0ce03d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f66b0ce056f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f66b0cfa8e8]    Py_Main                                            + 0xff8
[0x56367ecd02b8]    main                                               + 0x178
[0x7f66b096f0b3]    __libc_start_main                                  + 0xf3
[0x56367ecd036e]    _start                                             + 0x2e


======================================== resolve/test/resolver/other_path/lib/other-lib.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7fca285f1a29]                                                       + 0x7c5a29
[0x7fca28777d45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7fcaaca403a8]                                                       + 0x13b3a8
[0x7fcaaca42065]                                                       + 0x13d065
[0x7fcab14e3bd9]    PyCFunction_Call                                   + 0xc9
[0x7fcab15706e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7fcab1568b9a]                                                       + 0x152b9a
[0x7fcab1571aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7fcab148d151]    _PyObject_FastCallDict                             + 0x131
[0x7fcab148d2a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7fcab148cf2b]    PyObject_Call                                      + 0x4b
[0x7fcab14fed7f]                                                       + 0xe8d7f
[0x7fcab14fa149]                                                       + 0xe4149
[0x7fcab148d0ad]    _PyObject_FastCallDict                             + 0x8d
[0x7fcab1568d78]                                                       + 0x152d78
[0x7fcab156e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fcab1568b9a]                                                       + 0x152b9a
[0x7fcab15691b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fcab14bbf1e]                                                       + 0xa5f1e
[0x7fcab148cf2b]    PyObject_Call                                      + 0x4b
[0x7fcab156e770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fcab1568b9a]                                                       + 0x152b9a
[0x7fcab1568f94]                                                       + 0x152f94
[0x7fcab156e867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7fcab1568b9a]                                                       + 0x152b9a
[0x7fcab15691b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fcab14bbf1e]                                                       + 0xa5f1e
[0x7fcab148cf2b]    PyObject_Call                                      + 0x4b
[0x7fcab156e770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fcab1568b9a]                                                       + 0x152b9a
[0x7fcab1568f94]                                                       + 0x152f94
[0x7fcab156e867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7fcab1568b9a]                                                       + 0x152b9a
[0x7fcab1568f94]                                                       + 0x152f94
[0x7fcab156e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fcab1568b9a]                                                       + 0x152b9a
[0x7fcab15691b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fcab14bbf1e]                                                       + 0xa5f1e
[0x7fcab148cf2b]    PyObject_Call                                      + 0x4b
[0x7fcab156e770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fcab1568b9a]                                                       + 0x152b9a
[0x7fcab1568f94]                                                       + 0x152f94
[0x7fcab156e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fcab1568b9a]                                                       + 0x152b9a
[0x7fcab1568f94]                                                       + 0x152f94
[0x7fcab156e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fcab1568b9a]                                                       + 0x152b9a
[0x7fcab1568f94]                                                       + 0x152f94
[0x7fcab156e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fcab1568b9a]                                                       + 0x152b9a
[0x7fcab15691b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fcab15691df]    PyEval_EvalCode                                    + 0x1f
[0x7fcab159e3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fcab159e56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fcab15b88e8]    Py_Main                                            + 0xff8
[0x558a4a56a2b8]    main                                               + 0x178
[0x7fcab122d0b3]    __libc_start_main                                  + 0xf3
[0x558a4a56a36e]    _start                                             + 0x2e


======================================== resolve/test/resolver/other_path/root.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f569b781a29]                                                       + 0x7c5a29
[0x7f569b907d45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f571fbd03a8]                                                       + 0x13b3a8
[0x7f571fbd2065]                                                       + 0x13d065
[0x7f5724673bd9]    PyCFunction_Call                                   + 0xc9
[0x7f57247006e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f57246f8b9a]                                                       + 0x152b9a
[0x7f5724701aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f572461d151]    _PyObject_FastCallDict                             + 0x131
[0x7f572461d2a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f572461cf2b]    PyObject_Call                                      + 0x4b
[0x7f572468ed7f]                                                       + 0xe8d7f
[0x7f572468a149]                                                       + 0xe4149
[0x7f572461d0ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f57246f8d78]                                                       + 0x152d78
[0x7f57246fe50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f57246f8b9a]                                                       + 0x152b9a
[0x7f57246f91b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f572464bf1e]                                                       + 0xa5f1e
[0x7f572461cf2b]    PyObject_Call                                      + 0x4b
[0x7f57246fe770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f57246f8b9a]                                                       + 0x152b9a
[0x7f57246f8f94]                                                       + 0x152f94
[0x7f57246fe867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f57246f8b9a]                                                       + 0x152b9a
[0x7f57246f91b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f572464bf1e]                                                       + 0xa5f1e
[0x7f572461cf2b]    PyObject_Call                                      + 0x4b
[0x7f57246fe770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f57246f8b9a]                                                       + 0x152b9a
[0x7f57246f8f94]                                                       + 0x152f94
[0x7f57246fe867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f57246f8b9a]                                                       + 0x152b9a
[0x7f57246f8f94]                                                       + 0x152f94
[0x7f57246fe50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f57246f8b9a]                                                       + 0x152b9a
[0x7f57246f91b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f572464bf1e]                                                       + 0xa5f1e
[0x7f572461cf2b]    PyObject_Call                                      + 0x4b
[0x7f57246fe770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f57246f8b9a]                                                       + 0x152b9a
[0x7f57246f8f94]                                                       + 0x152f94
[0x7f57246fe50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f57246f8b9a]                                                       + 0x152b9a
[0x7f57246f8f94]                                                       + 0x152f94
[0x7f57246fe50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f57246f8b9a]                                                       + 0x152b9a
[0x7f57246f8f94]                                                       + 0x152f94
[0x7f57246fe50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f57246f8b9a]                                                       + 0x152b9a
[0x7f57246f91b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f57246f91df]    PyEval_EvalCode                                    + 0x1f
[0x7f572472e3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f572472e56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f57247488e8]    Py_Main                                            + 0xff8
[0x55c8933772b8]    main                                               + 0x178
[0x7f57243bd0b3]    __libc_start_main                                  + 0xf3
[0x55c89337736e]    _start                                             + 0x2e


======================================== resolve/test/resolver/symlinked/_/node_modules/foo.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f2b52960a29]                                                       + 0x7c5a29
[0x7f2b52ae6d45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f2bd6daf3a8]                                                       + 0x13b3a8
[0x7f2bd6db1065]                                                       + 0x13d065
[0x7f2bdb852bd9]    PyCFunction_Call                                   + 0xc9
[0x7f2bdb8df6e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f2bdb8d7b9a]                                                       + 0x152b9a
[0x7f2bdb8e0aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f2bdb7fc151]    _PyObject_FastCallDict                             + 0x131
[0x7f2bdb7fc2a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f2bdb7fbf2b]    PyObject_Call                                      + 0x4b
[0x7f2bdb86dd7f]                                                       + 0xe8d7f
[0x7f2bdb869149]                                                       + 0xe4149
[0x7f2bdb7fc0ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f2bdb8d7d78]                                                       + 0x152d78
[0x7f2bdb8dd50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f2bdb8d7b9a]                                                       + 0x152b9a
[0x7f2bdb8d81b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f2bdb82af1e]                                                       + 0xa5f1e
[0x7f2bdb7fbf2b]    PyObject_Call                                      + 0x4b
[0x7f2bdb8dd770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f2bdb8d7b9a]                                                       + 0x152b9a
[0x7f2bdb8d7f94]                                                       + 0x152f94
[0x7f2bdb8dd867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f2bdb8d7b9a]                                                       + 0x152b9a
[0x7f2bdb8d81b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f2bdb82af1e]                                                       + 0xa5f1e
[0x7f2bdb7fbf2b]    PyObject_Call                                      + 0x4b
[0x7f2bdb8dd770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f2bdb8d7b9a]                                                       + 0x152b9a
[0x7f2bdb8d7f94]                                                       + 0x152f94
[0x7f2bdb8dd867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f2bdb8d7b9a]                                                       + 0x152b9a
[0x7f2bdb8d7f94]                                                       + 0x152f94
[0x7f2bdb8dd50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f2bdb8d7b9a]                                                       + 0x152b9a
[0x7f2bdb8d81b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f2bdb82af1e]                                                       + 0xa5f1e
[0x7f2bdb7fbf2b]    PyObject_Call                                      + 0x4b
[0x7f2bdb8dd770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f2bdb8d7b9a]                                                       + 0x152b9a
[0x7f2bdb8d7f94]                                                       + 0x152f94
[0x7f2bdb8dd50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f2bdb8d7b9a]                                                       + 0x152b9a
[0x7f2bdb8d7f94]                                                       + 0x152f94
[0x7f2bdb8dd50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f2bdb8d7b9a]                                                       + 0x152b9a
[0x7f2bdb8d7f94]                                                       + 0x152f94
[0x7f2bdb8dd50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f2bdb8d7b9a]                                                       + 0x152b9a
[0x7f2bdb8d81b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f2bdb8d81df]    PyEval_EvalCode                                    + 0x1f
[0x7f2bdb90d3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f2bdb90d56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f2bdb9278e8]    Py_Main                                            + 0xff8
[0x55e6b730e2b8]    main                                               + 0x178
[0x7f2bdb59c0b3]    __libc_start_main                                  + 0xf3
[0x55e6b730e36e]    _start                                             + 0x2e


======================================== resolve/test/shadowed_core/node_modules/util/index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f1202205a29]                                                       + 0x7c5a29
[0x7f120238bd45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f12866543a8]                                                       + 0x13b3a8
[0x7f1286656065]                                                       + 0x13d065
[0x7f128b0f7bd9]    PyCFunction_Call                                   + 0xc9
[0x7f128b1846e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f128b17cb9a]                                                       + 0x152b9a
[0x7f128b185aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f128b0a1151]    _PyObject_FastCallDict                             + 0x131
[0x7f128b0a12a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f128b0a0f2b]    PyObject_Call                                      + 0x4b
[0x7f128b112d7f]                                                       + 0xe8d7f
[0x7f128b10e149]                                                       + 0xe4149
[0x7f128b0a10ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f128b17cd78]                                                       + 0x152d78
[0x7f128b18250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f128b17cb9a]                                                       + 0x152b9a
[0x7f128b17d1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f128b0cff1e]                                                       + 0xa5f1e
[0x7f128b0a0f2b]    PyObject_Call                                      + 0x4b
[0x7f128b182770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f128b17cb9a]                                                       + 0x152b9a
[0x7f128b17cf94]                                                       + 0x152f94
[0x7f128b182867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f128b17cb9a]                                                       + 0x152b9a
[0x7f128b17d1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f128b0cff1e]                                                       + 0xa5f1e
[0x7f128b0a0f2b]    PyObject_Call                                      + 0x4b
[0x7f128b182770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f128b17cb9a]                                                       + 0x152b9a
[0x7f128b17cf94]                                                       + 0x152f94
[0x7f128b182867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f128b17cb9a]                                                       + 0x152b9a
[0x7f128b17cf94]                                                       + 0x152f94
[0x7f128b18250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f128b17cb9a]                                                       + 0x152b9a
[0x7f128b17d1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f128b0cff1e]                                                       + 0xa5f1e
[0x7f128b0a0f2b]    PyObject_Call                                      + 0x4b
[0x7f128b182770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f128b17cb9a]                                                       + 0x152b9a
[0x7f128b17cf94]                                                       + 0x152f94
[0x7f128b18250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f128b17cb9a]                                                       + 0x152b9a
[0x7f128b17cf94]                                                       + 0x152f94
[0x7f128b18250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f128b17cb9a]                                                       + 0x152b9a
[0x7f128b17cf94]                                                       + 0x152f94
[0x7f128b18250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f128b17cb9a]                                                       + 0x152b9a
[0x7f128b17d1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f128b17d1df]    PyEval_EvalCode                                    + 0x1f
[0x7f128b1b23d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f128b1b256f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f128b1cc8e8]    Py_Main                                            + 0xff8
[0x562903b782b8]    main                                               + 0x178
[0x7f128ae410b3]    __libc_start_main                                  + 0xf3
[0x562903b7836e]    _start                                             + 0x2e


======================================== ret/dist/tokenizer.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 1398 is out of bounds for axis 0 with size 1398

======================================== rsvp/dist/es6/rsvp.es.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7ff31df10a29]                                                       + 0x7c5a29
[0x7ff31e0d1289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7ff31efee741]                                                       + 0x2d7741
[0x7ff3238f59e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7ff32397b084]                                                       + 0x153084
[0x7ff32398050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff32397ab9a]                                                       + 0x152b9a
[0x7ff32397b1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7ff3238cdf1e]                                                       + 0xa5f1e
[0x7ff32389ef2b]    PyObject_Call                                      + 0x4b
[0x7ff323980770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7ff32397ab9a]                                                       + 0x152b9a
[0x7ff32397af94]                                                       + 0x152f94
[0x7ff32398050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff32397ab9a]                                                       + 0x152b9a
[0x7ff32397af94]                                                       + 0x152f94
[0x7ff32398050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff32397a193]                                                       + 0x152193
[0x7ff32397b15c]                                                       + 0x15315c
[0x7ff32398050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff32397ab9a]                                                       + 0x152b9a
[0x7ff32397af94]                                                       + 0x152f94
[0x7ff32398050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff32397ab9a]                                                       + 0x152b9a
[0x7ff32397b1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7ff32397b1df]    PyEval_EvalCode                                    + 0x1f
[0x7ff3239b03d5]    PyRun_FileExFlags                                  + 0xb5
[0x7ff3239b056f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7ff3239ca8e8]    Py_Main                                            + 0xff8
[0x5605c51a12b8]    main                                               + 0x178
[0x7ff32363f0b3]    __libc_start_main                                  + 0xf3
[0x5605c51a136e]    _start                                             + 0x2e


======================================== rsvp/dist/rsvp.es.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fae35fbba29]                                                       + 0x7c5a29
[0x7fae3617c289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7faeba5a6741]                                                       + 0x2d7741
[0x7faebeead9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7faebef33084]                                                       + 0x153084
[0x7faebef3850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7faebef32b9a]                                                       + 0x152b9a
[0x7faebef331b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7faebee85f1e]                                                       + 0xa5f1e
[0x7faebee56f2b]    PyObject_Call                                      + 0x4b
[0x7faebef38770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7faebef32b9a]                                                       + 0x152b9a
[0x7faebef32f94]                                                       + 0x152f94
[0x7faebef3850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7faebef32b9a]                                                       + 0x152b9a
[0x7faebef32f94]                                                       + 0x152f94
[0x7faebef3850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7faebef32193]                                                       + 0x152193
[0x7faebef3315c]                                                       + 0x15315c
[0x7faebef3850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7faebef32b9a]                                                       + 0x152b9a
[0x7faebef32f94]                                                       + 0x152f94
[0x7faebef3850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7faebef32b9a]                                                       + 0x152b9a
[0x7faebef331b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7faebef331df]    PyEval_EvalCode                                    + 0x1f
[0x7faebef683d5]    PyRun_FileExFlags                                  + 0xb5
[0x7faebef6856f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7faebef828e8]    Py_Main                                            + 0xff8
[0x55eeec1062b8]    main                                               + 0x178
[0x7faebebf70b3]    __libc_start_main                                  + 0xf3
[0x55eeec10636e]    _start                                             + 0x2e


======================================== rsvp/dist/rsvp.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f6d58485a29]                                                       + 0x7c5a29
[0x7f6d58646289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f6ddca70741]                                                       + 0x2d7741
[0x7f6de13779e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f6de13fd084]                                                       + 0x153084
[0x7f6de140250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6de13fcb9a]                                                       + 0x152b9a
[0x7f6de13fd1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f6de134ff1e]                                                       + 0xa5f1e
[0x7f6de1320f2b]    PyObject_Call                                      + 0x4b
[0x7f6de1402770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f6de13fcb9a]                                                       + 0x152b9a
[0x7f6de13fcf94]                                                       + 0x152f94
[0x7f6de140250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6de13fcb9a]                                                       + 0x152b9a
[0x7f6de13fcf94]                                                       + 0x152f94
[0x7f6de140250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6de13fc193]                                                       + 0x152193
[0x7f6de13fd15c]                                                       + 0x15315c
[0x7f6de140250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6de13fcb9a]                                                       + 0x152b9a
[0x7f6de13fcf94]                                                       + 0x152f94
[0x7f6de140250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6de13fcb9a]                                                       + 0x152b9a
[0x7f6de13fd1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f6de13fd1df]    PyEval_EvalCode                                    + 0x1f
[0x7f6de14323d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f6de143256f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f6de144c8e8]    Py_Main                                            + 0xff8
[0x559594e7f2b8]    main                                               + 0x178
[0x7f6de10c10b3]    __libc_start_main                                  + 0xf3
[0x559594e7f36e]    _start                                             + 0x2e


======================================== rxjs/dist/bundles/rxjs.umd.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== rxjs/dist/bundles/rxjs.umd.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== rxjs/dist/cjs/index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f1cea733a29]                                                       + 0x7c5a29
[0x7f1cea8f4289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f1ceb811741]                                                       + 0x2d7741
[0x7f1cf01189e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f1cf019e084]                                                       + 0x153084
[0x7f1cf01a350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f1cf019db9a]                                                       + 0x152b9a
[0x7f1cf019e1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f1cf00f0f1e]                                                       + 0xa5f1e
[0x7f1cf00c1f2b]    PyObject_Call                                      + 0x4b
[0x7f1cf01a3770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f1cf019db9a]                                                       + 0x152b9a
[0x7f1cf019df94]                                                       + 0x152f94
[0x7f1cf01a350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f1cf019db9a]                                                       + 0x152b9a
[0x7f1cf019df94]                                                       + 0x152f94
[0x7f1cf01a350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f1cf019d193]                                                       + 0x152193
[0x7f1cf019e15c]                                                       + 0x15315c
[0x7f1cf01a350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f1cf019db9a]                                                       + 0x152b9a
[0x7f1cf019df94]                                                       + 0x152f94
[0x7f1cf01a350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f1cf019db9a]                                                       + 0x152b9a
[0x7f1cf019e1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f1cf019e1df]    PyEval_EvalCode                                    + 0x1f
[0x7f1cf01d33d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f1cf01d356f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f1cf01ed8e8]    Py_Main                                            + 0xff8
[0x5600ce2ae2b8]    main                                               + 0x178
[0x7f1cefe620b3]    __libc_start_main                                  + 0xf3
[0x5600ce2ae36e]    _start                                             + 0x2e


======================================== sax/lib/sax.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f5a3e19fa29]                                                       + 0x7c5a29
[0x7f5a3e360289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f5ac278a741]                                                       + 0x2d7741
[0x7f5ac70919e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f5ac7117084]                                                       + 0x153084
[0x7f5ac711c50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f5ac7116b9a]                                                       + 0x152b9a
[0x7f5ac71171b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f5ac7069f1e]                                                       + 0xa5f1e
[0x7f5ac703af2b]    PyObject_Call                                      + 0x4b
[0x7f5ac711c770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f5ac7116b9a]                                                       + 0x152b9a
[0x7f5ac7116f94]                                                       + 0x152f94
[0x7f5ac711c50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f5ac7116b9a]                                                       + 0x152b9a
[0x7f5ac7116f94]                                                       + 0x152f94
[0x7f5ac711c50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f5ac7116193]                                                       + 0x152193
[0x7f5ac711715c]                                                       + 0x15315c
[0x7f5ac711c50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f5ac7116b9a]                                                       + 0x152b9a
[0x7f5ac7116f94]                                                       + 0x152f94
[0x7f5ac711c50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f5ac7116b9a]                                                       + 0x152b9a
[0x7f5ac71171b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f5ac71171df]    PyEval_EvalCode                                    + 0x1f
[0x7f5ac714c3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f5ac714c56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f5ac71668e8]    Py_Main                                            + 0xff8
[0x561f80f0b2b8]    main                                               + 0x178
[0x7f5ac6ddb0b3]    __libc_start_main                                  + 0xf3
[0x561f80f0b36e]    _start                                             + 0x2e


======================================== saxes/saxes.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f11c24a4a29]                                                       + 0x7c5a29
[0x7f11c2665289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f1246a8f741]                                                       + 0x2d7741
[0x7f124b3969e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f124b41c084]                                                       + 0x153084
[0x7f124b42150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f124b41bb9a]                                                       + 0x152b9a
[0x7f124b41c1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f124b36ef1e]                                                       + 0xa5f1e
[0x7f124b33ff2b]    PyObject_Call                                      + 0x4b
[0x7f124b421770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f124b41bb9a]                                                       + 0x152b9a
[0x7f124b41bf94]                                                       + 0x152f94
[0x7f124b42150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f124b41bb9a]                                                       + 0x152b9a
[0x7f124b41bf94]                                                       + 0x152f94
[0x7f124b42150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f124b41b193]                                                       + 0x152193
[0x7f124b41c15c]                                                       + 0x15315c
[0x7f124b42150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f124b41bb9a]                                                       + 0x152b9a
[0x7f124b41bf94]                                                       + 0x152f94
[0x7f124b42150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f124b41bb9a]                                                       + 0x152b9a
[0x7f124b41c1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f124b41c1df]    PyEval_EvalCode                                    + 0x1f
[0x7f124b4513d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f124b45156f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f124b46b8e8]    Py_Main                                            + 0xff8
[0x55b8e75ab2b8]    main                                               + 0x178
[0x7f124b0e00b3]    __libc_start_main                                  + 0xf3
[0x55b8e75ab36e]    _start                                             + 0x2e


======================================== schema-utils/dist/ValidationError.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f92650dea29]                                                       + 0x7c5a29
[0x7f926529f289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f92e96c9741]                                                       + 0x2d7741
[0x7f92edfd09e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f92ee056084]                                                       + 0x153084
[0x7f92ee05b50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f92ee055b9a]                                                       + 0x152b9a
[0x7f92ee0561b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f92edfa8f1e]                                                       + 0xa5f1e
[0x7f92edf79f2b]    PyObject_Call                                      + 0x4b
[0x7f92ee05b770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f92ee055b9a]                                                       + 0x152b9a
[0x7f92ee055f94]                                                       + 0x152f94
[0x7f92ee05b50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f92ee055b9a]                                                       + 0x152b9a
[0x7f92ee055f94]                                                       + 0x152f94
[0x7f92ee05b50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f92ee055193]                                                       + 0x152193
[0x7f92ee05615c]                                                       + 0x15315c
[0x7f92ee05b50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f92ee055b9a]                                                       + 0x152b9a
[0x7f92ee055f94]                                                       + 0x152f94
[0x7f92ee05b50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f92ee055b9a]                                                       + 0x152b9a
[0x7f92ee0561b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f92ee0561df]    PyEval_EvalCode                                    + 0x1f
[0x7f92ee08b3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f92ee08b56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f92ee0a58e8]    Py_Main                                            + 0xff8
[0x55c091f8b2b8]    main                                               + 0x178
[0x7f92edd1a0b3]    __libc_start_main                                  + 0xf3
[0x55c091f8b36e]    _start                                             + 0x2e


======================================== schema-utils/dist/keywords/absolutePath.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 271 is out of bounds for axis 0 with size 271

======================================== semver/internal/re.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 1110 is out of bounds for axis 0 with size 1110

======================================== sockjs-client/dist/sockjs.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== sockjs-client/dist/sockjs.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== source-map/dist/source-map.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fb3e2308a29]                                                       + 0x7c5a29
[0x7fb3e24c9289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fb4668f3741]                                                       + 0x2d7741
[0x7fb46b1fa9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fb46b280084]                                                       + 0x153084
[0x7fb46b28550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb46b27fb9a]                                                       + 0x152b9a
[0x7fb46b2801b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fb46b1d2f1e]                                                       + 0xa5f1e
[0x7fb46b1a3f2b]    PyObject_Call                                      + 0x4b
[0x7fb46b285770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fb46b27fb9a]                                                       + 0x152b9a
[0x7fb46b27ff94]                                                       + 0x152f94
[0x7fb46b28550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb46b27fb9a]                                                       + 0x152b9a
[0x7fb46b27ff94]                                                       + 0x152f94
[0x7fb46b28550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb46b27f193]                                                       + 0x152193
[0x7fb46b28015c]                                                       + 0x15315c
[0x7fb46b28550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb46b27fb9a]                                                       + 0x152b9a
[0x7fb46b27ff94]                                                       + 0x152f94
[0x7fb46b28550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb46b27fb9a]                                                       + 0x152b9a
[0x7fb46b2801b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fb46b2801df]    PyEval_EvalCode                                    + 0x1f
[0x7fb46b2b53d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fb46b2b556f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fb46b2cf8e8]    Py_Main                                            + 0xff8
[0x5605fdf0a2b8]    main                                               + 0x178
[0x7fb46af440b3]    __libc_start_main                                  + 0xf3
[0x5605fdf0a36e]    _start                                             + 0x2e


======================================== source-map-support/browser-source-map-support.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== style-loader/dist/utils.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 1525 is out of bounds for axis 0 with size 1525

======================================== svgo/dist/svgo.browser.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== svgo/lib/svgo/config.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 510 is out of bounds for axis 0 with size 510

======================================== svgo/plugins/_collections.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fe9081b7a29]                                                       + 0x7c5a29
[0x7fe908378289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fe909295741]                                                       + 0x2d7741
[0x7fe90db9c9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fe90dc22084]                                                       + 0x153084
[0x7fe90dc2750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe90dc21b9a]                                                       + 0x152b9a
[0x7fe90dc221b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fe90db74f1e]                                                       + 0xa5f1e
[0x7fe90db45f2b]    PyObject_Call                                      + 0x4b
[0x7fe90dc27770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fe90dc21b9a]                                                       + 0x152b9a
[0x7fe90dc21f94]                                                       + 0x152f94
[0x7fe90dc2750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe90dc21b9a]                                                       + 0x152b9a
[0x7fe90dc21f94]                                                       + 0x152f94
[0x7fe90dc2750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe90dc21193]                                                       + 0x152193
[0x7fe90dc2215c]                                                       + 0x15315c
[0x7fe90dc2750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe90dc21b9a]                                                       + 0x152b9a
[0x7fe90dc21f94]                                                       + 0x152f94
[0x7fe90dc2750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe90dc21b9a]                                                       + 0x152b9a
[0x7fe90dc221b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fe90dc221df]    PyEval_EvalCode                                    + 0x1f
[0x7fe90dc573d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fe90dc5756f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fe90dc718e8]    Py_Main                                            + 0xff8
[0x5628974aa2b8]    main                                               + 0x178
[0x7fe90d8e60b3]    __libc_start_main                                  + 0xf3
[0x5628974aa36e]    _start                                             + 0x2e


======================================== svgo/plugins/cleanupIDs.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 1087 is out of bounds for axis 0 with size 1087

======================================== svgo/plugins/convertPathData.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fc77e063a29]                                                       + 0x7c5a29
[0x7fc77e224289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fc80264e741]                                                       + 0x2d7741
[0x7fc806f559e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fc806fdb084]                                                       + 0x153084
[0x7fc806fe050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc806fdab9a]                                                       + 0x152b9a
[0x7fc806fdb1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fc806f2df1e]                                                       + 0xa5f1e
[0x7fc806efef2b]    PyObject_Call                                      + 0x4b
[0x7fc806fe0770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fc806fdab9a]                                                       + 0x152b9a
[0x7fc806fdaf94]                                                       + 0x152f94
[0x7fc806fe050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc806fdab9a]                                                       + 0x152b9a
[0x7fc806fdaf94]                                                       + 0x152f94
[0x7fc806fe050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc806fda193]                                                       + 0x152193
[0x7fc806fdb15c]                                                       + 0x15315c
[0x7fc806fe050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc806fdab9a]                                                       + 0x152b9a
[0x7fc806fdaf94]                                                       + 0x152f94
[0x7fc806fe050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc806fdab9a]                                                       + 0x152b9a
[0x7fc806fdb1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fc806fdb1df]    PyEval_EvalCode                                    + 0x1f
[0x7fc8070103d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fc80701056f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fc80702a8e8]    Py_Main                                            + 0xff8
[0x558d146222b8]    main                                               + 0x178
[0x7fc806c9f0b3]    __libc_start_main                                  + 0xf3
[0x558d1462236e]    _start                                             + 0x2e


======================================== table/dist/generated/validators.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fda3becda29]                                                       + 0x7c5a29
[0x7fda3c08e289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fdac04b8741]                                                       + 0x2d7741
[0x7fdac4dbf9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fdac4e45084]                                                       + 0x153084
[0x7fdac4e4a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fdac4e44b9a]                                                       + 0x152b9a
[0x7fdac4e451b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fdac4d97f1e]                                                       + 0xa5f1e
[0x7fdac4d68f2b]    PyObject_Call                                      + 0x4b
[0x7fdac4e4a770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fdac4e44b9a]                                                       + 0x152b9a
[0x7fdac4e44f94]                                                       + 0x152f94
[0x7fdac4e4a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fdac4e44b9a]                                                       + 0x152b9a
[0x7fdac4e44f94]                                                       + 0x152f94
[0x7fdac4e4a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fdac4e44193]                                                       + 0x152193
[0x7fdac4e4515c]                                                       + 0x15315c
[0x7fdac4e4a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fdac4e44b9a]                                                       + 0x152b9a
[0x7fdac4e44f94]                                                       + 0x152f94
[0x7fdac4e4a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fdac4e44b9a]                                                       + 0x152b9a
[0x7fdac4e451b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fdac4e451df]    PyEval_EvalCode                                    + 0x1f
[0x7fdac4e7a3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fdac4e7a56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fdac4e948e8]    Py_Main                                            + 0xff8
[0x55c16fe7d2b8]    main                                               + 0x178
[0x7fdac4b090b3]    __libc_start_main                                  + 0xf3
[0x55c16fe7d36e]    _start                                             + 0x2e


======================================== terser/dist/bundle.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== terser/lib/ast.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f2317b5ba29]                                                       + 0x7c5a29
[0x7f2317d1c289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f239c146741]                                                       + 0x2d7741
[0x7f23a0a4d9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f23a0ad3084]                                                       + 0x153084
[0x7f23a0ad850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f23a0ad2b9a]                                                       + 0x152b9a
[0x7f23a0ad31b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f23a0a25f1e]                                                       + 0xa5f1e
[0x7f23a09f6f2b]    PyObject_Call                                      + 0x4b
[0x7f23a0ad8770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f23a0ad2b9a]                                                       + 0x152b9a
[0x7f23a0ad2f94]                                                       + 0x152f94
[0x7f23a0ad850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f23a0ad2b9a]                                                       + 0x152b9a
[0x7f23a0ad2f94]                                                       + 0x152f94
[0x7f23a0ad850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f23a0ad2193]                                                       + 0x152193
[0x7f23a0ad315c]                                                       + 0x15315c
[0x7f23a0ad850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f23a0ad2b9a]                                                       + 0x152b9a
[0x7f23a0ad2f94]                                                       + 0x152f94
[0x7f23a0ad850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f23a0ad2b9a]                                                       + 0x152b9a
[0x7f23a0ad31b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f23a0ad31df]    PyEval_EvalCode                                    + 0x1f
[0x7f23a0b083d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f23a0b0856f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f23a0b228e8]    Py_Main                                            + 0xff8
[0x5655374b82b8]    main                                               + 0x178
[0x7f23a07970b3]    __libc_start_main                                  + 0xf3
[0x5655374b836e]    _start                                             + 0x2e


======================================== terser/lib/compress/index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== terser/lib/compress/inference.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f194c8daa29]                                                       + 0x7c5a29
[0x7f194ca9b289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f19d0ec5741]                                                       + 0x2d7741
[0x7f19d57cc9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f19d5852084]                                                       + 0x153084
[0x7f19d585750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f19d5851b9a]                                                       + 0x152b9a
[0x7f19d58521b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f19d57a4f1e]                                                       + 0xa5f1e
[0x7f19d5775f2b]    PyObject_Call                                      + 0x4b
[0x7f19d5857770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f19d5851b9a]                                                       + 0x152b9a
[0x7f19d5851f94]                                                       + 0x152f94
[0x7f19d585750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f19d5851b9a]                                                       + 0x152b9a
[0x7f19d5851f94]                                                       + 0x152f94
[0x7f19d585750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f19d5851193]                                                       + 0x152193
[0x7f19d585215c]                                                       + 0x15315c
[0x7f19d585750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f19d5851b9a]                                                       + 0x152b9a
[0x7f19d5851f94]                                                       + 0x152f94
[0x7f19d585750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f19d5851b9a]                                                       + 0x152b9a
[0x7f19d58521b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f19d58521df]    PyEval_EvalCode                                    + 0x1f
[0x7f19d58873d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f19d588756f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f19d58a18e8]    Py_Main                                            + 0xff8
[0x556f6398e2b8]    main                                               + 0x178
[0x7f19d55160b3]    __libc_start_main                                  + 0xf3
[0x556f6398e36e]    _start                                             + 0x2e


======================================== terser/lib/compress/tighten-body.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f2a0b165a29]                                                       + 0x7c5a29
[0x7f2a0b326289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f2a8f750741]                                                       + 0x2d7741
[0x7f2a940579e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f2a940dd084]                                                       + 0x153084
[0x7f2a940e250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f2a940dcb9a]                                                       + 0x152b9a
[0x7f2a940dd1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f2a9402ff1e]                                                       + 0xa5f1e
[0x7f2a94000f2b]    PyObject_Call                                      + 0x4b
[0x7f2a940e2770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f2a940dcb9a]                                                       + 0x152b9a
[0x7f2a940dcf94]                                                       + 0x152f94
[0x7f2a940e250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f2a940dcb9a]                                                       + 0x152b9a
[0x7f2a940dcf94]                                                       + 0x152f94
[0x7f2a940e250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f2a940dc193]                                                       + 0x152193
[0x7f2a940dd15c]                                                       + 0x15315c
[0x7f2a940e250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f2a940dcb9a]                                                       + 0x152b9a
[0x7f2a940dcf94]                                                       + 0x152f94
[0x7f2a940e250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f2a940dcb9a]                                                       + 0x152b9a
[0x7f2a940dd1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f2a940dd1df]    PyEval_EvalCode                                    + 0x1f
[0x7f2a941123d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f2a9411256f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f2a9412c8e8]    Py_Main                                            + 0xff8
[0x562602ea92b8]    main                                               + 0x178
[0x7f2a93da10b3]    __libc_start_main                                  + 0xf3
[0x562602ea936e]    _start                                             + 0x2e


======================================== terser/lib/mozilla-ast.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fa47ebc7a29]                                                       + 0x7c5a29
[0x7fa47ed88289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fa5031b2741]                                                       + 0x2d7741
[0x7fa507ab99e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fa507b3f084]                                                       + 0x153084
[0x7fa507b4450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa507b3eb9a]                                                       + 0x152b9a
[0x7fa507b3f1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fa507a91f1e]                                                       + 0xa5f1e
[0x7fa507a62f2b]    PyObject_Call                                      + 0x4b
[0x7fa507b44770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fa507b3eb9a]                                                       + 0x152b9a
[0x7fa507b3ef94]                                                       + 0x152f94
[0x7fa507b4450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa507b3eb9a]                                                       + 0x152b9a
[0x7fa507b3ef94]                                                       + 0x152f94
[0x7fa507b4450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa507b3e193]                                                       + 0x152193
[0x7fa507b3f15c]                                                       + 0x15315c
[0x7fa507b4450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa507b3eb9a]                                                       + 0x152b9a
[0x7fa507b3ef94]                                                       + 0x152f94
[0x7fa507b4450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa507b3eb9a]                                                       + 0x152b9a
[0x7fa507b3f1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fa507b3f1df]    PyEval_EvalCode                                    + 0x1f
[0x7fa507b743d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fa507b7456f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fa507b8e8e8]    Py_Main                                            + 0xff8
[0x55cadbb342b8]    main                                               + 0x178
[0x7fa5078030b3]    __libc_start_main                                  + 0xf3
[0x55cadbb3436e]    _start                                             + 0x2e


======================================== terser/lib/output.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f385f23da29]                                                       + 0x7c5a29
[0x7f385f3fe289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f38e3828741]                                                       + 0x2d7741
[0x7f38e812f9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f38e81b5084]                                                       + 0x153084
[0x7f38e81ba50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f38e81b4b9a]                                                       + 0x152b9a
[0x7f38e81b51b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f38e8107f1e]                                                       + 0xa5f1e
[0x7f38e80d8f2b]    PyObject_Call                                      + 0x4b
[0x7f38e81ba770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f38e81b4b9a]                                                       + 0x152b9a
[0x7f38e81b4f94]                                                       + 0x152f94
[0x7f38e81ba50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f38e81b4b9a]                                                       + 0x152b9a
[0x7f38e81b4f94]                                                       + 0x152f94
[0x7f38e81ba50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f38e81b4193]                                                       + 0x152193
[0x7f38e81b515c]                                                       + 0x15315c
[0x7f38e81ba50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f38e81b4b9a]                                                       + 0x152b9a
[0x7f38e81b4f94]                                                       + 0x152f94
[0x7f38e81ba50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f38e81b4b9a]                                                       + 0x152b9a
[0x7f38e81b51b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f38e81b51df]    PyEval_EvalCode                                    + 0x1f
[0x7f38e81ea3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f38e81ea56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f38e82048e8]    Py_Main                                            + 0xff8
[0x564fc01622b8]    main                                               + 0x178
[0x7f38e7e790b3]    __libc_start_main                                  + 0xf3
[0x564fc016236e]    _start                                             + 0x2e


======================================== terser/lib/parse.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fba31c5fa29]                                                       + 0x7c5a29
[0x7fba31e20289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fbab624a741]                                                       + 0x2d7741
[0x7fbabab519e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fbababd7084]                                                       + 0x153084
[0x7fbababdc50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fbababd6b9a]                                                       + 0x152b9a
[0x7fbababd71b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fbabab29f1e]                                                       + 0xa5f1e
[0x7fbabaafaf2b]    PyObject_Call                                      + 0x4b
[0x7fbababdc770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fbababd6b9a]                                                       + 0x152b9a
[0x7fbababd6f94]                                                       + 0x152f94
[0x7fbababdc50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fbababd6b9a]                                                       + 0x152b9a
[0x7fbababd6f94]                                                       + 0x152f94
[0x7fbababdc50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fbababd6193]                                                       + 0x152193
[0x7fbababd715c]                                                       + 0x15315c
[0x7fbababdc50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fbababd6b9a]                                                       + 0x152b9a
[0x7fbababd6f94]                                                       + 0x152f94
[0x7fbababdc50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fbababd6b9a]                                                       + 0x152b9a
[0x7fbababd71b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fbababd71df]    PyEval_EvalCode                                    + 0x1f
[0x7fbabac0c3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fbabac0c56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fbabac268e8]    Py_Main                                            + 0xff8
[0x55951a0222b8]    main                                               + 0x178
[0x7fbaba89b0b3]    __libc_start_main                                  + 0xf3
[0x55951a02236e]    _start                                             + 0x2e


======================================== terser/lib/scope.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f407805aa29]                                                       + 0x7c5a29
[0x7f407821b289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f40fc645741]                                                       + 0x2d7741
[0x7f4100f4c9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f4100fd2084]                                                       + 0x153084
[0x7f4100fd750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4100fd1b9a]                                                       + 0x152b9a
[0x7f4100fd21b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f4100f24f1e]                                                       + 0xa5f1e
[0x7f4100ef5f2b]    PyObject_Call                                      + 0x4b
[0x7f4100fd7770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f4100fd1b9a]                                                       + 0x152b9a
[0x7f4100fd1f94]                                                       + 0x152f94
[0x7f4100fd750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4100fd1b9a]                                                       + 0x152b9a
[0x7f4100fd1f94]                                                       + 0x152f94
[0x7f4100fd750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4100fd1193]                                                       + 0x152193
[0x7f4100fd215c]                                                       + 0x15315c
[0x7f4100fd750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4100fd1b9a]                                                       + 0x152b9a
[0x7f4100fd1f94]                                                       + 0x152f94
[0x7f4100fd750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4100fd1b9a]                                                       + 0x152b9a
[0x7f4100fd21b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f4100fd21df]    PyEval_EvalCode                                    + 0x1f
[0x7f41010073d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f410100756f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f41010218e8]    Py_Main                                            + 0xff8
[0x55f3c08b52b8]    main                                               + 0x178
[0x7f4100c960b3]    __libc_start_main                                  + 0xf3
[0x55f3c08b536e]    _start                                             + 0x2e


======================================== terser/tools/domprops.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fefa1c4da29]                                                       + 0x7c5a29
[0x7fefa1e0e289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7ff026238741]                                                       + 0x2d7741
[0x7ff02ab3f9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7ff02abc5084]                                                       + 0x153084
[0x7ff02abca50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff02abc4b9a]                                                       + 0x152b9a
[0x7ff02abc51b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7ff02ab17f1e]                                                       + 0xa5f1e
[0x7ff02aae8f2b]    PyObject_Call                                      + 0x4b
[0x7ff02abca770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7ff02abc4b9a]                                                       + 0x152b9a
[0x7ff02abc4f94]                                                       + 0x152f94
[0x7ff02abca50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff02abc4b9a]                                                       + 0x152b9a
[0x7ff02abc4f94]                                                       + 0x152f94
[0x7ff02abca50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff02abc4193]                                                       + 0x152193
[0x7ff02abc515c]                                                       + 0x15315c
[0x7ff02abca50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff02abc4b9a]                                                       + 0x152b9a
[0x7ff02abc4f94]                                                       + 0x152f94
[0x7ff02abca50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff02abc4b9a]                                                       + 0x152b9a
[0x7ff02abc51b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7ff02abc51df]    PyEval_EvalCode                                    + 0x1f
[0x7ff02abfa3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7ff02abfa56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7ff02ac148e8]    Py_Main                                            + 0xff8
[0x560c80e182b8]    main                                               + 0x178
[0x7ff02a8890b3]    __libc_start_main                                  + 0xf3
[0x560c80e1836e]    _start                                             + 0x2e


======================================== terser-webpack-plugin/dist/utils.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 2003 is out of bounds for axis 0 with size 2003

======================================== to-regex-range/index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 1610 is out of bounds for axis 0 with size 1610

======================================== tough-cookie/lib/cookie.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f609606ba29]                                                       + 0x7c5a29
[0x7f609622c289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f611a656741]                                                       + 0x2d7741
[0x7f611ef5d9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f611efe3084]                                                       + 0x153084
[0x7f611efe850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f611efe2b9a]                                                       + 0x152b9a
[0x7f611efe31b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f611ef35f1e]                                                       + 0xa5f1e
[0x7f611ef06f2b]    PyObject_Call                                      + 0x4b
[0x7f611efe8770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f611efe2b9a]                                                       + 0x152b9a
[0x7f611efe2f94]                                                       + 0x152f94
[0x7f611efe850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f611efe2b9a]                                                       + 0x152b9a
[0x7f611efe2f94]                                                       + 0x152f94
[0x7f611efe850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f611efe2193]                                                       + 0x152193
[0x7f611efe315c]                                                       + 0x15315c
[0x7f611efe850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f611efe2b9a]                                                       + 0x152b9a
[0x7f611efe2f94]                                                       + 0x152f94
[0x7f611efe850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f611efe2b9a]                                                       + 0x152b9a
[0x7f611efe31b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f611efe31df]    PyEval_EvalCode                                    + 0x1f
[0x7f611f0183d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f611f01856f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f611f0328e8]    Py_Main                                            + 0xff8
[0x55b9aece52b8]    main                                               + 0x178
[0x7f611eca70b3]    __libc_start_main                                  + 0xf3
[0x55b9aece536e]    _start                                             + 0x2e


======================================== ts-node/dist/index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f11b06eba29]                                                       + 0x7c5a29
[0x7f11b08ac289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f1234cd6741]                                                       + 0x2d7741
[0x7f12395dd9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f1239663084]                                                       + 0x153084
[0x7f123966850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f1239662b9a]                                                       + 0x152b9a
[0x7f12396631b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f12395b5f1e]                                                       + 0xa5f1e
[0x7f1239586f2b]    PyObject_Call                                      + 0x4b
[0x7f1239668770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f1239662b9a]                                                       + 0x152b9a
[0x7f1239662f94]                                                       + 0x152f94
[0x7f123966850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f1239662b9a]                                                       + 0x152b9a
[0x7f1239662f94]                                                       + 0x152f94
[0x7f123966850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f1239662193]                                                       + 0x152193
[0x7f123966315c]                                                       + 0x15315c
[0x7f123966850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f1239662b9a]                                                       + 0x152b9a
[0x7f1239662f94]                                                       + 0x152f94
[0x7f123966850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f1239662b9a]                                                       + 0x152b9a
[0x7f12396631b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f12396631df]    PyEval_EvalCode                                    + 0x1f
[0x7f12396983d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f123969856f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f12396b28e8]    Py_Main                                            + 0xff8
[0x5584401222b8]    main                                               + 0x178
[0x7f12393270b3]    __libc_start_main                                  + 0xf3
[0x55844012236e]    _start                                             + 0x2e


======================================== ts-node/dist-raw/node-cjs-loader-utils.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 617 is out of bounds for axis 0 with size 617

======================================== ts-node/dist-raw/node-esm-resolve-implementation.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f3b703b0a29]                                                       + 0x7c5a29
[0x7f3b70571289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f3bf499b741]                                                       + 0x2d7741
[0x7f3bf92a29e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f3bf9328084]                                                       + 0x153084
[0x7f3bf932d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f3bf9327b9a]                                                       + 0x152b9a
[0x7f3bf93281b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f3bf927af1e]                                                       + 0xa5f1e
[0x7f3bf924bf2b]    PyObject_Call                                      + 0x4b
[0x7f3bf932d770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f3bf9327b9a]                                                       + 0x152b9a
[0x7f3bf9327f94]                                                       + 0x152f94
[0x7f3bf932d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f3bf9327b9a]                                                       + 0x152b9a
[0x7f3bf9327f94]                                                       + 0x152f94
[0x7f3bf932d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f3bf9327193]                                                       + 0x152193
[0x7f3bf932815c]                                                       + 0x15315c
[0x7f3bf932d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f3bf9327b9a]                                                       + 0x152b9a
[0x7f3bf9327f94]                                                       + 0x152f94
[0x7f3bf932d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f3bf9327b9a]                                                       + 0x152b9a
[0x7f3bf93281b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f3bf93281df]    PyEval_EvalCode                                    + 0x1f
[0x7f3bf935d3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f3bf935d56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f3bf93778e8]    Py_Main                                            + 0xff8
[0x55d3581f52b8]    main                                               + 0x178
[0x7f3bf8fec0b3]    __libc_start_main                                  + 0xf3
[0x55d3581f536e]    _start                                             + 0x2e


======================================== tsutils/util/util.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f64437daa29]                                                       + 0x7c5a29
[0x7f644399b289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f64448b8741]                                                       + 0x2d7741
[0x7f64491bf9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f6449245084]                                                       + 0x153084
[0x7f644924a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6449244b9a]                                                       + 0x152b9a
[0x7f64492451b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f6449197f1e]                                                       + 0xa5f1e
[0x7f6449168f2b]    PyObject_Call                                      + 0x4b
[0x7f644924a770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f6449244b9a]                                                       + 0x152b9a
[0x7f6449244f94]                                                       + 0x152f94
[0x7f644924a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6449244b9a]                                                       + 0x152b9a
[0x7f6449244f94]                                                       + 0x152f94
[0x7f644924a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6449244193]                                                       + 0x152193
[0x7f644924515c]                                                       + 0x15315c
[0x7f644924a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6449244b9a]                                                       + 0x152b9a
[0x7f6449244f94]                                                       + 0x152f94
[0x7f644924a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6449244b9a]                                                       + 0x152b9a
[0x7f64492451b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f64492451df]    PyEval_EvalCode                                    + 0x1f
[0x7f644927a3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f644927a56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f64492948e8]    Py_Main                                            + 0xff8
[0x55fbdc5742b8]    main                                               + 0x178
[0x7f6448f090b3]    __libc_start_main                                  + 0xf3
[0x55fbdc57436e]    _start                                             + 0x2e


======================================== tweetnacl/nacl-fast.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== tweetnacl/nacl-fast.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== tweetnacl/nacl.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fb1ef77da29]                                                       + 0x7c5a29
[0x7fb1ef93e289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fb1f085b741]                                                       + 0x2d7741
[0x7fb1f51629e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fb1f51e8084]                                                       + 0x153084
[0x7fb1f51ed50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb1f51e7b9a]                                                       + 0x152b9a
[0x7fb1f51e81b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fb1f513af1e]                                                       + 0xa5f1e
[0x7fb1f510bf2b]    PyObject_Call                                      + 0x4b
[0x7fb1f51ed770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fb1f51e7b9a]                                                       + 0x152b9a
[0x7fb1f51e7f94]                                                       + 0x152f94
[0x7fb1f51ed50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb1f51e7b9a]                                                       + 0x152b9a
[0x7fb1f51e7f94]                                                       + 0x152f94
[0x7fb1f51ed50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb1f51e7193]                                                       + 0x152193
[0x7fb1f51e815c]                                                       + 0x15315c
[0x7fb1f51ed50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb1f51e7b9a]                                                       + 0x152b9a
[0x7fb1f51e7f94]                                                       + 0x152f94
[0x7fb1f51ed50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb1f51e7b9a]                                                       + 0x152b9a
[0x7fb1f51e81b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fb1f51e81df]    PyEval_EvalCode                                    + 0x1f
[0x7fb1f521d3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fb1f521d56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fb1f52378e8]    Py_Main                                            + 0xff8
[0x559f718f92b8]    main                                               + 0x178
[0x7fb1f4eac0b3]    __libc_start_main                                  + 0xf3
[0x559f718f936e]    _start                                             + 0x2e


======================================== tweetnacl/nacl.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f384f097a29]                                                       + 0x7c5a29
[0x7f384f258289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f38d3682741]                                                       + 0x2d7741
[0x7f38d7f899e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f38d800f084]                                                       + 0x153084
[0x7f38d801450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f38d800eb9a]                                                       + 0x152b9a
[0x7f38d800f1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f38d7f61f1e]                                                       + 0xa5f1e
[0x7f38d7f32f2b]    PyObject_Call                                      + 0x4b
[0x7f38d8014770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f38d800eb9a]                                                       + 0x152b9a
[0x7f38d800ef94]                                                       + 0x152f94
[0x7f38d801450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f38d800eb9a]                                                       + 0x152b9a
[0x7f38d800ef94]                                                       + 0x152f94
[0x7f38d801450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f38d800e193]                                                       + 0x152193
[0x7f38d800f15c]                                                       + 0x15315c
[0x7f38d801450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f38d800eb9a]                                                       + 0x152b9a
[0x7f38d800ef94]                                                       + 0x152f94
[0x7f38d801450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f38d800eb9a]                                                       + 0x152b9a
[0x7f38d800f1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f38d800f1df]    PyEval_EvalCode                                    + 0x1f
[0x7f38d80443d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f38d804456f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f38d805e8e8]    Py_Main                                            + 0xff8
[0x5652c539d2b8]    main                                               + 0x178
[0x7f38d7cd30b3]    __libc_start_main                                  + 0xf3
[0x5652c539d36e]    _start                                             + 0x2e


======================================== typescript/lib/tsc.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== typescript/lib/tsserver.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== typescript/lib/tsserverlibrary.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== typescript/lib/typescript.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== typescript/lib/typescriptServices.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== typescript/lib/typingsInstaller.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== uglify-js/lib/ast.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f2708437a29]                                                       + 0x7c5a29
[0x7f27085f8289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f278ca22741]                                                       + 0x2d7741
[0x7f27913299e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f27913af084]                                                       + 0x153084
[0x7f27913b450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f27913aeb9a]                                                       + 0x152b9a
[0x7f27913af1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f2791301f1e]                                                       + 0xa5f1e
[0x7f27912d2f2b]    PyObject_Call                                      + 0x4b
[0x7f27913b4770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f27913aeb9a]                                                       + 0x152b9a
[0x7f27913aef94]                                                       + 0x152f94
[0x7f27913b450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f27913aeb9a]                                                       + 0x152b9a
[0x7f27913aef94]                                                       + 0x152f94
[0x7f27913b450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f27913ae193]                                                       + 0x152193
[0x7f27913af15c]                                                       + 0x15315c
[0x7f27913b450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f27913aeb9a]                                                       + 0x152b9a
[0x7f27913aef94]                                                       + 0x152f94
[0x7f27913b450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f27913aeb9a]                                                       + 0x152b9a
[0x7f27913af1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f27913af1df]    PyEval_EvalCode                                    + 0x1f
[0x7f27913e43d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f27913e456f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f27913fe8e8]    Py_Main                                            + 0xff8
[0x55c7d4b612b8]    main                                               + 0x178
[0x7f27910730b3]    __libc_start_main                                  + 0xf3
[0x55c7d4b6136e]    _start                                             + 0x2e


======================================== uglify-js/lib/compress.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== uglify-js/lib/mozilla-ast.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7ffa01ae1a29]                                                       + 0x7c5a29
[0x7ffa01ca2289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7ffa02bbf741]                                                       + 0x2d7741
[0x7ffa074c69e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7ffa0754c084]                                                       + 0x153084
[0x7ffa0755150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ffa0754bb9a]                                                       + 0x152b9a
[0x7ffa0754c1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7ffa0749ef1e]                                                       + 0xa5f1e
[0x7ffa0746ff2b]    PyObject_Call                                      + 0x4b
[0x7ffa07551770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7ffa0754bb9a]                                                       + 0x152b9a
[0x7ffa0754bf94]                                                       + 0x152f94
[0x7ffa0755150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ffa0754bb9a]                                                       + 0x152b9a
[0x7ffa0754bf94]                                                       + 0x152f94
[0x7ffa0755150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ffa0754b193]                                                       + 0x152193
[0x7ffa0754c15c]                                                       + 0x15315c
[0x7ffa0755150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ffa0754bb9a]                                                       + 0x152b9a
[0x7ffa0754bf94]                                                       + 0x152f94
[0x7ffa0755150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ffa0754bb9a]                                                       + 0x152b9a
[0x7ffa0754c1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7ffa0754c1df]    PyEval_EvalCode                                    + 0x1f
[0x7ffa075813d5]    PyRun_FileExFlags                                  + 0xb5
[0x7ffa0758156f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7ffa0759b8e8]    Py_Main                                            + 0xff8
[0x55ceaa03d2b8]    main                                               + 0x178
[0x7ffa072100b3]    __libc_start_main                                  + 0xf3
[0x55ceaa03d36e]    _start                                             + 0x2e


======================================== uglify-js/lib/output.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f6c6c3efa29]                                                       + 0x7c5a29
[0x7f6c6c5b0289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f6cf09da741]                                                       + 0x2d7741
[0x7f6cf52e19e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f6cf5367084]                                                       + 0x153084
[0x7f6cf536c50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6cf5366b9a]                                                       + 0x152b9a
[0x7f6cf53671b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f6cf52b9f1e]                                                       + 0xa5f1e
[0x7f6cf528af2b]    PyObject_Call                                      + 0x4b
[0x7f6cf536c770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f6cf5366b9a]                                                       + 0x152b9a
[0x7f6cf5366f94]                                                       + 0x152f94
[0x7f6cf536c50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6cf5366b9a]                                                       + 0x152b9a
[0x7f6cf5366f94]                                                       + 0x152f94
[0x7f6cf536c50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6cf5366193]                                                       + 0x152193
[0x7f6cf536715c]                                                       + 0x15315c
[0x7f6cf536c50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6cf5366b9a]                                                       + 0x152b9a
[0x7f6cf5366f94]                                                       + 0x152f94
[0x7f6cf536c50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6cf5366b9a]                                                       + 0x152b9a
[0x7f6cf53671b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f6cf53671df]    PyEval_EvalCode                                    + 0x1f
[0x7f6cf539c3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f6cf539c56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f6cf53b68e8]    Py_Main                                            + 0xff8
[0x5599c91b52b8]    main                                               + 0x178
[0x7f6cf502b0b3]    __libc_start_main                                  + 0xf3
[0x5599c91b536e]    _start                                             + 0x2e


======================================== uglify-js/lib/parse.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f3f55bbda29]                                                       + 0x7c5a29
[0x7f3f55d7e289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f3fda1a8741]                                                       + 0x2d7741
[0x7f3fdeaaf9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f3fdeb35084]                                                       + 0x153084
[0x7f3fdeb3a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f3fdeb34b9a]                                                       + 0x152b9a
[0x7f3fdeb351b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f3fdea87f1e]                                                       + 0xa5f1e
[0x7f3fdea58f2b]    PyObject_Call                                      + 0x4b
[0x7f3fdeb3a770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f3fdeb34b9a]                                                       + 0x152b9a
[0x7f3fdeb34f94]                                                       + 0x152f94
[0x7f3fdeb3a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f3fdeb34b9a]                                                       + 0x152b9a
[0x7f3fdeb34f94]                                                       + 0x152f94
[0x7f3fdeb3a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f3fdeb34193]                                                       + 0x152193
[0x7f3fdeb3515c]                                                       + 0x15315c
[0x7f3fdeb3a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f3fdeb34b9a]                                                       + 0x152b9a
[0x7f3fdeb34f94]                                                       + 0x152f94
[0x7f3fdeb3a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f3fdeb34b9a]                                                       + 0x152b9a
[0x7f3fdeb351b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f3fdeb351df]    PyEval_EvalCode                                    + 0x1f
[0x7f3fdeb6a3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f3fdeb6a56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f3fdeb848e8]    Py_Main                                            + 0xff8
[0x55eb06a4e2b8]    main                                               + 0x178
[0x7f3fde7f90b3]    __libc_start_main                                  + 0xf3
[0x55eb06a4e36e]    _start                                             + 0x2e


======================================== uglify-js/lib/scope.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f41aebc4a29]                                                       + 0x7c5a29
[0x7f41aed85289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f42331af741]                                                       + 0x2d7741
[0x7f4237ab69e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f4237b3c084]                                                       + 0x153084
[0x7f4237b4150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4237b3bb9a]                                                       + 0x152b9a
[0x7f4237b3c1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f4237a8ef1e]                                                       + 0xa5f1e
[0x7f4237a5ff2b]    PyObject_Call                                      + 0x4b
[0x7f4237b41770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f4237b3bb9a]                                                       + 0x152b9a
[0x7f4237b3bf94]                                                       + 0x152f94
[0x7f4237b4150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4237b3bb9a]                                                       + 0x152b9a
[0x7f4237b3bf94]                                                       + 0x152f94
[0x7f4237b4150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4237b3b193]                                                       + 0x152193
[0x7f4237b3c15c]                                                       + 0x15315c
[0x7f4237b4150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4237b3bb9a]                                                       + 0x152b9a
[0x7f4237b3bf94]                                                       + 0x152f94
[0x7f4237b4150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4237b3bb9a]                                                       + 0x152b9a
[0x7f4237b3c1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f4237b3c1df]    PyEval_EvalCode                                    + 0x1f
[0x7f4237b713d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f4237b7156f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f4237b8b8e8]    Py_Main                                            + 0xff8
[0x555d9f6472b8]    main                                               + 0x178
[0x7f42378000b3]    __libc_start_main                                  + 0xf3
[0x555d9f64736e]    _start                                             + 0x2e


======================================== unique-filename/coverage/prettify.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f4fa82b3a29]                                                       + 0x7c5a29
[0x7f4fa8474289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f502c89e741]                                                       + 0x2d7741
[0x7f50311a59e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f503122b084]                                                       + 0x153084
[0x7f503123050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f503122ab9a]                                                       + 0x152b9a
[0x7f503122b1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f503117df1e]                                                       + 0xa5f1e
[0x7f503114ef2b]    PyObject_Call                                      + 0x4b
[0x7f5031230770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f503122ab9a]                                                       + 0x152b9a
[0x7f503122af94]                                                       + 0x152f94
[0x7f503123050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f503122ab9a]                                                       + 0x152b9a
[0x7f503122af94]                                                       + 0x152f94
[0x7f503123050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f503122a193]                                                       + 0x152193
[0x7f503122b15c]                                                       + 0x15315c
[0x7f503123050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f503122ab9a]                                                       + 0x152b9a
[0x7f503122af94]                                                       + 0x152f94
[0x7f503123050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f503122ab9a]                                                       + 0x152b9a
[0x7f503122b1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f503122b1df]    PyEval_EvalCode                                    + 0x1f
[0x7f50312603d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f503126056f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f503127a8e8]    Py_Main                                            + 0xff8
[0x55947995d2b8]    main                                               + 0x178
[0x7f5030eef0b3]    __libc_start_main                                  + 0xf3
[0x55947995d36e]    _start                                             + 0x2e


======================================== uri-js/dist/es5/uri.all.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7ff4ae87aa29]                                                       + 0x7c5a29
[0x7ff4aea3b289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7ff532e65741]                                                       + 0x2d7741
[0x7ff53776c9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7ff5377f2084]                                                       + 0x153084
[0x7ff5377f750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff5377f1b9a]                                                       + 0x152b9a
[0x7ff5377f21b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7ff537744f1e]                                                       + 0xa5f1e
[0x7ff537715f2b]    PyObject_Call                                      + 0x4b
[0x7ff5377f7770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7ff5377f1b9a]                                                       + 0x152b9a
[0x7ff5377f1f94]                                                       + 0x152f94
[0x7ff5377f750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff5377f1b9a]                                                       + 0x152b9a
[0x7ff5377f1f94]                                                       + 0x152f94
[0x7ff5377f750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff5377f1193]                                                       + 0x152193
[0x7ff5377f215c]                                                       + 0x15315c
[0x7ff5377f750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff5377f1b9a]                                                       + 0x152b9a
[0x7ff5377f1f94]                                                       + 0x152f94
[0x7ff5377f750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff5377f1b9a]                                                       + 0x152b9a
[0x7ff5377f21b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7ff5377f21df]    PyEval_EvalCode                                    + 0x1f
[0x7ff5378273d5]    PyRun_FileExFlags                                  + 0xb5
[0x7ff53782756f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7ff5378418e8]    Py_Main                                            + 0xff8
[0x55a03ccb72b8]    main                                               + 0x178
[0x7ff5374b60b3]    __libc_start_main                                  + 0xf3
[0x55a03ccb736e]    _start                                             + 0x2e


======================================== uri-js/dist/es5/uri.all.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fa1f65f5a29]                                                       + 0x7c5a29
[0x7fa1f67b6289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fa27abe0741]                                                       + 0x2d7741
[0x7fa27f4e79e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fa27f56d084]                                                       + 0x153084
[0x7fa27f57250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa27f56cb9a]                                                       + 0x152b9a
[0x7fa27f56d1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fa27f4bff1e]                                                       + 0xa5f1e
[0x7fa27f490f2b]    PyObject_Call                                      + 0x4b
[0x7fa27f572770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fa27f56cb9a]                                                       + 0x152b9a
[0x7fa27f56cf94]                                                       + 0x152f94
[0x7fa27f57250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa27f56cb9a]                                                       + 0x152b9a
[0x7fa27f56cf94]                                                       + 0x152f94
[0x7fa27f57250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa27f56c193]                                                       + 0x152193
[0x7fa27f56d15c]                                                       + 0x15315c
[0x7fa27f57250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa27f56cb9a]                                                       + 0x152b9a
[0x7fa27f56cf94]                                                       + 0x152f94
[0x7fa27f57250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa27f56cb9a]                                                       + 0x152b9a
[0x7fa27f56d1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fa27f56d1df]    PyEval_EvalCode                                    + 0x1f
[0x7fa27f5a23d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fa27f5a256f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fa27f5bc8e8]    Py_Main                                            + 0xff8
[0x55a40eca42b8]    main                                               + 0x178
[0x7fa27f2310b3]    __libc_start_main                                  + 0xf3
[0x55a40eca436e]    _start                                             + 0x2e


======================================== url/test.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f4f345daa29]                                                       + 0x7c5a29
[0x7f4f3479b289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f4fb8bc5741]                                                       + 0x2d7741
[0x7f4fbd4cc9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f4fbd552084]                                                       + 0x153084
[0x7f4fbd55750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4fbd551b9a]                                                       + 0x152b9a
[0x7f4fbd5521b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f4fbd4a4f1e]                                                       + 0xa5f1e
[0x7f4fbd475f2b]    PyObject_Call                                      + 0x4b
[0x7f4fbd557770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f4fbd551b9a]                                                       + 0x152b9a
[0x7f4fbd551f94]                                                       + 0x152f94
[0x7f4fbd55750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4fbd551b9a]                                                       + 0x152b9a
[0x7f4fbd551f94]                                                       + 0x152f94
[0x7f4fbd55750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4fbd551193]                                                       + 0x152193
[0x7f4fbd55215c]                                                       + 0x15315c
[0x7f4fbd55750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4fbd551b9a]                                                       + 0x152b9a
[0x7f4fbd551f94]                                                       + 0x152f94
[0x7f4fbd55750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4fbd551b9a]                                                       + 0x152b9a
[0x7f4fbd5521b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f4fbd5521df]    PyEval_EvalCode                                    + 0x1f
[0x7f4fbd5873d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f4fbd58756f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f4fbd5a18e8]    Py_Main                                            + 0xff8
[0x5599cccef2b8]    main                                               + 0x178
[0x7f4fbd2160b3]    __libc_start_main                                  + 0xf3
[0x5599cccef36e]    _start                                             + 0x2e


======================================== web-streams-polyfill/dist/polyfill.es2018.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== web-streams-polyfill/dist/polyfill.es2018.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fe7674aaa29]                                                       + 0x7c5a29
[0x7fe76766b289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fe768588741]                                                       + 0x2d7741
[0x7fe76ce8f9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fe76cf15084]                                                       + 0x153084
[0x7fe76cf1a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe76cf14b9a]                                                       + 0x152b9a
[0x7fe76cf151b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fe76ce67f1e]                                                       + 0xa5f1e
[0x7fe76ce38f2b]    PyObject_Call                                      + 0x4b
[0x7fe76cf1a770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fe76cf14b9a]                                                       + 0x152b9a
[0x7fe76cf14f94]                                                       + 0x152f94
[0x7fe76cf1a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe76cf14b9a]                                                       + 0x152b9a
[0x7fe76cf14f94]                                                       + 0x152f94
[0x7fe76cf1a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe76cf14193]                                                       + 0x152193
[0x7fe76cf1515c]                                                       + 0x15315c
[0x7fe76cf1a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe76cf14b9a]                                                       + 0x152b9a
[0x7fe76cf14f94]                                                       + 0x152f94
[0x7fe76cf1a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe76cf14b9a]                                                       + 0x152b9a
[0x7fe76cf151b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fe76cf151df]    PyEval_EvalCode                                    + 0x1f
[0x7fe76cf4a3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fe76cf4a56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fe76cf648e8]    Py_Main                                            + 0xff8
[0x5575f00da2b8]    main                                               + 0x178
[0x7fe76cbd90b3]    __libc_start_main                                  + 0xf3
[0x5575f00da36e]    _start                                             + 0x2e


======================================== web-streams-polyfill/dist/polyfill.es6.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== web-streams-polyfill/dist/polyfill.es6.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f12460d4a29]                                                       + 0x7c5a29
[0x7f1246295289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f12ca6bf741]                                                       + 0x2d7741
[0x7f12cefc69e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f12cf04c084]                                                       + 0x153084
[0x7f12cf05150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f12cf04bb9a]                                                       + 0x152b9a
[0x7f12cf04c1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f12cef9ef1e]                                                       + 0xa5f1e
[0x7f12cef6ff2b]    PyObject_Call                                      + 0x4b
[0x7f12cf051770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f12cf04bb9a]                                                       + 0x152b9a
[0x7f12cf04bf94]                                                       + 0x152f94
[0x7f12cf05150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f12cf04bb9a]                                                       + 0x152b9a
[0x7f12cf04bf94]                                                       + 0x152f94
[0x7f12cf05150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f12cf04b193]                                                       + 0x152193
[0x7f12cf04c15c]                                                       + 0x15315c
[0x7f12cf05150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f12cf04bb9a]                                                       + 0x152b9a
[0x7f12cf04bf94]                                                       + 0x152f94
[0x7f12cf05150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f12cf04bb9a]                                                       + 0x152b9a
[0x7f12cf04c1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f12cf04c1df]    PyEval_EvalCode                                    + 0x1f
[0x7f12cf0813d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f12cf08156f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f12cf09b8e8]    Py_Main                                            + 0xff8
[0x5563af5ec2b8]    main                                               + 0x178
[0x7f12ced100b3]    __libc_start_main                                  + 0xf3
[0x5563af5ec36e]    _start                                             + 0x2e


======================================== web-streams-polyfill/dist/polyfill.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== web-streams-polyfill/dist/polyfill.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== web-streams-polyfill/dist/ponyfill.es2018.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== web-streams-polyfill/dist/ponyfill.es6.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== web-streams-polyfill/dist/ponyfill.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== webpack/lib/ChunkGraph.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7ff18886ba29]                                                       + 0x7c5a29
[0x7ff188a2c289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7ff20ce56741]                                                       + 0x2d7741
[0x7ff21175d9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7ff2117e3084]                                                       + 0x153084
[0x7ff2117e850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff2117e2b9a]                                                       + 0x152b9a
[0x7ff2117e31b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7ff211735f1e]                                                       + 0xa5f1e
[0x7ff211706f2b]    PyObject_Call                                      + 0x4b
[0x7ff2117e8770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7ff2117e2b9a]                                                       + 0x152b9a
[0x7ff2117e2f94]                                                       + 0x152f94
[0x7ff2117e850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff2117e2b9a]                                                       + 0x152b9a
[0x7ff2117e2f94]                                                       + 0x152f94
[0x7ff2117e850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff2117e2193]                                                       + 0x152193
[0x7ff2117e315c]                                                       + 0x15315c
[0x7ff2117e850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff2117e2b9a]                                                       + 0x152b9a
[0x7ff2117e2f94]                                                       + 0x152f94
[0x7ff2117e850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff2117e2b9a]                                                       + 0x152b9a
[0x7ff2117e31b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7ff2117e31df]    PyEval_EvalCode                                    + 0x1f
[0x7ff2118183d5]    PyRun_FileExFlags                                  + 0xb5
[0x7ff21181856f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7ff2118328e8]    Py_Main                                            + 0xff8
[0x55c99df952b8]    main                                               + 0x178
[0x7ff2114a70b3]    __libc_start_main                                  + 0xf3
[0x55c99df9536e]    _start                                             + 0x2e


======================================== webpack/lib/Compilation.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f36bef5fa29]                                                       + 0x7c5a29
[0x7f36bf120289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f36c003d741]                                                       + 0x2d7741
[0x7f36c49449e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f36c49ca084]                                                       + 0x153084
[0x7f36c49cf50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f36c49c9b9a]                                                       + 0x152b9a
[0x7f36c49ca1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f36c491cf1e]                                                       + 0xa5f1e
[0x7f36c48edf2b]    PyObject_Call                                      + 0x4b
[0x7f36c49cf770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f36c49c9b9a]                                                       + 0x152b9a
[0x7f36c49c9f94]                                                       + 0x152f94
[0x7f36c49cf50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f36c49c9b9a]                                                       + 0x152b9a
[0x7f36c49c9f94]                                                       + 0x152f94
[0x7f36c49cf50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f36c49c9193]                                                       + 0x152193
[0x7f36c49ca15c]                                                       + 0x15315c
[0x7f36c49cf50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f36c49c9b9a]                                                       + 0x152b9a
[0x7f36c49c9f94]                                                       + 0x152f94
[0x7f36c49cf50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f36c49c9b9a]                                                       + 0x152b9a
[0x7f36c49ca1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f36c49ca1df]    PyEval_EvalCode                                    + 0x1f
[0x7f36c49ff3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f36c49ff56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f36c4a198e8]    Py_Main                                            + 0xff8
[0x562fb93f42b8]    main                                               + 0x178
[0x7f36c468e0b3]    __libc_start_main                                  + 0xf3
[0x562fb93f436e]    _start                                             + 0x2e


======================================== webpack/lib/ContextModule.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 4297 is out of bounds for axis 0 with size 4297

======================================== webpack/lib/DefinePlugin.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 2433 is out of bounds for axis 0 with size 2433

======================================== webpack/lib/ExportsInfo.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f7436470a29]                                                       + 0x7c5a29
[0x7f7436631289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f74baa5b741]                                                       + 0x2d7741
[0x7f74bf3629e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f74bf3e8084]                                                       + 0x153084
[0x7f74bf3ed50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f74bf3e7b9a]                                                       + 0x152b9a
[0x7f74bf3e81b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f74bf33af1e]                                                       + 0xa5f1e
[0x7f74bf30bf2b]    PyObject_Call                                      + 0x4b
[0x7f74bf3ed770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f74bf3e7b9a]                                                       + 0x152b9a
[0x7f74bf3e7f94]                                                       + 0x152f94
[0x7f74bf3ed50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f74bf3e7b9a]                                                       + 0x152b9a
[0x7f74bf3e7f94]                                                       + 0x152f94
[0x7f74bf3ed50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f74bf3e7193]                                                       + 0x152193
[0x7f74bf3e815c]                                                       + 0x15315c
[0x7f74bf3ed50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f74bf3e7b9a]                                                       + 0x152b9a
[0x7f74bf3e7f94]                                                       + 0x152f94
[0x7f74bf3ed50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f74bf3e7b9a]                                                       + 0x152b9a
[0x7f74bf3e81b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f74bf3e81df]    PyEval_EvalCode                                    + 0x1f
[0x7f74bf41d3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f74bf41d56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f74bf4378e8]    Py_Main                                            + 0xff8
[0x564d888192b8]    main                                               + 0x178
[0x7f74bf0ac0b3]    __libc_start_main                                  + 0xf3
[0x564d8881936e]    _start                                             + 0x2e


======================================== webpack/lib/ExternalModule.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 2759 is out of bounds for axis 0 with size 2759

======================================== webpack/lib/FileSystemInfo.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f4fb1229a29]                                                       + 0x7c5a29
[0x7f4fb13ea289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f4fb2307741]                                                       + 0x2d7741
[0x7f4fb6c0e9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f4fb6c94084]                                                       + 0x153084
[0x7f4fb6c9950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4fb6c93b9a]                                                       + 0x152b9a
[0x7f4fb6c941b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f4fb6be6f1e]                                                       + 0xa5f1e
[0x7f4fb6bb7f2b]    PyObject_Call                                      + 0x4b
[0x7f4fb6c99770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f4fb6c93b9a]                                                       + 0x152b9a
[0x7f4fb6c93f94]                                                       + 0x152f94
[0x7f4fb6c9950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4fb6c93b9a]                                                       + 0x152b9a
[0x7f4fb6c93f94]                                                       + 0x152f94
[0x7f4fb6c9950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4fb6c93193]                                                       + 0x152193
[0x7f4fb6c9415c]                                                       + 0x15315c
[0x7f4fb6c9950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4fb6c93b9a]                                                       + 0x152b9a
[0x7f4fb6c93f94]                                                       + 0x152f94
[0x7f4fb6c9950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4fb6c93b9a]                                                       + 0x152b9a
[0x7f4fb6c941b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f4fb6c941df]    PyEval_EvalCode                                    + 0x1f
[0x7f4fb6cc93d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f4fb6cc956f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f4fb6ce38e8]    Py_Main                                            + 0xff8
[0x562196bf12b8]    main                                               + 0x178
[0x7f4fb69580b3]    __libc_start_main                                  + 0xf3
[0x562196bf136e]    _start                                             + 0x2e


======================================== webpack/lib/ModuleNotFoundError.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 316 is out of bounds for axis 0 with size 316

======================================== webpack/lib/NormalModule.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f22354cca29]                                                       + 0x7c5a29
[0x7f223568d289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f22b9ab7741]                                                       + 0x2d7741
[0x7f22be3be9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f22be444084]                                                       + 0x153084
[0x7f22be44950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f22be443b9a]                                                       + 0x152b9a
[0x7f22be4441b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f22be396f1e]                                                       + 0xa5f1e
[0x7f22be367f2b]    PyObject_Call                                      + 0x4b
[0x7f22be449770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f22be443b9a]                                                       + 0x152b9a
[0x7f22be443f94]                                                       + 0x152f94
[0x7f22be44950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f22be443b9a]                                                       + 0x152b9a
[0x7f22be443f94]                                                       + 0x152f94
[0x7f22be44950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f22be443193]                                                       + 0x152193
[0x7f22be44415c]                                                       + 0x15315c
[0x7f22be44950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f22be443b9a]                                                       + 0x152b9a
[0x7f22be443f94]                                                       + 0x152f94
[0x7f22be44950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f22be443b9a]                                                       + 0x152b9a
[0x7f22be4441b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f22be4441df]    PyEval_EvalCode                                    + 0x1f
[0x7f22be4793d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f22be47956f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f22be4938e8]    Py_Main                                            + 0xff8
[0x55625f3d92b8]    main                                               + 0x178
[0x7f22be1080b3]    __libc_start_main                                  + 0xf3
[0x55625f3d936e]    _start                                             + 0x2e


======================================== webpack/lib/RuntimeTemplate.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 3599 is out of bounds for axis 0 with size 3599

======================================== webpack/lib/SourceMapDevToolPlugin.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 2108 is out of bounds for axis 0 with size 2108

======================================== webpack/lib/WarnDeprecatedOptionPlugin.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 142 is out of bounds for axis 0 with size 142

======================================== webpack/lib/async-modules/AwaitDependenciesInitFragment.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 222 is out of bounds for axis 0 with size 222

======================================== webpack/lib/buildChunkGraph.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f6d0d5aea29]                                                       + 0x7c5a29
[0x7f6d0d76f289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f6d417b4741]                                                       + 0x2d7741
[0x7f6d460bb9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f6d46141084]                                                       + 0x153084
[0x7f6d4614650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6d46140b9a]                                                       + 0x152b9a
[0x7f6d461411b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f6d46093f1e]                                                       + 0xa5f1e
[0x7f6d46064f2b]    PyObject_Call                                      + 0x4b
[0x7f6d46146770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f6d46140b9a]                                                       + 0x152b9a
[0x7f6d46140f94]                                                       + 0x152f94
[0x7f6d4614650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6d46140b9a]                                                       + 0x152b9a
[0x7f6d46140f94]                                                       + 0x152f94
[0x7f6d4614650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6d46140193]                                                       + 0x152193
[0x7f6d4614115c]                                                       + 0x15315c
[0x7f6d4614650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6d46140b9a]                                                       + 0x152b9a
[0x7f6d46140f94]                                                       + 0x152f94
[0x7f6d4614650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6d46140b9a]                                                       + 0x152b9a
[0x7f6d461411b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f6d461411df]    PyEval_EvalCode                                    + 0x1f
[0x7f6d461763d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f6d4617656f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f6d461908e8]    Py_Main                                            + 0xff8
[0x5578b32fc2b8]    main                                               + 0x178
[0x7f6d45e050b3]    __libc_start_main                                  + 0xf3
[0x5578b32fc36e]    _start                                             + 0x2e


======================================== webpack/lib/cache/PackFileCacheStrategy.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f29907e3a29]                                                       + 0x7c5a29
[0x7f29909a4289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f2a14dce741]                                                       + 0x2d7741
[0x7f2a196d59e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f2a1975b084]                                                       + 0x153084
[0x7f2a1976050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f2a1975ab9a]                                                       + 0x152b9a
[0x7f2a1975b1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f2a196adf1e]                                                       + 0xa5f1e
[0x7f2a1967ef2b]    PyObject_Call                                      + 0x4b
[0x7f2a19760770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f2a1975ab9a]                                                       + 0x152b9a
[0x7f2a1975af94]                                                       + 0x152f94
[0x7f2a1976050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f2a1975ab9a]                                                       + 0x152b9a
[0x7f2a1975af94]                                                       + 0x152f94
[0x7f2a1976050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f2a1975a193]                                                       + 0x152193
[0x7f2a1975b15c]                                                       + 0x15315c
[0x7f2a1976050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f2a1975ab9a]                                                       + 0x152b9a
[0x7f2a1975af94]                                                       + 0x152f94
[0x7f2a1976050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f2a1975ab9a]                                                       + 0x152b9a
[0x7f2a1975b1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f2a1975b1df]    PyEval_EvalCode                                    + 0x1f
[0x7f2a197903d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f2a1979056f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f2a197aa8e8]    Py_Main                                            + 0xff8
[0x55f67e6cc2b8]    main                                               + 0x178
[0x7f2a1941f0b3]    __libc_start_main                                  + 0xf3
[0x55f67e6cc36e]    _start                                             + 0x2e


======================================== webpack/lib/config/defaults.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f0aeb0d9a29]                                                       + 0x7c5a29
[0x7f0aeb29a289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f0b6f6c4741]                                                       + 0x2d7741
[0x7f0b73fcb9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f0b74051084]                                                       + 0x153084
[0x7f0b7405650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f0b74050b9a]                                                       + 0x152b9a
[0x7f0b740511b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f0b73fa3f1e]                                                       + 0xa5f1e
[0x7f0b73f74f2b]    PyObject_Call                                      + 0x4b
[0x7f0b74056770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f0b74050b9a]                                                       + 0x152b9a
[0x7f0b74050f94]                                                       + 0x152f94
[0x7f0b7405650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f0b74050b9a]                                                       + 0x152b9a
[0x7f0b74050f94]                                                       + 0x152f94
[0x7f0b7405650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f0b74050193]                                                       + 0x152193
[0x7f0b7405115c]                                                       + 0x15315c
[0x7f0b7405650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f0b74050b9a]                                                       + 0x152b9a
[0x7f0b74050f94]                                                       + 0x152f94
[0x7f0b7405650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f0b74050b9a]                                                       + 0x152b9a
[0x7f0b740511b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f0b740511df]    PyEval_EvalCode                                    + 0x1f
[0x7f0b740863d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f0b7408656f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f0b740a08e8]    Py_Main                                            + 0xff8
[0x55e2ab2652b8]    main                                               + 0x178
[0x7f0b73d150b3]    __libc_start_main                                  + 0xf3
[0x55e2ab26536e]    _start                                             + 0x2e


======================================== webpack/lib/container/ContainerEntryModule.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 944 is out of bounds for axis 0 with size 944

======================================== webpack/lib/container/FallbackModule.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 524 is out of bounds for axis 0 with size 524

======================================== webpack/lib/container/RemoteRuntimeModule.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 524 is out of bounds for axis 0 with size 524

======================================== webpack/lib/container/options.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 348 is out of bounds for axis 0 with size 348

======================================== webpack/lib/dependencies/CommonJsExportRequireDependency.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 1546 is out of bounds for axis 0 with size 1546

======================================== webpack/lib/dependencies/ContextDependency.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 564 is out of bounds for axis 0 with size 564

======================================== webpack/lib/dependencies/HarmonyCompatibilityDependency.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 272 is out of bounds for axis 0 with size 272

======================================== webpack/lib/dependencies/ModuleDependency.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 257 is out of bounds for axis 0 with size 257

======================================== webpack/lib/esm/ModuleChunkLoadingRuntimeModule.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 868 is out of bounds for axis 0 with size 868

======================================== webpack/lib/hmr/LazyCompilationPlugin.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 1369 is out of bounds for axis 0 with size 1369

======================================== webpack/lib/hmr/lazyCompilationBackend.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 599 is out of bounds for axis 0 with size 599

======================================== webpack/lib/javascript/JavascriptModulesPlugin.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f7417d2aa29]                                                       + 0x7c5a29
[0x7f7417eeb289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f749c315741]                                                       + 0x2d7741
[0x7f74a0c1c9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f74a0ca2084]                                                       + 0x153084
[0x7f74a0ca750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f74a0ca1b9a]                                                       + 0x152b9a
[0x7f74a0ca21b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f74a0bf4f1e]                                                       + 0xa5f1e
[0x7f74a0bc5f2b]    PyObject_Call                                      + 0x4b
[0x7f74a0ca7770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f74a0ca1b9a]                                                       + 0x152b9a
[0x7f74a0ca1f94]                                                       + 0x152f94
[0x7f74a0ca750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f74a0ca1b9a]                                                       + 0x152b9a
[0x7f74a0ca1f94]                                                       + 0x152f94
[0x7f74a0ca750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f74a0ca1193]                                                       + 0x152193
[0x7f74a0ca215c]                                                       + 0x15315c
[0x7f74a0ca750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f74a0ca1b9a]                                                       + 0x152b9a
[0x7f74a0ca1f94]                                                       + 0x152f94
[0x7f74a0ca750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f74a0ca1b9a]                                                       + 0x152b9a
[0x7f74a0ca21b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f74a0ca21df]    PyEval_EvalCode                                    + 0x1f
[0x7f74a0cd73d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f74a0cd756f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f74a0cf18e8]    Py_Main                                            + 0xff8
[0x5578e71cf2b8]    main                                               + 0x178
[0x7f74a09660b3]    __libc_start_main                                  + 0xf3
[0x5578e71cf36e]    _start                                             + 0x2e


======================================== webpack/lib/javascript/JavascriptParser.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fdb416cca29]                                                       + 0x7c5a29
[0x7fdb4188d289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fdbc5cb7741]                                                       + 0x2d7741
[0x7fdbca5be9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fdbca644084]                                                       + 0x153084
[0x7fdbca64950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fdbca643b9a]                                                       + 0x152b9a
[0x7fdbca6441b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fdbca596f1e]                                                       + 0xa5f1e
[0x7fdbca567f2b]    PyObject_Call                                      + 0x4b
[0x7fdbca649770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fdbca643b9a]                                                       + 0x152b9a
[0x7fdbca643f94]                                                       + 0x152f94
[0x7fdbca64950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fdbca643b9a]                                                       + 0x152b9a
[0x7fdbca643f94]                                                       + 0x152f94
[0x7fdbca64950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fdbca643193]                                                       + 0x152193
[0x7fdbca64415c]                                                       + 0x15315c
[0x7fdbca64950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fdbca643b9a]                                                       + 0x152b9a
[0x7fdbca643f94]                                                       + 0x152f94
[0x7fdbca64950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fdbca643b9a]                                                       + 0x152b9a
[0x7fdbca6441b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fdbca6441df]    PyEval_EvalCode                                    + 0x1f
[0x7fdbca6793d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fdbca67956f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fdbca6938e8]    Py_Main                                            + 0xff8
[0x5577477142b8]    main                                               + 0x178
[0x7fdbca3080b3]    __libc_start_main                                  + 0xf3
[0x55774771436e]    _start                                             + 0x2e


======================================== webpack/lib/library/AmdLibraryPlugin.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 563 is out of bounds for axis 0 with size 563

======================================== webpack/lib/library/UmdLibraryPlugin.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 1250 is out of bounds for axis 0 with size 1250

======================================== webpack/lib/optimize/ConcatenatedModule.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f650b20ea29]                                                       + 0x7c5a29
[0x7f650b3cf289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f658f7f9741]                                                       + 0x2d7741
[0x7f65941009e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f6594186084]                                                       + 0x153084
[0x7f659418b50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6594185b9a]                                                       + 0x152b9a
[0x7f65941861b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f65940d8f1e]                                                       + 0xa5f1e
[0x7f65940a9f2b]    PyObject_Call                                      + 0x4b
[0x7f659418b770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f6594185b9a]                                                       + 0x152b9a
[0x7f6594185f94]                                                       + 0x152f94
[0x7f659418b50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6594185b9a]                                                       + 0x152b9a
[0x7f6594185f94]                                                       + 0x152f94
[0x7f659418b50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6594185193]                                                       + 0x152193
[0x7f659418615c]                                                       + 0x15315c
[0x7f659418b50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6594185b9a]                                                       + 0x152b9a
[0x7f6594185f94]                                                       + 0x152f94
[0x7f659418b50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6594185b9a]                                                       + 0x152b9a
[0x7f65941861b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f65941861df]    PyEval_EvalCode                                    + 0x1f
[0x7f65941bb3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f65941bb56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f65941d58e8]    Py_Main                                            + 0xff8
[0x55d84fe922b8]    main                                               + 0x178
[0x7f6593e4a0b3]    __libc_start_main                                  + 0xf3
[0x55d84fe9236e]    _start                                             + 0x2e


======================================== webpack/lib/optimize/MinMaxSizeWarning.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 120 is out of bounds for axis 0 with size 120

======================================== webpack/lib/optimize/SplitChunksPlugin.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fe1b9ceda29]                                                       + 0x7c5a29
[0x7fe1b9eae289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fe23e2d8741]                                                       + 0x2d7741
[0x7fe242bdf9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fe242c65084]                                                       + 0x153084
[0x7fe242c6a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe242c64b9a]                                                       + 0x152b9a
[0x7fe242c651b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fe242bb7f1e]                                                       + 0xa5f1e
[0x7fe242b88f2b]    PyObject_Call                                      + 0x4b
[0x7fe242c6a770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fe242c64b9a]                                                       + 0x152b9a
[0x7fe242c64f94]                                                       + 0x152f94
[0x7fe242c6a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe242c64b9a]                                                       + 0x152b9a
[0x7fe242c64f94]                                                       + 0x152f94
[0x7fe242c6a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe242c64193]                                                       + 0x152193
[0x7fe242c6515c]                                                       + 0x15315c
[0x7fe242c6a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe242c64b9a]                                                       + 0x152b9a
[0x7fe242c64f94]                                                       + 0x152f94
[0x7fe242c6a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe242c64b9a]                                                       + 0x152b9a
[0x7fe242c651b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fe242c651df]    PyEval_EvalCode                                    + 0x1f
[0x7fe242c9a3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fe242c9a56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fe242cb48e8]    Py_Main                                            + 0xff8
[0x55ce8547e2b8]    main                                               + 0x178
[0x7fe2429290b3]    __libc_start_main                                  + 0xf3
[0x55ce8547e36e]    _start                                             + 0x2e


======================================== webpack/lib/prefetch/ChunkPrefetchFunctionRuntimeModule.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 145 is out of bounds for axis 0 with size 145

======================================== webpack/lib/prefetch/ChunkPrefetchTriggerRuntimeModule.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 159 is out of bounds for axis 0 with size 159

======================================== webpack/lib/prefetch/ChunkPreloadTriggerRuntimeModule.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 146 is out of bounds for axis 0 with size 146

======================================== webpack/lib/runtime/AsyncModuleRuntimeModule.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 455 is out of bounds for axis 0 with size 455

======================================== webpack/lib/runtime/AutoPublicPathRuntimeModule.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 265 is out of bounds for axis 0 with size 265

======================================== webpack/lib/runtime/CompatGetDefaultExportRuntimeModule.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 138 is out of bounds for axis 0 with size 138

======================================== webpack/lib/runtime/CreateFakeNamespaceObjectRuntimeModule.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 228 is out of bounds for axis 0 with size 228

======================================== webpack/lib/runtime/GetChunkFilenameRuntimeModule.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 1294 is out of bounds for axis 0 with size 1294

======================================== webpack/lib/runtime/LoadScriptRuntimeModule.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 516 is out of bounds for axis 0 with size 516

======================================== webpack/lib/runtime/StartupChunkDependenciesRuntimeModule.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 274 is out of bounds for axis 0 with size 274

======================================== webpack/lib/serialization/ObjectMiddleware.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 3268 is out of bounds for axis 0 with size 3268

======================================== webpack/lib/sharing/ConsumeSharedRuntimeModule.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 1224 is out of bounds for axis 0 with size 1224

======================================== webpack/lib/sharing/ShareRuntimeModule.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 609 is out of bounds for axis 0 with size 609

======================================== webpack/lib/stats/DefaultStatsFactoryPlugin.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f7915a92a29]                                                       + 0x7c5a29
[0x7f7915c53289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f799a07d741]                                                       + 0x2d7741
[0x7f799e9849e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f799ea0a084]                                                       + 0x153084
[0x7f799ea0f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f799ea09b9a]                                                       + 0x152b9a
[0x7f799ea0a1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f799e95cf1e]                                                       + 0xa5f1e
[0x7f799e92df2b]    PyObject_Call                                      + 0x4b
[0x7f799ea0f770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f799ea09b9a]                                                       + 0x152b9a
[0x7f799ea09f94]                                                       + 0x152f94
[0x7f799ea0f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f799ea09b9a]                                                       + 0x152b9a
[0x7f799ea09f94]                                                       + 0x152f94
[0x7f799ea0f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f799ea09193]                                                       + 0x152193
[0x7f799ea0a15c]                                                       + 0x15315c
[0x7f799ea0f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f799ea09b9a]                                                       + 0x152b9a
[0x7f799ea09f94]                                                       + 0x152f94
[0x7f799ea0f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f799ea09b9a]                                                       + 0x152b9a
[0x7f799ea0a1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f799ea0a1df]    PyEval_EvalCode                                    + 0x1f
[0x7f799ea3f3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f799ea3f56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f799ea598e8]    Py_Main                                            + 0xff8
[0x5621432012b8]    main                                               + 0x178
[0x7f799e6ce0b3]    __libc_start_main                                  + 0xf3
[0x56214320136e]    _start                                             + 0x2e


======================================== webpack/lib/stats/DefaultStatsPrinterPlugin.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f85b4ef6a29]                                                       + 0x7c5a29
[0x7f85b50b7289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f85f98fd741]                                                       + 0x2d7741
[0x7f85fe2049e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f85fe28a084]                                                       + 0x153084
[0x7f85fe28f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f85fe289b9a]                                                       + 0x152b9a
[0x7f85fe28a1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f85fe1dcf1e]                                                       + 0xa5f1e
[0x7f85fe1adf2b]    PyObject_Call                                      + 0x4b
[0x7f85fe28f770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f85fe289b9a]                                                       + 0x152b9a
[0x7f85fe289f94]                                                       + 0x152f94
[0x7f85fe28f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f85fe289b9a]                                                       + 0x152b9a
[0x7f85fe289f94]                                                       + 0x152f94
[0x7f85fe28f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f85fe289193]                                                       + 0x152193
[0x7f85fe28a15c]                                                       + 0x15315c
[0x7f85fe28f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f85fe289b9a]                                                       + 0x152b9a
[0x7f85fe289f94]                                                       + 0x152f94
[0x7f85fe28f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f85fe289b9a]                                                       + 0x152b9a
[0x7f85fe28a1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f85fe28a1df]    PyEval_EvalCode                                    + 0x1f
[0x7f85fe2bf3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f85fe2bf56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f85fe2d98e8]    Py_Main                                            + 0xff8
[0x55ab233a42b8]    main                                               + 0x178
[0x7f85fdf4e0b3]    __libc_start_main                                  + 0xf3
[0x55ab233a436e]    _start                                             + 0x2e


======================================== webpack/lib/stats/StatsFactory.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 1403 is out of bounds for axis 0 with size 1403

======================================== webpack/lib/stats/StatsPrinter.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 982 is out of bounds for axis 0 with size 982

======================================== webpack/lib/util/deprecation.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 1010 is out of bounds for axis 0 with size 1010

======================================== webpack/lib/wasm-async/AsyncWasmLoadingRuntimeModule.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 309 is out of bounds for axis 0 with size 309

======================================== webpack/lib/wasm-async/AsyncWebAssemblyJavascriptGenerator.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 796 is out of bounds for axis 0 with size 796

======================================== webpack/lib/wasm-sync/WasmChunkLoadingRuntimeModule.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 1708 is out of bounds for axis 0 with size 1708

======================================== webpack/lib/wasm-sync/WasmFinalizeExportsPlugin.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 288 is out of bounds for axis 0 with size 288

======================================== webpack/lib/wasm-sync/WebAssemblyJavascriptGenerator.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 906 is out of bounds for axis 0 with size 906

======================================== webpack/lib/web/JsonpChunkLoadingRuntimeModule.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 1656 is out of bounds for axis 0 with size 1656

======================================== webpack/lib/webworker/ImportScriptsChunkLoadingRuntimeModule.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 944 is out of bounds for axis 0 with size 944

======================================== webpack/schemas/WebpackOptions.check.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== webpack/schemas/plugins/DllReferencePlugin.check.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f24638c3a29]                                                       + 0x7c5a29
[0x7f2463a84289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f24649a1741]                                                       + 0x2d7741
[0x7f24692a89e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f246932e084]                                                       + 0x153084
[0x7f246933350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f246932db9a]                                                       + 0x152b9a
[0x7f246932e1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f2469280f1e]                                                       + 0xa5f1e
[0x7f2469251f2b]    PyObject_Call                                      + 0x4b
[0x7f2469333770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f246932db9a]                                                       + 0x152b9a
[0x7f246932df94]                                                       + 0x152f94
[0x7f246933350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f246932db9a]                                                       + 0x152b9a
[0x7f246932df94]                                                       + 0x152f94
[0x7f246933350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f246932d193]                                                       + 0x152193
[0x7f246932e15c]                                                       + 0x15315c
[0x7f246933350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f246932db9a]                                                       + 0x152b9a
[0x7f246932df94]                                                       + 0x152f94
[0x7f246933350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f246932db9a]                                                       + 0x152b9a
[0x7f246932e1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f246932e1df]    PyEval_EvalCode                                    + 0x1f
[0x7f24693633d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f246936356f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f246937d8e8]    Py_Main                                            + 0xff8
[0x55ff872202b8]    main                                               + 0x178
[0x7f2468ff20b3]    __libc_start_main                                  + 0xf3
[0x55ff8722036e]    _start                                             + 0x2e


======================================== webpack/schemas/plugins/container/ContainerPlugin.check.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f674743da29]                                                       + 0x7c5a29
[0x7f67475fe289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f67cba28741]                                                       + 0x2d7741
[0x7f67d032f9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f67d03b5084]                                                       + 0x153084
[0x7f67d03ba50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f67d03b4b9a]                                                       + 0x152b9a
[0x7f67d03b51b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f67d0307f1e]                                                       + 0xa5f1e
[0x7f67d02d8f2b]    PyObject_Call                                      + 0x4b
[0x7f67d03ba770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f67d03b4b9a]                                                       + 0x152b9a
[0x7f67d03b4f94]                                                       + 0x152f94
[0x7f67d03ba50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f67d03b4b9a]                                                       + 0x152b9a
[0x7f67d03b4f94]                                                       + 0x152f94
[0x7f67d03ba50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f67d03b4193]                                                       + 0x152193
[0x7f67d03b515c]                                                       + 0x15315c
[0x7f67d03ba50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f67d03b4b9a]                                                       + 0x152b9a
[0x7f67d03b4f94]                                                       + 0x152f94
[0x7f67d03ba50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f67d03b4b9a]                                                       + 0x152b9a
[0x7f67d03b51b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f67d03b51df]    PyEval_EvalCode                                    + 0x1f
[0x7f67d03ea3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f67d03ea56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f67d04048e8]    Py_Main                                            + 0xff8
[0x5630aa8012b8]    main                                               + 0x178
[0x7f67d00790b3]    __libc_start_main                                  + 0xf3
[0x5630aa80136e]    _start                                             + 0x2e


======================================== webpack/schemas/plugins/container/ModuleFederationPlugin.check.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f65d0f5ca29]                                                       + 0x7c5a29
[0x7f65d111d289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f6655547741]                                                       + 0x2d7741
[0x7f6659e4e9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f6659ed4084]                                                       + 0x153084
[0x7f6659ed950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6659ed3b9a]                                                       + 0x152b9a
[0x7f6659ed41b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f6659e26f1e]                                                       + 0xa5f1e
[0x7f6659df7f2b]    PyObject_Call                                      + 0x4b
[0x7f6659ed9770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f6659ed3b9a]                                                       + 0x152b9a
[0x7f6659ed3f94]                                                       + 0x152f94
[0x7f6659ed950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6659ed3b9a]                                                       + 0x152b9a
[0x7f6659ed3f94]                                                       + 0x152f94
[0x7f6659ed950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6659ed3193]                                                       + 0x152193
[0x7f6659ed415c]                                                       + 0x15315c
[0x7f6659ed950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6659ed3b9a]                                                       + 0x152b9a
[0x7f6659ed3f94]                                                       + 0x152f94
[0x7f6659ed950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6659ed3b9a]                                                       + 0x152b9a
[0x7f6659ed41b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f6659ed41df]    PyEval_EvalCode                                    + 0x1f
[0x7f6659f093d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f6659f0956f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f6659f238e8]    Py_Main                                            + 0xff8
[0x5639f7b1d2b8]    main                                               + 0x178
[0x7f6659b980b3]    __libc_start_main                                  + 0xf3
[0x5639f7b1d36e]    _start                                             + 0x2e


======================================== webpack-dev-middleware/dist/middleware.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 1063 is out of bounds for axis 0 with size 1063

======================================== whatwg-mimetype/lib/mime-type-parameters.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 307 is out of bounds for axis 0 with size 307

======================================== whatwg-url/dist/url-state-machine.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7ff1a369ca29]                                                       + 0x7c5a29
[0x7ff1a385d289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7ff227c87741]                                                       + 0x2d7741
[0x7ff22c58e9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7ff22c614084]                                                       + 0x153084
[0x7ff22c61950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff22c613b9a]                                                       + 0x152b9a
[0x7ff22c6141b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7ff22c566f1e]                                                       + 0xa5f1e
[0x7ff22c537f2b]    PyObject_Call                                      + 0x4b
[0x7ff22c619770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7ff22c613b9a]                                                       + 0x152b9a
[0x7ff22c613f94]                                                       + 0x152f94
[0x7ff22c61950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff22c613b9a]                                                       + 0x152b9a
[0x7ff22c613f94]                                                       + 0x152f94
[0x7ff22c61950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff22c613193]                                                       + 0x152193
[0x7ff22c61415c]                                                       + 0x15315c
[0x7ff22c61950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff22c613b9a]                                                       + 0x152b9a
[0x7ff22c613f94]                                                       + 0x152f94
[0x7ff22c61950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff22c613b9a]                                                       + 0x152b9a
[0x7ff22c6141b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7ff22c6141df]    PyEval_EvalCode                                    + 0x1f
[0x7ff22c6493d5]    PyRun_FileExFlags                                  + 0xb5
[0x7ff22c64956f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7ff22c6638e8]    Py_Main                                            + 0xff8
[0x56067d42d2b8]    main                                               + 0x178
[0x7ff22c2d80b3]    __libc_start_main                                  + 0xf3
[0x56067d42d36e]    _start                                             + 0x2e


======================================== ws/lib/websocket.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 4068 is out of bounds for axis 0 with size 4068

======================================== yaml/browser/dist/PlainValue-b8036b75.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fc0a196ba29]                                                       + 0x7c5a29
[0x7fc0a1b2c289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fc0a2a49741]                                                       + 0x2d7741
[0x7fc0a73509e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fc0a73d6084]                                                       + 0x153084
[0x7fc0a73db50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc0a73d5b9a]                                                       + 0x152b9a
[0x7fc0a73d61b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fc0a7328f1e]                                                       + 0xa5f1e
[0x7fc0a72f9f2b]    PyObject_Call                                      + 0x4b
[0x7fc0a73db770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fc0a73d5b9a]                                                       + 0x152b9a
[0x7fc0a73d5f94]                                                       + 0x152f94
[0x7fc0a73db50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc0a73d5b9a]                                                       + 0x152b9a
[0x7fc0a73d5f94]                                                       + 0x152f94
[0x7fc0a73db50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc0a73d5193]                                                       + 0x152193
[0x7fc0a73d615c]                                                       + 0x15315c
[0x7fc0a73db50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc0a73d5b9a]                                                       + 0x152b9a
[0x7fc0a73d5f94]                                                       + 0x152f94
[0x7fc0a73db50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc0a73d5b9a]                                                       + 0x152b9a
[0x7fc0a73d61b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fc0a73d61df]    PyEval_EvalCode                                    + 0x1f
[0x7fc0a740b3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fc0a740b56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fc0a74258e8]    Py_Main                                            + 0xff8
[0x55697f4fa2b8]    main                                               + 0x178
[0x7fc0a709a0b3]    __libc_start_main                                  + 0xf3
[0x55697f4fa36e]    _start                                             + 0x2e


======================================== yaml/browser/dist/index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fb1bbd68a29]                                                       + 0x7c5a29
[0x7fb1bbf29289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fb240353741]                                                       + 0x2d7741
[0x7fb244c5a9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fb244ce0084]                                                       + 0x153084
[0x7fb244ce550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb244cdfb9a]                                                       + 0x152b9a
[0x7fb244ce01b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fb244c32f1e]                                                       + 0xa5f1e
[0x7fb244c03f2b]    PyObject_Call                                      + 0x4b
[0x7fb244ce5770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fb244cdfb9a]                                                       + 0x152b9a
[0x7fb244cdff94]                                                       + 0x152f94
[0x7fb244ce550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb244cdfb9a]                                                       + 0x152b9a
[0x7fb244cdff94]                                                       + 0x152f94
[0x7fb244ce550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb244cdf193]                                                       + 0x152193
[0x7fb244ce015c]                                                       + 0x15315c
[0x7fb244ce550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb244cdfb9a]                                                       + 0x152b9a
[0x7fb244cdff94]                                                       + 0x152f94
[0x7fb244ce550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb244cdfb9a]                                                       + 0x152b9a
[0x7fb244ce01b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fb244ce01df]    PyEval_EvalCode                                    + 0x1f
[0x7fb244d153d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fb244d1556f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fb244d2f8e8]    Py_Main                                            + 0xff8
[0x557443ceb2b8]    main                                               + 0x178
[0x7fb2449a40b3]    __libc_start_main                                  + 0xf3
[0x557443ceb36e]    _start                                             + 0x2e


======================================== yaml/browser/dist/parse-cst.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f0591926a29]                                                       + 0x7c5a29
[0x7f0591ae7289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f0615f11741]                                                       + 0x2d7741
[0x7f061a8189e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f061a89e084]                                                       + 0x153084
[0x7f061a8a350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f061a89db9a]                                                       + 0x152b9a
[0x7f061a89e1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f061a7f0f1e]                                                       + 0xa5f1e
[0x7f061a7c1f2b]    PyObject_Call                                      + 0x4b
[0x7f061a8a3770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f061a89db9a]                                                       + 0x152b9a
[0x7f061a89df94]                                                       + 0x152f94
[0x7f061a8a350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f061a89db9a]                                                       + 0x152b9a
[0x7f061a89df94]                                                       + 0x152f94
[0x7f061a8a350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f061a89d193]                                                       + 0x152193
[0x7f061a89e15c]                                                       + 0x15315c
[0x7f061a8a350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f061a89db9a]                                                       + 0x152b9a
[0x7f061a89df94]                                                       + 0x152f94
[0x7f061a8a350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f061a89db9a]                                                       + 0x152b9a
[0x7f061a89e1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f061a89e1df]    PyEval_EvalCode                                    + 0x1f
[0x7f061a8d33d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f061a8d356f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f061a8ed8e8]    Py_Main                                            + 0xff8
[0x5653f33b92b8]    main                                               + 0x178
[0x7f061a5620b3]    __libc_start_main                                  + 0xf3
[0x5653f33b936e]    _start                                             + 0x2e


======================================== yaml/browser/dist/resolveSeq-492ab440.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f56e8170a29]                                                       + 0x7c5a29
[0x7f56e8331289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f576c75b741]                                                       + 0x2d7741
[0x7f57710629e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f57710e8084]                                                       + 0x153084
[0x7f57710ed50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f57710e7b9a]                                                       + 0x152b9a
[0x7f57710e81b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f577103af1e]                                                       + 0xa5f1e
[0x7f577100bf2b]    PyObject_Call                                      + 0x4b
[0x7f57710ed770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f57710e7b9a]                                                       + 0x152b9a
[0x7f57710e7f94]                                                       + 0x152f94
[0x7f57710ed50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f57710e7b9a]                                                       + 0x152b9a
[0x7f57710e7f94]                                                       + 0x152f94
[0x7f57710ed50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f57710e7193]                                                       + 0x152193
[0x7f57710e815c]                                                       + 0x15315c
[0x7f57710ed50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f57710e7b9a]                                                       + 0x152b9a
[0x7f57710e7f94]                                                       + 0x152f94
[0x7f57710ed50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f57710e7b9a]                                                       + 0x152b9a
[0x7f57710e81b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f57710e81df]    PyEval_EvalCode                                    + 0x1f
[0x7f577111d3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f577111d56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f57711378e8]    Py_Main                                            + 0xff8
[0x5594d741a2b8]    main                                               + 0x178
[0x7f5770dac0b3]    __libc_start_main                                  + 0xf3
[0x5594d741a36e]    _start                                             + 0x2e


======================================== yaml/dist/Document-9b4560a1.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 4443 is out of bounds for axis 0 with size 4443

======================================== yaml/dist/parse-cst.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f2adee39a29]                                                       + 0x7c5a29
[0x7f2adeffa289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f2adff17741]                                                       + 0x2d7741
[0x7f2ae481e9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f2ae48a4084]                                                       + 0x153084
[0x7f2ae48a950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f2ae48a3b9a]                                                       + 0x152b9a
[0x7f2ae48a41b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f2ae47f6f1e]                                                       + 0xa5f1e
[0x7f2ae47c7f2b]    PyObject_Call                                      + 0x4b
[0x7f2ae48a9770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f2ae48a3b9a]                                                       + 0x152b9a
[0x7f2ae48a3f94]                                                       + 0x152f94
[0x7f2ae48a950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f2ae48a3b9a]                                                       + 0x152b9a
[0x7f2ae48a3f94]                                                       + 0x152f94
[0x7f2ae48a950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f2ae48a3193]                                                       + 0x152193
[0x7f2ae48a415c]                                                       + 0x15315c
[0x7f2ae48a950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f2ae48a3b9a]                                                       + 0x152b9a
[0x7f2ae48a3f94]                                                       + 0x152f94
[0x7f2ae48a950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f2ae48a3b9a]                                                       + 0x152b9a
[0x7f2ae48a41b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f2ae48a41df]    PyEval_EvalCode                                    + 0x1f
[0x7f2ae48d93d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f2ae48d956f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f2ae48f38e8]    Py_Main                                            + 0xff8
[0x55c42cf6e2b8]    main                                               + 0x178
[0x7f2ae45680b3]    __libc_start_main                                  + 0xf3
[0x55c42cf6e36e]    _start                                             + 0x2e


======================================== yaml/dist/resolveSeq-d03cb037.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7ff4c39caa29]                                                       + 0x7c5a29
[0x7ff4c3b8b289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7ff4c4aa8741]                                                       + 0x2d7741
[0x7ff4c93af9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7ff4c9435084]                                                       + 0x153084
[0x7ff4c943a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff4c9434b9a]                                                       + 0x152b9a
[0x7ff4c94351b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7ff4c9387f1e]                                                       + 0xa5f1e
[0x7ff4c9358f2b]    PyObject_Call                                      + 0x4b
[0x7ff4c943a770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7ff4c9434b9a]                                                       + 0x152b9a
[0x7ff4c9434f94]                                                       + 0x152f94
[0x7ff4c943a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff4c9434b9a]                                                       + 0x152b9a
[0x7ff4c9434f94]                                                       + 0x152f94
[0x7ff4c943a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff4c9434193]                                                       + 0x152193
[0x7ff4c943515c]                                                       + 0x15315c
[0x7ff4c943a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff4c9434b9a]                                                       + 0x152b9a
[0x7ff4c9434f94]                                                       + 0x152f94
[0x7ff4c943a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7ff4c9434b9a]                                                       + 0x152b9a
[0x7ff4c94351b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7ff4c94351df]    PyEval_EvalCode                                    + 0x1f
[0x7ff4c946a3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7ff4c946a56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7ff4c94848e8]    Py_Main                                            + 0xff8
[0x55cea5cf22b8]    main                                               + 0x178
[0x7ff4c90f90b3]    __libc_start_main                                  + 0xf3
[0x55cea5cf236e]    _start                                             + 0x2e


======================================== yargs/build/lib/usage.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 4015 is out of bounds for axis 0 with size 4015

======================================== yargs/build/lib/yargs-factory.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fc62a611a29]                                                       + 0x7c5a29
[0x7fc62a7d2289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fc6aebfc741]                                                       + 0x2d7741
[0x7fc6b35039e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fc6b3589084]                                                       + 0x153084
[0x7fc6b358e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc6b3588b9a]                                                       + 0x152b9a
[0x7fc6b35891b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fc6b34dbf1e]                                                       + 0xa5f1e
[0x7fc6b34acf2b]    PyObject_Call                                      + 0x4b
[0x7fc6b358e770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fc6b3588b9a]                                                       + 0x152b9a
[0x7fc6b3588f94]                                                       + 0x152f94
[0x7fc6b358e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc6b3588b9a]                                                       + 0x152b9a
[0x7fc6b3588f94]                                                       + 0x152f94
[0x7fc6b358e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc6b3588193]                                                       + 0x152193
[0x7fc6b358915c]                                                       + 0x15315c
[0x7fc6b358e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc6b3588b9a]                                                       + 0x152b9a
[0x7fc6b3588f94]                                                       + 0x152f94
[0x7fc6b358e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc6b3588b9a]                                                       + 0x152b9a
[0x7fc6b35891b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fc6b35891df]    PyEval_EvalCode                                    + 0x1f
[0x7fc6b35be3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fc6b35be56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fc6b35d88e8]    Py_Main                                            + 0xff8
[0x560dcd06d2b8]    main                                               + 0x178
[0x7fc6b324d0b3]    __libc_start_main                                  + 0xf3
[0x560dcd06d36e]    _start                                             + 0x2e


======================================== yargs-parser/build/lib/yargs-parser.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f8fc50f7a29]                                                       + 0x7c5a29
[0x7f8fc52b8289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f90496e2741]                                                       + 0x2d7741
[0x7f904dfe99e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f904e06f084]                                                       + 0x153084
[0x7f904e07450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f904e06eb9a]                                                       + 0x152b9a
[0x7f904e06f1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f904dfc1f1e]                                                       + 0xa5f1e
[0x7f904df92f2b]    PyObject_Call                                      + 0x4b
[0x7f904e074770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f904e06eb9a]                                                       + 0x152b9a
[0x7f904e06ef94]                                                       + 0x152f94
[0x7f904e07450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f904e06eb9a]                                                       + 0x152b9a
[0x7f904e06ef94]                                                       + 0x152f94
[0x7f904e07450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f904e06e193]                                                       + 0x152193
[0x7f904e06f15c]                                                       + 0x15315c
[0x7f904e07450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f904e06eb9a]                                                       + 0x152b9a
[0x7f904e06ef94]                                                       + 0x152f94
[0x7f904e07450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f904e06eb9a]                                                       + 0x152b9a
[0x7f904e06f1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f904e06f1df]    PyEval_EvalCode                                    + 0x1f
[0x7f904e0a43d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f904e0a456f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f904e0be8e8]    Py_Main                                            + 0xff8
[0x55f4e68802b8]    main                                               + 0x178
[0x7f904dd330b3]    __libc_start_main                                  + 0xf3
[0x55f4e688036e]    _start                                             + 0x2e


