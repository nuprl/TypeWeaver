importKeyword
 Text.Whitespace
isSymbolName.Otherany0.4843complex0.2615string0.0662number0.0619boolean0.0171
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'../isSymbol.js'Literal.String.Single
\n\nText.Whitespace
Text
/** Used as references for various `Number` constants. */Comment.Multiline
\nText.Whitespace
constKeyword.Declaration
 Text.Whitespace
INFINITYName.Othernumber0.8377any0.1347string0.0171boolean0.0034complex0.0029
 Text.Whitespace
=Operator
 Text.Whitespace
1Literal.Number.Float
 Text.Whitespace
/Operator
 Text.Whitespace
0Literal.Number.Float
\n\nText.Whitespace
Text
/** Used to convert symbols to primitives and strings. */Comment.Multiline
\nText.Whitespace
constKeyword.Declaration
 Text.Whitespace
symbolToStringName.Otherany0.6012number0.3265string0.0410boolean0.0092symbol0.0070
 Text.Whitespace
=Operator
 Text.Whitespace
SymbolName.BuiltinSymbolConstructor0.6359any0.3238complex0.0130symbol0.0087void0.0021
.Punctuation
prototypeName.Otherany0.7722symbol0.0289Error0.0112number0.0095void0.0094
.Punctuation
toStringName.Otherany0.4736string0.4577complex0.0404number0.0065string)0.0012
\n\nText.Whitespace
Text
/**\n * The base implementation of `toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */Comment.Multiline
\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
baseToStringName.Otherany0.4798string0.4018number0.0396boolean0.0281complex0.0143
(Punctuation
valueName.Otherany0.7143string0.2593number0.0118complex0.0042boolean0.0016
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
// Exit early for strings to avoid a performance hit in some environments.Comment.Single
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
typeofOperator.Word
 Text.Whitespace
valueName.Otherany0.9384string0.0384complex0.0099number0.0034{}0.0028
 Text.Whitespace
===Operator
 Text.Whitespace
'string'Literal.String.Single
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
valueName.Otherany0.5445string0.4210number0.0135any[]0.0041boolean0.0036
\n  Text.Whitespace
}Punctuation
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
ArrayName.BuiltinArrayConstructor0.9986any0.0003complex0.0001any[]0.0000Math0.0000
.Punctuation
isArrayName.Othercomplex0.9900any0.0052boolean0.0014any[]0.0013string0.0006
(Punctuation
valueName.Otherany0.9178string0.0277complex0.0242any[]0.0124number0.0097
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
// Recursively convert values (susceptible to call stack limits).Comment.Single
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
`Literal.String.Backtick
${Literal.String.Interpol
valueName.Otherany0.5410any[]0.3071string[]0.0612string0.0461complex0.0176
.Punctuation
mapName.OtherU[]0.6902any0.2307complex0.0608any[]0.0042void0.0018
(Punctuation
baseToStringName.Otherany0.5470string0.2529number0.1361complex0.0195boolean0.0146
)Punctuation
}Literal.String.Interpol
`Literal.String.Backtick
\n  Text.Whitespace
}Punctuation
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
isSymbolName.Otherany0.4385complex0.2983boolean0.1390string0.0567number0.0399
(Punctuation
valueName.Otherany0.8755string0.0934number0.0149complex0.0074any[]0.0033
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
symbolToStringName.Otherany0.4937boolean0.2512string0.1751number0.0525any[]0.0097
 Text.Whitespace
?Operator
 Text.Whitespace
symbolToStringName.Otherany0.8041string0.1362number0.0282any[]0.0113boolean0.0058
.Punctuation
callName.Otherany0.9779string0.0145number0.0027complex0.0022any[]0.0008
(Punctuation
valueName.Otherany0.5296string0.4099number0.0418complex0.0036boolean0.0024
)Punctuation
 Text.Whitespace
:Operator
 Text.Whitespace
''Literal.String.Single
\n  Text.Whitespace
}Punctuation
\n  Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
resultName.Otherstring0.7427any0.2236number0.0117complex0.0058any[]0.0027
 Text.Whitespace
=Operator
 Text.Whitespace
`Literal.String.Backtick
${Literal.String.Interpol
valueName.Otherstring0.5030any0.4027number0.0619complex0.0104any[]0.0044
}Literal.String.Interpol
`Literal.String.Backtick
\n  Text.Whitespace
returnKeyword
 Text.Whitespace
(Punctuation
resultName.Otherstring0.6444any0.3327number0.0164complex0.0018boolean0.0013
 Text.Whitespace
===Operator
 Text.Whitespace
'0'Literal.String.Single
 Text.Whitespace
&&Operator
 Text.Whitespace
(Punctuation
1Literal.Number.Float
 Text.Whitespace
/Operator
 Text.Whitespace
valueName.Othernumber0.4895any0.2981string0.2018complex0.0034boolean0.0025
)Punctuation
 Text.Whitespace
===Operator
 Text.Whitespace
-Operator
INFINITYName.Othernumber0.8085any0.0831string0.0754boolean0.0258complex0.0023
)Punctuation
 Text.Whitespace
?Operator
 Text.Whitespace
'-0'Literal.String.Single
 Text.Whitespace
:Operator
 Text.Whitespace
resultName.Otherany0.5650string0.3440number0.0336boolean0.0098void0.0094
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
exportKeyword
 Text.Whitespace
defaultKeyword
 Text.Whitespace
baseToStringName.Otherany0.4560string0.0765number0.0627complex0.0356boolean0.0257
\nText.Whitespace
