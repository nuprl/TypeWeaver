importKeyword
 Text.Whitespace
baseFlattenName.Otherany0.0914complex0.0625boolean0.0323void0.0302string0.0185
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./.internal/baseFlatten.js'Literal.String.Single
\nText.Whitespace
importKeyword
 Text.Whitespace
baseUniqName.Otherany0.1294boolean0.0623complex0.0540string0.0516void0.0405
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./.internal/baseUniq.js'Literal.String.Single
\nText.Whitespace
importKeyword
 Text.Whitespace
isArrayLikeObjectName.Otherany0.1398complex0.0570boolean0.0545string0.0391void0.0343
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./isArrayLikeObject.js'Literal.String.Single
\nText.Whitespace
importKeyword
 Text.Whitespace
lastName.Otherany0.3256string0.0998complex0.0679void0.0497boolean0.0322
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./last.js'Literal.String.Single
\n\nText.Whitespace
Text
/**\n * This method is like `union` except that it accepts `iteratee` which is\n * invoked for each element of each `arrays` to generate the criterion by\n * which uniqueness is computed. Result values are chosen from the first\n * array in which the value occurs. The iteratee is invoked with one argument:\n * (value).\n *\n * @since 4.0.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @param {Function} iteratee The iteratee invoked per element.\n * @returns {Array} Returns the new array of combined values.\n * @see difference, union, unionWith, without, xor, xorBy\n * @example\n *\n * unionBy([2.1], [1.2, 2.3], Math.floor)\n * // => [2.1, 1.2]\n */Comment.Multiline
\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
unionByName.Otherany0.1863string0.1019complex0.0968boolean0.0467number0.0135
(Punctuation
...Punctuation
arraysName.Otherany[]0.3555any0.1917string[]0.0394complex0.0163number[]0.0154
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
iterateeName.Otherany0.7041string0.0235boolean0.0086complex0.0075any[]0.0073
 Text.Whitespace
=Operator
 Text.Whitespace
lastName.Otherany0.7651string0.0475complex0.0298any[]0.0127boolean0.0118
(Punctuation
arraysName.Otherany0.4140any[]0.1623complex0.0327string0.0263string[]0.0190
)Punctuation
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
isArrayLikeObjectName.Otherboolean0.5367any0.2387complex0.0419string0.0270any[]0.0103
(Punctuation
iterateeName.Otherany0.6710string0.0358number0.0094complex0.0081any[]0.0067
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
iterateeName.Otherany0.7523string0.0233{}0.0112complex0.0082any[]0.0080
 Text.Whitespace
=Operator
 Text.Whitespace
undefinedKeyword.Constant
\n  Text.Whitespace
}Punctuation
\n  Text.Whitespace
returnKeyword
 Text.Whitespace
baseUniqName.Otherany0.3643complex0.2460number0.0172void0.0164any[]0.0162
(Punctuation
baseFlattenName.Otherany0.3515complex0.3061boolean0.0316string0.0215any[]0.0160
(Punctuation
arraysName.Otherany0.5124any[]0.1231number[]0.0251complex0.0236number0.0174
,Punctuation
 Text.Whitespace
1Literal.Number.Float
,Punctuation
 Text.Whitespace
isArrayLikeObjectName.Otherany0.3680boolean0.1366number0.0500complex0.0375void0.0282
,Punctuation
 Text.Whitespace
trueKeyword.Constant
)Punctuation
,Punctuation
 Text.Whitespace
iterateeName.Otherany0.5546{}0.0470string0.0276boolean0.0185any[]0.0168
)Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
exportKeyword
 Text.Whitespace
defaultKeyword
 Text.Whitespace
unionByName.Otherany0.3279complex0.0233void0.0187boolean0.0165number0.0120
\nText.Whitespace
