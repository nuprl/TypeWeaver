#!/usr/bin/env nodeComment.Hashbang
\nText.Whitespace
Text
/*\n * As of version 1.13.0, dashdash changed the meaning of 'positiveInteger'\n * to NOT accept zero. This example shows how to add a custom option type\n * that supports the old behaviour, if needed.\n */Comment.Multiline
\n\nText.Whitespace
importKeyword
 Text.Whitespace
pathName.Otherany0.9039string0.0615complex0.0221string[]0.0016void0.0015
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'path'Literal.String.Single
;Punctuation
\n\nText.Whitespace
importKeyword
 Text.Whitespace
{Punctuation
 Text.Whitespace
formatName.Otherany0.4896string0.3685complex0.0807void0.0229number0.0200
 Text.Whitespace
}Punctuation
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'util'Literal.String.Single
;Punctuation
\nText.Whitespace
importKeyword
 Text.Whitespace
dashdashName.Otherany0.4861string0.1122void0.0960boolean0.0682complex0.0461
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'../lib/dashdash'Literal.String.Single
;Punctuation
\n\n\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
parseIntGteZeroName.Otherany0.3345string0.2646boolean0.1935void0.0695complex0.0304
(Punctuation
optionName.Otherstring0.7075any0.2508number0.0100boolean0.0041complex0.0020
,Punctuation
 Text.Whitespace
optstrName.Otherstring0.6355any0.2076boolean0.0704number0.0627Function0.0019
,Punctuation
 Text.Whitespace
argName.Otherstring0.5573any0.4218number0.0059Object0.0027boolean0.0020
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
varKeyword.Declaration
 Text.Whitespace
numName.Othernumber0.9409any0.0432boolean0.0086string0.0020complex0.0016
 Text.Whitespace
=Operator
 Text.Whitespace
NumberName.BuiltinNumberConstructor0.9985Number0.0002Math0.0000Console0.0000Window0.0000
(Punctuation
argName.Otherany0.5863string0.3997number0.0041complex0.0020Object0.0013
)Punctuation
;Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
/^[0-9]+$/Literal.String.Regex
.Punctuation
testName.Otherboolean0.9849any0.0045string0.0039number0.0024complex0.0017
(Punctuation
argName.Otherany0.5972string0.3919number0.0055complex0.0009boolean0.0007
)Punctuation
 Text.Whitespace
||Operator
 Text.Whitespace
isNaNName.Builtinboolean0.9890any0.0038number0.0034string0.0022complex0.0007
(Punctuation
numName.Othernumber0.8933any0.0945string0.0085boolean0.0015complex0.0014
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
throwKeywordany0.8676Error0.0694number0.0296string0.0154complex0.0093
 Text.Whitespace
newOperator.Wordany0.7897Error0.0974string0.0501ErrorConstructor0.0375complex0.0085
 Text.Whitespace
ErrorName.ExceptionErrorConstructor1.0000any0.0000Error0.0000complex0.0000void0.0000
(Punctuation
formatName.Otherany0.6426string0.2869complex0.0587number0.0062void0.0007
(Punctuation
'arg for "%s" is not an integer >=0: "%s"'Literal.String.Single
,Punctuation
\n            Text.Whitespace
optstrName.Otherstring0.5785any0.3016number0.0898boolean0.0165string[]0.0028
,Punctuation
 Text.Whitespace
argName.Otherany0.6462string0.3400number0.0074Error0.0014complex0.0011
)Punctuation
)Punctuation
;Punctuation
\n    Text.Whitespace
}Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
numName.Othernumber0.8456any0.1276string0.0190boolean0.0031complex0.0019
;Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
dashdashName.Otherany0.9790complex0.0064string0.0008number0.0007boolean0.0004
.Punctuation
addOptionTypeName.Otherany0.7301void0.1862complex0.0190boolean0.0163string0.0137
(Punctuation
{Punctuation
\n    Text.Whitespace
nameName.Otherstring0.9977any0.0011number0.0004boolean0.0002RegExp0.0002
:Operator
 Text.Whitespace
'intGteZero'Literal.String.Single
,Punctuation
\n    Text.Whitespace
takesArgName.Otherboolean0.9979string0.0008number0.0005any0.0004false0.0001
:Operator
 Text.Whitespace
trueKeyword.Type
,Punctuation
\n    Text.Whitespace
helpArgName.Otherstring0.9771any0.0109RegExp0.0063boolean0.0033number0.0016
:Operator
 Text.Whitespace
'INT'Literal.String.Single
,Punctuation
\n    Text.Whitespace
parseArgName.Otherstring0.3763any0.2486boolean0.2367number0.0997any[]0.0056
:Operator
 Text.Whitespace
parseIntGteZeroKeyword.Typestring0.4072boolean0.2827any0.1651number0.0884string[]0.0109
\nText.Whitespace
}Punctuation
)Punctuation
;Punctuation
\n\n\nText.Whitespace
// --- example parsing using intGteZero typeComment.Single
\n\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
optionsName.Othercomplex0.8698any0.0732any[]0.0343{}0.0036Object0.0023
 Text.Whitespace
=Operator
 Text.Whitespace
[Punctuation
\n    Text.Whitespace
{Punctuation
 Text.Whitespace
namesName.Otherstring[]0.9939string[][]0.0012number[]0.0011any[]0.0010RegExp[]0.0009
:Operator
 Text.Whitespace
[Punctuation
'num'Literal.String.Single
,Punctuation
 Text.Whitespace
'n'Literal.String.Single
]Punctuation
,Punctuation
 Text.Whitespace
typeKeyword.Reserved
:Operator
 Text.Whitespace
'intGteZero'Literal.String.Single
 Text.Whitespace
}Punctuation
\nText.Whitespace
]Punctuation
;Punctuation
\n\nText.Whitespace
tryKeyword
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
varKeyword.Declaration
 Text.Whitespace
optsName.Otherany0.6512complex0.1591Options0.0052{}0.0019number0.0018
 Text.Whitespace
=Operator
 Text.Whitespace
dashdashName.Otherany0.8929complex0.0882number0.0008any[]0.0005string0.0005
.Punctuation
parseName.Otherany0.5909complex0.3615number0.0046void0.0023boolean0.0019
(Punctuation
{Punctuation
optionsName.Othercomplex0.4247any0.4108any[]0.0369{}0.0173number0.0114
:Operator
 Text.Whitespace
optionsKeyword.Typecomplex0.5685any0.3034{}0.0159any[]0.0157number0.0087
}Punctuation
)Punctuation
;Punctuation
\nText.Whitespace
}Punctuation
 Text.Whitespace
catchKeyword
 Text.Whitespace
(Punctuation
eName.Otherany0.9967Error0.0016string0.0005complex0.0005number0.0003
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
consoleName.OtherConsole0.9998any0.0001void0.0000complex0.0000number0.0000
.Punctuation
errorName.Othervoid0.9950complex0.0030any0.0013Promise<void>0.0002boolean0.0000
(Punctuation
'%s: error: %s'Literal.String.Single
,Punctuation
 Text.Whitespace
pathName.Otherany0.9985complex0.0012string0.0002any[]0.0000void0.0000
.Punctuation
basenameName.Otherany0.9931complex0.0060string0.0007void0.0001number0.0000
(Punctuation
processName.Otherany0.9990complex0.0009void0.0000string0.0000Process0.0000
.Punctuation
argvName.Otherany0.9977complex0.0008string[]0.0005string0.0004any[]0.0001
[Punctuation
1Literal.Number.Float
]Punctuation
)Punctuation
,Punctuation
 Text.Whitespace
eName.Otherany0.9532Error0.0338complex0.0035Event0.0006string0.0004
.Punctuation
messageName.Otherany0.9045string0.0909complex0.0023string[]0.0006number0.0005
)Punctuation
;Punctuation
\n    Text.Whitespace
processName.Otherany0.9965complex0.0025Process0.0002void0.0001string0.0001
.Punctuation
exitName.Otherany0.9715void0.0243complex0.0012number0.0007Promise<any>0.0006
(Punctuation
1Literal.Number.Float
)Punctuation
;Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
optsName.Otherany0.6860complex0.1368Options0.0156number0.0041boolean0.0031
.Punctuation
numName.Otherany0.5569number0.3917boolean0.0291string0.0119complex0.0062
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
consoleName.OtherConsole0.9999any0.0000void0.0000complex0.0000number0.0000
.Punctuation
logName.Othervoid0.9977complex0.0011any0.0005Promise<void>0.0001number0.0001
(Punctuation
'num: %d'Literal.String.Single
,Punctuation
 Text.Whitespace
optsName.Othercomplex0.4778any0.3978Options0.0104number0.0057{}0.0038
.Punctuation
numName.Othernumber0.5712any0.3793string0.0240complex0.0148boolean0.0053
)Punctuation
;Punctuation
\nText.Whitespace
}Punctuation
\nText.Whitespace
