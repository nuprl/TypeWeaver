importKeyword
 Text.Whitespace
onceName.Otherany0.4631void0.0536T[]0.0417complex0.0346T0.0298
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./internal/once.js'Literal.String.Single
\nText.Whitespace
importKeyword
 Text.Whitespace
wrapAsyncName.Othervoid0.2967any0.2034complex0.0620boolean0.0538Promise<void>0.0271
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./internal/wrapAsync.js'Literal.String.Single
\nText.Whitespace
importKeyword
 Text.Whitespace
awaitifyName.Otherany0.3025void0.2792complex0.0648boolean0.0464Promise<void>0.0278
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./internal/awaitify.js'Literal.String.Single
\n\nText.Whitespace
Text
/**\n * Runs the `tasks` array of functions in parallel, without waiting until the\n * previous function has completed. Once any of the `tasks` complete or pass an\n * error to its callback, the main `callback` is immediately called. It's\n * equivalent to `Promise.race()`.\n *\n * @name race\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array} tasks - An array containing [async functions]{@link AsyncFunction}\n * to run. Each function can complete with an optional `result` value.\n * @param {Function} callback - A callback to run once any of the functions have\n * completed. This function gets an error or result from the first function that\n * completed. Invoked with (err, result).\n * @returns {Promise} a promise, if a callback is omitted\n * @example\n *\n * async.race([\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ],\n * // main callback\n * function(err, result) {\n *     // the result will be equal to 'two' as it finishes earlier\n * });\n */Comment.Multiline
\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
raceName.Otherany0.3872void0.2625complex0.1258boolean0.0637Function0.0200
(Punctuation
tasksName.Otherany0.7823any[]0.0433void0.0094string0.0086T[]0.0086
,Punctuation
 Text.Whitespace
callbackName.Otherany0.7563Function0.1174void0.0359number0.0245boolean0.0080
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
callbackName.Otherany0.8523Function0.0828void0.0180number0.0144boolean0.0062
 Text.Whitespace
=Operator
 Text.Whitespace
onceName.Otherany0.9028Function0.0099number0.0085T0.0068any[]0.0050
(Punctuation
callbackName.Otherany0.8024void0.0694Function0.0691number0.0159boolean0.0062
)Punctuation
;Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
ArrayName.BuiltinArrayConstructor0.9991any0.0002ObjectConstructor0.0000Math0.0000complex0.0000
.Punctuation
isArrayName.Othercomplex0.9940any0.0019boolean0.0014any[]0.0007void0.0003
(Punctuation
tasksName.Otherany0.5843any[]0.2943complex0.0209number[]0.0077T0.0056
)Punctuation
)Punctuation
 Text.Whitespace
returnKeyword
 Text.Whitespace
callbackName.Otherany0.3752void0.1656Function0.1286boolean0.0871any[]0.0270
(Punctuation
newOperator.Wordany0.1905boolean0.1617complex0.1178string[]0.0703any[]0.0691
 Text.Whitespace
TypeErrorName.ExceptionTypeErrorConstructor0.9833ErrorConstructor0.0032any0.0005complex0.0004undefined0.0003
(Punctuation
'First argument to race must be an array of functions'Literal.String.Single
)Punctuation
)Punctuation
;Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
tasksName.Otherany0.4436any[]0.1871T[]0.0232number[]0.0098void)[]0.0065
.Punctuation
lengthName.Othernumber0.8233any0.1716void0.0016string0.0010boolean0.0009
)Punctuation
 Text.Whitespace
returnKeyword
 Text.Whitespace
callbackName.Otherany0.4712void0.2669Function0.1612number0.0222boolean0.0106
(Punctuation
)Punctuation
;Punctuation
\n    Text.Whitespace
forKeyword
 Text.Whitespace
(Punctuation
varKeyword.Declaration
 Text.Whitespace
iName.Othernumber0.9920any0.0074string0.0002boolean0.0001void0.0001
 Text.Whitespace
=Operator
 Text.Whitespace
0Literal.Number.Float
,Punctuation
 Text.Whitespace
lName.Othernumber0.7411any0.2498string0.0044boolean0.0028void0.0005
 Text.Whitespace
=Operator
 Text.Whitespace
tasksName.Otherany0.4325any[]0.2457number[]0.0234T[]0.0163string[]0.0087
.Punctuation
lengthName.Othernumber0.7985any0.1988string0.0010void0.0005complex0.0003
;Punctuation
 Text.Whitespace
iName.Othernumber0.9228any0.0754void0.0008string0.0004boolean0.0003
 Text.Whitespace
<Operator
 Text.Whitespace
lName.Othernumber0.6970any0.2978string0.0027boolean0.0015void0.0005
;Punctuation
 Text.Whitespace
iName.Othernumber0.9552any0.0434void0.0006string0.0003boolean0.0003
++Operator
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
wrapAsyncName.Othervoid0.8874any0.0837Promise<void>0.0064complex0.0057number0.0042
(Punctuation
tasksName.Otherany0.5324any[]0.1343T[]0.0090string[]0.0052T0.0047
[Punctuation
iName.Othernumber0.9582any0.0392string0.0012void0.0006boolean0.0002
]Punctuation
)Punctuation
(Punctuation
callbackName.Otherany0.7330void0.1192Function0.0733number0.0355boolean0.0147
)Punctuation
;Punctuation
\n    Text.Whitespace
}Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
exportKeyword
 Text.Whitespace
defaultKeyword
 Text.Whitespace
awaitifyName.Otherany0.5845void0.2423complex0.0648boolean0.0268number0.0094
(Punctuation
raceName.Otherany0.5606complex0.2106boolean0.0687number0.0542string0.0423
,Punctuation
 Text.Whitespace
2Literal.Number.Float
)Punctuation
\nText.Whitespace
