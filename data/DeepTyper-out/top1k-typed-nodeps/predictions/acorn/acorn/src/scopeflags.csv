Text
// Each scope gets a bitset that may contain these flagsComment.Single
\nText.Whitespace
exportKeyword
 Text.Whitespace
constKeyword.Declaration
\n    Text.Whitespace
SCOPE_TOPName.Otherany0.3416number0.1068Promise<any>0.0084Promise<number>0.0061Request0.0061
 Text.Whitespace
=Operator
 Text.Whitespace
1Literal.Number.Float
,Punctuation
\n    Text.Whitespace
SCOPE_FUNCTIONName.Otherany0.6029number0.1102string0.0116complex0.0078Promise<any>0.0038
 Text.Whitespace
=Operator
 Text.Whitespace
2Literal.Number.Float
,Punctuation
\n    Text.Whitespace
SCOPE_ASYNCName.Otherany0.6844number0.0979string0.0116complex0.0079Promise<any>0.0027
 Text.Whitespace
=Operator
 Text.Whitespace
4Literal.Number.Float
,Punctuation
\n    Text.Whitespace
SCOPE_GENERATORName.Otherany0.7339number0.0865string0.0109complex0.0079Error0.0024
 Text.Whitespace
=Operator
 Text.Whitespace
8Literal.Number.Float
,Punctuation
\n    Text.Whitespace
SCOPE_ARROWName.Otherany0.7680number0.0789string0.0103complex0.0076Error0.0024
 Text.Whitespace
=Operator
 Text.Whitespace
16Literal.Number.Float
,Punctuation
\n    Text.Whitespace
SCOPE_SIMPLE_CATCHName.Otherany0.7907number0.0754string0.0099complex0.0074Error0.0024
 Text.Whitespace
=Operator
 Text.Whitespace
32Literal.Number.Float
,Punctuation
\n    Text.Whitespace
SCOPE_SUPERName.Otherany0.8034number0.0777string0.0100complex0.0072Error0.0023
 Text.Whitespace
=Operator
 Text.Whitespace
64Literal.Number.Float
,Punctuation
\n    Text.Whitespace
SCOPE_DIRECT_SUPERName.Otherany0.8013number0.0898string0.0110complex0.0073Error0.0024
 Text.Whitespace
=Operator
 Text.Whitespace
128Literal.Number.Float
,Punctuation
\n    Text.Whitespace
SCOPE_CLASS_STATIC_BLOCKName.Otherany0.7881number0.1270string0.0108complex0.0064boolean0.0022
 Text.Whitespace
=Operator
 Text.Whitespace
256Literal.Number.Float
,Punctuation
\n    Text.Whitespace
SCOPE_VARName.Otherany0.9239number0.0238complex0.0168string0.0053boolean0.0014
 Text.Whitespace
=Operator
 Text.Whitespace
SCOPE_TOPName.Otherany0.9182number0.0287complex0.0120string0.0063boolean0.0010
 Text.Whitespace
|Operator
 Text.Whitespace
SCOPE_FUNCTIONName.Otherany0.9784number0.0112string0.0023complex0.0017T0.0003
 Text.Whitespace
|Operator
 Text.Whitespace
SCOPE_CLASS_STATIC_BLOCKName.Otherany0.9922number0.0026complex0.0013string0.0009void0.0002
\n\nText.Whitespace
exportKeyword
 Text.Whitespace
functionKeyword.Declaration
 Text.Whitespace
functionFlagsName.Otherany0.2394number0.0913complex0.0225string0.0175Promise<{}>0.0136
(Punctuation
asyncKeyword
,Punctuation
 Text.Whitespace
generatorName.Othernumber0.0105Range0.0092IState0.0086Position0.0084Point0.0049
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
returnKeyword
 Text.Whitespace
SCOPE_FUNCTIONName.Otherany0.8775number0.0784string0.0063complex0.0063boolean0.0017
 Text.Whitespace
|Operator
 Text.Whitespace
(Punctuation
asyncKeyword
 Text.Whitespace
?Operator
 Text.Whitespace
SCOPE_ASYNCName.Othernumber0.9283any0.0264string0.0156boolean0.0032complex0.0005
 Text.Whitespace
:Operator
 Text.Whitespace
0Keyword.Type
)Punctuation
 Text.Whitespace
|Operator
 Text.Whitespace
(Punctuation
generatorName.Otherboolean0.0382number0.0212string0.0114IState0.0063Position0.0063
 Text.Whitespace
?Operator
 Text.Whitespace
SCOPE_GENERATORName.Othernumber0.8453string0.0283any0.0246boolean0.0117Error0.0033
 Text.Whitespace
:Operator
 Text.Whitespace
0Keyword.Type
)Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
Text
// Used in checkLVal* and declareName to determine the type of a bindingComment.Single
\nText.Whitespace
exportKeyword
 Text.Whitespace
constKeyword.Declaration
\n    Text.Whitespace
BIND_NONEName.Otherany0.3963number0.3363string0.0224Promise<any>0.0050complex0.0042
 Text.Whitespace
=Operator
 Text.Whitespace
0Literal.Number.Float
,Punctuation
 Text.Whitespace
// Not a bindingComment.Single
\n    Text.Whitespace
BIND_VARName.Otherany0.4954number0.3264string0.0325complex0.0045boolean0.0043
 Text.Whitespace
=Operator
 Text.Whitespace
1Literal.Number.Float
,Punctuation
 Text.Whitespace
// Var-style bindingComment.Single
\n    Text.Whitespace
BIND_LEXICALName.Otherany0.4471number0.3890string0.0313boolean0.0045complex0.0040
 Text.Whitespace
=Operator
 Text.Whitespace
2Literal.Number.Float
,Punctuation
 Text.Whitespace
// Let- or const-style bindingComment.Single
\n    Text.Whitespace
BIND_FUNCTIONName.Othernumber0.4836any0.3671string0.0266boolean0.0045complex0.0032
 Text.Whitespace
=Operator
 Text.Whitespace
3Literal.Number.Float
,Punctuation
 Text.Whitespace
// Function declarationComment.Single
\n    Text.Whitespace
BIND_SIMPLE_CATCHName.Othernumber0.6186any0.2567string0.0218boolean0.0042complex0.0022
 Text.Whitespace
=Operator
 Text.Whitespace
4Literal.Number.Float
,Punctuation
 Text.Whitespace
// Simple (identifier pattern) catch bindingComment.Single
\n    Text.Whitespace
BIND_OUTSIDEName.Othernumber0.4645any0.3117string0.0285boolean0.0085complex0.0034
 Text.Whitespace
=Operator
 Text.Whitespace
5Literal.Number.Float
 Text.Whitespace
// Special case for function names as bound inside the functionComment.Single
\nText.Whitespace
