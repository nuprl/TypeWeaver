'use strict'Literal.String.Single
;Punctuation
\n\nText.Whitespace
constKeyword.Declaration
 Text.Whitespace
utilName.Otherany0.9985string0.0006void0.0003complex0.0002number0.0001
 Text.Whitespace
=Operator
 Text.Whitespace
requireName.Other
(Punctuation
'util'Literal.String.Single
)Punctuation
;Punctuation
\nText.Whitespace
constKeyword.Declaration
 Text.Whitespace
bracesName.Otherany0.9868string0.0058void0.0020boolean0.0011number0.0011
 Text.Whitespace
=Operator
 Text.Whitespace
requireName.Other
(Punctuation
'braces'Literal.String.Single
)Punctuation
;Punctuation
\nText.Whitespace
constKeyword.Declaration
 Text.Whitespace
picomatchName.Otherany0.9847string0.0061void0.0025boolean0.0017number0.0012
 Text.Whitespace
=Operator
 Text.Whitespace
requireName.Other
(Punctuation
'picomatch'Literal.String.Single
)Punctuation
;Punctuation
\nText.Whitespace
constKeyword.Declaration
 Text.Whitespace
utilsName.Otherany0.9979complex0.0012string0.0003any[]0.0002void0.0001
 Text.Whitespace
=Operator
 Text.Whitespace
requireName.Other
(Punctuation
'picomatch/lib/utils'Literal.String.Single
)Punctuation
;Punctuation
\nText.Whitespace
constKeyword.Declaration
 Text.Whitespace
isEmptyStringName.Otherany0.6009boolean0.3314string0.0501void0.0032complex0.0025
 Text.Whitespace
=Operator
 Text.Whitespace
valName.Otherany0.7795string0.1941boolean0.0195number0.0017complex0.0008
 Text.Whitespace
=>Punctuation
 Text.Whitespace
valName.Otherany0.7538string0.2307boolean0.0103number0.0016complex0.0009
 Text.Whitespace
===Operator
 Text.Whitespace
''Literal.String.Single
 Text.Whitespace
||Operator
 Text.Whitespace
valName.Otherany0.6926string0.2804boolean0.0199number0.0034complex0.0011
 Text.Whitespace
===Operator
 Text.Whitespace
'./'Literal.String.Single
;Punctuation
\n\nText.Whitespace
/**\n * Returns an array of strings that match one or more glob patterns.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm(list, patterns[, options]);\n *\n * console.log(mm(['a.js', 'a.txt'], ['*.js']));\n * //=> [ 'a.js' ]\n * ```\n * @param {String|Array<string>} `list` List of strings to match.\n * @param {String|Array<string>} `patterns` One or more glob patterns to use for matching.\n * @param {Object} `options` See available [options](#options)\n * @return {Array} Returns an array of matches\n * @summary false\n * @api public\n */Comment.Multiline
\n\nText.Whitespace
constKeyword.Declaration
 Text.Whitespace
micromatchName.Otherany0.8806void0.0152complex0.0124any[]0.0068string0.0059
 Text.Whitespace
=Operator
 Text.Whitespace
(Punctuation
listName.Otherany0.8385string[]0.0796any[]0.0215string0.0140complex0.0034
,Punctuation
 Text.Whitespace
patternsName.Otherany0.6297string[]0.3166any[]0.0245string0.0152complex0.0056
,Punctuation
 Text.Whitespace
optionsName.Otherany0.8910any[]0.0080Options0.0074complex0.0061number0.0041
)Punctuation
 Text.Whitespace
=>Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
patternsName.Otherstring[]0.3811any[]0.3038any0.2821complex0.0087number[]0.0045
 Text.Whitespace
=Operator
 Text.Whitespace
[Punctuation
]Punctuation
.Punctuation
concatName.Othercomplex0.7817any0.2041any[]0.0066void0.0015string0.0013
(Punctuation
patternsName.Otherstring[]0.4770any0.2707any[]0.2239complex0.0133string0.0040
)Punctuation
;Punctuation
\n  Text.Whitespace
listName.Otherany[]0.6166any0.2094string[]0.0782number[]0.0056any[][]0.0049
 Text.Whitespace
=Operator
 Text.Whitespace
[Punctuation
]Punctuation
.Punctuation
concatName.Othercomplex0.8731any0.1181any[]0.0043void0.0009string0.0007
(Punctuation
listName.Otherany0.4759string[]0.2435any[]0.1471complex0.0253string0.0065
)Punctuation
;Punctuation
\n\n  Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
omitName.OtherSet<any>0.7376Set<string>0.0991Set<number>0.0101any0.0077any[]0.0033
 Text.Whitespace
=Operator
 Text.Whitespace
newOperator.Wordany0.3943Set<any>0.2019SetConstructor0.0423Set<string>0.0296boolean0.0289
 Text.Whitespace
SetName.BuiltinSetConstructor0.9702Set<any>0.0127any0.0107Set<string>0.0004Set<number>0.0003
(Punctuation
)Punctuation
;Punctuation
\n  Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
keepName.OtherSet<any>0.8038Set<string>0.0337any[]0.0290Set<number>0.0097any0.0085
 Text.Whitespace
=Operator
 Text.Whitespace
newOperator.Wordany0.3359Set<any>0.2225SetConstructor0.0630boolean0.0439Set<string>0.0357
 Text.Whitespace
SetName.BuiltinSetConstructor0.9833Set<any>0.0081any0.0038Set<number>0.0003Set<string>0.0002
(Punctuation
)Punctuation
;Punctuation
\n  Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
itemsName.OtherSet<any>0.8231any[]0.0357Set<string>0.0349SetConstructor0.0085Set<number>0.0062
 Text.Whitespace
=Operator
 Text.Whitespace
newOperator.WordSet<any>0.2610any0.1738SetConstructor0.1479Set<string>0.0484boolean0.0179
 Text.Whitespace
SetName.BuiltinSetConstructor0.9807Set<any>0.0067any0.0057number0.0003Set<string>0.0003
(Punctuation
)Punctuation
;Punctuation
\n  Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
negativesName.Othernumber0.9770any0.0162boolean0.0027string0.0019void0.0005
 Text.Whitespace
=Operator
 Text.Whitespace
0Literal.Number.Float
;Punctuation
\n\n  Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
onResultName.Otherany0.4653void0.1965boolean0.0968string0.0479Function0.0465
 Text.Whitespace
=Operator
 Text.Whitespace
stateName.Otherany0.7486State0.0217boolean0.0159string0.0107void0.0062
 Text.Whitespace
=>Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
itemsName.OtherSet<any>0.2432any0.1541any[]0.1505Set<string>0.0333string[]0.0110
.Punctuation
addName.Otherany0.3787Set<any>0.1781Set<string>0.1420void0.0810complex0.0380
(Punctuation
stateName.Otherany0.4085State0.0279complex0.0266IState0.0183boolean0.0071
.Punctuation
outputName.Otherstring0.6577any0.2442any[]0.0111number0.0104void0.0070
)Punctuation
;Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
optionsName.Otherany0.2703Options0.0460Config0.0201complex0.0171ConnectionOptions0.0145
 Text.Whitespace
&&Operator
 Text.Whitespace
optionsName.Otherany0.0774Options0.0577Config0.0185ConnectionOptions0.0175IOptions0.0139
.Punctuation
onResultName.Otherany0.6496void0.1241boolean0.1142string0.0753Function0.0216
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
optionsName.Otherany0.3205Options0.0365complex0.0132T0.0120Logger0.0117
.Punctuation
onResultName.Otherany0.5623void0.3977Function0.0145boolean0.0092string0.0080
(Punctuation
stateName.Otherany0.7627string0.0837boolean0.0481number0.0139void0.0074
)Punctuation
;Punctuation
\n    Text.Whitespace
}Punctuation
\n  Text.Whitespace
}Punctuation
;Punctuation
\n\n  Text.Whitespace
forKeyword
 Text.Whitespace
(Punctuation
letKeyword.Declaration
 Text.Whitespace
iName.Othernumber0.9869any0.0110string0.0010boolean0.0003number[]0.0003
 Text.Whitespace
=Operator
 Text.Whitespace
0Literal.Number.Float
;Punctuation
 Text.Whitespace
iName.Othernumber0.9724any0.0245string0.0018boolean0.0003number[]0.0002
 Text.Whitespace
<Operator
 Text.Whitespace
patternsName.Otherstring[]0.7035any[]0.1293any0.1103number[]0.0346complex0.0077
.Punctuation
lengthName.Othernumber0.9384any0.0597string0.0009void0.0003complex0.0002
;Punctuation
 Text.Whitespace
iName.Othernumber0.9561any0.0425string0.0008boolean0.0003number[]0.0001
++Operator
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
isMatchName.Otherboolean0.9715any0.0181number0.0047string0.0032false0.0003
 Text.Whitespace
=Operator
 Text.Whitespace
picomatchName.Otherboolean0.5232any0.2097string0.2086number0.0154complex0.0136
(Punctuation
StringName.BuiltinStringConstructor0.9995String0.0003NumberConstructor0.0000string0.0000complex0.0000
(Punctuation
patternsName.Otherany0.5433string[]0.2652any[]0.1018complex0.0553number[]0.0090
[Punctuation
iName.Othernumber0.9710any0.0226string0.0052boolean0.0003complex0.0002
]Punctuation
)Punctuation
,Punctuation
 Text.Whitespace
{Punctuation
 Text.Whitespace
...Punctuation
optionsName.Otherany0.3982complex0.0590any[]0.0551{}0.0461Options0.0205
,Punctuation
 Text.Whitespace
onResultName.Otherany0.4455void0.2844string0.1210boolean0.0599Function0.0375
 Text.Whitespace
}Punctuation
,Punctuation
 Text.Whitespace
trueKeyword.Constant
)Punctuation
;Punctuation
\n    Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
negatedName.Otherboolean0.9930any0.0034string0.0012number0.0012true0.0002
 Text.Whitespace
=Operator
 Text.Whitespace
isMatchName.Otherboolean0.9009any0.0836number0.0018false0.0017complex0.0015
.Punctuation
stateName.Otherany0.8587boolean0.0571complex0.0188Object0.0059string0.0029
.Punctuation
negatedName.Otherboolean0.9825any0.0142string0.0015number0.0006complex0.0002
 Text.Whitespace
||Operator
 Text.Whitespace
isMatchName.Otherboolean0.8244any0.1521false0.0046number0.0029complex0.0024
.Punctuation
stateName.Otherany0.8517boolean0.0477complex0.0100string0.0061RegExp0.0046
.Punctuation
negatedExtglobName.Otherany0.6199boolean0.2484string0.1034number0.0191void0.0019
;Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
negatedName.Otherboolean0.9906any0.0039string0.0023number0.0011false0.0003
)Punctuation
 Text.Whitespace
negativesName.Othernumber0.9114any0.0683boolean0.0116string0.0066void0.0007
++Operator
;Punctuation
\n\n    Text.Whitespace
forKeyword
 Text.Whitespace
(Punctuation
letKeyword.Declaration
 Text.Whitespace
itemName.Otherany0.5912string0.3780boolean0.0093number0.0051complex0.0029
 Text.Whitespace
ofKeyword
 Text.Whitespace
listName.Otherany0.3332any[]0.2712string[]0.1061number[]0.0314List0.0118
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
matchedName.Otherboolean0.6538any0.1164any[]0.0303number0.0189complex0.0182
 Text.Whitespace
=Operator
 Text.Whitespace
isMatchName.Otherboolean0.9905any0.0053number0.0012void0.0006complex0.0006
(Punctuation
itemName.Otherstring0.4584any0.4492number0.0243boolean0.0132T0.0084
,Punctuation
 Text.Whitespace
trueKeyword.Constant
)Punctuation
;Punctuation
\n\n      Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
matchName.Otherboolean0.5320any0.3867string0.0595number0.0118void0.0020
 Text.Whitespace
=Operator
 Text.Whitespace
negatedName.Otherboolean0.9931any0.0023string0.0010true0.0007false0.0006
 Text.Whitespace
?Operator
 Text.Whitespace
!Operator
matched.isMatchName.Other
 Text.Whitespace
:Operator
 Text.Whitespace
matched.isMatchKeyword.Type
;Punctuation
\n      Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
matchName.Otherany0.8637string0.0963boolean0.0228number0.0030complex0.0020
)Punctuation
 Text.Whitespace
continueKeyword
;Punctuation
\n\n      Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
negatedName.Otherboolean0.9920any0.0035string0.0015number0.0005any[]0.0004
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
omitName.OtherSet<string>0.1519Set<any>0.0991any0.0065Tensor<Rank>0.0061Date0.0060
.Punctuation
addName.OtherSet<string>0.1855void0.1655any0.1525complex0.1397Set<any>0.0918
(Punctuation
matchedName.Othercomplex0.1647any0.0244any[]0.0220Tensor<Rank>0.0124number[]0.0105
.Punctuation
outputName.Otherstring0.9170any0.0521boolean0.0061number0.0045any[]0.0030
)Punctuation
;Punctuation
\n      Text.Whitespace
}Punctuation
 Text.Whitespace
elseKeyword
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
omitName.OtherSet<string>0.1320Set<any>0.1013complex0.0417any0.0111Tensor<Rank>0.0100
.Punctuation
deleteOperator.Word
(Punctuation
matchedName.Othercomplex0.3070any0.0393any[]0.0232Tensor<Rank>0.0118Object0.0091
.Punctuation
outputName.Otherstring0.9252any0.0427boolean0.0042string[]0.0039number0.0034
)Punctuation
;Punctuation
\n        Text.Whitespace
keepName.OtherT0.1782any0.1766Set<any>0.1666Set<string>0.0773any[]0.0618
.Punctuation
addName.OtherSet<any>0.2243void0.2050Set<string>0.1960any0.1138complex0.0382
(Punctuation
matchedName.Othercomplex0.1135any0.0302any[]0.0181Tensor<Rank>0.0154RegExpMatchArray0.0097
.Punctuation
outputName.Otherstring0.8958any0.0473number0.0096boolean0.0054string[]0.0036
)Punctuation
;Punctuation
\n      Text.Whitespace
}Punctuation
\n    Text.Whitespace
}Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
resultName.Otherany0.5452boolean0.1407any[]0.1020string0.0443number0.0348
 Text.Whitespace
=Operator
 Text.Whitespace
negativesName.Otherany0.4654string0.3414boolean0.0551number0.0507complex0.0186
 Text.Whitespace
===Operator
 Text.Whitespace
patternsName.Otherstring[]0.7336any[]0.1529any0.0556number[]0.0203string0.0060
.Punctuation
lengthName.Othernumber0.9483any0.0470string0.0019boolean0.0012complex0.0005
 Text.Whitespace
?Operator
 Text.Whitespace
[Punctuation
...Punctuation
itemsName.Otherany[]0.7608number[]0.0796string[]0.0529any0.0416number0.0070
]Punctuation
 Text.Whitespace
:Operator
 Text.Whitespace
[Punctuation
...Punctuation
keepName.Otherany[]0.4416T0.0955any0.0909number[]0.0267{}0.0246
]Punctuation
;Punctuation
\n  Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
matchesName.Otherany[]0.7026any0.0580string[]0.0356number[]0.0247complex0.0173
 Text.Whitespace
=Operator
 Text.Whitespace
resultName.Otherany[]0.5482any0.2111string[]0.0749number[]0.0318complex0.0245
.Punctuation
filterName.Othercomplex0.9384any0.0520v...0.0017boolean0.0008any[]0.0007
(Punctuation
itemName.Otherany0.4672string0.4281complex0.0288boolean0.0253number0.0059
 Text.Whitespace
=>Punctuation
 Text.Whitespace
!Operator
omitName.OtherSet<string>0.1340Set<any>0.1334complex0.1274any0.0609boolean0.0353
.Punctuation
hasName.Otherboolean0.9547any0.0357complex0.0025string0.0017{}0.0011
(Punctuation
itemName.Otherany0.4887string0.4804boolean0.0061number0.0060complex0.0050
)Punctuation
)Punctuation
;Punctuation
\n\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
optionsName.Otherany0.3386any[]0.0773complex0.0602Options0.0297boolean0.0218
 Text.Whitespace
&&Operator
 Text.Whitespace
matchesName.Otherany[]0.5700any0.2498string[]0.0562number[]0.0176complex0.0116
.Punctuation
lengthName.Othernumber0.6734any0.3218string0.0016boolean0.0011complex0.0009
 Text.Whitespace
===Operator
 Text.Whitespace
0Literal.Number.Float
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
optionsName.Otherany0.2804Options0.1206complex0.0638{}0.0164any[]0.0126
.Punctuation
failglobName.Otherboolean0.9104any0.0794string0.0035number0.0023complex0.0020
 Text.Whitespace
===Operator
 Text.Whitespace
trueKeyword.Constant
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
throwKeywordany0.5199Error0.3299complex0.0559string0.0350boolean0.0174
 Text.Whitespace
newOperator.Wordany0.5071Error0.2392string0.0965ErrorConstructor0.0841boolean0.0171
 Text.Whitespace
ErrorName.ExceptionErrorConstructor0.9999any0.0001Error0.0000complex0.0000any[]0.0000
(Punctuation
`Literal.String.Backtick
No matches found for "Literal.String.Backtick
${Literal.String.Interpol
patternsName.Otherstring[]0.7008any[]0.1495any0.0984complex0.0309number[]0.0048
.Punctuation
joinName.Otherstring0.9602any0.0344complex0.0015string[]0.0010boolean0.0009
(Punctuation
', 'Literal.String.Single
)Punctuation
}Literal.String.Interpol
"Literal.String.Backtick
`Literal.String.Backtick
)Punctuation
;Punctuation
\n    Text.Whitespace
}Punctuation
\n\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
optionsName.OtherOptions0.0996any0.0521complex0.0485ConnectionOptions0.0257any[]0.0126
.Punctuation
nonullName.Otherboolean0.8918any0.0822string0.0110complex0.0082number0.0026
 Text.Whitespace
===Operator
 Text.Whitespace
trueKeyword.Constant
 Text.Whitespace
||Operator
 Text.Whitespace
optionsName.Otherany0.1913Options0.1006complex0.0706any[]0.0220ConnectionOptions0.0114
.Punctuation
nullglobName.Otherboolean0.6785any0.2760string0.0219complex0.0124number0.0046
 Text.Whitespace
===Operator
 Text.Whitespace
trueKeyword.Constant
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
optionsName.Otherany0.4201Options0.1100complex0.0377any[]0.0192T0.0100
.Punctuation
unescapeName.Otherany0.7765string0.1462boolean0.0521number0.0101any[]0.0052
 Text.Whitespace
?Operator
 Text.Whitespace
patternsName.Otherany0.5028string[]0.2907any[]0.1662number[]0.0120complex0.0116
.Punctuation
mapName.OtherU[]0.8798any0.0872complex0.0281any[]0.0009boolean0.0003
(Punctuation
pName.Otherany0.7326string0.2496boolean0.0026any[]0.0026complex0.0017
 Text.Whitespace
=>Punctuation
 Text.Whitespace
pName.Otherany0.6912string0.3002complex0.0013boolean0.0011any[]0.0009
.Punctuation
replaceName.Othercomplex0.5724any0.4215string0.0016boolean0.0015void0.0007
(Punctuation
/\\/gLiteral.String.Regex
,Punctuation
 Text.Whitespace
''Literal.String.Single
)Punctuation
)Punctuation
 Text.Whitespace
:Operator
 Text.Whitespace
patternsName.Otherany0.6327string[]0.1666any[]0.0920string0.0605complex0.0225
;Punctuation
\n    Text.Whitespace
}Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
returnKeyword
 Text.Whitespace
matchesName.Otherany[]0.5836any0.1776complex0.0246number[]0.0225string[]0.0205
;Punctuation
\nText.Whitespace
}Punctuation
;Punctuation
\n\nText.Whitespace
/**\n * Backwards compatibility\n */Comment.Multiline
\n\nText.Whitespace
micromatchName.Otherany0.8485complex0.0052Path0.0022any[]0.0019string0.0016
.Punctuation
matchName.Otherany0.9686string0.0259complex0.0016number0.0008any[]0.0007
 Text.Whitespace
=Operator
 Text.Whitespace
micromatchName.Otherany0.9127string0.0320complex0.0077any[]0.0062RegExp0.0018
;Punctuation
\n\nText.Whitespace
/**\n * Returns a matcher function from the given glob `pattern` and `options`.\n * The returned function takes a string to match as its only argument and returns\n * true if the string is a match.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.matcher(pattern[, options]);\n *\n * const isMatch = mm.matcher('*.!(*a)');\n * console.log(isMatch('a.a')); //=> false\n * console.log(isMatch('a.b')); //=> true\n * ```\n * @param {String} `pattern` Glob pattern\n * @param {Object} `options`\n * @return {Function} Returns a matcher function.\n * @api public\n */Comment.Multiline
\n\nText.Whitespace
micromatchName.Otherany0.8629complex0.0076any[]0.0022Path0.0019string0.0014
.Punctuation
matcherName.Otherany0.8813string0.0679complex0.0072RegExp0.0064string[]0.0025
 Text.Whitespace
=Operator
 Text.Whitespace
(Punctuation
patternName.Otherstring0.5266any0.4374RegExp0.0142complex0.0078{}0.0032
,Punctuation
 Text.Whitespace
optionsName.Otherany0.8074complex0.0166Options0.0159any[]0.0084string0.0066
)Punctuation
 Text.Whitespace
=>Punctuation
 Text.Whitespace
picomatchName.Otherany0.6612void0.0963boolean0.0752complex0.0451string0.0393
(Punctuation
patternName.Otherstring0.6018any0.3426RegExp0.0223complex0.0138{}0.0043
,Punctuation
 Text.Whitespace
optionsName.Otherany0.7006Options0.0340complex0.0296any[]0.0146{}0.0094
)Punctuation
;Punctuation
\n\nText.Whitespace
/**\n * Returns true if **any** of the given glob `patterns` match the specified `string`.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.isMatch(string, patterns[, options]);\n *\n * console.log(mm.isMatch('a.a', ['b.*', '*.a'])); //=> true\n * console.log(mm.isMatch('a.a', 'b.*')); //=> false\n * ```\n * @param {String} `str` The string to test.\n * @param {String|Array} `patterns` One or more glob patterns to use for matching.\n * @param {Object} `[options]` See available [options](#options).\n * @return {Boolean} Returns true if any patterns match `str`\n * @api public\n */Comment.Multiline
\n\nText.Whitespace
micromatchName.Otherany0.6457Path0.0035void0.0028complex0.0022JQuery0.0022
.Punctuation
isMatchName.Otherany0.6686boolean0.3048void0.0149string0.0034complex0.0030
 Text.Whitespace
=Operator
 Text.Whitespace
(Punctuation
strName.Otherstring0.5746any0.4214complex0.0019number0.0006boolean0.0005
,Punctuation
 Text.Whitespace
patternsName.Otherany0.6318string[]0.2170any[]0.0937complex0.0244string0.0189
,Punctuation
 Text.Whitespace
optionsName.Otherany0.8178Options0.0235complex0.0173any[]0.0108{}0.0091
)Punctuation
 Text.Whitespace
=>Punctuation
 Text.Whitespace
picomatchName.Otherany0.6049void0.1896boolean0.1155complex0.0376string0.0105
(Punctuation
patternsName.Otherany0.4641string[]0.3644any[]0.0963string0.0429complex0.0191
,Punctuation
 Text.Whitespace
optionsName.Otherany0.5933Options0.0541complex0.0398any[]0.0361{}0.0111
)Punctuation
(Punctuation
strName.Otherany0.5862string0.4030complex0.0054any[]0.0014boolean0.0009
)Punctuation
;Punctuation
\n\nText.Whitespace
/**\n * Backwards compatibility\n */Comment.Multiline
\n\nText.Whitespace
micromatchName.Otherany0.6924complex0.0120any[]0.0060void0.0034this0.0027
.Punctuation
anyName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
micromatchName.Otherany0.9084complex0.0062any[]0.0016string0.0015void0.0014
.Punctuation
isMatchName.Otherany0.7731boolean0.2101void0.0087string0.0025complex0.0018
;Punctuation
\n\nText.Whitespace
/**\n * Returns a list of strings that _**do not match any**_ of the given `patterns`.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.not(list, patterns[, options]);\n *\n * console.log(mm.not(['a.a', 'b.b', 'c.c'], '*.a'));\n * //=> ['b.b', 'c.c']\n * ```\n * @param {Array} `list` Array of strings to match.\n * @param {String|Array} `patterns` One or more glob pattern to use for matching.\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Array} Returns an array of strings that **do not match** the given patterns.\n * @api public\n */Comment.Multiline
\n\nText.Whitespace
micromatchName.Otherany0.7115complex0.0065any[]0.0033void0.0026this0.0019
.Punctuation
notName.Otherany0.9226void0.0463boolean0.0056string0.0049any[]0.0048
 Text.Whitespace
=Operator
 Text.Whitespace
(Punctuation
listName.Otherany0.8048any[]0.0750string[]0.0366number[]0.0090string0.0089
,Punctuation
 Text.Whitespace
patternsName.Otherany0.5853string[]0.2125any[]0.1512string0.0165complex0.0097
,Punctuation
 Text.Whitespace
optionsName.Otherany0.7028{}0.0916any[]0.0212complex0.0151Options0.0101
 Text.Whitespace
=Operator
 Text.Whitespace
{Punctuation
}Punctuation
)Punctuation
 Text.Whitespace
=>Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
patternsName.Otherany[]0.5456string[]0.2085any0.2084complex0.0093number[]0.0077
 Text.Whitespace
=Operator
 Text.Whitespace
[Punctuation
]Punctuation
.Punctuation
concatName.Othercomplex0.9230any0.0710any[]0.0023string0.0008string[]0.0005
(Punctuation
patternsName.Otherany0.3315string[]0.3227any[]0.2806complex0.0382number[]0.0078
)Punctuation
.Punctuation
mapName.OtherU[]0.8220any0.1543complex0.0169any[]0.0008void0.0005
(Punctuation
StringName.BuiltinStringConstructor0.9980String0.0010string0.0001any0.0000NumberConstructor0.0000
)Punctuation
;Punctuation
\n  Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
resultName.OtherSet<any>0.7593Set<string>0.0416any0.0193any[]0.0125Set<number>0.0077
 Text.Whitespace
=Operator
 Text.Whitespace
newOperator.Wordany0.2526Set<any>0.2041SetConstructor0.0812Set<string>0.0420boolean0.0379
 Text.Whitespace
SetName.BuiltinSetConstructor0.9680Set<any>0.0122any0.0118Set<string>0.0004void0.0003
(Punctuation
)Punctuation
;Punctuation
\n  Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
itemsName.Otherany[]0.9657any0.0071any[][]0.0047number[]0.0042Set<any>0.0019
 Text.Whitespace
=Operator
 Text.Whitespace
[Punctuation
]Punctuation
;Punctuation
\n\n  Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
onResultName.Otherany0.4593void0.1947boolean0.0707string0.0644Function0.0595
 Text.Whitespace
=Operator
 Text.Whitespace
stateName.Otherany0.8377string0.0094boolean0.0077any[]0.0047State0.0041
 Text.Whitespace
=>Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
optionsName.Otherany0.1095Options0.0395ConnectionOptions0.0160IOptions0.0130T0.0125
.Punctuation
onResultName.Otherany0.6858string0.0960boolean0.0816void0.0803Function0.0316
)Punctuation
 Text.Whitespace
optionsName.Otherany0.3539Options0.0160any[]0.0121ConnectionOptions0.0120number[]0.0115
.Punctuation
onResultName.Otherany0.6906void0.2522boolean0.0190Function0.0154string0.0117
(Punctuation
stateName.Otherany0.7674boolean0.0525string0.0496number0.0242any[]0.0142
)Punctuation
;Punctuation
\n    Text.Whitespace
itemsName.Otherany[]0.9182any0.0217number[]0.0206string[]0.0107Set<any>0.0025
.Punctuation
pushName.Othernumber0.9760any0.0215void0.0005boolean0.0005string0.0004
(Punctuation
stateName.Otherany0.7690complex0.0153IState0.0118any[]0.0093State0.0074
.Punctuation
outputName.Otherstring0.6916any0.2411any[]0.0131number0.0122boolean0.0056
)Punctuation
;Punctuation
\n  Text.Whitespace
}Punctuation
;Punctuation
\n\n  Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
matchesName.OtherSet<any>0.5336Set<string>0.1452any[]0.0902any0.0493string[]0.0069
 Text.Whitespace
=Operator
 Text.Whitespace
newOperator.Wordany0.5252Set<any>0.1112Set<string>0.0464any[]0.0342boolean0.0302
 Text.Whitespace
SetName.BuiltinSetConstructor0.9680any0.0132Set<any>0.0107Set<string>0.0006any[]0.0003
(Punctuation
micromatchName.Otherany0.9266complex0.0180any[]0.0117string0.0035void0.0034
(Punctuation
listName.Otherany0.7174any[]0.1718string[]0.0350string0.0064number[]0.0049
,Punctuation
 Text.Whitespace
patternsName.Otherstring[]0.3887any[]0.3231any0.2042complex0.0482number[]0.0106
,Punctuation
 Text.Whitespace
{Punctuation
 Text.Whitespace
...Punctuation
optionsName.Otherany0.2868any[]0.1683{}0.0313complex0.0245Options0.0191
,Punctuation
 Text.Whitespace
onResultName.Otherany0.5734void0.1806string0.1022Function0.0514boolean0.0392
 Text.Whitespace
}Punctuation
)Punctuation
)Punctuation
;Punctuation
\n\n  Text.Whitespace
forKeyword
 Text.Whitespace
(Punctuation
letKeyword.Declaration
 Text.Whitespace
itemName.Otherany0.5508string0.4260complex0.0039number0.0030T0.0026
 Text.Whitespace
ofKeyword
 Text.Whitespace
itemsName.Otherany[]0.7316any0.1457number[]0.0167string[]0.0146T[]0.0067
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
matchesName.Othercomplex0.2247any[]0.1980Set<any>0.1647any0.1146Set<string>0.0716
.Punctuation
hasName.Otherboolean0.9482any0.0374complex0.0035{}0.0017string0.0016
(Punctuation
itemName.Otherany0.4931string0.4703number0.0041T0.0035boolean0.0033
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
resultName.OtherSet<any>0.3008any0.2431Set<string>0.0680any[]0.0450{}0.0170
.Punctuation
addName.OtherSet<any>0.2494any0.2492Set<string>0.2306void0.0803boolean0.0188
(Punctuation
itemName.Otherstring0.4906any0.4866number0.0052boolean0.0031T0.0030
)Punctuation
;Punctuation
\n    Text.Whitespace
}Punctuation
\n  Text.Whitespace
}Punctuation
\n  Text.Whitespace
returnKeyword
 Text.Whitespace
[Punctuation
...Punctuation
resultName.Otherany[]0.4862any0.3075string[]0.0302complex0.0215number[]0.0147
]Punctuation
;Punctuation
\nText.Whitespace
}Punctuation
;Punctuation
\n\nText.Whitespace
/**\n * Returns true if the given `string` contains the given pattern. Similar\n * to [.isMatch](#isMatch) but the pattern can match any part of the string.\n *\n * ```js\n * var mm = require('micromatch');\n * // mm.contains(string, pattern[, options]);\n *\n * console.log(mm.contains('aa/bb/cc', '*b'));\n * //=> true\n * console.log(mm.contains('aa/bb/cc', '*d'));\n * //=> false\n * ```\n * @param {String} `str` The string to match.\n * @param {String|Array} `patterns` Glob pattern to use for matching.\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Boolean} Returns true if any of the patterns matches any part of `str`.\n * @api public\n */Comment.Multiline
\n\nText.Whitespace
micromatchName.Otherany0.6499Path0.0069any[]0.0067Operation0.0053complex0.0050
.Punctuation
containsName.Otherany0.8291boolean0.1501string0.0057void0.0049complex0.0045
 Text.Whitespace
=Operator
 Text.Whitespace
(Punctuation
strName.Otherstring0.6153any0.3797complex0.0022number0.0006any[]0.0005
,Punctuation
 Text.Whitespace
patternName.Otherstring0.5425any0.3999complex0.0225{}0.0097any[]0.0060
,Punctuation
 Text.Whitespace
optionsName.Otherany0.5295complex0.0324any[]0.0206{}0.0192Options0.0176
)Punctuation
 Text.Whitespace
=>Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
typeofOperator.Word
 Text.Whitespace
strName.Otherany0.6625string0.3115complex0.0175boolean0.0040number0.0018
 Text.Whitespace
!==Operator
 Text.Whitespace
'string'Literal.String.Single
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
throwKeywordany0.4481complex0.3686boolean0.0440Error0.0411string0.0287
 Text.Whitespace
newOperator.Wordany0.4544boolean0.1257complex0.0668Error0.0505string0.0388
 Text.Whitespace
TypeErrorName.ExceptionTypeErrorConstructor0.9926ErrorConstructor0.0021complex0.0002BooleanConstructor0.0002NumberConstructor0.0001
(Punctuation
`Literal.String.Backtick
Expected a string: "Literal.String.Backtick
${Literal.String.Interpol
utilName.Otherany0.9983complex0.0009string0.0004void0.0002any[]0.0000
.Punctuation
inspectName.Otherany0.7288string0.1584complex0.1057void0.0015boolean0.0011
(Punctuation
strName.Otherstring0.6101any0.3816complex0.0036any[]0.0008number0.0005
)Punctuation
}Literal.String.Interpol
"Literal.String.Backtick
`Literal.String.Backtick
)Punctuation
;Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
ArrayName.BuiltinArrayConstructor0.9997Math0.0000any0.0000ObjectConstructor0.0000complex0.0000
.Punctuation
isArrayName.Othercomplex0.9709boolean0.0131any[]0.0071any0.0047string[]0.0007
(Punctuation
patternName.Otherany0.5353string0.1864complex0.1608any[]0.0590{}0.0199
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
patternName.Otherany[]0.6226any0.1119string[]0.0584complex0.0304RegExp0.0273
.Punctuation
someName.Otherboolean0.6155complex0.2539any0.1020any[]0.0031number0.0026
(Punctuation
pName.Otherany0.8825string0.0530any[]0.0153complex0.0094RegExp0.0071
 Text.Whitespace
=>Punctuation
 Text.Whitespace
micromatchName.Otherany0.8482complex0.0124any[]0.0109string0.0046RegExp0.0031
.Punctuation
containsName.Otherany0.5952boolean0.3804complex0.0116string0.0043void0.0016
(Punctuation
strName.Otherstring0.5487any0.4378complex0.0064any[]0.0021number0.0009
,Punctuation
 Text.Whitespace
pName.Otherany0.6947string0.2199any[]0.0360complex0.0219string[]0.0072
,Punctuation
 Text.Whitespace
optionsName.Otherany0.5855any[]0.0842complex0.0492{}0.0392Options0.0145
)Punctuation
)Punctuation
;Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
typeofOperator.Word
 Text.Whitespace
patternName.Otherany0.5858complex0.1582string0.1581RegExp0.0284{}0.0251
 Text.Whitespace
===Operator
 Text.Whitespace
'string'Literal.String.Single
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
isEmptyStringName.Otherboolean0.8955any0.0803string0.0115complex0.0067any[]0.0016
(Punctuation
strName.Otherstring0.5215any0.4618complex0.0081boolean0.0024any[]0.0018
)Punctuation
 Text.Whitespace
||Operator
 Text.Whitespace
isEmptyStringName.Otherboolean0.9696any0.0152complex0.0063string0.0053number0.0007
(Punctuation
patternName.Otherany0.4850string0.4273complex0.0412RegExp0.0105any[]0.0098
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
falseKeyword.Constant
;Punctuation
\n    Text.Whitespace
}Punctuation
\n\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
strName.Otherstring0.5409any0.4374any[]0.0072string[]0.0053complex0.0028
.Punctuation
includesName.Otherboolean0.8591any0.1012complex0.0213string0.0104string[]0.0028
(Punctuation
patternName.Otherstring0.7262any0.2420complex0.0150RegExp0.0052any[]0.0029
)Punctuation
 Text.Whitespace
||Operator
 Text.Whitespace
(Punctuation
strName.Otherstring0.5599any0.4344complex0.0022boolean0.0012number0.0007
.Punctuation
startsWithName.Otherboolean0.7895any0.1846complex0.0203string0.0017number0.0010
(Punctuation
'./'Literal.String.Single
)Punctuation
 Text.Whitespace
&&Operator
 Text.Whitespace
strName.Otherstring0.5190any0.4706complex0.0029boolean0.0021any[]0.0017
.Punctuation
sliceName.Otherany0.3328any[]0.2276string[]0.1946string0.1035complex0.0415
(Punctuation
2Literal.Number.Float
)Punctuation
.Punctuation
includesName.Otherboolean0.9049any0.0813complex0.0058string0.0036string[]0.0008
(Punctuation
patternName.Otherstring0.6178any0.3272complex0.0252RegExp0.0071any[]0.0054
)Punctuation
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
trueKeyword.Constant
;Punctuation
\n    Text.Whitespace
}Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
returnKeyword
 Text.Whitespace
micromatchName.Otherany0.8043complex0.0065any[]0.0044Path0.0031User0.0025
.Punctuation
isMatchName.Otherany0.5504boolean0.4271complex0.0066void0.0057string0.0036
(Punctuation
strName.Otherstring0.6887any0.3046complex0.0027number0.0010any[]0.0006
,Punctuation
 Text.Whitespace
patternName.Otherstring0.5269any0.4263complex0.0186{}0.0074any[]0.0057
,Punctuation
 Text.Whitespace
{Punctuation
 Text.Whitespace
...Punctuation
optionsName.Otherany0.4768any[]0.1107{}0.0351complex0.0267number[]0.0125
,Punctuation
 Text.Whitespace
containsName.Otherboolean0.9901any0.0052true0.0019false0.0005number0.0004
:Operator
 Text.Whitespace
trueKeyword.Type
 Text.Whitespace
}Punctuation
)Punctuation
;Punctuation
\nText.Whitespace
}Punctuation
;Punctuation
\n\nText.Whitespace
/**\n * Filter the keys of the given object with the given `glob` pattern\n * and `options`. Does not attempt to match nested keys. If you need this feature,\n * use [glob-object][] instead.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.matchKeys(object, patterns[, options]);\n *\n * const obj = { aa: 'a', ab: 'b', ac: 'c' };\n * console.log(mm.matchKeys(obj, '*b'));\n * //=> { ab: 'b' }\n * ```\n * @param {Object} `object` The object with keys to filter.\n * @param {String|Array} `patterns` One or more glob patterns to use for matching.\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Object} Returns an object with only keys that match the given patterns.\n * @api public\n */Comment.Multiline
\n\nText.Whitespace
micromatchName.Otherany0.8078any[]0.0049complex0.0034void0.0022Path0.0019
.Punctuation
matchKeysName.Otherany0.8545void0.0889boolean0.0219complex0.0100string0.0061
 Text.Whitespace
=Operator
 Text.Whitespace
(Punctuation
objName.Otherany0.8705Object0.0352{}0.0281object0.0125any[]0.0111
,Punctuation
 Text.Whitespace
patternsName.Otherany0.6684any[]0.1748string[]0.1062complex0.0207string0.0132
,Punctuation
 Text.Whitespace
optionsName.Otherany0.7875any[]0.0278{}0.0204complex0.0133number0.0099
)Punctuation
 Text.Whitespace
=>Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
utilsName.Otherany0.8875complex0.1032any[]0.0033boolean0.0019{}0.0005
.Punctuation
isObjectName.Otherboolean0.8869any0.0737complex0.0292any[]0.0030string0.0012
(Punctuation
objName.Otherany0.9643{}0.0104complex0.0054any[]0.0048Object0.0042
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
throwKeywordany0.4731complex0.2679Error0.0646{}0.0547any[]0.0373
 Text.Whitespace
newOperator.Wordany0.4250{}0.0820boolean0.0766complex0.0683Error0.0479
 Text.Whitespace
TypeErrorName.ExceptionTypeErrorConstructor0.9928ErrorConstructor0.0018BooleanConstructor0.0001complex0.0001NumberConstructor0.0001
(Punctuation
'Expected the first argument to be an object'Literal.String.Single
)Punctuation
;Punctuation
\n  Text.Whitespace
}Punctuation
\n  Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
keysName.Otherany0.9250any[]0.0442string[]0.0137string0.0055complex0.0016
 Text.Whitespace
=Operator
 Text.Whitespace
micromatchName.Otherany0.9205complex0.0105any[]0.0093string0.0057string[]0.0016
(Punctuation
ObjectName.BuiltinObjectConstructor0.9997any0.0001complex0.0001Object0.0000{}0.0000
.Punctuation
keysName.Otherstring[]0.9756any[]0.0120complex0.0039string0.0026any0.0017
(Punctuation
objName.Otherany0.6958{}0.1697Object0.0525object0.0221complex0.0178
)Punctuation
,Punctuation
 Text.Whitespace
patternsName.Otherstring[]0.6936any0.1456any[]0.0983complex0.0252{}0.0185
,Punctuation
 Text.Whitespace
optionsName.Otherany0.6037{}0.1155complex0.0203any[]0.0136Object0.0134
)Punctuation
;Punctuation
\n  Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
resName.Other{}0.9060any0.0512any[]0.0128Object0.0045complex0.0045
 Text.Whitespace
=Operator
 Text.Whitespace
{Punctuation
}Punctuation
;Punctuation
\n  Text.Whitespace
forKeyword
 Text.Whitespace
(Punctuation
letKeyword.Declaration
 Text.Whitespace
keyName.Otherstring0.6328any0.3525complex0.0087number0.0015{}0.0015
 Text.Whitespace
ofKeyword
 Text.Whitespace
keysName.Otherstring[]0.4186any[]0.3006any0.1237complex0.0836{}0.0329
)Punctuation
 Text.Whitespace
resName.Other{}0.7238any[]0.0877any0.0826complex0.0630T0.0051
[Punctuation
keyName.Otherstring0.8100any0.1766complex0.0063number0.0027{}0.0011
]Punctuation
 Text.Whitespace
=Operator
 Text.Whitespace
objName.Otherany0.7642{}0.1159Object0.0366T0.0199complex0.0168
[Punctuation
keyName.Otherstring0.9151any0.0752complex0.0044number0.0021{}0.0006
]Punctuation
;Punctuation
\n  Text.Whitespace
returnKeyword
 Text.Whitespace
resName.Otherany[]0.4268any0.3582{}0.1243string[]0.0208complex0.0163
;Punctuation
\nText.Whitespace
}Punctuation
;Punctuation
\n\nText.Whitespace
/**\n * Returns true if some of the strings in the given `list` match any of the given glob `patterns`.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.some(list, patterns[, options]);\n *\n * console.log(mm.some(['foo.js', 'bar.js'], ['*.js', '!foo.js']));\n * // true\n * console.log(mm.some(['foo.js'], ['*.js', '!foo.js']));\n * // false\n * ```\n * @param {String|Array} `list` The string or array of strings to test. Returns as soon as the first match is found.\n * @param {String|Array} `patterns` One or more glob patterns to use for matching.\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Boolean} Returns true if any `patterns` matches any of the strings in `list`\n * @api public\n */Comment.Multiline
\n\nText.Whitespace
micromatchName.Otherany0.5926any[]0.0171complex0.0089this0.0060Operation0.0033
.Punctuation
someName.Otherany0.6446boolean0.2681complex0.0400void0.0118any[]0.0069
 Text.Whitespace
=Operator
 Text.Whitespace
(Punctuation
listName.Otherany0.7610string[]0.0866any[]0.0756string0.0193complex0.0038
,Punctuation
 Text.Whitespace
patternsName.Otherany0.5346string[]0.3315any[]0.0976string0.0202complex0.0066
,Punctuation
 Text.Whitespace
optionsName.Otherany0.8032any[]0.0270{}0.0157string0.0103number0.0075
)Punctuation
 Text.Whitespace
=>Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
itemsName.Otherany[]0.9556any0.0140string[]0.0135number[]0.0039T[]0.0021
 Text.Whitespace
=Operator
 Text.Whitespace
[Punctuation
]Punctuation
.Punctuation
concatName.Othercomplex0.8504any0.1397any[]0.0053string0.0013string[]0.0005
(Punctuation
listName.Otherany[]0.3668any0.3416string[]0.1796complex0.0126number[]0.0068
)Punctuation
;Punctuation
\n\n  Text.Whitespace
forKeyword
 Text.Whitespace
(Punctuation
letKeyword.Declaration
 Text.Whitespace
patternName.Otherany0.5062string0.4403any[]0.0118complex0.0083{}0.0083
 Text.Whitespace
ofKeyword
 Text.Whitespace
[Punctuation
]Punctuation
.Punctuation
concatName.Othercomplex0.9543any0.0398any[]0.0026string0.0011string[]0.0003
(Punctuation
patternsName.Otherany[]0.3875any0.3602string[]0.1411complex0.0834number[]0.0092
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
isMatchName.Otherboolean0.9775any0.0137number0.0027string0.0024complex0.0007
 Text.Whitespace
=Operator
 Text.Whitespace
picomatchName.Otherboolean0.8484any0.0677string0.0522complex0.0089number0.0045
(Punctuation
StringName.BuiltinStringConstructor0.9990String0.0005string0.0001NumberConstructor0.0000complex0.0000
(Punctuation
patternName.Otherstring0.5554any0.3245complex0.0637RegExp0.0140{}0.0116
)Punctuation
,Punctuation
 Text.Whitespace
optionsName.Otherany0.4302complex0.1146any[]0.0881{}0.0454number[]0.0140
)Punctuation
;Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
itemsName.Otherany[]0.8340string[]0.0407any0.0332number[]0.0185Set<any>0.0067
.Punctuation
someName.Otherboolean0.9137complex0.0368any0.0321number0.0035any[]0.0021
(Punctuation
itemName.Otherany0.5921string0.2870boolean0.0777number0.0152complex0.0118
 Text.Whitespace
=>Punctuation
 Text.Whitespace
isMatchName.Otherboolean0.9881any0.0089string0.0009number0.0007complex0.0004
(Punctuation
itemName.Otherany0.5714string0.3889number0.0086boolean0.0061complex0.0053
)Punctuation
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
trueKeyword.Constant
;Punctuation
\n    Text.Whitespace
}Punctuation
\n  Text.Whitespace
}Punctuation
\n  Text.Whitespace
returnKeyword
 Text.Whitespace
falseKeyword.Constant
;Punctuation
\nText.Whitespace
}Punctuation
;Punctuation
\n\nText.Whitespace
/**\n * Returns true if every string in the given `list` matches\n * any of the given glob `patterns`.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.every(list, patterns[, options]);\n *\n * console.log(mm.every('foo.js', ['foo.js']));\n * // true\n * console.log(mm.every(['foo.js', 'bar.js'], ['*.js']));\n * // true\n * console.log(mm.every(['foo.js', 'bar.js'], ['*.js', '!foo.js']));\n * // false\n * console.log(mm.every(['foo.js'], ['*.js', '!foo.js']));\n * // false\n * ```\n * @param {String|Array} `list` The string or array of strings to test.\n * @param {String|Array} `patterns` One or more glob patterns to use for matching.\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Boolean} Returns true if all `patterns` matches all of the strings in `list`\n * @api public\n */Comment.Multiline
\n\nText.Whitespace
micromatchName.Otherany0.3406any[]0.0886string[]0.0161complex0.0123number[]0.0056
.Punctuation
everyName.Otherboolean0.4919any0.4471complex0.0299void0.0083any[]0.0068
 Text.Whitespace
=Operator
 Text.Whitespace
(Punctuation
listName.Otherany0.6512any[]0.1938string[]0.0707string0.0148number[]0.0083
,Punctuation
 Text.Whitespace
patternsName.Otherany0.4097string[]0.3148any[]0.2184string0.0285complex0.0106
,Punctuation
 Text.Whitespace
optionsName.Otherany0.6514any[]0.0553number0.0154string0.0131{}0.0128
)Punctuation
 Text.Whitespace
=>Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
itemsName.Otherany[]0.9642any0.0102string[]0.0085number[]0.0044any[][]0.0017
 Text.Whitespace
=Operator
 Text.Whitespace
[Punctuation
]Punctuation
.Punctuation
concatName.Othercomplex0.8593any0.1313any[]0.0052string0.0011void0.0006
(Punctuation
listName.Otherany[]0.4157any0.3058string[]0.1478complex0.0136number[]0.0080
)Punctuation
;Punctuation
\n\n  Text.Whitespace
forKeyword
 Text.Whitespace
(Punctuation
letKeyword.Declaration
 Text.Whitespace
patternName.Otherany0.4863string0.4518any[]0.0151complex0.0101{}0.0074
 Text.Whitespace
ofKeyword
 Text.Whitespace
[Punctuation
]Punctuation
.Punctuation
concatName.Othercomplex0.9487any0.0458any[]0.0024string0.0011number0.0004
(Punctuation
patternsName.Otherany[]0.4076any0.3715complex0.0983string[]0.0955number[]0.0097
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
isMatchName.Otherboolean0.9806any0.0117number0.0027string0.0019complex0.0007
 Text.Whitespace
=Operator
 Text.Whitespace
picomatchName.Otherboolean0.8645any0.0625string0.0415complex0.0100number0.0042
(Punctuation
StringName.BuiltinStringConstructor0.9990String0.0005string0.0000NumberConstructor0.0000complex0.0000
(Punctuation
patternName.Otherstring0.5236any0.3498complex0.0742{}0.0118any[]0.0103
)Punctuation
,Punctuation
 Text.Whitespace
optionsName.Otherany0.5290complex0.1089any[]0.0653{}0.0322number0.0147
)Punctuation
;Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
itemsName.Otherany[]0.8008any0.0876string[]0.0284number[]0.0186complex0.0102
.Punctuation
everyName.Otherboolean0.8092any0.1019complex0.0734number0.0037void0.0029
(Punctuation
itemName.Otherany0.6502string0.2403boolean0.0701number0.0188complex0.0100
 Text.Whitespace
=>Punctuation
 Text.Whitespace
isMatchName.Otherboolean0.9855any0.0113number0.0009string0.0009complex0.0003
(Punctuation
itemName.Otherany0.6504string0.3141number0.0120boolean0.0065complex0.0046
)Punctuation
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
falseKeyword.Constant
;Punctuation
\n    Text.Whitespace
}Punctuation
\n  Text.Whitespace
}Punctuation
\n  Text.Whitespace
returnKeyword
 Text.Whitespace
trueKeyword.Constant
;Punctuation
\nText.Whitespace
}Punctuation
;Punctuation
\n\nText.Whitespace
/**\n * Returns true if **all** of the given `patterns` match\n * the specified string.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.all(string, patterns[, options]);\n *\n * console.log(mm.all('foo.js', ['foo.js']));\n * // true\n *\n * console.log(mm.all('foo.js', ['*.js', '!foo.js']));\n * // false\n *\n * console.log(mm.all('foo.js', ['*.js', 'foo.js']));\n * // true\n *\n * console.log(mm.all('foo.js', ['*.js', 'f*', '*o*', '*o.js']));\n * // true\n * ```\n * @param {String|Array} `str` The string to test.\n * @param {String|Array} `patterns` One or more glob patterns to use for matching.\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Boolean} Returns true if any patterns match `str`\n * @api public\n */Comment.Multiline
\n\nText.Whitespace
micromatchName.Otherany0.7471any[]0.0101complex0.0064Path0.0037void0.0023
.Punctuation
allName.Otherany0.8727complex0.0427boolean0.0192void0.0100string0.0100
 Text.Whitespace
=Operator
 Text.Whitespace
(Punctuation
strName.Otherany0.5387string0.4552complex0.0021any[]0.0013number0.0008
,Punctuation
 Text.Whitespace
patternsName.Otherany0.4621any[]0.3333string[]0.1539complex0.0254string0.0089
,Punctuation
 Text.Whitespace
optionsName.Otherany0.7404any[]0.0471number0.0243complex0.0176{}0.0155
)Punctuation
 Text.Whitespace
=>Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
typeofOperator.Word
 Text.Whitespace
strName.Otherany0.7175string0.2521complex0.0222boolean0.0030number0.0018
 Text.Whitespace
!==Operator
 Text.Whitespace
'string'Literal.String.Single
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
throwKeywordany0.5289complex0.3135boolean0.0317Error0.0304{}0.0267
 Text.Whitespace
newOperator.Wordany0.4613boolean0.1010complex0.0546{}0.0518Error0.0493
 Text.Whitespace
TypeErrorName.ExceptionTypeErrorConstructor0.9931ErrorConstructor0.0016BooleanConstructor0.0002complex0.0001NumberConstructor0.0001
(Punctuation
`Literal.String.Backtick
Expected a string: "Literal.String.Backtick
${Literal.String.Interpol
utilName.Otherany0.9982complex0.0010string0.0004void0.0003any[]0.0001
.Punctuation
inspectName.Otherany0.7628string0.1157complex0.1131void0.0024boolean0.0009
(Punctuation
strName.Otherstring0.5992any0.3956complex0.0016any[]0.0008number0.0005
)Punctuation
}Literal.String.Interpol
"Literal.String.Backtick
`Literal.String.Backtick
)Punctuation
;Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
returnKeyword
 Text.Whitespace
[Punctuation
]Punctuation
.Punctuation
concatName.Othercomplex0.9547any0.0390any[]0.0021string0.0006Promise<any>0.0003
(Punctuation
patternsName.Otherany0.4823any[]0.3308complex0.1197string[]0.0409{}0.0053
)Punctuation
.Punctuation
everyName.Otherany0.5514boolean0.2224complex0.1918any[]0.0053void0.0037
(Punctuation
pName.Otherany0.8355string0.1143any[]0.0170complex0.0067boolean0.0036
 Text.Whitespace
=>Punctuation
 Text.Whitespace
picomatchName.Otherany0.6039boolean0.1389string0.0850void0.0721complex0.0319
(Punctuation
pName.Otherany0.5596string0.3723any[]0.0178complex0.0149number0.0049
,Punctuation
 Text.Whitespace
optionsName.Otherany0.5757any[]0.0518complex0.0470{}0.0189number0.0165
)Punctuation
(Punctuation
strName.Otherstring0.5063any0.4778complex0.0068any[]0.0024number0.0019
)Punctuation
)Punctuation
;Punctuation
\nText.Whitespace
}Punctuation
;Punctuation
\n\nText.Whitespace
/**\n * Returns an array of matches captured by `pattern` in `string, or `null` if the pattern did not match.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.capture(pattern, string[, options]);\n *\n * console.log(mm.capture('test/*.js', 'test/foo.js'));\n * //=> ['foo']\n * console.log(mm.capture('test/*.js', 'foo/bar.css'));\n * //=> null\n * ```\n * @param {String} `glob` Glob pattern to use for matching.\n * @param {String} `input` String to match\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Array|null} Returns an array of captures if the input matches the glob pattern, otherwise `null`.\n * @api public\n */Comment.Multiline
\n\nText.Whitespace
micromatchName.Otherany0.5366any[]0.0070complex0.0056Path0.0042ToolRunner0.0036
.Punctuation
captureName.Otherany0.7532boolean0.1582void0.0539string0.0131complex0.0092
 Text.Whitespace
=Operator
 Text.Whitespace
(Punctuation
globName.Otherany0.5802string0.3188any[]0.0395string[]0.0151number0.0133
,Punctuation
 Text.Whitespace
inputName.Otherany0.7060string0.2758any[]0.0062number0.0056complex0.0024
,Punctuation
 Text.Whitespace
optionsName.Otherany0.8572any[]0.0136number0.0098boolean0.0083string0.0068
)Punctuation
 Text.Whitespace
=>Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
posixName.Otherboolean0.4309any0.3665any[]0.0487string0.0377number0.0351
 Text.Whitespace
=Operator
 Text.Whitespace
utilsName.Otherany0.9226complex0.0641any[]0.0062string[]0.0010string0.0010
.Punctuation
isWindowsName.Otherboolean0.8959any0.0873string0.0042complex0.0033number0.0021
(Punctuation
optionsName.Otherany0.5599complex0.0987any[]0.0564{}0.0173number0.0125
)Punctuation
;Punctuation
\n  Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
regexName.Otherany0.4941RegExp0.3174string0.0274boolean0.0152complex0.0145
 Text.Whitespace
=Operator
 Text.Whitespace
picomatchName.Otherany0.9548complex0.0138RegExp0.0069string0.0069any[]0.0024
.Punctuation
makeReName.Otherany0.5763boolean0.2096string0.1206complex0.0471string[]0.0057
(Punctuation
StringName.BuiltinStringConstructor0.9984String0.0008string0.0001any0.0000complex0.0000
(Punctuation
globName.Otherstring0.5673any0.2235any[]0.0874string[]0.0500complex0.0240
)Punctuation
,Punctuation
 Text.Whitespace
{Punctuation
 Text.Whitespace
...Punctuation
optionsName.Otherany0.4301any[]0.1622{}0.0533complex0.0374number0.0113
,Punctuation
 Text.Whitespace
captureName.Otherboolean0.9960any0.0016true0.0007string0.0005number0.0003
:Operator
 Text.Whitespace
trueKeyword.Type
 Text.Whitespace
}Punctuation
)Punctuation
;Punctuation
\n  Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
matchName.Otherany0.9570string0.0128RegExpExecArray0.0109number0.0061boolean0.0039
 Text.Whitespace
=Operator
 Text.Whitespace
regexName.Otherany0.6032RegExp0.3675string0.0073RegExpExecArray0.0035complex0.0030
.Punctuation
execName.Otherany0.6147RegExpExecArray0.3166complex0.0231RegExp0.0047Promise<number>0.0030
(Punctuation
posixName.Otherany0.7176boolean0.1327string0.0836number0.0153string[]0.0134
 Text.Whitespace
?Operator
 Text.Whitespace
utilsName.Otherany0.9440complex0.0514any[]0.0021string0.0007number0.0002
.Punctuation
toPosixSlashesName.Otherany0.6160string0.2316complex0.0513string[]0.0215boolean0.0212
(Punctuation
inputName.Otherstring0.5001any0.4872number0.0045complex0.0034any[]0.0022
)Punctuation
 Text.Whitespace
:Operator
 Text.Whitespace
inputName.Otherany0.5447string0.4333any[]0.0073complex0.0058number0.0044
)Punctuation
;Punctuation
\n\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
matchName.Otherany0.9119string0.0403RegExpExecArray0.0233boolean0.0075any[]0.0047
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
matchName.Otherany0.8462string0.0619RegExpExecArray0.0506any[]0.0142string[]0.0051
.Punctuation
sliceName.Otherany[]0.3576any0.3273string[]0.2171string0.0240complex0.0218
(Punctuation
1Literal.Number.Float
)Punctuation
.Punctuation
mapName.OtherU[]0.8310any0.1420complex0.0167void0.0019any[]0.0014
(Punctuation
vName.Otherany0.7867string0.1251boolean0.0540number0.0229any[]0.0018
 Text.Whitespace
=>Punctuation
 Text.Whitespace
vName.Otherany0.8643string0.0717number0.0391boolean0.0195void0.0011
 Text.Whitespace
===Operator
 Text.Whitespace
voidOperator.Word
 Text.Whitespace
0Literal.Number.Float
 Text.Whitespace
?Operator
 Text.Whitespace
''Literal.String.Single
 Text.Whitespace
:Operator
 Text.Whitespace
vName.Otherany0.7471string0.2148number0.0168boolean0.0063void0.0039
)Punctuation
;Punctuation
\n  Text.Whitespace
}Punctuation
\nText.Whitespace
}Punctuation
;Punctuation
\n\nText.Whitespace
/**\n * Create a regular expression from the given glob `pattern`.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.makeRe(pattern[, options]);\n *\n * console.log(mm.makeRe('*.js'));\n * //=> /^(?:(\.[\\\/])?(?!\.)(?=.)[^\/]*?\.js)$/\n * ```\n * @param {String} `pattern` A glob pattern to convert to regex.\n * @param {Object} `options`\n * @return {RegExp} Returns a regex created from the given pattern.\n * @api public\n */Comment.Multiline
\n\nText.Whitespace
micromatchName.Otherany0.4912void0.0064complex0.0063any[]0.0063this0.0044
.Punctuation
makeReName.Otherany0.8944string0.0460void0.0282boolean0.0141complex0.0049
 Text.Whitespace
=Operator
 Text.Whitespace
(Punctuation
...Punctuation
argsName.Otherany[]0.9560any0.0314string[]0.0049complex0.0013number[]0.0007
)Punctuation
 Text.Whitespace
=>Punctuation
 Text.Whitespace
picomatchName.Otherany0.8649any[]0.0203complex0.0072{}0.0034void0.0022
.Punctuation
makeReName.Otherany0.7060string0.0736void0.0693boolean0.0671any[]0.0184
(Punctuation
...Punctuation
argsName.Otherany[]0.9760any0.0116string[]0.0087complex0.0006number[]0.0005
)Punctuation
;Punctuation
\n\nText.Whitespace
/**\n * Scan a glob pattern to separate the pattern into segments. Used\n * by the [split](#split) method.\n *\n * ```js\n * const mm = require('micromatch');\n * const state = mm.scan(pattern[, options]);\n * ```\n * @param {String} `pattern`\n * @param {Object} `options`\n * @return {Object} Returns an object with\n * @api public\n */Comment.Multiline
\n\nText.Whitespace
micromatchName.Otherany0.6294any[]0.0143complex0.0040this0.0033void0.0033
.Punctuation
scanName.Otherany0.8521complex0.0495any[]0.0300void0.0139string0.0075
 Text.Whitespace
=Operator
 Text.Whitespace
(Punctuation
...Punctuation
argsName.Otherany[]0.9305any0.0531string[]0.0078complex0.0011number[]0.0007
)Punctuation
 Text.Whitespace
=>Punctuation
 Text.Whitespace
picomatchName.Otherany0.9309any[]0.0146void0.0034complex0.0017string[]0.0014
.Punctuation
scanName.Otherany0.7314complex0.0952void0.0640any[]0.0376string0.0040
(Punctuation
...Punctuation
argsName.Otherany[]0.9802any0.0084string[]0.0082complex0.0006number[]0.0006
)Punctuation
;Punctuation
\n\nText.Whitespace
/**\n * Parse a glob pattern to create the source string for a regular\n * expression.\n *\n * ```js\n * const mm = require('micromatch');\n * const state = mm.parse(pattern[, options]);\n * ```\n * @param {String} `glob`\n * @param {Object} `options`\n * @return {Object} Returns an object with useful properties and output to be used as regex source string.\n * @api public\n */Comment.Multiline
\n\nText.Whitespace
micromatchName.Otherany0.5957any[]0.0120this0.0032void0.0029HTMLDivElement0.0021
.Punctuation
parseName.Otherany0.8953string0.0101void0.0089boolean0.0072any[]0.0069
 Text.Whitespace
=Operator
 Text.Whitespace
(Punctuation
patternsName.Otherany0.7441string[]0.1034any[]0.1007string0.0389complex0.0070
,Punctuation
 Text.Whitespace
optionsName.Otherany0.6264any[]0.0617{}0.0198string0.0099Options0.0099
)Punctuation
 Text.Whitespace
=>Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
resName.Otherany[]0.9858any0.0061string[]0.0020complex0.0010{}0.0008
 Text.Whitespace
=Operator
 Text.Whitespace
[Punctuation
]Punctuation
;Punctuation
\n  Text.Whitespace
forKeyword
 Text.Whitespace
(Punctuation
letKeyword.Declaration
 Text.Whitespace
patternName.Otherstring0.5619any0.4066any[]0.0115complex0.0053string[]0.0042
 Text.Whitespace
ofKeyword
 Text.Whitespace
[Punctuation
]Punctuation
.Punctuation
concatName.Othercomplex0.9415any0.0505any[]0.0052string0.0006void0.0004
(Punctuation
patternsName.Otherany[]0.4813any0.3096string[]0.1776complex0.0194number[]0.0018
 Text.Whitespace
||Operator
 Text.Whitespace
[Punctuation
]Punctuation
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
forKeyword
 Text.Whitespace
(Punctuation
letKeyword.Declaration
 Text.Whitespace
strName.Otherstring0.5387any0.4513complex0.0040any[]0.0018number0.0012
 Text.Whitespace
ofKeyword
 Text.Whitespace
bracesName.Otherany0.3391any[]0.2064string0.2059complex0.1013string[]0.0589
(Punctuation
StringName.BuiltinStringConstructor0.9980String0.0007string0.0001any[]0.0001complex0.0000
(Punctuation
patternName.Otherstring0.5818any0.3454complex0.0394any[]0.0107{}0.0084
)Punctuation
,Punctuation
 Text.Whitespace
optionsName.Otherany0.6173any[]0.1024complex0.0471{}0.0244number0.0142
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
resName.Otherany[]0.9540any0.0107string[]0.0102{}0.0033number[]0.0029
.Punctuation
pushName.Othernumber0.9718any0.0243void0.0008string0.0007boolean0.0007
(Punctuation
picomatchName.Otherany0.9755string0.0047complex0.0017any[]0.0014Error0.0007
.Punctuation
parseName.Otherany0.8709string0.0303any[]0.0096number0.0087boolean0.0083
(Punctuation
strName.Otherstring0.7933any0.2004complex0.0017number0.0015any[]0.0010
,Punctuation
 Text.Whitespace
optionsName.Otherany0.6605any[]0.0463{}0.0310complex0.0141number0.0141
)Punctuation
)Punctuation
;Punctuation
\n    Text.Whitespace
}Punctuation
\n  Text.Whitespace
}Punctuation
\n  Text.Whitespace
returnKeyword
 Text.Whitespace
resName.Otherany[]0.6921any0.1929{}0.0570complex0.0144string[]0.0059
;Punctuation
\nText.Whitespace
}Punctuation
;Punctuation
\n\nText.Whitespace
/**\n * Process the given brace `pattern`.\n *\n * ```js\n * const { braces } = require('micromatch');\n * console.log(braces('foo/{a,b,c}/bar'));\n * //=> [ 'foo/(a|b|c)/bar' ]\n *\n * console.log(braces('foo/{a,b,c}/bar', { expand: true }));\n * //=> [ 'foo/a/bar', 'foo/b/bar', 'foo/c/bar' ]\n * ```\n * @param {String} `pattern` String with brace pattern to process.\n * @param {Object} `options` Any [options](#options) to change how expansion is performed. See the [braces][] library for all available options.\n * @return {Array}\n * @api public\n */Comment.Multiline
\n\nText.Whitespace
micromatchName.Otherany0.7101any[]0.0045this0.0037complex0.0030Path0.0027
.Punctuation
bracesName.Otherany0.9185void0.0180boolean0.0178string0.0156complex0.0090
 Text.Whitespace
=Operator
 Text.Whitespace
(Punctuation
patternName.Otherstring0.6103any0.3461complex0.0161{}0.0065any[]0.0043
,Punctuation
 Text.Whitespace
optionsName.Otherany0.5879any[]0.0428complex0.0306{}0.0262number0.0173
)Punctuation
 Text.Whitespace
=>Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
typeofOperator.Word
 Text.Whitespace
patternName.Otherstring0.4360any0.3721complex0.0805RegExp0.0415{}0.0329
 Text.Whitespace
!==Operator
 Text.Whitespace
'string'Literal.String.Single
)Punctuation
 Text.Whitespace
throwKeywordany0.4275complex0.3626{}0.0573boolean0.0386string0.0370
 Text.Whitespace
newOperator.Wordany0.4560boolean0.1584complex0.0849{}0.0609string0.0376
 Text.Whitespace
TypeErrorName.ExceptionTypeErrorConstructor0.9905ErrorConstructor0.0021complex0.0002BooleanConstructor0.0001NumberConstructor0.0001
(Punctuation
'Expected a string'Literal.String.Single
)Punctuation
;Punctuation
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
(Punctuation
optionsName.Otherany0.3688complex0.1502any[]0.0570Options0.0221{}0.0216
 Text.Whitespace
&&Operator
 Text.Whitespace
optionsName.Otherany0.3159complex0.2359any[]0.0347Options0.0268{}0.0144
.Punctuation
nobraceName.Otherboolean0.4339any0.3960complex0.1313string0.0237any[]0.0035
 Text.Whitespace
===Operator
 Text.Whitespace
trueKeyword.Constant
)Punctuation
 Text.Whitespace
||Operator
 Text.Whitespace
!Operator
/\{.*\}/Literal.String.Regex
.Punctuation
testName.Otherboolean0.9842complex0.0082any0.0023string0.0011true0.0006
(Punctuation
patternName.Otherstring0.6537any0.3117complex0.0147any[]0.0049{}0.0035
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
[Punctuation
patternName.Otherstring0.9016any0.0850complex0.0061number0.0017{}0.0015
]Punctuation
;Punctuation
\n  Text.Whitespace
}Punctuation
\n  Text.Whitespace
returnKeyword
 Text.Whitespace
bracesName.Otherany0.5417string0.1097complex0.1079any[]0.0659boolean0.0354
(Punctuation
patternName.Otherstring0.6714any0.2119complex0.0373RegExp0.0311{}0.0117
,Punctuation
 Text.Whitespace
optionsName.Otherany0.6030complex0.0446any[]0.0291{}0.0209Options0.0134
)Punctuation
;Punctuation
\nText.Whitespace
}Punctuation
;Punctuation
\n\nText.Whitespace
/**\n * Expand braces\n */Comment.Multiline
\n\nText.Whitespace
micromatchName.Otherany0.6575complex0.0055any[]0.0051Path0.0035Promise<any>0.0022
.Punctuation
braceExpandName.Otherany0.9147boolean0.0243string0.0177void0.0169complex0.0093
 Text.Whitespace
=Operator
 Text.Whitespace
(Punctuation
patternName.Otherstring0.6835any0.2793complex0.0128{}0.0059RegExp0.0044
,Punctuation
 Text.Whitespace
optionsName.Otherany0.6119{}0.0307complex0.0293any[]0.0288string0.0126
)Punctuation
 Text.Whitespace
=>Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
typeofOperator.Word
 Text.Whitespace
patternName.Otherstring0.5132any0.3171complex0.0761{}0.0304RegExp0.0285
 Text.Whitespace
!==Operator
 Text.Whitespace
'string'Literal.String.Single
)Punctuation
 Text.Whitespace
throwKeywordany0.4041complex0.3303{}0.0653string0.0458boolean0.0443
 Text.Whitespace
newOperator.Wordany0.4558boolean0.1385complex0.0723{}0.0529string0.0439
 Text.Whitespace
TypeErrorName.ExceptionTypeErrorConstructor0.9919ErrorConstructor0.0015BooleanConstructor0.0001NumberConstructor0.0001undefined0.0001
(Punctuation
'Expected a string'Literal.String.Single
)Punctuation
;Punctuation
\n  Text.Whitespace
returnKeyword
 Text.Whitespace
micromatchName.Otherany0.7477complex0.0092any[]0.0062string0.0039Promise<any>0.0032
.Punctuation
bracesName.Otherany0.7695string0.0890complex0.0753boolean0.0157any[]0.0089
(Punctuation
patternName.Otherstring0.6820any0.2589complex0.0204{}0.0118any[]0.0061
,Punctuation
 Text.Whitespace
{Punctuation
 Text.Whitespace
...Punctuation
optionsName.Otherany0.3725any[]0.1196{}0.0571complex0.0335Options0.0138
,Punctuation
 Text.Whitespace
expandName.Otherboolean0.9926true0.0033false0.0015any0.0008any[]0.0003
:Operator
 Text.Whitespace
trueKeyword.Type
 Text.Whitespace
}Punctuation
)Punctuation
;Punctuation
\nText.Whitespace
}Punctuation
;Punctuation
\n\nText.Whitespace
/**\n * Expose micromatch\n */Comment.Multiline
\n\nText.Whitespace
moduleKeyword.Reserved
.exportsName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
micromatchName.Otherany0.8865string0.0236any[]0.0109complex0.0107void0.0038
;Punctuation
\nText.Whitespace
