Text
/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */Comment.Multiline
\nText.Whitespace
constKeyword.Declaration
 Text.Whitespace
reRegExpCharName.OtherRegExp0.9981string0.0004RegExp[]0.0003string[]0.0001RegExpExecArray0.0001
 Text.Whitespace
=Operator
 Text.Whitespace
/[\\^$.*+?()[\]{}|]/gLiteral.String.Regex
\nText.Whitespace
constKeyword.Declaration
 Text.Whitespace
reHasRegExpCharName.OtherRegExp0.9948RegExp[]0.0019string0.0005string[]0.0004RegExpConstructor0.0004
 Text.Whitespace
=Operator
 Text.Whitespace
RegExpName.BuiltinRegExpConstructor0.9989RegExp0.0002RegExp[]0.0000BooleanConstructor0.0000RegExpExecArray0.0000
(Punctuation
reRegExpCharName.OtherRegExp0.7995RegExp[]0.0181any0.0088string0.0087complex0.0034
.Punctuation
sourceName.Otherstring0.9614any0.0285complex0.0031RegExp0.0022number0.0018
)Punctuation
\n\nText.Whitespace
Text
/**\n * Escapes the `RegExp` special characters "^", "$", "\", ".", "*", "+",\n * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.\n *\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to escape.\n * @returns {string} Returns the escaped string.\n * @see escape, escapeRegExp, unescape\n * @example\n *\n * escapeRegExp('[lodash](https://lodash.com/)')\n * // => '\[lodash\]\(https://lodash\.com/\)'\n */Comment.Multiline
\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
escapeRegExpName.Otherstring0.9834any0.0099complex0.0022number0.0013boolean0.0011
(Punctuation
stringKeyword.Type
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
returnKeyword
 Text.Whitespace
(Punctuation
stringKeyword.Type
 Text.Whitespace
&&Operator
 Text.Whitespace
reHasRegExpCharName.OtherRegExp0.9738string0.0160any0.0030Date0.0012string[]0.0011
.Punctuation
testName.Otherboolean0.7876string0.1548any0.0321complex0.0146number0.0044
(Punctuation
stringKeyword.Type
)Punctuation
)Punctuation
\n    Text.Whitespace
?Operator
 Text.Whitespace
stringKeyword.Type
.Punctuation
replaceName.Othercomplex0.9317any0.0501string0.0104boolean0.0021RegExp0.0019
(Punctuation
reRegExpCharName.OtherRegExp0.9959string0.0027any0.0002RegExp[]0.0002string[]0.0001
,Punctuation
 Text.Whitespace
'\\$&'Literal.String.Single
)Punctuation
\n    Text.Whitespace
:Operator
 Text.Whitespace
(Punctuation
stringKeyword.Type
 Text.Whitespace
||Operator
 Text.Whitespace
''Literal.String.Single
)Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
exportKeyword
 Text.Whitespace
defaultKeyword
 Text.Whitespace
escapeRegExpName.Otherstring0.7499any0.1200complex0.0110number0.0041string[]0.0023
\nText.Whitespace
