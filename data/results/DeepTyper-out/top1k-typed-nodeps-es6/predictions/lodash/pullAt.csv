importKeyword
 Text.Whitespace
mapName.Otherany0.1798complex0.1212U[]0.0766void0.0153string[]0.0087
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./map.js'Literal.String.Single
\nText.Whitespace
importKeyword
 Text.Whitespace
baseAtName.Otherany0.1362string0.0791complex0.0649boolean0.0420RegExp0.0332
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./.internal/baseAt.js'Literal.String.Single
\nText.Whitespace
importKeyword
 Text.Whitespace
basePullAtName.Otherany0.1288string0.0768complex0.0591boolean0.0543void0.0300
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./.internal/basePullAt.js'Literal.String.Single
\nText.Whitespace
importKeyword
 Text.Whitespace
compareAscendingName.Otherany0.1235string0.0818complex0.0577boolean0.0567void0.0330
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./.internal/compareAscending.js'Literal.String.Single
\nText.Whitespace
importKeyword
 Text.Whitespace
isIndexName.Otherany0.1431string0.0826complex0.0594boolean0.0549void0.0323
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./.internal/isIndex.js'Literal.String.Single
\n\nText.Whitespace
Text
/**\n * Removes elements from `array` corresponding to `indexes` and returns an\n * array of removed elements.\n *\n * **Note:** Unlike `at`, this method mutates `array`.\n *\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to modify.\n * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n * @returns {Array} Returns the new array of removed elements.\n * @see pull, pullAll, pullAllBy, pullAllWith, remove, reject\n * @example\n *\n * const array = ['a', 'b', 'c', 'd']\n * const pulled = pullAt(array, [1, 3])\n *\n * console.log(array)\n * // => ['a', 'c']\n *\n * console.log(pulled)\n * // => ['b', 'd']\n */Comment.Multiline
\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
pullAtName.Otherstring0.1251any0.1083string[]0.0880complex0.0836number0.0461
(Punctuation
arrayName.Otherany0.3103any[]0.1689number[]0.0803string[]0.0350complex0.0221
,Punctuation
 Text.Whitespace
...Punctuation
indexesName.Otherany[]0.5995any0.2307string[]0.0597number[]0.0358complex0.0264
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
lengthName.Othernumber0.6887any0.2853string0.0109any[]0.0041boolean0.0020
 Text.Whitespace
=Operator
 Text.Whitespace
arrayName.Otherany0.4645any[]0.2362number[]0.1061number0.0769complex0.0195
 Text.Whitespace
==Operator
 Text.Whitespace
nullKeyword.Constant
 Text.Whitespace
?Operator
 Text.Whitespace
0Name.Other
 Text.Whitespace
:Operator
 Text.Whitespace
array.lengthKeyword.Type
\n  Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
resultName.Otherany0.5351number0.2376any[]0.0728string0.0355complex0.0281
 Text.Whitespace
=Operator
 Text.Whitespace
baseAtName.Otherany0.4871number0.1512complex0.1026any[]0.1012string0.0424
(Punctuation
arrayName.Otherany[]0.4625number[]0.2282any0.1675number0.0285string[]0.0226
,Punctuation
 Text.Whitespace
indexesName.Otherany[]0.4386any0.2620number[]0.1170string[]0.0569complex0.0524
)Punctuation
\n\n  Text.Whitespace
basePullAtName.Otherany0.2877any[]0.2522complex0.1152number0.0789number[]0.0437
(Punctuation
arrayName.Otherany[]0.4346any0.2301number[]0.1800string[]0.0356number0.0140
,Punctuation
 Text.Whitespace
mapName.Otherany0.4143U[]0.2623complex0.0703any[]0.0579string[]0.0058
(Punctuation
indexesName.Otherany[]0.4204any0.3194number[]0.0780string[]0.0584complex0.0330
,Punctuation
 Text.Whitespace
(Punctuation
indexName.Othernumber0.7387any0.2408string0.0122any[]0.0020complex0.0015
)Punctuation
 Text.Whitespace
=>Punctuation
 Text.Whitespace
isIndexName.Otherany0.4140any[]0.1561number0.1167boolean0.0485string0.0484
(Punctuation
indexName.Othernumber0.7738any0.1972string0.0213any[]0.0017number[]0.0013
,Punctuation
 Text.Whitespace
lengthName.Othernumber0.8014any0.1882string0.0058any[]0.0007complex0.0007
)Punctuation
 Text.Whitespace
?Operator
 Text.Whitespace
+Operator
indexName.Othernumber0.6772any0.2647string0.0408any[]0.0048number[]0.0028
 Text.Whitespace
:Operator
 Text.Whitespace
indexKeyword.Typenumber0.7839any0.1915string0.0174any[]0.0016number[]0.0011
)Punctuation
.Punctuation
sortName.Otherany0.7651any[]0.0839number0.0392number[]0.0183complex0.0155
(Punctuation
compareAscendingName.Otherany0.3958number0.3822string0.1180complex0.0316any[]0.0185
)Punctuation
)Punctuation
\n  Text.Whitespace
returnKeyword
 Text.Whitespace
resultName.Otherany0.7051number0.0898string0.0391any[]0.0271boolean0.0133
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
exportKeyword
 Text.Whitespace
defaultKeyword
 Text.Whitespace
pullAtName.Otherany0.4181number0.0574string0.0405complex0.0206boolean0.0177
\nText.Whitespace
