Text
/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */Comment.Multiline
\n\nText.Whitespace
'use strict'Literal.String.Single
;Punctuation
\n\nText.Whitespace
/**\n * A regexp-tree plugin to replace single char character classes with\n * just that character.\n *\n * [\d] -> \d, [^\w] -> \W\n */Comment.Multiline
\nText.Whitespace
exportKeyword
 Text.Whitespace
defaultKeyword
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
CharacterClassName.Othervoid0.4521boolean0.4505any0.0392complex0.0199string0.0195
(Punctuation
pathName.Otherstring0.8283any0.1034Path0.0317complex0.0056string[]0.0052
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
{Punctuation
nodeName.Otherany0.8334complex0.0222string0.0118Element0.0046Node0.0042
}Punctuation
 Text.Whitespace
=Operator
 Text.Whitespace
pathName.Otherany0.4515string0.4073Path0.0748complex0.0142string[]0.0031
;Punctuation
\n\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
\n      Text.Whitespace
nodeName.Otherany0.6553complex0.0336Node0.0063TreeModel0.0053GomlNode0.0035
.Punctuation
expressionsName.Otherany0.6546any[]0.1064string[]0.0618complex0.0521string0.0030
.Punctuation
lengthName.Otherany0.9223number0.0713string0.0022complex0.0017boolean0.0010
 Text.Whitespace
!==Operator
 Text.Whitespace
1Literal.Number.Float
 Text.Whitespace
||Operator
\n      Text.Whitespace
!Operator
hasAppropriateSiblingsName.Otherboolean0.8771any0.0714string0.0245complex0.0144number0.0035
(Punctuation
pathName.Otherstring0.7792any0.1720Path0.0220complex0.0075string[]0.0026
)Punctuation
 Text.Whitespace
||Operator
\n      Text.Whitespace
!Operator
isAppropriateCharName.Otherboolean0.8470any0.0838string0.0213complex0.0194void0.0166
(Punctuation
nodeName.Otherany0.8551complex0.0275TreeModel0.0042Node0.0034any[]0.0022
.Punctuation
expressionsName.Otherany0.7090complex0.1204any[]0.0924string[]0.0155any[][]0.0026
[Punctuation
0Literal.Number.Float
]Punctuation
)Punctuation
\n    Text.Whitespace
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
returnKeyword
;Punctuation
\n    Text.Whitespace
}Punctuation
\n\n    Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
{Punctuation
valueName.Otherany0.7040string0.2606boolean0.0180number0.0050complex0.0016
,Punctuation
 Text.Whitespace
kindName.Otherany0.8088string0.1001complex0.0077SyntaxKind0.0050number0.0038
,Punctuation
 Text.Whitespace
escapedName.Otherany0.8222boolean0.0819string0.0703void0.0050number0.0046
}Punctuation
 Text.Whitespace
=Operator
 Text.Whitespace
nodeName.Otherany0.7425complex0.0671TreeModel0.0059any[]0.0052Token0.0043
.Punctuation
expressionsName.Otherany0.4096complex0.2281any[]0.1057string[]0.0213any[][]0.0058
[Punctuation
0Literal.Number.Float
]Punctuation
;Punctuation
\n\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
nodeName.Otherany0.4334complex0.0427TreeModel0.0171Node0.0069Element0.0062
.Punctuation
negativeName.Otherstring[]0.4953any0.3642any[]0.0360complex0.0326number[]0.0112
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
// For negative can extract only meta chars like [^\w] -> \WComment.Single
\n      Text.Whitespace
// cannot do for [^a] -> a (wrong).Comment.Single
\n      Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
isMetaName.Otherboolean0.9208any0.0328string0.0231complex0.0134void0.0012
(Punctuation
valueName.Otherany0.5739string0.3982boolean0.0089complex0.0051number0.0015
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
returnKeyword
;Punctuation
\n      Text.Whitespace
}Punctuation
\n\n      Text.Whitespace
valueName.Otherstring0.8742any0.1105boolean0.0059number0.0019complex0.0016
 Text.Whitespace
=Operator
 Text.Whitespace
getInverseMetaName.Otherstring0.8442any0.1122boolean0.0148complex0.0124number0.0032
(Punctuation
valueName.Otherstring0.7011any0.2833complex0.0029boolean0.0023number0.0016
)Punctuation
;Punctuation
\n    Text.Whitespace
}Punctuation
\n\n    Text.Whitespace
pathName.Otherstring0.8453any0.1326Path0.0055complex0.0036string[]0.0014
.Punctuation
replaceName.Othercomplex0.6739any0.3023string0.0110boolean0.0027void0.0019
(Punctuation
{Punctuation
\n      Text.Whitespace
typeKeyword.Reserved
:Operator
 Text.Whitespace
'Char'Literal.String.Single
,Punctuation
\n      Text.Whitespace
valueName.Otherstring0.7436any0.2289boolean0.0146number0.0044string[]0.0014
,Punctuation
\n      Text.Whitespace
kindName.Otherany0.5106string0.3592number0.0108complex0.0098boolean0.0071
,Punctuation
\n      Text.Whitespace
escapedName.Otherboolean0.6014any0.2640string0.1123number0.0055any[]0.0020
:Operator
 Text.Whitespace
escapedKeyword.Typeany0.5401boolean0.2980string0.1272any[]0.0044number0.0041
 Text.Whitespace
||Operator
 Text.Whitespace
shouldEscapeName.Otherboolean0.8581string0.0845any0.0417complex0.0036number0.0026
(Punctuation
valueName.Otherstring0.4931any0.4757boolean0.0134number0.0041complex0.0023
)Punctuation
,Punctuation
\n    Text.Whitespace
}Punctuation
)Punctuation
;Punctuation
\n  Text.Whitespace
}Punctuation
,Punctuation
\nText.Whitespace
}Punctuation
;Punctuation
\n\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
isAppropriateCharName.Otherboolean0.9783any0.0087string0.0072complex0.0017void0.0011
(Punctuation
nodeName.Otherany0.2596Node0.0628TreeModel0.0183ITreeNode0.0121never0.0102
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
returnKeyword
 Text.Whitespace
(Punctuation
\n    Text.Whitespace
nodeName.Otherany0.6287Node0.0184TreeModel0.0106complex0.0095never0.0052
.Punctuation
typeKeyword.Reserved
 Text.Whitespace
===Operator
 Text.Whitespace
'Char'Literal.String.Single
 Text.Whitespace
&&Operator
\n    Text.Whitespace
// We don't extract [\b] (backspace) since \b has differentComment.Single
\n    Text.Whitespace
// semantics (word boundary).Comment.Single
\n    Text.Whitespace
nodeName.Otherany0.8672complex0.0226Node0.0093never0.0030T0.0029
.Punctuation
valueName.Otherany0.8445string0.1430boolean0.0035complex0.0016number0.0012
 Text.Whitespace
!==Operator
 Text.Whitespace
'\\b'Literal.String.Single
\n  Text.Whitespace
)Punctuation
;Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
isMetaName.Otherboolean0.8618string0.1144any0.0113number0.0045complex0.0018
(Punctuation
valueName.Otherstring0.8272any0.1440boolean0.0100number0.0073Date0.0030
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
returnKeyword
 Text.Whitespace
/^\\[dwsDWS]$/Literal.String.Regex
.Punctuation
testName.Otherboolean0.9882string0.0045any0.0022void0.0017complex0.0010
(Punctuation
valueName.Otherstring0.9168any0.0676boolean0.0086number0.0023RegExp0.0008
)Punctuation
;Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
getInverseMetaName.Otherboolean0.4850string0.4738any0.0230number0.0073complex0.0029
(Punctuation
valueName.Otherstring0.8654any0.1168boolean0.0063number0.0050RegExp0.0014
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
returnKeyword
 Text.Whitespace
/[dws]/Literal.String.Regex
.Punctuation
testName.Otherboolean0.9880string0.0059any0.0020void0.0010complex0.0007
(Punctuation
valueName.Otherstring0.8932any0.0927boolean0.0068number0.0020Date0.0011
)Punctuation
 Text.Whitespace
?Operator
 Text.Whitespace
valueName.Otherstring0.8957any0.0972number0.0014boolean0.0013RegExp0.0006
.Punctuation
toUpperCaseName.Otherstring0.7090any0.2864number0.0011complex0.0008void0.0006
(Punctuation
)Punctuation
 Text.Whitespace
:Operator
 Text.Whitespace
valueName.Otherstring0.9287any0.0673number0.0011boolean0.0009complex0.0003
.Punctuation
toLowerCaseName.Otherstring0.8292any0.1651boolean0.0016number0.0013complex0.0009
(Punctuation
)Punctuation
;Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
hasAppropriateSiblingsName.Otherboolean0.8481string0.1012any0.0312complex0.0048number0.0044
(Punctuation
pathName.Otherstring0.9357any0.0419Path0.0076complex0.0019string[]0.0017
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
{Punctuation
parentName.Otherany0.3129string0.0418complex0.0177Element0.0120Token0.0089
,Punctuation
 Text.Whitespace
indexName.Otherany0.6811number0.2321string0.0520complex0.0072boolean0.0015
}Punctuation
 Text.Whitespace
=Operator
 Text.Whitespace
pathName.Otherstring0.6801any0.2369Path0.0310complex0.0148string[]0.0022
;Punctuation
\n\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
parentName.Otherany0.1596complex0.0327Token0.0134Node0.0087this0.0065
.Punctuation
typeKeyword.Reserved
 Text.Whitespace
!==Operator
 Text.Whitespace
'Alternative'Literal.String.Single
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
trueKeyword.Constant
;Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
previousNodeName.Otherany0.4404complex0.1314Node0.0240string0.0072Token0.0052
 Text.Whitespace
=Operator
 Text.Whitespace
parentName.Otherany0.2926complex0.1035Node0.0165Token0.0079ViewBase0.0042
.Punctuation
expressionsName.Otherany0.3095complex0.1009any[]0.0562string[]0.0203any[][]0.0077
[Punctuation
indexName.Othernumber0.5642any0.3604string0.0626complex0.0025Date0.0009
 Text.Whitespace
-Operator
 Text.Whitespace
1Literal.Number.Float
]Punctuation
;Punctuation
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
previousNodeName.Otherany0.3300complex0.0800Node0.0356boolean0.0170Error0.0090
 Text.Whitespace
==Operator
 Text.Whitespace
nullKeyword.Constant
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
trueKeyword.Constant
;Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
// Don't optimized \1[0] to \10Comment.Single
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
previousNodeName.Otherany0.2054complex0.1551Node0.0496boolean0.0103Error0.0049
.Punctuation
typeKeyword.Reserved
 Text.Whitespace
===Operator
 Text.Whitespace
'Backreference'Literal.String.Single
 Text.Whitespace
&&Operator
 Text.Whitespace
previousNodeName.Otherany0.4971complex0.1116Node0.0471boolean0.0128string0.0081
.Punctuation
kindName.Otherany0.4863string0.3049complex0.0279SyntaxKind0.0130boolean0.0115
 Text.Whitespace
===Operator
 Text.Whitespace
'number'Literal.String.Single
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
falseKeyword.Constant
;Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
// Don't optimized \2[0] to \20Comment.Single
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
previousNodeName.Otherany0.1365complex0.1029Node0.0459boolean0.0109Error0.0050
.Punctuation
typeKeyword.Reserved
 Text.Whitespace
===Operator
 Text.Whitespace
'Char'Literal.String.Single
 Text.Whitespace
&&Operator
 Text.Whitespace
previousNodeName.Otherany0.3909complex0.1420Node0.0420boolean0.0130Error0.0081
.Punctuation
kindName.Otherany0.3715string0.3586complex0.0358boolean0.0133SyntaxKind0.0131
 Text.Whitespace
===Operator
 Text.Whitespace
'decimal'Literal.String.Single
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
falseKeyword.Constant
;Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
returnKeyword
 Text.Whitespace
trueKeyword.Constant
;Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
Text
// Note: \{ and \} are always preserved to avoid `a[{]2[}]` turningComment.Single
\nText.Whitespace
// into `a{2}`.Comment.Single
\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
shouldEscapeName.Otherboolean0.8774string0.0974any0.0108number0.0044complex0.0015
(Punctuation
valueName.Otherstring0.8059any0.1557boolean0.0127number0.0095Date0.0028
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
returnKeyword
 Text.Whitespace
/[*[()+?$./{}|]/Literal.String.Regex
.Punctuation
testName.Otherboolean0.9918string0.0019any0.0017void0.0015complex0.0006
(Punctuation
valueName.Otherstring0.8611any0.1155boolean0.0108number0.0045Date0.0008
)Punctuation
;Punctuation
\nText.Whitespace
}Punctuation
\nText.Whitespace
