importKeyword
 Text.Whitespace
unzipWithName.Otherany0.2483complex0.1047void0.0696string[]0.0470boolean0.0368
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./unzipWith.js'Literal.String.Single
\n\nText.Whitespace
Text
/**\n * This method is like `zip` except that it accepts `iteratee` to specify\n * how grouped values should be combined. The iteratee is invoked with the\n * elements of each group: (...group).\n *\n * @since 3.8.0\n * @category Array\n * @param {...Array} [arrays] The arrays to process.\n * @param {Function} iteratee The function to combine\n *  grouped values.\n * @returns {Array} Returns the new array of grouped elements.\n * @see unzip, unzipWith, zip, zipObject, zipObjectDeep, zipWith\n * @example\n *\n * zipWith([1, 2], [10, 20], [100, 200], (a, b, c) => a + b + c)\n * // => [111, 222]\n */Comment.Multiline
\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
zipWithName.Otherany0.3410string[]0.2432complex0.1246number[]0.0310any[]0.0289
(Punctuation
...Punctuation
arraysName.Otherany[]0.5408any0.2136string[]0.1243number[]0.0222complex0.0072
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
lengthName.Othernumber0.9071any0.0866string0.0034complex0.0005any[]0.0004
 Text.Whitespace
=Operator
 Text.Whitespace
arraysName.Otherany[]0.3051string[]0.3050any0.2750number[]0.0216string0.0148
.Punctuation
lengthName.Othernumber0.7662any0.2275string0.0031complex0.0010boolean0.0005
\n  Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
iterateeName.Otherany0.3490string0.3055number0.2426any[]0.0560string[]0.0128
 Text.Whitespace
=Operator
 Text.Whitespace
lengthName.Othernumber0.9211any0.0754string0.0021complex0.0003boolean0.0002
 Text.Whitespace
>Operator
 Text.Whitespace
1Literal.Number.Float
 Text.Whitespace
?Operator
 Text.Whitespace
arraysName.Otherany[]0.3907any0.2720string[]0.2297number[]0.0228string0.0088
[Punctuation
lengthName.Othernumber0.9182any0.0774string0.0033complex0.0002boolean0.0002
 Text.Whitespace
-Operator
 Text.Whitespace
1Literal.Number.Float
]Punctuation
 Text.Whitespace
:Operator
 Text.Whitespace
undefinedKeyword.Constant
\n  Text.Whitespace
iterateeName.Otherany0.7964string0.0777number0.0344boolean0.0322any[]0.0121
 Text.Whitespace
=Operator
 Text.Whitespace
typeofOperator.Word
 Text.Whitespace
iterateeName.Otherany0.7948string0.1010number0.0240complex0.0130any[]0.0089
 Text.Whitespace
===Operator
 Text.Whitespace
'function'Literal.String.Single
 Text.Whitespace
?Operator
 Text.Whitespace
(Punctuation
arraysName.Otherany0.3935any[]0.3158string[]0.1978string0.0136complex0.0119
.Punctuation
popName.Otherany0.5480string0.3925complex0.0091number0.0080any[]0.0075
(Punctuation
)Punctuation
,Punctuation
 Text.Whitespace
iterateeName.Otherstring0.5738any0.2800number0.1197any[]0.0034boolean0.0033
)Punctuation
 Text.Whitespace
:Operator
 Text.Whitespace
undefinedKeyword.Constant
\n  Text.Whitespace
returnKeyword
 Text.Whitespace
unzipWithName.Otherany0.3122string0.1460void0.1209number0.0849complex0.0796
(Punctuation
arraysName.Otherany[]0.3967any0.3566string[]0.0967number[]0.0337string0.0193
,Punctuation
 Text.Whitespace
iterateeName.Otherany0.4625string0.2495number0.1035any[]0.0300{}0.0250
)Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
exportKeyword
 Text.Whitespace
defaultKeyword
 Text.Whitespace
zipWithName.Otherany0.2064string[]0.0606Config0.0391number[]0.0328complex0.0230
\nText.Whitespace
