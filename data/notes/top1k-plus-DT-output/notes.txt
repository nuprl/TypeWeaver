# Type inference

This directory is a copy of `top1k-plus`, but with CSV files generated by
DeepTyper for each JavaScript file. Each CSV file contains the tokens and
predicted types for the corresponding JavaScript file.

The type inference was done by executing:

    # starting from the repository root
    cd data/notes/top1k-plus-DT-output
    python ../../../tools/infer-types.py ../../top1k-plus-DT-output

`infer-types.py` can be run from any directory, but it outputs logs to its
current working directory. It took about 19 hours (with an RTX6000) to run
the type inference.

There are 30865 files total, taking up 299 MB of space. With the generated
`*.csv` files, the directory takes up 570 MB of space.

18909 `*.js` files were given as inputs; these are listed in
`type-inf-inputs.txt`.

18352 files ran successfully (i.e. DeepTyper ran without error and produced a
corresponding .csv file); these are listed in `type-inf-success.txt`.

557 files resulted in an error; these are listed in `type-inf-fail.txt` and their
errors collected in `type-inf-errs.txt`.


# Type insertion

This step reads the JavaScript files and their corresponding CSV files, and
inserts the predicted type annotations, outputing TypeScript.

    # starting from the repository root
    cd data/notes/top1k-plus-DT-output
    python ../../../tools/insert-types.py ../../top1k-plus-DT-output

`insert-types.py` outputs logs to its current working directory.

Using 16 cores, this step took about 19 minutes.

18350 files were successfully converted to Typescript; these are listed in
`type-ins-success.txt`.

2 files did not convert successfully; these are listed in `type-ins-fail` and
their errors collected in `type-ins-errs.txt` and summarized below:

  - fs-monkey/lib/patchFs.js
    - DeepTyper inferred `...` as a type, but this is not a valid type
  - rxjs/dist/esm/internal/Subject.js
    - DeepTyper inferred `void)[]` as a type, but this is not a valid type

2999 files resulted in 10924 warnings; these are listed in `type-ins-warn.txt`.
The warnings fall into the following categories:

  - 449 declaration types could not be found
    - 243 involved identifiers containing the string "module", which were likely
      tokenized improperly by DeepTyper's lexer
    - Some JavaScript files were actually Flow, and already had type annotations
    - Some files had incorrect tokenization, e.g. `with$data` was split into
      two tokens
    - Some searches were cancelled because the token sequence was preceded by
      the "for" token (e.g. an empty for loop)
    - Some tokens were actually part of a backtick string literal
  - 592 functions with default parameters were skipped
  - 9880 declarations were part of a multi-declaration statement and were
    skipped
