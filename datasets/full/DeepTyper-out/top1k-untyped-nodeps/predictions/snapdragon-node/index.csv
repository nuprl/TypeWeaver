'use strict'Literal.String.Single
;Punctuation
\n\nText.Whitespace
/**\n * Create a new AST `Node` with the given `type` and `value`, or an\n * object to initialize with.\n *\n * ```js\n * console.log(new Node({ type: 'star', value: '*' }));\n * console.log(new Node('star', '*'));\n * // both result in => Node { type: 'star', value: '*' }\n * ```\n * @name Node\n * @param {object|string} `type` Either an object to initialize with, or a string to be used as the `node.type`.\n * @param {string|boolean} `value` If the first argument is a string, the second argument may be a string value to set on `node.value`.\n * @param {boolean} `clone` When an object is passed as the first argument, pass true as the last argument to deep clone values before assigning them to the new node.\n * @return {Object} node instance\n * @api public\n */Comment.Multiline
\n\nText.Whitespace
classKeyword.Declaration
 Text.Whitespace
NodeName.Otherany0.9923complex0.0066string0.0005Object0.0001any[]0.0001
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
constructorKeyword.Reserved
(Punctuation
typeKeyword.Reserved
,Punctuation
 Text.Whitespace
valueName.Otherany0.7728string0.1779boolean0.0153number0.0147Object0.0014
,Punctuation
 Text.Whitespace
cloneName.Otherany0.5891string0.1645number0.0924boolean0.0267Date0.0145
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
defineName.Othervoid0.8797any0.1101complex0.0022Function0.0018this0.0015
(Punctuation
thisKeyword
,Punctuation
 Text.Whitespace
'isNode'Literal.String.Single
,Punctuation
 Text.Whitespace
trueKeyword.Constant
)Punctuation
;Punctuation
\n    Text.Whitespace
defineName.Othervoid0.9711any0.0235complex0.0012Function0.0010this0.0005
(Punctuation
thisKeyword
,Punctuation
 Text.Whitespace
'parent'Literal.String.Single
,Punctuation
 Text.Whitespace
nullKeyword.Constant
)Punctuation
;Punctuation
\n    Text.Whitespace
defineName.Othervoid0.9278any0.0658complex0.0016Function0.0013this0.0005
(Punctuation
thisKeyword
,Punctuation
 Text.Whitespace
'size'Literal.String.Single
,Punctuation
 Text.Whitespace
0Literal.Number.Float
)Punctuation
;Punctuation
\n\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
isObjectName.Otherboolean0.9503complex0.0199any0.0114void0.0063false0.0015
(Punctuation
typeKeyword.Reserved
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
assignName.Othervoid0.8301any0.1048Function0.0197this0.0138complex0.0061
(Punctuation
thisKeyword
,Punctuation
 Text.Whitespace
typeKeyword.Reserved
,Punctuation
 Text.Whitespace
cloneName.Otherany0.6400string0.1619number0.0608void0.0129T0.0128
)Punctuation
;Punctuation
\n    Text.Whitespace
}Punctuation
 Text.Whitespace
elseKeyword
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
thisKeyword
.Punctuation
typeKeyword.Reserved
 Text.Whitespace
=Operator
 Text.Whitespace
typeKeyword.Reserved
;Punctuation
\n      Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
valueName.Otherany0.8650string0.0838number0.0210boolean0.0056complex0.0052
 Text.Whitespace
!=Operator
 Text.Whitespace
nullKeyword.Constant
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
thisKeyword
.Punctuation
valueName.Otherany0.5458string0.2427number0.0504boolean0.0167complex0.0142
 Text.Whitespace
=Operator
 Text.Whitespace
valueName.Otherany0.6448string0.1971number0.0489boolean0.0242never0.0087
;Punctuation
\n      Text.Whitespace
}Punctuation
\n    Text.Whitespace
}Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
/**\n   * Return a clone of the node. Values that are arrays or plain objects\n   * are deeply cloned.\n   *\n   * ```js\n   * const node = new Node({type: 'star', value: '*'});\n   * consle.log(node.clone() !== node);\n   * //=> true\n   * ```\n   * @name .clone\n   * @return {Object} returns a clone of the node\n   * @api public\n   */Comment.Multiline
\n\n  Text.Whitespace
cloneName.Otherany0.3116number0.0533Node0.0371T0.0258string0.0243
(Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
newOperator.Wordany0.6737string0.0642this0.0092Error0.0092Node0.0079
 Text.Whitespace
thisKeyword
.Punctuation
constructorKeyword.Reserved
(Punctuation
thisKeyword
,Punctuation
 Text.Whitespace
nullKeyword.Constant
,Punctuation
 Text.Whitespace
trueKeyword.Constant
)Punctuation
;Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
/**\n   * Return a string created from `node.value` and/or recursively\n   * visiting over `node.nodes`.\n   *\n   * ```js\n   * const node = new Node({type: 'star', value: '*'});\n   * consle.log(node.stringify());\n   * //=> '*'\n   * ```\n   * @name .stringify\n   * @return {String}\n   * @api public\n   */Comment.Multiline
\n\n  Text.Whitespace
stringifyName.Othercomplex0.4940string0.2639any0.1293boolean0.0193void0.0191
(Punctuation
fnName.Otherany0.7462Function0.1134string0.0263number0.0174boolean0.0113
 Text.Whitespace
=Operator
 Text.Whitespace
nName.Otherany0.8100number0.0784string0.0254Function0.0140complex0.0114
 Text.Whitespace
=>Punctuation
 Text.Whitespace
nName.Otherany0.7691complex0.0166number0.0100Node0.0080Function0.0043
.Punctuation
valueName.Otherany0.9138string0.0644number0.0106boolean0.0058complex0.0020
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
strName.Otherstring0.9612any0.0287RegExp0.0051number0.0014complex0.0012
 Text.Whitespace
=Operator
 Text.Whitespace
''Literal.String.Single
;Punctuation
\n    Text.Whitespace
visitName.Othervoid0.9894any0.0030string0.0018complex0.0016boolean0.0014
(Punctuation
thisKeyword
,Punctuation
 Text.Whitespace
nName.Othernumber0.4952any0.3645string0.1127complex0.0059boolean0.0031
 Text.Whitespace
=>Punctuation
 Text.Whitespace
(Punctuation
strName.Otherstring0.9688any0.0228number0.0056complex0.0013boolean0.0005
 Text.Whitespace
+=Operator
 Text.Whitespace
fnName.Otherany0.6877Function0.1067string0.0890number0.0434complex0.0103
(Punctuation
nName.Othernumber0.6261any0.2266string0.1328complex0.0017Function0.0012
)Punctuation
)Punctuation
)Punctuation
;Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
strName.Otherstring0.8307any0.1536number0.0086complex0.0021boolean0.0014
;Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
/**\n   * Push a child node onto the `node.nodes` array.\n   *\n   * ```js\n   * const foo = new Node({type: 'foo'});\n   * const bar = new Node({type: 'bar'});\n   * foo.push(bar);\n   * ```\n   * @name .push\n   * @param {Object} `node`\n   * @return {Number} Returns the length of `node.nodes`, like `Array.push`\n   * @api public\n   */Comment.Multiline
\n\n  Text.Whitespace
pushName.Othernumber0.9185any0.0472void0.0165boolean0.0084string0.0032
(Punctuation
nodeName.Otherany0.3059Node0.1684Tree0.0166RowNode0.0146Element0.0135
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
nodeName.Otherany0.5001Node0.1370boolean0.0152RowNode0.0145complex0.0137
)Punctuation
 Text.Whitespace
returnKeyword
;Punctuation
\n    Text.Whitespace
assertName.Otherany0.7185void0.1860complex0.0167boolean0.0116this0.0094
(Punctuation
isObjectName.Otherboolean0.7664complex0.1067any0.0834void0.0130number0.0059
(Punctuation
nodeName.Otherany0.8541Node0.0305never0.0052Element0.0042string0.0042
)Punctuation
,Punctuation
 Text.Whitespace
'expected node to be an object'Literal.String.Single
)Punctuation
;Punctuation
\n    Text.Whitespace
assertName.Otherany0.6416void0.2229this0.0276complex0.0199IAssertFunctions0.0094
(Punctuation
nodeName.Otherany0.7893Node0.0401Element0.0077string0.0063RowNode0.0057
 Text.Whitespace
!==Operator
 Text.Whitespace
thisKeyword
,Punctuation
 Text.Whitespace
'node should not be the same as node.parent'Literal.String.Single
)Punctuation
;Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
thisKeyword
.Punctuation
constructorKeyword.Reserved
.Punctuation
isNodeName.Otherboolean0.8440any0.1130complex0.0296void0.0038string0.0023
(Punctuation
nodeName.Otherany0.5437Node0.0931RowNode0.0097Tree0.0092TreeModel0.0079
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
nodeName.Otherany0.7139Node0.0465Node<Node>0.0082TreeModel0.0058RowNode0.0053
 Text.Whitespace
=Operator
 Text.Whitespace
newOperator.Wordany0.7895string0.0226Node0.0186number0.0060Error0.0054
 Text.Whitespace
thisKeyword
.Punctuation
constructorKeyword.Reserved
(Punctuation
nodeName.Otherany0.6342Node0.0727never0.0172Tree0.0117string0.0100
)Punctuation
;Punctuation
\n    Text.Whitespace
}Punctuation
\n    Text.Whitespace
thisKeyword
.Punctuation
nodesName.Otherany[]0.2097any0.1034Node[]0.0308string[]0.0205User[]0.0161
 Text.Whitespace
=Operator
 Text.Whitespace
thisKeyword
.Punctuation
nodesName.Otherany[]0.1574any0.1438Node[]0.0207string[]0.0137User[]0.0095
 Text.Whitespace
||Operator
 Text.Whitespace
[Punctuation
]Punctuation
;Punctuation
\n    Text.Whitespace
nodeName.Otherany0.6995Node0.0268complex0.0142RowNode0.0075Node<Node>0.0069
.Punctuation
parentName.Otherany0.7078Node0.0249Function0.0077this0.0072T0.0072
 Text.Whitespace
=Operator
 Text.Whitespace
thisKeyword
;Punctuation
\n    Text.Whitespace
ensureNodesName.Othervoid0.5739any0.2643complex0.0212number0.0162boolean0.0112
(Punctuation
nodeName.Otherany0.6692Node0.0619RowNode0.0128TreeNode0.0077never0.0073
)Punctuation
;Punctuation
\n    Text.Whitespace
thisKeyword
.Punctuation
sizeName.Othernumber0.9939any0.0052string0.0003void0.0002boolean0.0002
++Operator
;Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
thisKeyword
.Punctuation
nodesName.Otherany[]0.1528any0.0414Node[]0.0303Function[]0.0075string[]0.0070
.Punctuation
pushName.Othernumber0.9811any0.0156boolean0.0015void0.0005complex0.0004
(Punctuation
nodeName.Otherany0.8218Node0.0489Element0.0052RowNode0.0048string0.0043
)Punctuation
;Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
/**\n   * Unshift a child node onto `node.nodes`, and set `node` as\n   * the parent on `child.parent`.\n   *\n   * ```js\n   * const foo = new Node({type: 'foo'});\n   * const bar = new Node({type: 'bar'});\n   * foo.unshift(bar);\n   * ```\n   * @name .unshift\n   * @param {Object} `node`\n   * @return {Number} Returns the length of `node.nodes`\n   * @api public\n   */Comment.Multiline
\n\n  Text.Whitespace
unshiftName.Othernumber0.8362any0.1300void0.0191boolean0.0043complex0.0020
(Punctuation
nodeName.Otherany0.5417Node0.0990RowNode0.0110Element0.0085never0.0075
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
nodeName.Otherany0.7299Node0.0683boolean0.0123complex0.0104RowNode0.0066
)Punctuation
 Text.Whitespace
returnKeyword
;Punctuation
\n    Text.Whitespace
assertName.Otherany0.7860void0.1540complex0.0109boolean0.0091this0.0049
(Punctuation
isObjectName.Otherboolean0.7566any0.1011complex0.1008void0.0160number0.0062
(Punctuation
nodeName.Otherany0.8932Node0.0239never0.0036Element0.0030string0.0030
)Punctuation
,Punctuation
 Text.Whitespace
'expected node to be an object'Literal.String.Single
)Punctuation
;Punctuation
\n    Text.Whitespace
assertName.Otherany0.6946void0.2087this0.0158complex0.0149boolean0.0075
(Punctuation
nodeName.Otherany0.8790Node0.0243Element0.0041complex0.0035string0.0033
 Text.Whitespace
!==Operator
 Text.Whitespace
thisKeyword
,Punctuation
 Text.Whitespace
'node should not be the same as node.parent'Literal.String.Single
)Punctuation
;Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
thisKeyword
.Punctuation
constructorKeyword.Reserved
.Punctuation
isNodeName.Otherboolean0.8609any0.1041complex0.0216void0.0047string0.0019
(Punctuation
nodeName.Otherany0.6185Node0.0857Tree0.0080TreeNode0.0068RowNode0.0067
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
nodeName.Otherany0.7654Node0.0406Node<Node>0.0062Function0.0051TreeModel0.0049
 Text.Whitespace
=Operator
 Text.Whitespace
newOperator.Wordany0.8470string0.0172Node0.0140number0.0059Error0.0048
 Text.Whitespace
thisKeyword
.Punctuation
constructorKeyword.Reserved
(Punctuation
nodeName.Otherany0.6262Node0.0778never0.0157Tree0.0140string0.0087
)Punctuation
;Punctuation
\n    Text.Whitespace
}Punctuation
\n    Text.Whitespace
thisKeyword
.Punctuation
nodesName.Otherany[]0.2358any0.1108Node[]0.0327string[]0.0187User[]0.0163
 Text.Whitespace
=Operator
 Text.Whitespace
thisKeyword
.Punctuation
nodesName.Otherany[]0.1669any0.1381Node[]0.0230string[]0.0124User[]0.0106
 Text.Whitespace
||Operator
 Text.Whitespace
[Punctuation
]Punctuation
;Punctuation
\n    Text.Whitespace
nodeName.Otherany0.7515Node0.0218complex0.0102TreeNode0.0063TreeModel0.0059
.Punctuation
parentName.Otherany0.7784Node0.0172void0.0069Function0.0067this0.0060
 Text.Whitespace
=Operator
 Text.Whitespace
thisKeyword
;Punctuation
\n    Text.Whitespace
ensureNodesName.Othervoid0.6233any0.2349number0.0181complex0.0142boolean0.0113
(Punctuation
nodeName.Otherany0.6800Node0.0528RowNode0.0115TreeNode0.0088never0.0065
)Punctuation
;Punctuation
\n    Text.Whitespace
thisKeyword
.Punctuation
sizeName.Othernumber0.9934any0.0058void0.0002string0.0002boolean0.0002
++Operator
;Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
thisKeyword
.Punctuation
nodesName.Otherany[]0.1907any0.0391Node[]0.0309string[]0.0115Function[]0.0101
.Punctuation
unshiftName.Othernumber0.9634any0.0325boolean0.0014void0.0010complex0.0006
(Punctuation
nodeName.Otherany0.7585Node0.0434never0.0071Element0.0069TreeNode0.0047
)Punctuation
;Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
/**\n   * Pop a node from `node.nodes`.\n   *\n   * ```js\n   * const node = new Node({type: 'foo'});\n   * node.push(new Node({type: 'a'}));\n   * node.push(new Node({type: 'b'}));\n   * node.push(new Node({type: 'c'}));\n   * node.push(new Node({type: 'd'}));\n   * console.log(node.nodes.length);\n   * //=> 4\n   * node.pop();\n   * console.log(node.nodes.length);\n   * //=> 3\n   * ```\n   * @name .pop\n   * @return {Number} Returns the popped `node`\n   * @api public\n   */Comment.Multiline
\n\n  Text.Whitespace
popName.Otherany0.7032string0.0669void0.0588boolean0.0393number0.0243
(Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
thisKeyword
.Punctuation
nodesName.Otherany[]0.1313any0.1051Node[]0.0179string[]0.0115HTMLCollection0.0074
 Text.Whitespace
&&Operator
 Text.Whitespace
thisKeyword
.Punctuation
nodesName.Otherany[]0.0972any0.0458Node[]0.0237string[]0.0136User[]0.0090
.Punctuation
lengthName.Othernumber0.9087any0.0893string0.0005boolean0.0004complex0.0003
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
thisKeyword
.Punctuation
sizeName.Othernumber0.9913any0.0080void0.0002string0.0002boolean0.0001
--Operator
;Punctuation
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
thisKeyword
.Punctuation
nodesName.Otherany[]0.2621any0.1041string[]0.0764Node[]0.0269complex0.0115
.Punctuation
popName.Otherany0.7021string0.0726number0.0612boolean0.0497complex0.0476
(Punctuation
)Punctuation
;Punctuation
\n    Text.Whitespace
}Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
/**\n   * Shift a node from `node.nodes`.\n   *\n   * ```js\n   * const node = new Node({type: 'foo'});\n   * node.push(new Node({type: 'a'}));\n   * node.push(new Node({type: 'b'}));\n   * node.push(new Node({type: 'c'}));\n   * node.push(new Node({type: 'd'}));\n   * console.log(node.nodes.length);\n   * //=> 4\n   * node.shift();\n   * console.log(node.nodes.length);\n   * //=> 3\n   * ```\n   * @name .shift\n   * @return {Object} Returns the shifted `node`\n   * @api public\n   */Comment.Multiline
\n\n  Text.Whitespace
shiftName.Otherany0.6950void0.0889number0.0540string0.0249boolean0.0122
(Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
thisKeyword
.Punctuation
nodesName.Otherany[]0.1070any0.0986Node[]0.0198string[]0.0105HTMLCollection0.0079
 Text.Whitespace
&&Operator
 Text.Whitespace
thisKeyword
.Punctuation
nodesName.Otherany[]0.0799any0.0452Node[]0.0276string[]0.0115User[]0.0095
.Punctuation
lengthName.Othernumber0.9116any0.0865string0.0005boolean0.0004complex0.0003
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
thisKeyword
.Punctuation
sizeName.Othernumber0.9897any0.0096void0.0002string0.0002boolean0.0001
--Operator
;Punctuation
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
thisKeyword
.Punctuation
nodesName.Otherany[]0.1753any0.1542string[]0.0351Node[]0.0234T[]0.0085
.Punctuation
shiftName.Otherany0.7732number0.0756string0.0552complex0.0136boolean0.0064
(Punctuation
)Punctuation
;Punctuation
\n    Text.Whitespace
}Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
/**\n   * Remove `node` from `node.nodes`.\n   *\n   * ```js\n   * node.remove(childNode);\n   * ```\n   * @name .remove\n   * @param {Object} `node`\n   * @return {Object} Returns the removed node.\n   * @api public\n   */Comment.Multiline
\n\n  Text.Whitespace
removeName.Othervoid0.5667any0.1743boolean0.0945complex0.0291number0.0134
(Punctuation
nodeName.Otherany0.4400Node0.0843TreeModel0.0139TreeNode0.0119RowNode0.0097
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
thisKeyword
.Punctuation
nodesName.Otherany[]0.1841any0.1336Node[]0.0257string[]0.0093HTMLCollection0.0067
)Punctuation
 Text.Whitespace
returnKeyword
 Text.Whitespace
[Punctuation
]Punctuation
;Punctuation
\n    Text.Whitespace
assertName.Otherany0.9068void0.0610Assert0.0056this0.0034complex0.0029
(Punctuation
thisKeyword
.Punctuation
constructorKeyword.Reserved
.Punctuation
isNodeName.Otherboolean0.6471any0.2581complex0.0623void0.0104string0.0078
(Punctuation
nodeName.Otherany0.7511Node0.0613Element0.0073never0.0042FileNode0.0038
)Punctuation
,Punctuation
 Text.Whitespace
'expected an instance of Node'Literal.String.Single
)Punctuation
;Punctuation
\n    Text.Whitespace
assertName.Otherany0.7068void0.2137this0.0154complex0.0097boolean0.0074
(Punctuation
nodeName.Otherany0.8038Node0.0489Element0.0066number0.0066string0.0045
 Text.Whitespace
!==Operator
 Text.Whitespace
thisKeyword
,Punctuation
 Text.Whitespace
'cannot remove a node from itself'Literal.String.Single
)Punctuation
;Punctuation
\n\n    Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
idxName.Othernumber0.9912any0.0077boolean0.0004string0.0003void0.0001
 Text.Whitespace
=Operator
 Text.Whitespace
thisKeyword
.Punctuation
nodesName.Otherany[]0.1089any0.0741Node[]0.0426string[]0.0412NodeList0.0064
.Punctuation
indexOfName.Othernumber0.9708any0.0270string0.0006complex0.0005boolean0.0005
(Punctuation
nodeName.Otherany0.8477Node0.0259string0.0068RowNode0.0035number0.0034
)Punctuation
;Punctuation
\n    Text.Whitespace
nodeName.Otherany0.7684Node0.0421complex0.0084RowNode0.0041TreeNode0.0041
.Punctuation
indexName.Othernumber0.7637any0.2325string0.0015boolean0.0009complex0.0003
 Text.Whitespace
=Operator
 Text.Whitespace
-Operator
1Literal.Number.Float
;Punctuation
\n\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
idxName.Othernumber0.8879any0.1093boolean0.0012string0.0009complex0.0001
 Text.Whitespace
!==Operator
 Text.Whitespace
-Operator
1Literal.Number.Float
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
thisKeyword
.Punctuation
sizeName.Othernumber0.9938any0.0056string0.0002void0.0002boolean0.0001
--Operator
;Punctuation
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
thisKeyword
.Punctuation
nodesName.Otherany[]0.1772any0.1166Node[]0.0339string[]0.0176complex0.0124
.Punctuation
spliceName.Othercomplex0.8654any0.1208number0.0025any[]0.0024boolean0.0013
(Punctuation
idxName.Othernumber0.9754any0.0232boolean0.0005string0.0005void0.0001
,Punctuation
 Text.Whitespace
1Literal.Number.Float
)Punctuation
;Punctuation
\n    Text.Whitespace
}Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
[Punctuation
]Punctuation
;Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
/**\n   * Get the first child node from `node.nodes` that matches the given `type`.\n   * If `type` is a number, the child node at that index is returned.\n   *\n   * ```js\n   * const child = node.find(1); //<= index of the node to get\n   * const child = node.find('foo'); //<= node.type of a child node\n   * const child = node.find(/^(foo|bar)$/); //<= regex to match node.type\n   * const child = node.find(['foo', 'bar']); //<= array of node.type(s)\n   * ```\n   * @name .find\n   * @param {String} `type`\n   * @return {Object} Returns a child node or undefined.\n   * @api public\n   */Comment.Multiline
\n\n  Text.Whitespace
findName.Otherany0.5227complex0.0784boolean0.0755number0.0187void0.0182
(Punctuation
typeKeyword.Reserved
,Punctuation
 Text.Whitespace
nName.Othernumber0.9379any0.0521string0.0043boolean0.0013complex0.0005
 Text.Whitespace
=Operator
 Text.Whitespace
0Literal.Number.Float
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
ArrayName.BuiltinArrayConstructor0.9995Math0.0000ObjectConstructor0.0000any0.0000complex0.0000
.Punctuation
isArrayName.Othercomplex0.9973any0.0011boolean0.0004any[]0.0003void0.0002
(Punctuation
thisKeyword
.Punctuation
nodesName.Otherany[]0.2540any0.1361Node[]0.0208complex0.0154string[]0.0106
)Punctuation
 Text.Whitespace
||Operator
 Text.Whitespace
thisKeyword
.Punctuation
nodesName.Otherany[]0.2870any0.0986Node[]0.0180string[]0.0129User[]0.0061
.Punctuation
lengthName.Othernumber0.8774any0.1202complex0.0008string0.0006boolean0.0003
 Text.Whitespace
===Operator
 Text.Whitespace
0Literal.Number.Float
)Punctuation
 Text.Whitespace
returnKeyword
 Text.Whitespace
nullKeyword.Constant
;Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
typeofOperator.Word
 Text.Whitespace
typeKeyword.Reserved
 Text.Whitespace
===Operator
 Text.Whitespace
'number'Literal.String.Single
)Punctuation
 Text.Whitespace
returnKeyword
 Text.Whitespace
thisKeyword
.Punctuation
nodesName.Otherany0.2854complex0.1093any[]0.0961Node[]0.0090any[][]0.0071
[Punctuation
typeKeyword.Reserved
]Punctuation
;Punctuation
\n    Text.Whitespace
forKeyword
 Text.Whitespace
(Punctuation
letKeyword.Declaration
 Text.Whitespace
iName.Othernumber0.9838any0.0135string0.0016boolean0.0004void0.0001
 Text.Whitespace
=Operator
 Text.Whitespace
nName.Othernumber0.9556any0.0376string0.0022T0.0005complex0.0004
;Punctuation
 Text.Whitespace
iName.Othernumber0.9929any0.0059string0.0004void0.0002boolean0.0001
 Text.Whitespace
<Operator
 Text.Whitespace
thisKeyword
.Punctuation
nodesName.Otherany0.0595any[]0.0522Node[]0.0343NodeList0.0135string[]0.0093
.Punctuation
lengthName.Othernumber0.9217any0.0764string0.0005complex0.0004boolean0.0003
;Punctuation
 Text.Whitespace
iName.Othernumber0.9863any0.0131string0.0002boolean0.0002void0.0001
++Operator
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
nodeName.Otherany0.6334Node0.1037TreeNode0.0082RowNode0.0078Element0.0076
 Text.Whitespace
=Operator
 Text.Whitespace
thisKeyword
.Punctuation
nodesName.Otherany0.2343any[]0.1495string[]0.0231Node[]0.0198complex0.0145
[Punctuation
iName.Othernumber0.9808any0.0143string0.0032boolean0.0005void0.0001
]Punctuation
;Punctuation
\n      Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
isTypeName.Otherboolean0.4279complex0.3287any0.2048void0.0134number0.0057
(Punctuation
nodeName.Otherany0.8308Node0.0505never0.0113Element0.0111complex0.0041
,Punctuation
 Text.Whitespace
typeKeyword.Reserved
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
returnKeyword
 Text.Whitespace
nodeName.Otherany0.8459Node0.0215never0.0089Element0.0076any[]0.0060
;Punctuation
\n      Text.Whitespace
}Punctuation
\n    Text.Whitespace
}Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
visitName.Othervoid0.9054any0.0488boolean0.0134Promise<void>0.0045Function0.0042
(Punctuation
fnName.Otherany0.7183Function0.1455number0.0148boolean0.0140string0.0063
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
visitName.Othervoid0.9440any0.0333Promise<void>0.0051boolean0.0034complex0.0028
(Punctuation
thisKeyword
,Punctuation
 Text.Whitespace
fnName.Otherany0.8752Function0.0544boolean0.0188complex0.0102number0.0073
)Punctuation
;Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
/**\n   * Returns true if `node.nodes` array contains the given `node`.\n   *\n   * ```js\n   * const foo = new Node({type: 'foo'});\n   * const bar = new Node({type: 'bar'});\n   * cosole.log(foo.has(bar)); // false\n   * foo.push(bar);\n   * cosole.log(foo.has(bar)); // true\n   * ```\n   * @name .has\n   * @param {String} `type`\n   * @return {Boolean}\n   * @api public\n   */Comment.Multiline
\n\n  Text.Whitespace
hasName.Otherboolean0.9156any0.0537void0.0057number0.0027complex0.0027
(Punctuation
nodeName.Otherany0.5282Node0.0809Element0.0122ITreeNode0.0092RowNode0.0088
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
thisKeyword
.Punctuation
constructorKeyword.Reserved
.Punctuation
isNodeName.Otherboolean0.8806any0.0836complex0.0278string0.0019void0.0014
(Punctuation
nodeName.Otherany0.6457Node0.1237Element0.0213complex0.0075TreeModel0.0060
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
ArrayName.BuiltinArrayConstructor0.9998Math0.0000ObjectConstructor0.0000any0.0000Array0.0000
.Punctuation
isArrayName.Othercomplex0.9972any0.0016boolean0.0004any[]0.0003void0.0001
(Punctuation
thisKeyword
.Punctuation
nodesName.Otherany[]0.3985any0.1932complex0.0311Node[]0.0213string[]0.0082
)Punctuation
 Text.Whitespace
&&Operator
 Text.Whitespace
thisKeyword
.Punctuation
nodesName.Otherany[]0.5815any0.0611string[]0.0610Node[]0.0248Node<Node>[]0.0033
.Punctuation
includesName.Otherboolean0.7904any0.1020complex0.0609string[]0.0130any[]0.0122
(Punctuation
nodeName.Otherany0.8085Node0.0231Element0.0112never0.0096complex0.0089
)Punctuation
;Punctuation
\n    Text.Whitespace
}Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
thisKeyword
.Punctuation
hasTypeName.Otherboolean0.9890any0.0025complex0.0020false0.0015void0.0008
(Punctuation
nodeName.Otherany0.8793Node0.0171string0.0088Element0.0076never0.0064
)Punctuation
;Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
/**\n   * Return true if the `node.nodes` has the given `type`.\n   *\n   * ```js\n   * const foo = new Node({type: 'foo'});\n   * const bar = new Node({type: 'bar'});\n   * foo.push(bar);\n   *\n   * cosole.log(foo.hasType('qux'));          // false\n   * cosole.log(foo.hasType(/^(qux|bar)$/));  // true\n   * cosole.log(foo.hasType(['qux', 'bar'])); // true\n   * ```\n   * @name .hasType\n   * @param {String} `type`\n   * @return {Boolean}\n   * @api public\n   */Comment.Multiline
\n\n  Text.Whitespace
hasTypeName.Otherboolean0.9921any0.0021string0.0013complex0.0011false0.0005
(Punctuation
typeKeyword.Reserved
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
ArrayName.BuiltinArrayConstructor0.9998Math0.0000ObjectConstructor0.0000any0.0000Array0.0000
.Punctuation
isArrayName.Othercomplex0.9973any0.0012boolean0.0003any[]0.0003void0.0002
(Punctuation
thisKeyword
.Punctuation
nodesName.Otherany[]0.2475any0.2192Node[]0.0333complex0.0236string[]0.0083
)Punctuation
 Text.Whitespace
&&Operator
 Text.Whitespace
thisKeyword
.Punctuation
nodesName.Otherany[]0.3112any0.1987complex0.0389Node[]0.0195Set<any>0.0088
.Punctuation
findName.Othercomplex0.8759any0.1024T0.0024...0.0023boolean0.0020
(Punctuation
nodeName.Otherany0.8487Node0.0251Element0.0089complex0.0081never0.0053
 Text.Whitespace
=>Punctuation
 Text.Whitespace
isTypeName.Othercomplex0.4571any0.3213boolean0.1496void0.0201number0.0056
(Punctuation
nodeName.Otherany0.7071Node0.0451never0.0178Element0.0113complex0.0081
,Punctuation
 Text.Whitespace
typeKeyword.Reserved
)Punctuation
)Punctuation
;Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
/**\n   * Return true if the node is the given `type`.\n   *\n   * ```js\n   * const node = new Node({type: 'bar'});\n   * cosole.log(node.isType('foo'));          // false\n   * cosole.log(node.isType(/^(foo|bar)$/));  // true\n   * cosole.log(node.isType(['foo', 'bar'])); // true\n   * ```\n   * @name .isType\n   * @param {String} `type`\n   * @return {Boolean}\n   * @api public\n   */Comment.Multiline
\n\n  Text.Whitespace
isTypeName.Otherboolean0.4628complex0.2064any0.1699void0.0204this0.0124
(Punctuation
typeKeyword.Reserved
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
isTypeName.Othercomplex0.5487any0.2558boolean0.1247void0.0378any[]0.0037
(Punctuation
thisKeyword
,Punctuation
 Text.Whitespace
typeKeyword.Reserved
)Punctuation
;Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
/**\n   * Returns true if `node.value` is an empty string, or `node.nodes` does\n   * not contain any non-empty text nodes.\n   *\n   * ```js\n   * const node = new Node({type: 'text'});\n   * node.isEmpty(); //=> true\n   * node.value = 'foo';\n   * node.isEmpty(); //=> false\n   * ```\n   * @name .isEmpty\n   * @param {Function} `fn` (optional) Filter function that is called on `node` and/or child nodes. `isEmpty` will return false immediately when the filter function returns false on any nodes.\n   * @return {Boolean}\n   * @api public\n   */Comment.Multiline
\n\n  Text.Whitespace
isEmptyName.Otherboolean0.9675any0.0207complex0.0015string0.0013false0.0013
(Punctuation
fnName.Otherany0.7377Function0.1139string0.0196boolean0.0191number0.0084
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
isEmptyName.Otherboolean0.8792any0.0924complex0.0104void0.0067string0.0026
(Punctuation
thisKeyword
,Punctuation
 Text.Whitespace
fnName.Otherany0.7561Function0.1709boolean0.0134string0.0071void0.0057
)Punctuation
;Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
/**\n   * Returns true if the node has an ancestor node of the given `type`\n   *\n   * ```js\n   * const box = new Node({type: 'box'});\n   * const marble = new Node({type: 'marble'});\n   * box.push(marble);\n   * marble.isInside('box'); //=> true\n   * ```\n   * @name .isInside\n   * @param {String} `type`\n   * @return {Boolean}\n   * @api public\n   */Comment.Multiline
\n\n  Text.Whitespace
isInsideName.Otherboolean0.5236any0.1581string0.0612number0.0125complex0.0111
(Punctuation
typeKeyword.Reserved
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
thisKeyword
.Punctuation
parentName.Otherany0.2872Node0.0271Element0.0133ViewBase0.0105Function0.0095
 Text.Whitespace
&&Operator
 Text.Whitespace
(Punctuation
thisKeyword
.Punctuation
parentName.Otherany0.1815Node0.0195View0.0126ViewBase0.0103NodePatcher0.0068
.Punctuation
typeKeyword.Reserved
 Text.Whitespace
===Operator
 Text.Whitespace
typeKeyword.Reserved
 Text.Whitespace
||Operator
 Text.Whitespace
thisKeyword
.Punctuation
parentName.Otherany0.2606Node0.0124ViewBase0.0094View0.0073SymbolicTensor0.0068
.Punctuation
isInsideName.Otherany0.4604string0.2453boolean0.0647complex0.0479number0.0232
(Punctuation
typeKeyword.Reserved
)Punctuation
)Punctuation
;Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
/**\n   * Get the siblings array, or `null` if it doesn't exist.\n   *\n   * ```js\n   * const foo = new Node({type: 'foo'});\n   * const bar = new Node({type: 'bar'});\n   * const baz = new Node({type: 'baz'});\n   * foo.push(bar);\n   * foo.push(baz);\n   *\n   * console.log(bar.siblings.length) // 2\n   * console.log(baz.siblings.length) // 2\n   * ```\n   * @getter\n   * @name .siblings\n   * @return {Array}\n   * @api public\n   */Comment.Multiline
\n\n  Text.Whitespace
getName.Other
 Text.Whitespace
siblingsName.Otherany0.7207number0.0262string0.0200boolean0.0145any[]0.0108
(Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
thisKeyword
.Punctuation
parentName.Otherany0.2762Node0.0392Scope0.0128View0.0126ViewBase0.0117
 Text.Whitespace
?Operator
 Text.Whitespace
this.parent.nodesName.Other
 Text.Whitespace
:Operator
 Text.Whitespace
nullKeyword.Type
;Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
/**\n   * Calculate the node's current index on `node.parent.nodes`, or `-1` if the\n   * node does not have a parent, or is not on `node.parent.nodes`.\n   *\n   * ```js\n   * const foo = new Node({type: 'foo'});\n   * const bar = new Node({type: 'bar'});\n   * const baz = new Node({type: 'baz'});\n   * const qux = new Node({type: 'qux'});\n   * foo.push(bar);\n   * foo.push(baz);\n   * foo.unshift(qux);\n   *\n   * console.log(bar.index) // 1\n   * console.log(baz.index) // 2\n   * console.log(qux.index) // 0\n   * ```\n   * @setter\n   * @getter\n   * @name .index\n   * @return {Number}\n   * @api public\n   */Comment.Multiline
\n\n  Text.Whitespace
setName.Other
 Text.Whitespace
indexName.Othernumber0.7905any0.1666string0.0086void0.0076complex0.0030
(Punctuation
indexName.Othernumber0.8334any0.1557string0.0040void0.0007complex0.0005
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
defineName.Othervoid0.7895any0.1819Function0.0041this0.0038complex0.0023
(Punctuation
thisKeyword
,Punctuation
 Text.Whitespace
'_index'Literal.String.Single
,Punctuation
 Text.Whitespace
indexName.Othernumber0.8607any0.1306string0.0042void0.0007complex0.0005
)Punctuation
;Punctuation
\n  Text.Whitespace
}Punctuation
\n  Text.Whitespace
getName.Other
 Text.Whitespace
indexName.Othernumber0.9375any0.0508string0.0046boolean0.0017void0.0015
(Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
ArrayName.BuiltinArrayConstructor0.9995Math0.0001ObjectConstructor0.0000any0.0000complex0.0000
.Punctuation
isArrayName.Othercomplex0.9952any0.0016number0.0008boolean0.0008any[]0.0006
(Punctuation
thisKeyword
.Punctuation
siblingsName.Otherany0.0872number0.0274any[]0.0257complex0.0089SymbolicTensor0.0060
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
-Operator
1Literal.Number.Float
;Punctuation
\n    Text.Whitespace
}Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
thisKeyword
.Punctuation
_indexName.Othernumber0.8920any0.0814complex0.0044string0.0019never0.0010
 Text.Whitespace
===Operator
 Text.Whitespace
-Operator
1Literal.Number.Float
 Text.Whitespace
||Operator
 Text.Whitespace
thisKeyword
.Punctuation
siblingsName.Otherany0.0707any[]0.0634complex0.0133SymbolicTensor0.0069number0.0067
[Punctuation
thisKeyword
.Punctuation
_indexName.Othernumber0.8829any0.0523string0.0130complex0.0060never0.0030
]Punctuation
 Text.Whitespace
!==Operator
 Text.Whitespace
thisKeyword
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
defineName.Othervoid0.7517any0.2150this0.0059complex0.0044Function0.0038
(Punctuation
thisKeyword
,Punctuation
 Text.Whitespace
'_index'Literal.String.Single
,Punctuation
 Text.Whitespace
thisKeyword
.Punctuation
siblingsName.Otherany[]0.1115any0.0797SymbolicTensor0.0134string[]0.0095T[]0.0093
.Punctuation
indexOfName.Othernumber0.9516any0.0443complex0.0010string0.0010boolean0.0007
(Punctuation
thisKeyword
)Punctuation
)Punctuation
;Punctuation
\n    Text.Whitespace
}Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
thisKeyword
.Punctuation
_indexName.Othernumber0.4152any0.1498complex0.0442never0.0123string0.0069
;Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
/**\n   * Get the previous node from the [siblings](#siblings) array or `null`.\n   *\n   * ```js\n   * const foo = new Node({type: 'foo'});\n   * const bar = new Node({type: 'bar'});\n   * const baz = new Node({type: 'baz'});\n   * foo.push(bar);\n   * foo.push(baz);\n   *\n   * console.log(baz.prev.type) // 'bar'\n   * ```\n   * @getter\n   * @name .prev\n   * @return {Object}\n   * @api public\n   */Comment.Multiline
\n\n  Text.Whitespace
getName.Other
 Text.Whitespace
prevName.Otherany0.7591number0.0385boolean0.0183string0.0110complex0.0079
(Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
ArrayName.BuiltinArrayConstructor0.9998Math0.0000ObjectConstructor0.0000any0.0000complex0.0000
.Punctuation
isArrayName.Othercomplex0.9968any0.0013any[]0.0005boolean0.0003number0.0002
(Punctuation
thisKeyword
.Punctuation
siblingsName.Otherany0.0816any[]0.0433complex0.0073number0.0059Position0.0046
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
thisKeyword
.Punctuation
siblingsName.Otherany[]0.0971any0.0458T[]0.0083SymbolicTensor0.0082complex0.0076
[Punctuation
thisKeyword
.Punctuation
indexName.Othernumber0.9656any0.0318string0.0009complex0.0003boolean0.0002
 Text.Whitespace
-Operator
 Text.Whitespace
1Literal.Number.Float
]Punctuation
 Text.Whitespace
||Operator
 Text.Whitespace
thisKeyword
.Punctuation
parentName.Otherany0.3029Node0.0254View0.0110complex0.0092Element0.0089
.Punctuation
prevName.Otherany0.5466number0.1503boolean0.0303string0.0252void0.0195
;Punctuation
\n    Text.Whitespace
}Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
nullKeyword.Constant
;Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
/**\n   * Get the next element from the [siblings](#siblings) array, or `null` if\n   * a next node does not exist.\n   *\n   * ```js\n   * const parent = new Node({type: 'root'});\n   * const foo = new Node({type: 'foo'});\n   * const bar = new Node({type: 'bar'});\n   * const baz = new Node({type: 'baz'});\n   * parent.push(foo);\n   * parent.push(bar);\n   * parent.push(baz);\n   *\n   * console.log(foo.next.type) // 'bar'\n   * console.log(bar.next.type) // 'baz'\n   * ```\n   * @getter\n   * @name .next\n   * @return {Object}\n   * @api public\n   */Comment.Multiline
\n\n  Text.Whitespace
getName.Other
 Text.Whitespace
nextName.Otherany0.9442string0.0137number0.0107boolean0.0046void0.0024
(Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
ArrayName.BuiltinArrayConstructor0.9998Math0.0000ObjectConstructor0.0000any0.0000complex0.0000
.Punctuation
isArrayName.Othercomplex0.9974any0.0011any[]0.0004boolean0.0002number0.0002
(Punctuation
thisKeyword
.Punctuation
siblingsName.Otherany0.0872any[]0.0476complex0.0088number0.0060Observable<T>0.0049
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
thisKeyword
.Punctuation
siblingsName.Otherany[]0.0940any0.0351T[]0.0099complex0.0083Promise<any>[]0.0076
[Punctuation
thisKeyword
.Punctuation
indexName.Othernumber0.9699any0.0282string0.0006complex0.0003boolean0.0002
 Text.Whitespace
+Operator
 Text.Whitespace
1Literal.Number.Float
]Punctuation
 Text.Whitespace
||Operator
 Text.Whitespace
thisKeyword
.Punctuation
parentName.Otherany0.3826Node0.0153never0.0117T0.0106NodePatcher0.0083
.Punctuation
nextName.Otherany0.8320string0.0357void0.0269number0.0223Function0.0152
;Punctuation
\n    Text.Whitespace
}Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
nullKeyword.Constant
;Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
/**\n   * Get the first child node from `node.nodes`.\n   *\n   * ```js\n   * const foo = new Node({type: 'foo'});\n   * const bar = new Node({type: 'bar'});\n   * const baz = new Node({type: 'baz'});\n   * const qux = new Node({type: 'qux'});\n   * foo.push(bar);\n   * foo.push(baz);\n   * foo.push(qux);\n   *\n   * console.log(foo.first.type) // 'bar'\n   * ```\n   * @getter\n   * @name .first\n   * @return {Object} The first node, or undefiend\n   * @api public\n   */Comment.Multiline
\n\n  Text.Whitespace
getName.Other
 Text.Whitespace
firstName.Otherany0.8762string0.0375number0.0219complex0.0186boolean0.0098
(Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
ArrayName.BuiltinArrayConstructor0.9998Math0.0000ObjectConstructor0.0000Array0.0000any0.0000
.Punctuation
isArrayName.Othercomplex0.9976any0.0009any[]0.0003boolean0.0002void0.0002
(Punctuation
thisKeyword
.Punctuation
nodesName.Otherany[]0.2310any0.1824Node[]0.0210complex0.0205string[]0.0113
)Punctuation
 Text.Whitespace
?Operator
 Text.Whitespace
thisKeyword
.Punctuation
nodesName.Otherany[]0.4229any0.2131string[]0.0257complex0.0256Node[]0.0103
[Punctuation
0Literal.Number.Float
]Punctuation
 Text.Whitespace
:Operator
 Text.Whitespace
nullKeyword.Constant
;Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
/**\n   * Get the last child node from `node.nodes`.\n   *\n   * ```js\n   * const foo = new Node({type: 'foo'});\n   * const bar = new Node({type: 'bar'});\n   * const baz = new Node({type: 'baz'});\n   * const qux = new Node({type: 'qux'});\n   * foo.push(bar);\n   * foo.push(baz);\n   * foo.push(qux);\n   *\n   * console.log(foo.last.type) // 'qux'\n   * ```\n   * @getter\n   * @name .last\n   * @return {Object} The last node, or undefiend\n   * @api public\n   */Comment.Multiline
\n\n  Text.Whitespace
getName.Other
 Text.Whitespace
lastName.Otherany0.8514string0.0750number0.0319boolean0.0082complex0.0056
(Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
ArrayName.BuiltinArrayConstructor0.9998Math0.0000ObjectConstructor0.0000Array0.0000JSON0.0000
.Punctuation
isArrayName.Othercomplex0.9974any0.0010any[]0.0003boolean0.0002void0.0002
(Punctuation
thisKeyword
.Punctuation
nodesName.Otherany[]0.2368any0.1886Node[]0.0229complex0.0207string[]0.0125
)Punctuation
 Text.Whitespace
?Operator
 Text.Whitespace
thisKeyword
.Punctuation
nodesName.Otherany[]0.4044any0.1090string[]0.0315complex0.0205Node[]0.0172
[Punctuation
thisKeyword
.Punctuation
nodesName.Otherany[]0.1998any0.0437Node[]0.0244string[]0.0188HTMLCollection0.0090
.Punctuation
lengthName.Othernumber0.8364any0.1613string0.0007complex0.0006boolean0.0003
 Text.Whitespace
-Operator
 Text.Whitespace
1Literal.Number.Float
]Punctuation
 Text.Whitespace
:Operator
 Text.Whitespace
nullKeyword.Constant
;Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
/**\n   * Get the `node.depth`. The root node has a depth of 0. Add 1 to child nodes\n   * for each level of nesting.\n   *\n   * ```js\n   * const foo = new Node({type: 'foo'});\n   * foo.push(bar);\n   *\n   * console.log(foo.depth) // 1\n   * console.log(bar.depth) // 2\n   * ```\n   * @getter\n   * @name .depth\n   * @return {Object} The last node, or undefiend\n   * @api public\n   */Comment.Multiline
\n\n  Text.Whitespace
getName.Other
 Text.Whitespace
depthName.Othernumber0.9254any0.0657string0.0037boolean0.0026complex0.0006
(Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
thisKeyword
.Punctuation
parentName.Otherany0.3599Node0.0708View0.0083Scope0.0076number0.0072
 Text.Whitespace
?Operator
 Text.Whitespace
thisKeyword
.Punctuation
parentName.Otherany0.3263Node0.0336never0.0123complex0.0074Suite0.0072
.Punctuation
depthName.Othernumber0.6970any0.2962string0.0027void0.0014boolean0.0009
 Text.Whitespace
+Operator
 Text.Whitespace
1Name.Other
 Text.Whitespace
:Operator
 Text.Whitespace
0Keyword.Type
;Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
/**\n   * Static method that returns true if the given value is a node.\n   *\n   * ```js\n   * const Node = require('snapdragon-node');\n   * const node = new Node({type: 'foo'});\n   * console.log(Node.isNode(node)); //=> true\n   * console.log(Node.isNode({})); //=> false\n   * ```\n   * @name Node#isNode\n   * @param {Object} `node`\n   * @returns {Boolean}\n   * @api public\n   * @static\n   */Comment.Multiline
\n\n  Text.Whitespace
staticKeyword
 Text.Whitespace
isNodeName.Otherboolean0.9788any0.0127complex0.0029void0.0013Boolean0.0006
(Punctuation
nodeName.Otherany0.4167Node0.1956TreeModel0.0188Tree0.0148never0.0138
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
isObjectName.Otherboolean0.9574any0.0148complex0.0143void0.0040false0.0022
(Punctuation
nodeName.Otherany0.7708Node0.0852never0.0148Tree0.0065string0.0050
)Punctuation
 Text.Whitespace
&&Operator
 Text.Whitespace
(Punctuation
nodeName.Otherany0.8390Node0.0488complex0.0155never0.0102TreeModel0.0035
 Text.Whitespace
instanceofOperator.Word
 Text.Whitespace
thisKeyword
 Text.Whitespace
||Operator
 Text.Whitespace
nodeName.Otherany0.8507Node0.0198complex0.0094TreeModel0.0070never0.0039
.Punctuation
isNodeName.Otherboolean0.7454any0.2451complex0.0036void0.0029string0.0008
 Text.Whitespace
===Operator
 Text.Whitespace
trueKeyword.Constant
)Punctuation
;Punctuation
\n  Text.Whitespace
}Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
Text
/**\n * Simplified assertion. Throws an error is `value` is not true.\n */Comment.Multiline
\n\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
assertName.Othervoid0.8819any0.0772boolean0.0074Function0.0046complex0.0045
(Punctuation
valueName.Otherany0.9114string0.0552number0.0133boolean0.0116void0.0010
,Punctuation
 Text.Whitespace
messageName.Otherstring0.8844any0.1067number0.0025boolean0.0009complex0.0008
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
valueName.Otherany0.6944boolean0.2513string0.0349number0.0062complex0.0027
 Text.Whitespace
!==Operator
 Text.Whitespace
trueKeyword.Constant
)Punctuation
 Text.Whitespace
throwKeywordany0.5407Error0.3707complex0.0182string0.0132boolean0.0092
 Text.Whitespace
newOperator.Wordany0.5533Error0.2131ErrorConstructor0.1460string0.0376complex0.0053
 Text.Whitespace
ErrorName.ExceptionErrorConstructor1.0000Error0.0000any0.0000never0.0000complex0.0000
(Punctuation
messageName.Otherstring0.8556any0.1303Error0.0037complex0.0019number0.0011
)Punctuation
;Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
expectName.Otherany0.9207complex0.0360void0.0161ExpectStatic0.0015Function0.0011
(Punctuation
valueName.Otherany0.8665string0.0820number0.0356boolean0.0055never0.0012
,Punctuation
 Text.Whitespace
nameName.Otherstring0.7735any0.2218number0.0013boolean0.0006void0.0006
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
assertName.Otherany0.6140void0.3210complex0.0175Function0.0050IAssertFunctions0.0046
(Punctuation
valueName.Otherany0.8726string0.0953number0.0145boolean0.0082complex0.0024
,Punctuation
 Text.Whitespace
'expected 'Literal.String.Single
 Text.Whitespace
+Operator
 Text.Whitespace
nameName.Otherstring0.6034any0.3879number0.0034complex0.0023void0.0007
 Text.Whitespace
+Operator
 Text.Whitespace
' to be an instance of Node'Literal.String.Single
)Punctuation
;Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
hasOwnName.Otherboolean0.9820any0.0081number0.0020complex0.0020string0.0017
(Punctuation
objName.Otherany0.8715Object0.0456object0.0326string0.0161{}0.0050
,Punctuation
 Text.Whitespace
propName.Otherstring0.8611any0.1079number0.0156boolean0.0030Object0.0021
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
returnKeyword
 Text.Whitespace
ObjectName.BuiltinObjectConstructor0.9999Object0.0000any0.0000complex0.0000{}0.0000
.Punctuation
hasOwnPropertyName.Othercomplex0.9845any0.0091Object0.0030boolean0.0008string0.0008
.Punctuation
callName.Otherany0.8697complex0.0874string0.0183number0.0056void0.0047
(Punctuation
objName.Otherany0.8240Object0.0653object0.0390{}0.0252complex0.0127
,Punctuation
 Text.Whitespace
propName.Otherstring0.6852any0.2845number0.0071complex0.0053boolean0.0045
)Punctuation
;Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
isEmptyName.Otherboolean0.9295any0.0431void0.0087complex0.0064string0.0033
(Punctuation
nodeName.Otherany0.8400Node0.0394never0.0041Function0.0040Element0.0039
,Punctuation
 Text.Whitespace
fnName.Otherany0.7028Function0.2064boolean0.0219string0.0209number0.0056
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
expectName.Otherany0.9928complex0.0057number0.0001void0.0001Function0.0001
(Punctuation
NodeName.Otherany0.9040complex0.0814Object0.0012Node0.0011Error0.0008
.Punctuation
isNodeName.Otherboolean0.5106any0.3087complex0.1373string0.0148void0.0068
(Punctuation
nodeName.Otherany0.8738Node0.0324never0.0088complex0.0064string0.0050
)Punctuation
,Punctuation
 Text.Whitespace
'node'Literal.String.Single
)Punctuation
;Punctuation
\n\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
ArrayName.BuiltinArrayConstructor0.9996Math0.0001any0.0000ObjectConstructor0.0000complex0.0000
.Punctuation
isArrayName.Othercomplex0.9977any0.0012boolean0.0004any[]0.0002void0.0001
(Punctuation
nodeName.Otherany0.8661complex0.0249never0.0092Node0.0084any[]0.0019
.Punctuation
nodesName.Otherany0.7689any[]0.0720complex0.0274Node[]0.0057string0.0036
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
typeofOperator.Word
 Text.Whitespace
fnName.Otherany0.8099complex0.0805Function0.0421boolean0.0132never0.0082
 Text.Whitespace
===Operator
 Text.Whitespace
'function'Literal.String.Single
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
fnName.Otherany0.6971Function0.1748boolean0.0336complex0.0203void0.0163
(Punctuation
nodeName.Otherany0.8932Node0.0187never0.0122string0.0045Element0.0033
)Punctuation
;Punctuation
\n    Text.Whitespace
}Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
!Operator
nodeName.Otherany0.9505complex0.0095Node0.0042never0.0028boolean0.0019
.Punctuation
valueName.Otherany0.9595string0.0229boolean0.0083complex0.0031number0.0020
;Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
nodeName.Otherany0.8487Node0.0235complex0.0108never0.0095any[]0.0022
.Punctuation
nodesName.Otherany0.6577any[]0.0986complex0.0133Node[]0.0106string[]0.0087
.Punctuation
lengthName.Otherany0.7992number0.1976complex0.0011string0.0007boolean0.0004
 Text.Whitespace
===Operator
 Text.Whitespace
0Literal.Number.Float
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
trueKeyword.Constant
;Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
forKeyword
 Text.Whitespace
(Punctuation
constKeyword.Declaration
 Text.Whitespace
childName.Otherany0.6825Node0.0986complex0.0147never0.0077Node<Node>0.0063
 Text.Whitespace
ofKeyword
 Text.Whitespace
nodeName.Otherany0.8332Node0.0263complex0.0110never0.0036Node<Node>0.0027
.Punctuation
nodesName.Otherany0.8722any[]0.0347complex0.0111Node[]0.0047string0.0026
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
isEmptyName.Otherboolean0.9370any0.0541complex0.0038string0.0010false0.0009
(Punctuation
childName.Otherany0.8907Node0.0359never0.0069complex0.0053string0.0032
,Punctuation
 Text.Whitespace
fnName.Otherany0.9037Function0.0209boolean0.0167string0.0114number0.0073
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
falseKeyword.Constant
;Punctuation
\n    Text.Whitespace
}Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
returnKeyword
 Text.Whitespace
trueKeyword.Constant
;Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
isTypeName.Otherboolean0.4012complex0.3729any0.1612void0.0240number0.0101
(Punctuation
nodeName.Otherany0.6589Node0.0890never0.0129TreeModel0.0076Element0.0071
,Punctuation
 Text.Whitespace
typeKeyword.Reserved
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
expectName.Otherany0.9929complex0.0057string0.0002number0.0001boolean0.0001
(Punctuation
NodeName.Otherany0.8843complex0.0972Node0.0016Error0.0011Object0.0009
.Punctuation
isNodeName.Otherboolean0.6923any0.1876complex0.0887string0.0121void0.0040
(Punctuation
nodeName.Otherany0.8529Node0.0362never0.0115complex0.0054string0.0054
)Punctuation
,Punctuation
 Text.Whitespace
'node'Literal.String.Single
)Punctuation
;Punctuation
\n\n  Text.Whitespace
switchKeyword
 Text.Whitespace
(Punctuation
typeOfName.Otherboolean0.7280string0.1656any0.0734complex0.0120number0.0039
(Punctuation
typeKeyword.Reserved
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
caseKeyword
 Text.Whitespace
'string'Literal.String.Single
:Operator
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
nodeName.Otherany0.7823Node0.0384complex0.0271never0.0120Error0.0043
.Punctuation
typeKeyword.Reserved
 Text.Whitespace
===Operator
 Text.Whitespace
typeKeyword.Reserved
;Punctuation
\n    Text.Whitespace
caseKeyword
 Text.Whitespace
'regexp'Literal.String.Single
:Operator
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
typeKeyword.Reserved
.Punctuation
testName.Otherboolean0.9660any0.0197complex0.0032void0.0031string0.0025
(Punctuation
nodeName.Otherany0.9164Node0.0114complex0.0106never0.0050string0.0030
.Punctuation
typeKeyword.Reserved
)Punctuation
;Punctuation
\n    Text.Whitespace
caseKeyword
 Text.Whitespace
'array'Literal.String.Single
:Operator
\n      Text.Whitespace
forKeyword
 Text.Whitespace
(Punctuation
constKeyword.Declaration
 Text.Whitespace
keyName.Otherstring0.7506any0.2284complex0.0139number0.0025never0.0007
 Text.Whitespace
ofKeyword
 Text.Whitespace
typeKeyword.Reserved
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
nodeName.Otherany0.7904complex0.0858Node0.0186never0.0060boolean0.0048
.Punctuation
isTypeName.Otherany0.4672boolean0.3104complex0.2116number0.0022void0.0022
(Punctuation
nodeName.Otherany0.8821Node0.0262complex0.0136never0.0123string0.0067
,Punctuation
 Text.Whitespace
keyName.Otherstring0.6461any0.3169complex0.0222number0.0053boolean0.0014
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n          Text.Whitespace
returnKeyword
 Text.Whitespace
trueKeyword.Constant
;Punctuation
\n        Text.Whitespace
}Punctuation
\n      Text.Whitespace
}Punctuation
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
falseKeyword.Constant
;Punctuation
\n    Text.Whitespace
defaultKeyword
:Operator
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
throwKeywordany0.6419complex0.1289Error0.1138boolean0.0233{}0.0197
 Text.Whitespace
newOperator.Wordany0.6173complex0.0455Error0.0363string0.0290boolean0.0212
 Text.Whitespace
TypeErrorName.ExceptionTypeErrorConstructor0.9899ErrorConstructor0.0022complex0.0003BooleanConstructor0.0002MapConstructor0.0002
(Punctuation
'expected "type" to be an array, string or regexp'Literal.String.Single
)Punctuation
;Punctuation
\n    Text.Whitespace
}Punctuation
\n  Text.Whitespace
}Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
isObjectName.Otherboolean0.9736any0.0139complex0.0064string0.0016number0.0008
(Punctuation
valName.Otherany0.9085boolean0.0370string0.0203number0.0169complex0.0023
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
returnKeyword
 Text.Whitespace
typeOfName.Otherboolean0.6346any0.1946string0.1188complex0.0161number0.0087
(Punctuation
valName.Otherany0.9328string0.0346number0.0076boolean0.0065complex0.0030
)Punctuation
 Text.Whitespace
===Operator
 Text.Whitespace
'object'Literal.String.Single
;Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
typeOfName.Otherstring0.4645any0.4139boolean0.0517complex0.0200number0.0137
(Punctuation
valName.Otherany0.9025string0.0620number0.0132boolean0.0040never0.0030
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
typeofOperator.Word
 Text.Whitespace
valName.Otherany0.9643string0.0100complex0.0099number0.0048boolean0.0038
 Text.Whitespace
===Operator
 Text.Whitespace
'string'Literal.String.Single
)Punctuation
 Text.Whitespace
returnKeyword
 Text.Whitespace
'string'Literal.String.Single
;Punctuation
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
ArrayName.BuiltinArrayConstructor0.9995Math0.0001any0.0000ObjectConstructor0.0000complex0.0000
.Punctuation
isArrayName.Othercomplex0.9969any0.0015any[]0.0005boolean0.0004number0.0002
(Punctuation
valName.Otherany0.9379complex0.0240number0.0134string0.0128never0.0033
)Punctuation
)Punctuation
 Text.Whitespace
returnKeyword
 Text.Whitespace
'array'Literal.String.Single
;Punctuation
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
valName.Otherany0.9410string0.0180complex0.0170boolean0.0057{}0.0036
 Text.Whitespace
instanceofOperator.Word
 Text.Whitespace
RegExpName.BuiltinRegExpConstructor0.9959RegExp0.0006RegExpExecArray0.0001RegExp[]0.0001ErrorConstructor0.0000
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
'regexp'Literal.String.Single
;Punctuation
\n  Text.Whitespace
}Punctuation
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
valName.Otherany0.9496string0.0194number0.0152boolean0.0077complex0.0030
 Text.Whitespace
===Operator
 Text.Whitespace
voidOperator.Word
 Text.Whitespace
0Literal.Number.Float
)Punctuation
 Text.Whitespace
returnKeyword
 Text.Whitespace
'undefiend'Literal.String.Single
;Punctuation
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
valName.Otherany0.9568string0.0258boolean0.0055number0.0053complex0.0027
 Text.Whitespace
===Operator
 Text.Whitespace
nullKeyword.Constant
)Punctuation
 Text.Whitespace
returnKeyword
 Text.Whitespace
'null'Literal.String.Single
;Punctuation
\n  Text.Whitespace
returnKeyword
 Text.Whitespace
typeofOperator.Word
 Text.Whitespace
valName.Otherany0.9437complex0.0181number0.0070boolean0.0063any[]0.0054
;Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
Text
/**\n * assign `token` properties to `node`\n */Comment.Multiline
\n\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
assignName.Othervoid0.8254any0.1278Function0.0142boolean0.0066complex0.0061
(Punctuation
nodeName.Otherany0.6159Node0.0855never0.0370Element0.0109Function0.0054
,Punctuation
 Text.Whitespace
tokenName.Otherany0.7666string0.1070Token0.0323never0.0049Node0.0037
,Punctuation
 Text.Whitespace
cloneName.Otherany0.8666number0.0273string0.0209boolean0.0073Function0.0070
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
copyName.Otherany0.4729void0.4163T0.0172complex0.0125Function0.0085
(Punctuation
nodeName.Otherany0.8270Node0.0409never0.0170Element0.0044string0.0035
,Punctuation
 Text.Whitespace
tokenName.Otherany0.8453string0.0690Token0.0223complex0.0048never0.0034
,Punctuation
 Text.Whitespace
cloneName.Otherany0.8859string0.0253number0.0167T0.0066Function0.0056
)Punctuation
;Punctuation
\n  Text.Whitespace
ensureNodesName.Othervoid0.8836any0.0861boolean0.0067Function0.0060complex0.0059
(Punctuation
nodeName.Otherany0.7646Node0.0655never0.0231Element0.0068string0.0061
,Punctuation
 Text.Whitespace
cloneName.Otherany0.8134string0.0460number0.0185T0.0128Node0.0114
)Punctuation
;Punctuation
\n\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
tokenName.Otherany0.8689Token0.0425string0.0123Node0.0052complex0.0038
.Punctuation
constructorKeyword.Reserved
 Text.Whitespace
&&Operator
 Text.Whitespace
tokenName.Otherany0.8762Token0.0215string0.0080Node0.0045Function0.0044
.Punctuation
constructorKeyword.Reserved
.Punctuation
nameName.Otherany0.8645string0.1324complex0.0017boolean0.0003number0.0003
 Text.Whitespace
===Operator
 Text.Whitespace
'Token'Literal.String.Single
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
copyName.Otherany0.5541void0.3334T0.0226complex0.0224Function0.0128
(Punctuation
nodeName.Otherany0.8918Node0.0399never0.0090Element0.0037complex0.0029
,Punctuation
 Text.Whitespace
tokenName.Otherany0.9420Token0.0128string0.0047Node0.0036complex0.0022
.Punctuation
constructorKeyword.Reserved
.Punctuation
prototypeName.Otherany0.9706Function0.0065Object0.0016string0.0013T0.0012
,Punctuation
 Text.Whitespace
cloneName.Otherany0.8335string0.0709number0.0274T0.0140{}0.0048
)Punctuation
;Punctuation
\n  Text.Whitespace
}Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
copyName.Otherany0.5112void0.3561string0.0214complex0.0117boolean0.0082
(Punctuation
receiverName.Otherany0.6353string0.1439Object0.0087{}0.0070number0.0057
,Punctuation
 Text.Whitespace
providerName.Otherany0.6239string0.2239number0.0173boolean0.0133Function0.0042
,Punctuation
 Text.Whitespace
cloneName.Otherany0.9393number0.0182string0.0178Function0.0025boolean0.0023
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
descriptorsName.Other{}0.1113Object0.0740any0.0380any[]0.0364void0.0222
 Text.Whitespace
=Operator
 Text.Whitespace
ObjectName.BuiltinObjectConstructor0.9999Object0.0000any0.0000complex0.0000ArrayConstructor0.0000
.Punctuation
getOwnPropertyDescriptorsName.Othercomplex0.4899boolean0.1449string0.1139any0.0836void0.0539
(Punctuation
providerName.Otherany0.7930string0.0774complex0.0176void0.0096number0.0052
)Punctuation
;Punctuation
\n  Text.Whitespace
forKeyword
 Text.Whitespace
(Punctuation
constKeyword.Declaration
 Text.Whitespace
keyName.Otherstring0.9699any0.0245complex0.0028string[]0.0008number0.0005
 Text.Whitespace
inOperator.Word
 Text.Whitespace
descriptorsName.Other{}0.0626Object0.0323any0.0171complex0.0145object0.0097
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
keyName.Otherstring0.8424any0.1289complex0.0186number0.0015boolean0.0014
 Text.Whitespace
===Operator
 Text.Whitespace
'constructor'Literal.String.Single
 Text.Whitespace
||Operator
 Text.Whitespace
keyName.Otherstring0.9368any0.0542complex0.0057number0.0010boolean0.0006
 Text.Whitespace
inOperator.Word
 Text.Whitespace
receiverName.Otherany0.5299complex0.1241string0.0419{}0.0269Object0.0219
)Punctuation
 Text.Whitespace
continueKeyword
;Punctuation
\n    Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
descName.Otherany0.4016PropertyDescriptor0.1999complex0.0604{}0.0249string0.0161
 Text.Whitespace
=Operator
 Text.Whitespace
descriptorsName.Other{}0.1813any0.0484Object0.0302complex0.0142this0.0091
[Punctuation
keyName.Otherstring0.9004any0.0596complex0.0280number0.0072void0.0009
]Punctuation
;Punctuation
\n\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
hasOwnName.Otherboolean0.9102complex0.0598any0.0220void0.0015number0.0012
(Punctuation
descName.Otherany0.4958PropertyDescriptor0.1888complex0.1114string0.0338boolean0.0062
,Punctuation
 Text.Whitespace
'value'Literal.String.Single
)Punctuation
 Text.Whitespace
&&Operator
 Text.Whitespace
cloneName.Otherany0.4613boolean0.4060void0.0153string0.0149T0.0133
 Text.Whitespace
===Operator
 Text.Whitespace
trueKeyword.Constant
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
descName.OtherPropertyDescriptor0.4711any0.3067complex0.0151Node0.0035object0.0029
.Punctuation
valueName.Otherany0.8920string0.0549number0.0125complex0.0123void0.0080
 Text.Whitespace
=Operator
 Text.Whitespace
cloneDeepName.Otherany0.3876T0.3624complex0.1363void0.0181{}0.0116
(Punctuation
descName.Otherany0.4863PropertyDescriptor0.1965complex0.1096Object0.0080Node0.0053
.Punctuation
valueName.Otherany0.6077string0.3183complex0.0208number0.0200boolean0.0089
)Punctuation
;Punctuation
\n    Text.Whitespace
}Punctuation
\n    Text.Whitespace
ObjectName.BuiltinObjectConstructor0.9999Object0.0000any0.0000complex0.0000PropertyDescriptor0.0000
.Punctuation
definePropertyName.Othercomplex0.9946void0.0018any0.0018boolean0.0004string0.0003
(Punctuation
receiverName.Otherany0.6986string0.0692complex0.0571Object0.0112{}0.0078
,Punctuation
 Text.Whitespace
keyName.Otherstring0.7883any0.1690complex0.0311number0.0037string[]0.0014
,Punctuation
 Text.Whitespace
descName.Otherany0.3851PropertyDescriptor0.3798complex0.0395string0.0288Object0.0173
)Punctuation
;Punctuation
\n  Text.Whitespace
}Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
ensureNodesName.Othervoid0.9126any0.0503boolean0.0066string0.0058complex0.0054
(Punctuation
nodeName.Otherany0.5249Node0.1712TreeModel0.0111Element0.0096never0.0074
,Punctuation
 Text.Whitespace
cloneName.Otherany0.8397number0.0422string0.0287Node0.0167void0.0052
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
nodeName.Otherany0.7377Node0.0654complex0.0110TreeModel0.0066Element0.0051
.Punctuation
nodesName.Otherany0.7631any[]0.0340complex0.0121Node[]0.0084boolean0.0062
)Punctuation
 Text.Whitespace
returnKeyword
;Punctuation
\n\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
ArrayName.BuiltinArrayConstructor0.9995Math0.0001ObjectConstructor0.0000any0.0000complex0.0000
.Punctuation
isArrayName.Othercomplex0.9985any0.0007void0.0003boolean0.0002number0.0001
(Punctuation
nodeName.Otherany0.7502complex0.0335Node0.0139TreeNode0.0061Node<Node>0.0053
.Punctuation
nodesName.Otherany0.6946any[]0.0604complex0.0271Node[]0.0074string[]0.0072
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
lenName.Othernumber0.8733any0.1216string0.0010complex0.0008boolean0.0007
 Text.Whitespace
=Operator
 Text.Whitespace
nodeName.Otherany0.6961Node0.0494complex0.0205TreeNode0.0096TreeModel0.0072
.Punctuation
nodesName.Otherany0.3588any[]0.1140Node[]0.0343string[]0.0167complex0.0139
.Punctuation
lengthName.Otherany0.6155number0.3807complex0.0016string0.0006void0.0004
;Punctuation
\n    Text.Whitespace
forKeyword
 Text.Whitespace
(Punctuation
letKeyword.Declaration
 Text.Whitespace
iName.Othernumber0.9915any0.0079string0.0003boolean0.0001complex0.0000
 Text.Whitespace
=Operator
 Text.Whitespace
0Literal.Number.Float
;Punctuation
 Text.Whitespace
iName.Othernumber0.9765any0.0224void0.0003string0.0003boolean0.0001
 Text.Whitespace
<Operator
 Text.Whitespace
lenName.Othernumber0.9233any0.0753string0.0003boolean0.0003complex0.0002
;Punctuation
 Text.Whitespace
iName.Othernumber0.9822any0.0172string0.0002boolean0.0002void0.0001
++Operator
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
childName.Otherany0.4197Node0.2227Node<Node>0.0205TreeNode0.0064Element0.0059
 Text.Whitespace
=Operator
 Text.Whitespace
nodeName.Otherany0.7906Node0.0781complex0.0104Node<Node>0.0055TreeModel0.0050
.Punctuation
nodesName.Otherany0.6261any[]0.0617Node[]0.0221complex0.0180string[]0.0100
[Punctuation
iName.Othernumber0.9643any0.0276string0.0066boolean0.0003complex0.0002
]Punctuation
;Punctuation
\n      Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
NodeName.Otherany0.6882complex0.2942Node0.0027Object0.0018boolean0.0014
.Punctuation
isNodeName.Otherboolean0.7619complex0.1072any0.1019void0.0165string0.0042
(Punctuation
childName.Otherany0.5994Node0.2392never0.0225Node<Node>0.0100View0.0061
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
childName.Otherany0.4667Node0.2210Node<Node>0.0279never0.0127Element0.0063
 Text.Whitespace
=Operator
 Text.Whitespace
nodeName.Otherany0.7964Node0.0922complex0.0124never0.0071Node<Node>0.0060
.Punctuation
nodesName.Otherany0.6413any[]0.0590complex0.0303Node[]0.0181NodeList0.0086
[Punctuation
iName.Othernumber0.9474any0.0410string0.0091boolean0.0007Node0.0003
]Punctuation
 Text.Whitespace
=Operator
 Text.Whitespace
newOperator.Wordany0.9151Node0.0245string0.0111complex0.0047Error0.0041
 Text.Whitespace
NodeName.Otherany0.9346complex0.0603Node0.0012string0.0004Object0.0004
(Punctuation
nodeName.Otherany0.9324Node0.0170complex0.0138TreeModel0.0019never0.0015
.Punctuation
nodesName.Otherany0.5348any[]0.0697complex0.0394Node[]0.0313string[]0.0236
[Punctuation
iName.Othernumber0.9586any0.0356string0.0043boolean0.0005complex0.0003
]Punctuation
,Punctuation
 Text.Whitespace
nullKeyword.Constant
,Punctuation
 Text.Whitespace
trueKeyword.Constant
)Punctuation
;Punctuation
\n        Text.Whitespace
childName.Otherany0.6727Node0.1136never0.0163Node<Node>0.0105complex0.0079
.Punctuation
parentName.Otherany0.8892Node0.0357never0.0072string0.0058Function0.0050
 Text.Whitespace
=Operator
 Text.Whitespace
nodeName.Otherany0.7680Node0.1045never0.0125complex0.0068Function0.0045
;Punctuation
\n        Text.Whitespace
childName.Otherany0.6749Node0.1044never0.0162complex0.0078Node<Node>0.0064
.Punctuation
indexName.Othernumber0.5024any0.4910string0.0025complex0.0009void0.0009
 Text.Whitespace
=Operator
 Text.Whitespace
iName.Othernumber0.9395any0.0560string0.0025boolean0.0004void0.0003
;Punctuation
\n      Text.Whitespace
}Punctuation
\n      Text.Whitespace
ensureNodesName.Othervoid0.8374any0.0971string0.0139complex0.0114number0.0096
(Punctuation
childName.Otherany0.4048Node0.2711never0.0396Node<Node>0.0081complex0.0074
)Punctuation
;Punctuation
\n    Text.Whitespace
}Punctuation
\n    Text.Whitespace
nodeName.Otherany0.6718Node0.0685complex0.0504never0.0108TreeNode0.0062
.Punctuation
sizeName.Othernumber0.7790any0.2159string0.0030void0.0005complex0.0004
 Text.Whitespace
=Operator
 Text.Whitespace
lenName.Othernumber0.8739any0.1207string0.0019complex0.0008boolean0.0007
;Punctuation
\n  Text.Whitespace
}Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
Text
/**\n * Deeply clone plain objects and arrays.\n */Comment.Multiline
\n\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
cloneDeepName.Otherany0.5408T0.1015complex0.0399string0.0362void0.0330
(Punctuation
valueName.Otherany0.6848string0.2517number0.0284boolean0.0045Object0.0043
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
objName.Other{}0.6418any0.2179object0.0358Object0.0311complex0.0082
 Text.Whitespace
=Operator
 Text.Whitespace
{Punctuation
}Punctuation
;Punctuation
\n  Text.Whitespace
switchKeyword
 Text.Whitespace
(Punctuation
typeOfName.Otherany0.5301string0.3416boolean0.0322complex0.0288any[]0.0107
(Punctuation
valueName.Otherany0.6879string0.2825{}0.0037number0.0033complex0.0030
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
caseKeyword
 Text.Whitespace
'array'Literal.String.Single
:Operator
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
valueName.Otherany0.6940any[]0.2202string[]0.0229string0.0169complex0.0124
.Punctuation
mapName.OtherU[]0.4624any0.4107complex0.1170void0.0023any[]0.0017
(Punctuation
eleName.Otherany0.9466string0.0183complex0.0145number0.0049void0.0035
 Text.Whitespace
=>Punctuation
 Text.Whitespace
cloneDeepName.Otherany0.4211T0.2871complex0.0993{}0.0470void0.0329
(Punctuation
eleName.Otherany0.9336string0.0377complex0.0106number0.0044T0.0023
)Punctuation
)Punctuation
;Punctuation
\n    Text.Whitespace
caseKeyword
 Text.Whitespace
'object'Literal.String.Single
:Operator
\n      Text.Whitespace
forKeyword
 Text.Whitespace
(Punctuation
constKeyword.Declaration
 Text.Whitespace
keyName.Otherstring0.9228any0.0624complex0.0109number0.0022{}0.0003
 Text.Whitespace
ofKeyword
 Text.Whitespace
ObjectName.BuiltinObjectConstructor0.9999complex0.0000Object0.0000any0.0000{}0.0000
.Punctuation
keysName.Otherstring[]0.9378complex0.0356any[]0.0128string0.0053number[]0.0013
(Punctuation
valueName.Otherany0.9227complex0.0237{}0.0183string0.0147any[]0.0056
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
objName.Other{}0.4551any0.4032Object0.0510complex0.0308T0.0197
[Punctuation
keyName.Otherstring0.9545any0.0352number0.0047complex0.0028{}0.0006
]Punctuation
 Text.Whitespace
=Operator
 Text.Whitespace
cloneDeepName.OtherT0.4846any0.3114{}0.0647void0.0292complex0.0281
(Punctuation
valueName.Otherany0.9384{}0.0223complex0.0101T0.0073string0.0042
[Punctuation
keyName.Otherstring0.9592any0.0286complex0.0058number0.0031{}0.0006
]Punctuation
)Punctuation
;Punctuation
\n      Text.Whitespace
}Punctuation
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
objName.Otherany0.6076{}0.2090Object0.0592object0.0392T0.0256
;Punctuation
\n    Text.Whitespace
defaultKeyword
:Operator
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
valueName.Otherany0.8112string0.1060boolean0.0301number0.0119{}0.0119
;Punctuation
\n    Text.Whitespace
}Punctuation
\n  Text.Whitespace
}Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
visitName.Othervoid0.9513any0.0256string0.0042complex0.0034Function0.0024
(Punctuation
nodeName.Otherany0.7694Node0.0716Function0.0070never0.0050TreeNode0.0040
,Punctuation
 Text.Whitespace
fnName.Otherany0.6749Function0.2232string0.0101number0.0098boolean0.0077
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
fnName.Otherany0.6573Function0.2805void0.0228complex0.0084number0.0029
(Punctuation
nodeName.Otherany0.7749Node0.0496never0.0070Function0.0065TreeNode0.0049
)Punctuation
;Punctuation
\n  Text.Whitespace
returnKeyword
 Text.Whitespace
nodeName.Otherany0.7664Node0.0389complex0.0096Node<Node>0.0075TreeNode0.0050
.Punctuation
nodesName.Otherany0.6917any[]0.0545Node[]0.0101complex0.0089boolean0.0072
 Text.Whitespace
?Operator
 Text.Whitespace
mapVisitName.Otherany0.7887string0.0351any[]0.0255boolean0.0233complex0.0171
(Punctuation
nodeName.Otherany0.8768Node0.0369string0.0080Function0.0049never0.0042
,Punctuation
 Text.Whitespace
fnName.Otherany0.5126Function0.2745number0.0380string0.0307boolean0.0161
)Punctuation
 Text.Whitespace
:Operator
 Text.Whitespace
nodeName.Otherany0.9041Node0.0223Function0.0057string0.0047never0.0033
;Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
mapVisitName.Othervoid0.3387any0.3057string0.1105boolean0.1078complex0.0478
(Punctuation
nodeName.Otherany0.7187Node0.0942Function0.0076string0.0060TreeNode0.0044
,Punctuation
 Text.Whitespace
fnName.Otherany0.7227Function0.1813string0.0147boolean0.0120number0.0092
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
nodeName.Otherany0.8425Node0.0180complex0.0135any[]0.0044TreeModel0.0042
.Punctuation
nodesName.Otherany0.6242any[]0.1476complex0.0234string[]0.0127Node[]0.0120
.Punctuation
forEachName.Otherany0.7209void0.1533complex0.1119v...0.0047number0.0017
(Punctuation
nName.Otherany0.7069number0.1793string0.0712void0.0117complex0.0116
 Text.Whitespace
=>Punctuation
 Text.Whitespace
visitName.Othervoid0.9629any0.0221Promise<void>0.0049complex0.0025Function0.0012
(Punctuation
nName.Otherany0.6994number0.2510string0.0219void0.0048complex0.0046
,Punctuation
 Text.Whitespace
fnName.Otherany0.6158Function0.2738void0.0215number0.0180string0.0105
)Punctuation
)Punctuation
;Punctuation
\n  Text.Whitespace
returnKeyword
 Text.Whitespace
nodeName.Otherany0.9168Node0.0131complex0.0048never0.0032any[]0.0031
;Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
defineName.Othervoid0.9420any0.0393Function0.0031complex0.0011{}0.0008
(Punctuation
objName.Otherany0.8146Object0.0653{}0.0418object0.0340string0.0127
,Punctuation
 Text.Whitespace
keyName.Otherstring0.8269any0.1683number0.0013complex0.0013boolean0.0005
,Punctuation
 Text.Whitespace
valueName.Otherany0.8816string0.0837number0.0109boolean0.0102Object0.0056
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
ObjectName.BuiltinObjectConstructor0.9999Object0.0000any0.0000PropertyDescriptor0.0000complex0.0000
.Punctuation
definePropertyName.Othercomplex0.9954any0.0018void0.0009Object0.0002boolean0.0002
(Punctuation
objName.Otherany0.6154{}0.1486Object0.0926object0.0564complex0.0359
,Punctuation
 Text.Whitespace
keyName.Otherstring0.8764any0.1085complex0.0084number0.0027any[]0.0008
,Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
configurableName.Otherboolean0.9968true0.0011any0.0005false0.0005void0.0002
:Operator
 Text.Whitespace
trueKeyword.Type
,Punctuation
\n    Text.Whitespace
enumerableName.Otherboolean0.9981false0.0005true0.0004any0.0003number0.0002
:Operator
 Text.Whitespace
falseKeyword.Type
,Punctuation
\n    Text.Whitespace
writableName.Otherboolean0.9990any0.0002number0.0002true0.0002false0.0002
:Operator
 Text.Whitespace
trueKeyword.Type
,Punctuation
\n    Text.Whitespace
valueName.Otherany0.7524string0.1249boolean0.0509number0.0294{}0.0077
:Operator
 Text.Whitespace
valueKeyword.Typeany0.7109string0.1470number0.0561boolean0.0519complex0.0070
\n  Text.Whitespace
}Punctuation
)Punctuation
;Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
Text
/**\n * Expose `Node`\n */Comment.Multiline
\n\nText.Whitespace
exportsName.Othercomplex0.5376any0.3852Object0.0122any[]0.0075void0.0065
 Text.Whitespace
=Operator
 Text.Whitespace
moduleKeyword.Reserved
.exportsName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
NodeName.Otherany0.8681complex0.1200string0.0016Node0.0014Object0.0005
;Punctuation
\nText.Whitespace
