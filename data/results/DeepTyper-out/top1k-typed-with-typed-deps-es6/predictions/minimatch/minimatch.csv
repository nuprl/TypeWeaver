constKeyword.Declaration
 Text.Whitespace
minimatchName.Otherany0.8669string0.0462number0.0024Path0.0017Promise<any>0.0016
 Text.Whitespace
=Operator
 Text.Whitespace
(Punctuation
pName.Otherstring0.8516any0.1096number0.0045string[]0.0024complex0.0020
,Punctuation
 Text.Whitespace
patternName.Otherstring0.8844any0.0905RegExp0.0068{}0.0037complex0.0020
,Punctuation
 Text.Whitespace
optionsName.Otherany0.1981{}0.1229Options0.0318complex0.0177ConnectionOptions0.0080
 Text.Whitespace
=Operator
 Text.Whitespace
{Punctuation
}Punctuation
)Punctuation
 Text.Whitespace
=>Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
assertValidPatternName.Otherboolean0.4636any0.2559string0.2067complex0.0392string[]0.0037
(Punctuation
patternName.Otherstring0.8062any0.1168complex0.0289RegExp0.0274{}0.0030
)Punctuation
\n\n  Text.Whitespace
// shortcut: comments match nothing.Comment.Single
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
optionsName.Otherany0.2648Options0.1130complex0.0828ConnectionOptions0.0104boolean0.0088
.Punctuation
nocommentName.Otherboolean0.7933any0.1150string0.0674complex0.0055number0.0051
 Text.Whitespace
&&Operator
 Text.Whitespace
patternName.Otherstring0.8498any0.1303RegExp0.0095complex0.0049boolean0.0026
.Punctuation
charAtName.Otherstring0.8459any0.1456boolean0.0037complex0.0029number0.0003
(Punctuation
0Literal.Number.Float
)Punctuation
 Text.Whitespace
===Operator
 Text.Whitespace
'#'Literal.String.Single
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
falseKeyword.Constant
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
returnKeyword
 Text.Whitespace
newOperator.Wordany0.9505string0.0258complex0.0039{}0.0021boolean0.0020
 Text.Whitespace
MinimatchName.Otherany0.9974string0.0019complex0.0004boolean0.0001void0.0000
(Punctuation
patternName.Otherstring0.9019any0.0734complex0.0117RegExp0.0050string[]0.0017
,Punctuation
 Text.Whitespace
optionsName.Otherany0.2947complex0.1172Options0.0609{}0.0159string0.0105
)Punctuation
.Punctuation
matchName.Otherany0.8050complex0.1820boolean0.0068string0.0029void0.0006
(Punctuation
pName.Otherstring0.4159any0.3720complex0.0962RegExp0.0375string[]0.0070
)Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
exportKeyword
 Text.Whitespace
defaultKeyword
 Text.Whitespace
minimatchName.Otherany0.9943string0.0033number0.0004complex0.0002any[]0.0001
;Punctuation
\nText.Whitespace
exportKeyword
 Text.Whitespace
defaultKeyword
 Text.Whitespace
minimatchName.Otherany0.9950string0.0033number0.0003complex0.0002any[]0.0000
;Punctuation
\n\nText.Whitespace
importKeyword
 Text.Whitespace
pathName.Otherany0.9456string0.0329complex0.0182string[]0.0004void0.0004
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./lib/path.js'Literal.String.Single
;Punctuation
\nText.Whitespace
minimatchName.Otherany0.9968string0.0004complex0.0002number0.0001symbol0.0001
.Punctuation
sepName.Otherany0.9975string0.0023number0.0001complex0.0000void0.0000
 Text.Whitespace
=Operator
 Text.Whitespace
pathName.Otherany0.9990string0.0006complex0.0004number0.0000any[]0.0000
.Punctuation
sepName.Otherany0.9983string0.0015number0.0001complex0.0000symbol0.0000
\n\nText.Whitespace
constKeyword.Declaration
 Text.Whitespace
GLOBSTARName.Othersymbol0.4270any0.2108number0.0504string[]0.0453complex0.0437
 Text.Whitespace
=Operator
 Text.Whitespace
SymbolName.BuiltinSymbolConstructor0.9915symbol0.0022any0.0016complex0.0006{}0.0003
(Punctuation
'globstar **'Literal.String.Single
)Punctuation
\nText.Whitespace
minimatchName.Otherany0.9332symbol0.0014string0.0010complex0.0007{}0.0005
.Punctuation
GLOBSTARName.Otherany0.9188string0.0464boolean0.0145number0.0081symbol0.0037
 Text.Whitespace
=Operator
 Text.Whitespace
GLOBSTARName.Otherany0.4361string0.3661boolean0.0638number0.0246symbol0.0220
\nText.Whitespace
importKeyword
 Text.Whitespace
expandName.Otherany0.2939string[]0.2645complex0.0948string0.0513any[]0.0501
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'brace-expansion'Literal.String.Single
;Punctuation
\n\nText.Whitespace
constKeyword.Declaration
 Text.Whitespace
plTypesName.Othercomplex0.8981any0.0234{}0.0032string0.0021boolean0.0018
 Text.Whitespace
=Operator
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
'!'Literal.String.Single
:Operator
 Text.Whitespace
{Punctuation
 Text.Whitespace
openName.Otherstring0.9958RegExp0.0015any0.0012number0.0006boolean0.0004
:Operator
 Text.Whitespace
'(?:(?!(?:'Literal.String.Single
,Punctuation
 Text.Whitespace
closeName.Otherstring0.9981any0.0007number0.0004RegExp0.0003string[]0.0002
:Operator
 Text.Whitespace
'))[^/]*?)'Literal.String.Single
}Punctuation
,Punctuation
\n  Text.Whitespace
'?'Literal.String.Single
:Operator
 Text.Whitespace
{Punctuation
 Text.Whitespace
openName.Otherstring0.9958RegExp0.0016any0.0010number0.0006boolean0.0003
:Operator
 Text.Whitespace
'(?:'Literal.String.Single
,Punctuation
 Text.Whitespace
closeName.Otherstring0.9982any0.0005number0.0004RegExp0.0003string[]0.0002
:Operator
 Text.Whitespace
')?'Literal.String.Single
 Text.Whitespace
}Punctuation
,Punctuation
\n  Text.Whitespace
'+'Literal.String.Single
:Operator
 Text.Whitespace
{Punctuation
 Text.Whitespace
openName.Otherstring0.9958RegExp0.0016any0.0010number0.0006boolean0.0003
:Operator
 Text.Whitespace
'(?:'Literal.String.Single
,Punctuation
 Text.Whitespace
closeName.Otherstring0.9982any0.0005number0.0004RegExp0.0003string[]0.0002
:Operator
 Text.Whitespace
')+'Literal.String.Single
 Text.Whitespace
}Punctuation
,Punctuation
\n  Text.Whitespace
'*'Literal.String.Single
:Operator
 Text.Whitespace
{Punctuation
 Text.Whitespace
openName.Otherstring0.9957RegExp0.0017any0.0010number0.0006boolean0.0003
:Operator
 Text.Whitespace
'(?:'Literal.String.Single
,Punctuation
 Text.Whitespace
closeName.Otherstring0.9983any0.0005number0.0004RegExp0.0003string[]0.0002
:Operator
 Text.Whitespace
')*'Literal.String.Single
 Text.Whitespace
}Punctuation
,Punctuation
\n  Text.Whitespace
'@'Literal.String.Single
:Operator
 Text.Whitespace
{Punctuation
 Text.Whitespace
openName.Otherstring0.9955RegExp0.0018any0.0011number0.0006boolean0.0004
:Operator
 Text.Whitespace
'(?:'Literal.String.Single
,Punctuation
 Text.Whitespace
closeName.Otherstring0.9982any0.0005RegExp0.0004number0.0004string[]0.0002
:Operator
 Text.Whitespace
')'Literal.String.Single
 Text.Whitespace
}Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
Text
// any single thing other than /Comment.Single
\nText.Whitespace
// don't need to escape / when using new RegExp()Comment.Single
\nText.Whitespace
constKeyword.Declaration
 Text.Whitespace
qmarkName.OtherRegExp0.5179string0.4556any0.0110string[]0.0049boolean0.0024
 Text.Whitespace
=Operator
 Text.Whitespace
'[^/]'Literal.String.Single
\n\nText.Whitespace
Text
// * => any number of charactersComment.Single
\nText.Whitespace
constKeyword.Declaration
 Text.Whitespace
starName.Otherstring0.9754any0.0126number0.0055complex0.0018string[]0.0018
 Text.Whitespace
=Operator
 Text.Whitespace
qmarkName.Otherstring0.8608any0.0909number0.0351complex0.0044boolean0.0035
 Text.Whitespace
+Operator
 Text.Whitespace
'*?'Literal.String.Single
\n\nText.Whitespace
Text
// ** when dots are allowed.  Anything goes, except .. and .Comment.Single
\nText.Whitespace
// not (^ or / followed by one or two dots followed by $ or /),Comment.Single
\nText.Whitespace
// followed by anything, any number of times.Comment.Single
\nText.Whitespace
constKeyword.Declaration
 Text.Whitespace
twoStarDotName.OtherRegExp0.6513string0.3139any0.0149string[]0.0083boolean0.0029
 Text.Whitespace
=Operator
 Text.Whitespace
'(?:(?!(?:\\\/|^)(?:\\.{1,2})($|\\\/)).)*?'Literal.String.Single
\n\nText.Whitespace
Text
// not a ^ or / followed by a dot,Comment.Single
\nText.Whitespace
// followed by anything, any number of times.Comment.Single
\nText.Whitespace
constKeyword.Declaration
 Text.Whitespace
twoStarNoDotName.OtherRegExp0.7456string0.2158string[]0.0168any0.0102boolean0.0028
 Text.Whitespace
=Operator
 Text.Whitespace
'(?:(?!(?:\\\/|^)\\.).)*?'Literal.String.Single
\n\nText.Whitespace
Text
// "abc" -> { a:true, b:true, c:true }Comment.Single
\nText.Whitespace
constKeyword.Declaration
 Text.Whitespace
charSetName.Otherstring[]0.4285string0.2635any0.1515RegExp0.0482boolean0.0249
 Text.Whitespace
=Operator
 Text.Whitespace
sName.Otherstring0.8088any0.1807string[]0.0036number0.0019complex0.0014
 Text.Whitespace
=>Punctuation
 Text.Whitespace
sName.Otherstring0.9206any0.0768number0.0011string[]0.0004boolean0.0003
.Punctuation
splitName.Othercomplex0.9121any0.0841string0.0009string[]0.0007boolean0.0002
(Punctuation
''Literal.String.Single
)Punctuation
.Punctuation
reduceName.Othercomplex0.8291any0.0996any...0.0592U[]0.0013number0.0011
(Punctuation
(Punctuation
setName.Other
,Punctuation
 Text.Whitespace
cName.Otherstring0.9492any0.0332complex0.0050number0.0048boolean0.0029
)Punctuation
 Text.Whitespace
=>Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
setName.Other
[Punctuation
cName.Otherstring0.9437any0.0366number0.0123complex0.0031boolean0.0017
]Punctuation
 Text.Whitespace
=Operator
 Text.Whitespace
trueKeyword.Constant
\n  Text.Whitespace
returnKeyword
 Text.Whitespace
setName.Other
\nText.Whitespace
}Punctuation
,Punctuation
 Text.Whitespace
{Punctuation
}Punctuation
)Punctuation
\n\nText.Whitespace
Text
// characters that need to be escaped in RegExp.Comment.Single
\nText.Whitespace
constKeyword.Declaration
 Text.Whitespace
reSpecialsName.Otherstring0.3986any0.2283complex0.0757RegExp0.0665string[]0.0512
 Text.Whitespace
=Operator
 Text.Whitespace
charSetName.Otherstring0.3647any0.2092complex0.2042boolean0.0460number0.0328
(Punctuation
'().*{}+?[]^$\\!'Literal.String.Single
)Punctuation
\n\nText.Whitespace
Text
// characters that indicate we have to add the pattern startComment.Single
\nText.Whitespace
constKeyword.Declaration
 Text.Whitespace
addPatternStartSetName.Otherstring0.4682any0.2098complex0.0706string[]0.0592RegExp0.0491
 Text.Whitespace
=Operator
 Text.Whitespace
charSetName.Otherstring0.4028any0.1890complex0.1850boolean0.0400string[]0.0356
(Punctuation
'[.('Literal.String.Single
)Punctuation
\n\nText.Whitespace
Text
// normalizes slashes.Comment.Single
\nText.Whitespace
constKeyword.Declaration
 Text.Whitespace
slashSplitName.Otherstring0.6268RegExp0.1906any0.0767string[]0.0515boolean0.0145
 Text.Whitespace
=Operator
 Text.Whitespace
/\/+/Literal.String.Regex
\n\nText.Whitespace
minimatchName.Otherany0.9477string0.0056complex0.0028{}0.0008HTMLDivElement0.0007
.Punctuation
filterName.Otherany0.8789complex0.0985string0.0149boolean0.0018{}0.0007
 Text.Whitespace
=Operator
 Text.Whitespace
(Punctuation
patternName.Otherstring0.9097any0.0677complex0.0101RegExp0.0026{}0.0024
,Punctuation
 Text.Whitespace
optionsName.Other{}0.2583any0.2365complex0.0933string0.0097Options0.0083
 Text.Whitespace
=Operator
 Text.Whitespace
{Punctuation
}Punctuation
)Punctuation
 Text.Whitespace
=>Punctuation
\n  Text.Whitespace
(Punctuation
pName.Otherstring0.8641any0.1078number0.0059complex0.0054string[]0.0041
,Punctuation
 Text.Whitespace
iName.Othernumber0.9129any0.0536string0.0275boolean0.0016complex0.0009
,Punctuation
 Text.Whitespace
listName.Otherany0.5968string0.1085string[]0.0953complex0.0280any[]0.0112
)Punctuation
 Text.Whitespace
=>Punctuation
 Text.Whitespace
minimatchName.Otherany0.9898string0.0057complex0.0005number0.0003{}0.0002
(Punctuation
pName.Otherstring0.9165any0.0649complex0.0068string[]0.0040number0.0031
,Punctuation
 Text.Whitespace
patternName.Otherstring0.9420any0.0434complex0.0058string[]0.0023{}0.0015
,Punctuation
 Text.Whitespace
optionsName.Otherany0.1513Options0.0710complex0.0616{}0.0587string0.0164
)Punctuation
\n\nText.Whitespace
constKeyword.Declaration
 Text.Whitespace
extName.Otherany0.8082string0.0943complex0.0232number0.0045{}0.0033
 Text.Whitespace
=Operator
 Text.Whitespace
(Punctuation
aName.Otherany0.4803string0.3585{}0.0703complex0.0197number0.0075
,Punctuation
 Text.Whitespace
bName.Other{}0.6566any0.2671complex0.0139string0.0085object0.0058
 Text.Whitespace
=Operator
 Text.Whitespace
{Punctuation
}Punctuation
)Punctuation
 Text.Whitespace
=>Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
tName.Other{}0.5780any0.3272complex0.0209string0.0134object0.0035
 Text.Whitespace
=Operator
 Text.Whitespace
{Punctuation
}Punctuation
\n  Text.Whitespace
ObjectName.BuiltinObjectConstructor0.9997complex0.0001any0.0001Object0.0000{}0.0000
.Punctuation
keysName.Otherstring[]0.9946complex0.0018any[]0.0018string0.0007any0.0002
(Punctuation
aName.Otherany0.6251complex0.1638{}0.1462string0.0257Object0.0084
)Punctuation
.Punctuation
forEachName.Othervoid0.8591complex0.0988any0.0142v...0.0118boolean0.0025
(Punctuation
kName.Otherstring0.9306any0.0641number0.0014complex0.0011boolean0.0007
 Text.Whitespace
=>Punctuation
 Text.Whitespace
tName.Otherany0.7118{}0.1555complex0.0271string0.0253string[]0.0057
[Punctuation
kName.Otherstring0.9814any0.0148number0.0016complex0.0007{}0.0003
]Punctuation
 Text.Whitespace
=Operator
 Text.Whitespace
aName.Otherany0.7659{}0.0936complex0.0844string0.0288string[]0.0074
[Punctuation
kName.Otherstring0.9749any0.0181number0.0036complex0.0011{}0.0007
]Punctuation
)Punctuation
\n  Text.Whitespace
ObjectName.BuiltinObjectConstructor0.9995complex0.0002any0.0001Object0.0000{}0.0000
.Punctuation
keysName.Otherstring[]0.9938complex0.0025any[]0.0016string0.0007any0.0002
(Punctuation
bName.Otherany0.4811{}0.3549complex0.1187string0.0085T0.0042
)Punctuation
.Punctuation
forEachName.Othervoid0.8577complex0.0894any0.0201v...0.0133boolean0.0026
(Punctuation
kName.Otherstring0.9009any0.0920number0.0026complex0.0012boolean0.0009
 Text.Whitespace
=>Punctuation
 Text.Whitespace
tName.Otherany0.7258{}0.1363complex0.0215string0.0196string[]0.0038
[Punctuation
kName.Otherstring0.9741any0.0204number0.0031complex0.0008{}0.0003
]Punctuation
 Text.Whitespace
=Operator
 Text.Whitespace
bName.Otherany0.6016{}0.2649complex0.0578string0.0180string[]0.0049
[Punctuation
kName.Otherstring0.9399any0.0463number0.0087complex0.0016{}0.0009
]Punctuation
)Punctuation
\n  Text.Whitespace
returnKeyword
 Text.Whitespace
tName.Otherany0.8640string0.0559{}0.0249number0.0049boolean0.0034
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
minimatchName.Otherany0.9677string0.0010complex0.0007{}0.0004Assert0.0003
.Punctuation
defaultsName.Otherany0.9926complex0.0022string0.0017{}0.0007number0.0003
 Text.Whitespace
=Operator
 Text.Whitespace
defName.Otherany0.9357string0.0147{}0.0091number0.0044Object0.0029
 Text.Whitespace
=>Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
defName.Otherany0.8395boolean0.0423{}0.0191string0.0188complex0.0123
 Text.Whitespace
||Operator
 Text.Whitespace
typeofOperator.Word
 Text.Whitespace
defName.Otherany0.9218string0.0118{}0.0098complex0.0069boolean0.0063
 Text.Whitespace
!==Operator
 Text.Whitespace
'object'Literal.String.Single
 Text.Whitespace
||Operator
 Text.Whitespace
!Operator
ObjectName.BuiltinObjectConstructor0.9993complex0.0003any0.0002{}0.0000Object0.0000
.Punctuation
keysName.Otherstring[]0.9887any[]0.0043complex0.0039string0.0008any0.0004
(Punctuation
defName.Otherany0.8927{}0.0301complex0.0105number0.0054Object0.0047
)Punctuation
.Punctuation
lengthName.Othernumber0.8204any0.1749string0.0029complex0.0005boolean0.0003
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
minimatchName.Otherany0.9746string0.0112number0.0010{}0.0006Promise<any>0.0006
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
origName.Otherany0.7405complex0.1214Promise<any>0.0156string0.0126{}0.0038
 Text.Whitespace
=Operator
 Text.Whitespace
minimatchName.Otherany0.9926string0.0028complex0.0003number0.0003Promise<any>0.0002
\n\n  Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
mName.Otherany0.8395complex0.0360string0.0191Promise<any>0.0037any[]0.0024
 Text.Whitespace
=Operator
 Text.Whitespace
(Punctuation
pName.Otherstring0.7134any0.2095complex0.0163number0.0068any[]0.0044
,Punctuation
 Text.Whitespace
patternName.Otherstring0.8050any0.1642complex0.0093{}0.0046RegExp0.0044
,Punctuation
 Text.Whitespace
optionsName.Otherany0.4119Options0.0499complex0.0357ConnectionOptions0.0318{}0.0207
)Punctuation
 Text.Whitespace
=>Punctuation
 Text.Whitespace
origName.Otherany0.8035complex0.1482string0.0095Promise<any>0.0074boolean0.0021
(Punctuation
pName.Otherany0.5957string0.3122complex0.0573any[]0.0034{}0.0032
,Punctuation
 Text.Whitespace
patternName.Otherstring0.6857any0.2805complex0.0122RegExp0.0059{}0.0038
,Punctuation
 Text.Whitespace
extName.Otherany0.9479complex0.0219string0.0182boolean0.0013Function0.0007
(Punctuation
defName.Otherany0.9239{}0.0138complex0.0089string0.0075Object0.0045
,Punctuation
 Text.Whitespace
optionsName.Otherany0.3049Options0.1181complex0.0916{}0.0500ConnectionOptions0.0220
)Punctuation
)Punctuation
\n  Text.Whitespace
mName.Otherany0.8954complex0.0793{}0.0015string0.0013Promise<any>0.0008
.Punctuation
MinimatchName.Otherany0.9894string0.0079complex0.0010boolean0.0006Promise<any>0.0002
 Text.Whitespace
=Operator
 Text.Whitespace
classKeyword.Declaration
 Text.Whitespace
MinimatchName.Otherany0.9955string0.0033complex0.0007boolean0.0001number0.0001
 Text.Whitespace
extendsKeyword
 Text.Whitespace
origName.Otherany0.9096complex0.0751string0.0029any[]0.0023{}0.0012
.Punctuation
MinimatchName.Otherany0.9987string0.0009complex0.0002any[]0.0000{}0.0000
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
constructorKeyword.Reserved
 Text.Whitespace
(Punctuation
patternName.Otherstring0.8202any0.1328RegExp0.0185complex0.0080{}0.0049
,Punctuation
 Text.Whitespace
optionsName.Otherany0.4226Options0.0942ConnectionOptions0.0168complex0.0166{}0.0132
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
superKeyword
(Punctuation
patternName.Otherstring0.7922any0.1883complex0.0076RegExp0.0027{}0.0019
,Punctuation
 Text.Whitespace
extName.Otherany0.9417string0.0242complex0.0234boolean0.0017{}0.0007
(Punctuation
defName.Otherany0.9361{}0.0076string0.0056number0.0055complex0.0048
,Punctuation
 Text.Whitespace
optionsName.Otherany0.2929Options0.1310{}0.0361complex0.0322ConnectionOptions0.0222
)Punctuation
)Punctuation
\n    Text.Whitespace
}Punctuation
\n  Text.Whitespace
}Punctuation
\n  Text.Whitespace
mName.Otherany0.9255complex0.0383string0.0013Promise<any>0.0012{}0.0008
.Punctuation
MinimatchName.Otherany0.9920complex0.0045string0.0021{}0.0002boolean0.0002
.Punctuation
defaultsName.Otherany0.9737complex0.0129string0.0070{}0.0009number0.0008
 Text.Whitespace
=Operator
 Text.Whitespace
optionsName.Otherany0.7611complex0.0857Options0.0111{}0.0104ConnectionOptions0.0083
 Text.Whitespace
=>Punctuation
 Text.Whitespace
origName.Otherany0.9207complex0.0592string0.0040Promise<any>0.0015number0.0011
.Punctuation
defaultsName.Otherany0.9820complex0.0147string0.0004boolean0.0003T0.0003
(Punctuation
extName.Otherany0.9085complex0.0646string0.0131boolean0.0019number0.0011
(Punctuation
defName.Otherany0.9346complex0.0090{}0.0086number0.0044Object0.0034
,Punctuation
 Text.Whitespace
optionsName.Otherany0.2677Options0.1515complex0.0895{}0.0503ConnectionOptions0.0295
)Punctuation
)Punctuation
.Punctuation
MinimatchName.Otherany0.9908string0.0053complex0.0025boolean0.0004{}0.0002
\n  Text.Whitespace
mName.Otherany0.9426complex0.0322string0.0078Promise<any>0.0010void0.0008
.Punctuation
filterName.Otherany0.8905complex0.0991string0.0051boolean0.0012any[]0.0006
 Text.Whitespace
=Operator
 Text.Whitespace
(Punctuation
patternName.Otherstring0.7371any0.2279complex0.0149RegExp0.0081{}0.0035
,Punctuation
 Text.Whitespace
optionsName.Otherany0.6311complex0.0443Options0.0377{}0.0213ConnectionOptions0.0164
)Punctuation
 Text.Whitespace
=>Punctuation
 Text.Whitespace
origName.Otherany0.9138complex0.0545string0.0083any[]0.0060string[]0.0019
.Punctuation
filterName.Otherany0.7495complex0.2467string0.0008boolean0.0004v...0.0003
(Punctuation
patternName.Otherstring0.5455any0.4185complex0.0171boolean0.0060RegExp0.0033
,Punctuation
 Text.Whitespace
extName.Otherany0.9502complex0.0244string0.0174boolean0.0018number0.0008
(Punctuation
defName.Otherany0.9535string0.0081number0.0069complex0.0062{}0.0058
,Punctuation
 Text.Whitespace
optionsName.Otherany0.5064complex0.0587Options0.0560{}0.0334ConnectionOptions0.0221
)Punctuation
)Punctuation
\n  Text.Whitespace
mName.Otherany0.9373complex0.0360string0.0015Promise<any>0.0008{}0.0007
.Punctuation
defaultsName.Otherany0.9703complex0.0185string0.0035number0.0013boolean0.0013
 Text.Whitespace
=Operator
 Text.Whitespace
optionsName.Otherany0.8021complex0.0602Options0.0102{}0.0072ConnectionOptions0.0065
 Text.Whitespace
=>Punctuation
 Text.Whitespace
origName.Otherany0.9306complex0.0466string0.0044Promise<any>0.0016number0.0011
.Punctuation
defaultsName.Otherany0.9834complex0.0129string0.0006T0.0005boolean0.0004
(Punctuation
extName.Otherany0.9359complex0.0433string0.0119boolean0.0014number0.0009
(Punctuation
defName.Otherany0.9487complex0.0072{}0.0071number0.0048string0.0040
,Punctuation
 Text.Whitespace
optionsName.Otherany0.3046Options0.0899complex0.0852{}0.0334ConnectionOptions0.0316
)Punctuation
)Punctuation
\n  Text.Whitespace
mName.Otherany0.8814complex0.0712string0.0024Promise<any>0.0016{}0.0011
.Punctuation
makeReName.Otherany0.9244string0.0292boolean0.0182complex0.0151number0.0045
 Text.Whitespace
=Operator
 Text.Whitespace
(Punctuation
patternName.Otherstring0.6716any0.2512complex0.0333RegExp0.0207{}0.0066
,Punctuation
 Text.Whitespace
optionsName.Otherany0.4980complex0.0785Options0.0520{}0.0262ConnectionOptions0.0220
)Punctuation
 Text.Whitespace
=>Punctuation
 Text.Whitespace
origName.Otherany0.8583complex0.1092string0.0070any[]0.0020Promise<any>0.0012
.Punctuation
makeReName.Otherany0.9114complex0.0500boolean0.0150string0.0125any[]0.0014
(Punctuation
patternName.Otherstring0.5767any0.3525complex0.0363RegExp0.0113{}0.0065
,Punctuation
 Text.Whitespace
extName.Otherany0.9265complex0.0355string0.0248boolean0.0022number0.0011
(Punctuation
defName.Otherany0.9347string0.0083{}0.0072complex0.0061number0.0054
,Punctuation
 Text.Whitespace
optionsName.Otherany0.3139Options0.0956complex0.0864ConnectionOptions0.0390{}0.0285
)Punctuation
)Punctuation
\n  Text.Whitespace
mName.Otherany0.8916complex0.0610string0.0032Promise<any>0.0013{}0.0012
.Punctuation
braceExpandName.Otherany0.9222string0.0335boolean0.0190complex0.0135number0.0037
 Text.Whitespace
=Operator
 Text.Whitespace
(Punctuation
patternName.Otherstring0.7235any0.2092complex0.0269RegExp0.0216{}0.0053
,Punctuation
 Text.Whitespace
optionsName.Otherany0.5249complex0.0848Options0.0434{}0.0258ConnectionOptions0.0234
)Punctuation
 Text.Whitespace
=>Punctuation
 Text.Whitespace
origName.Otherany0.8704complex0.0976string0.0083any[]0.0019number0.0012
.Punctuation
braceExpandName.Otherany0.9095complex0.0544boolean0.0129string0.0122any[]0.0015
(Punctuation
patternName.Otherstring0.5926any0.3342complex0.0387RegExp0.0129{}0.0063
,Punctuation
 Text.Whitespace
extName.Otherany0.9217complex0.0381string0.0253boolean0.0031number0.0012
(Punctuation
defName.Otherany0.9275string0.0080{}0.0066Date0.0057number0.0051
,Punctuation
 Text.Whitespace
optionsName.Otherany0.4604Options0.0826complex0.0596{}0.0295ConnectionOptions0.0220
)Punctuation
)Punctuation
\n  Text.Whitespace
mName.Otherany0.9559complex0.0205string0.0039Promise<any>0.0007void0.0007
.Punctuation
matchName.Otherany0.9149complex0.0797string0.0023boolean0.0007any[]0.0004
 Text.Whitespace
=Operator
 Text.Whitespace
(Punctuation
listName.Otherany0.7793RegExp0.1000string0.0323string[]0.0221complex0.0125
,Punctuation
 Text.Whitespace
patternName.Otherstring0.5332any0.2984RegExp0.1386complex0.0132string[]0.0025
,Punctuation
 Text.Whitespace
optionsName.Otherany0.7514complex0.0198RegExpMatchArray0.0198RegExp0.0140Options0.0114
)Punctuation
 Text.Whitespace
=>Punctuation
 Text.Whitespace
origName.Otherany0.9506string0.0383complex0.0058number0.0007RegExp0.0006
.Punctuation
matchName.Otherany0.9051complex0.0912string0.0014boolean0.0008any[]0.0002
(Punctuation
listName.Otherany0.7458RegExp0.0992string[]0.0323string0.0267complex0.0232
,Punctuation
 Text.Whitespace
patternName.Otherany0.4327string0.4104RegExp0.1155complex0.0177{}0.0049
,Punctuation
 Text.Whitespace
extName.Otherany0.9657string0.0145complex0.0123boolean0.0017number0.0007
(Punctuation
defName.Otherany0.9449string0.0095{}0.0076Date0.0056number0.0047
,Punctuation
 Text.Whitespace
optionsName.Otherany0.5568complex0.0465{}0.0452Options0.0389ConnectionOptions0.0153
)Punctuation
)Punctuation
\n\n  Text.Whitespace
returnKeyword
 Text.Whitespace
mName.Otherany0.9420string0.0266number0.0071complex0.0043{}0.0018
\nText.Whitespace
}Punctuation
\n\n\n\n\n\nText.Whitespace
Text
// Brace expansion:Comment.Single
\nText.Whitespace
// a{b,c}d -> abd acdComment.Single
\nText.Whitespace
// a{b,}c -> abc acComment.Single
\nText.Whitespace
// a{0..3}d -> a0d a1d a2d a3dComment.Single
\nText.Whitespace
// a{b,c{d,e}f}g -> abg acdfg acefgComment.Single
\nText.Whitespace
// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfgComment.Single
\nText.Whitespace
//Comment.Single
\nText.Whitespace
// Invalid sets are not expanded.Comment.Single
\nText.Whitespace
// a{2..}b -> a{2..}bComment.Single
\nText.Whitespace
// a{b}c -> a{b}cComment.Single
\nText.Whitespace
minimatchName.Otherany0.9701string0.0011{}0.0005complex0.0005Assert0.0003
.Punctuation
braceExpandName.Otherany0.9807string0.0165complex0.0009number0.0005boolean0.0004
 Text.Whitespace
=Operator
 Text.Whitespace
(Punctuation
patternName.Otherstring0.8558any0.1156RegExp0.0094complex0.0068{}0.0041
,Punctuation
 Text.Whitespace
optionsName.Otherany0.5944Options0.0306ConnectionOptions0.0252complex0.0207{}0.0206
)Punctuation
 Text.Whitespace
=>Punctuation
 Text.Whitespace
braceExpandName.Otherany0.5612string0.2293boolean0.0842complex0.0309void0.0259
(Punctuation
patternName.Otherstring0.7885any0.1616RegExp0.0216complex0.0116{}0.0055
,Punctuation
 Text.Whitespace
optionsName.Otherany0.3458Options0.0609ConnectionOptions0.0562complex0.0509{}0.0486
)Punctuation
\n\nText.Whitespace
constKeyword.Declaration
 Text.Whitespace
braceExpandName.Otherany0.5106string0.2654boolean0.0749RegExp0.0380complex0.0277
 Text.Whitespace
=Operator
 Text.Whitespace
(Punctuation
patternName.Otherstring0.6929any0.2212RegExp0.0446{}0.0120complex0.0105
,Punctuation
 Text.Whitespace
optionsName.Other{}0.4908any0.1876complex0.0321Options0.0117ConnectionOptions0.0082
 Text.Whitespace
=Operator
 Text.Whitespace
{Punctuation
}Punctuation
)Punctuation
 Text.Whitespace
=>Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
assertValidPatternName.Otherany0.5209string0.2138boolean0.1112complex0.0830void0.0202
(Punctuation
patternName.Otherstring0.7606any0.1374RegExp0.0563complex0.0296{}0.0049
)Punctuation
\n\n  Text.Whitespace
// Thanks to Yeting Li <https://github.com/yetingli> forComment.Single
\n  Text.Whitespace
// improving this regexp to avoid a ReDOS vulnerability.Comment.Single
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
optionsName.Otherany0.4923complex0.2802{}0.0287Options0.0161RegExp0.0088
.Punctuation
nobraceName.Otherany0.6138complex0.1649boolean0.1256string0.0716RegExp0.0044
 Text.Whitespace
||Operator
 Text.Whitespace
!Operator
/\{(?:(?!\{).)*\}/Literal.String.Regex
.Punctuation
testName.Otherboolean0.9698complex0.0128any0.0094string0.0028true0.0006
(Punctuation
patternName.Otherstring0.7254any0.2497complex0.0098RegExp0.0040{}0.0031
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
// shortcut. no need to expand.Comment.Single
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
[Punctuation
patternName.Otherstring0.8265any0.1579complex0.0060{}0.0029number0.0022
]Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
returnKeyword
 Text.Whitespace
expandName.Othercomplex0.3542any0.1869any[]0.1307string[]0.1030string0.0750
(Punctuation
patternName.Otherstring0.6885any0.1326RegExp0.0670complex0.0515{}0.0180
)Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
constKeyword.Declaration
 Text.Whitespace
MAX_PATTERN_LENGTHName.Othernumber0.9695any0.0190string0.0073boolean0.0012number[]0.0005
 Text.Whitespace
=Operator
 Text.Whitespace
1024Literal.Number.Float
 Text.Whitespace
*Operator
 Text.Whitespace
64Literal.Number.Float
\nText.Whitespace
constKeyword.Declaration
 Text.Whitespace
assertValidPatternName.Otherany0.3923string0.2581RegExp0.0613complex0.0511{}0.0410
 Text.Whitespace
=Operator
 Text.Whitespace
patternName.Otherstring0.5138any0.3606complex0.0344RegExp0.0292{}0.0234
 Text.Whitespace
=>Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
typeofOperator.Word
 Text.Whitespace
patternName.Otherstring0.6172any0.2013complex0.0655RegExp0.0635{}0.0220
 Text.Whitespace
!==Operator
 Text.Whitespace
'string'Literal.String.Single
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
throwKeywordany0.4909complex0.2123Error0.0931{}0.0793string0.0307
 Text.Whitespace
newOperator.Wordany0.5411string0.0727complex0.0724boolean0.0671{}0.0510
 Text.Whitespace
TypeErrorName.ExceptionTypeErrorConstructor0.9844ErrorConstructor0.0018SymbolConstructor0.0003BooleanConstructor0.0002complex0.0002
(Punctuation
'invalid pattern'Literal.String.Single
)Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
patternName.Otherstring0.7530any0.1262string[]0.0400RegExp0.0280complex0.0184
.Punctuation
lengthName.Othernumber0.9510any0.0458string0.0018complex0.0004boolean0.0003
 Text.Whitespace
>Operator
 Text.Whitespace
MAX_PATTERN_LENGTHName.Othernumber0.8114string0.0747boolean0.0516any0.0368complex0.0059
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
throwKeywordany0.4609complex0.2250Error0.1049{}0.0817boolean0.0173
 Text.Whitespace
newOperator.Wordany0.5367complex0.0696{}0.0663boolean0.0603string0.0530
 Text.Whitespace
TypeErrorName.ExceptionTypeErrorConstructor0.9876ErrorConstructor0.0013BooleanConstructor0.0002SymbolConstructor0.0002complex0.0001
(Punctuation
'pattern is too long'Literal.String.Single
)Punctuation
\n  Text.Whitespace
}Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
Text
// parse a component of the expanded set.Comment.Single
\nText.Whitespace
// At this point, no pattern may contain "/" in itComment.Single
\nText.Whitespace
// so we're going to return a 2d array, where each entry is the fullComment.Single
\nText.Whitespace
// pattern, split on '/', and then turned into a regular expression.Comment.Single
\nText.Whitespace
// A regexp is made at the end which joins each array with anComment.Single
\nText.Whitespace
// escaped /, and another full one which joins each regexp with |.Comment.Single
\nText.Whitespace
//Comment.Single
\nText.Whitespace
// Following the lead of Bash 4.1, note that "**" only has special meaningComment.Single
\nText.Whitespace
// when it is the *only* thing in a path portion.  Otherwise, any seriesComment.Single
\nText.Whitespace
// of * is equivalent to a single *.  Globstar behavior is enabled byComment.Single
\nText.Whitespace
// default, and can be disabled by setting options.noglobstar.Comment.Single
\nText.Whitespace
constKeyword.Declaration
 Text.Whitespace
SUBPARSEName.Othersymbol0.5282any0.1158number0.0303{}0.0258SymbolConstructor0.0177
 Text.Whitespace
=Operator
 Text.Whitespace
SymbolName.BuiltinSymbolConstructor0.9968symbol0.0008any0.0004complex0.0001{}0.0001
(Punctuation
'subparse'Literal.String.Single
)Punctuation
\n\nText.Whitespace
minimatchName.Otherany0.6766symbol0.0036HTMLDivElement0.0025{}0.0023string0.0019
.Punctuation
makeReName.Otherany0.9045string0.0802boolean0.0041number0.0033complex0.0015
 Text.Whitespace
=Operator
 Text.Whitespace
(Punctuation
patternName.Otherstring0.8358any0.1346RegExp0.0083complex0.0043{}0.0033
,Punctuation
 Text.Whitespace
optionsName.Otherany0.2780ConnectionOptions0.0449{}0.0388Options0.0297complex0.0164
)Punctuation
 Text.Whitespace
=>Punctuation
\n  Text.Whitespace
newOperator.Wordany0.9299string0.0304complex0.0066{}0.0049Error0.0017
 Text.Whitespace
MinimatchName.Otherany0.9967string0.0021complex0.0005{}0.0001boolean0.0001
(Punctuation
patternName.Otherstring0.8561any0.1140RegExp0.0109complex0.0052{}0.0043
,Punctuation
 Text.Whitespace
optionsName.Otherany0.2360{}0.0852Options0.0331ConnectionOptions0.0180symbol0.0086
 Text.Whitespace
||Operator
 Text.Whitespace
{Punctuation
}Punctuation
)Punctuation
.Punctuation
makeReName.Otherany0.8458boolean0.0360string0.0265complex0.0250any[]0.0094
(Punctuation
)Punctuation
\n\nText.Whitespace
minimatchName.Otherany0.9555string0.0028{}0.0009URI0.0005complex0.0005
.Punctuation
matchName.Otherany0.9567complex0.0388string0.0020boolean0.0005{}0.0003
 Text.Whitespace
=Operator
 Text.Whitespace
(Punctuation
listName.Otherany0.6795RegExp0.0585string[]0.0583string0.0458any[]0.0268
,Punctuation
 Text.Whitespace
patternName.Otherstring0.6608any0.2420RegExp0.0587{}0.0121complex0.0056
,Punctuation
 Text.Whitespace
optionsName.Otherany0.1951{}0.1574Options0.0165ConnectionOptions0.0117symbol0.0107
 Text.Whitespace
=Operator
 Text.Whitespace
{Punctuation
}Punctuation
)Punctuation
 Text.Whitespace
=>Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
mmName.Otherany0.9876string0.0076complex0.0006Path0.0003{}0.0001
 Text.Whitespace
=Operator
 Text.Whitespace
newOperator.Wordany0.9718string0.0157complex0.0022{}0.0017boolean0.0008
 Text.Whitespace
MinimatchName.Otherany0.9977string0.0016complex0.0003boolean0.0001{}0.0001
(Punctuation
patternName.Otherstring0.8259any0.1443RegExp0.0104complex0.0050{}0.0033
,Punctuation
 Text.Whitespace
optionsName.Otherany0.2829Options0.0638ConnectionOptions0.0312{}0.0162Config0.0118
)Punctuation
\n  Text.Whitespace
listName.Otherany0.7453any[]0.0756string[]0.0371complex0.0236{}0.0055
 Text.Whitespace
=Operator
 Text.Whitespace
listName.Otherany0.8394any[]0.0550string[]0.0265complex0.0056string0.0049
.Punctuation
filterName.Otherany0.7098complex0.2794string0.0016v...0.0014any[]0.0010
(Punctuation
fName.Otherany0.6688string0.3146boolean0.0023complex0.0016RegExp0.0014
 Text.Whitespace
=>Punctuation
 Text.Whitespace
mmName.Otherany0.9786string0.0197complex0.0006boolean0.0001any[]0.0001
.Punctuation
matchName.Otherany0.9636complex0.0323string0.0025boolean0.0006any[]0.0002
(Punctuation
fName.Otherstring0.6301any0.3558number0.0023RegExp0.0017string[]0.0016
)Punctuation
)Punctuation
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
mmName.Otherany0.9899string0.0043complex0.0008boolean0.0003{}0.0002
.Punctuation
optionsName.Otherany0.9548complex0.0031{}0.0020string0.0018RegExp0.0017
.Punctuation
nonullName.Otherany0.9523string0.0271boolean0.0172number0.0013complex0.0004
 Text.Whitespace
&&Operator
 Text.Whitespace
!Operator
listName.Otherany0.8998string[]0.0386any[]0.0214string0.0123complex0.0020
.Punctuation
lengthName.Otherany0.8569number0.1402string0.0016complex0.0005boolean0.0002
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
listName.Otherany0.5056any[]0.2963string[]0.0972number[]0.0061string0.0040
.Punctuation
pushName.Othernumber0.6531any0.3372string0.0040complex0.0015boolean0.0009
(Punctuation
patternName.Otherstring0.5012any0.4711complex0.0090RegExp0.0067{}0.0031
)Punctuation
\n  Text.Whitespace
}Punctuation
\n  Text.Whitespace
returnKeyword
 Text.Whitespace
listName.Otherany0.5902string[]0.1394string0.0749any[]0.0740complex0.0178
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
Text
// replace stuff like \* with *Comment.Single
\nText.Whitespace
constKeyword.Declaration
 Text.Whitespace
globUnescapeName.Otherany0.5352string0.3123RegExp0.0392boolean0.0190string[]0.0174
 Text.Whitespace
=Operator
 Text.Whitespace
sName.Otherany0.6631string0.3284number0.0020RegExp0.0008complex0.0006
 Text.Whitespace
=>Punctuation
 Text.Whitespace
sName.Otherstring0.5256any0.4714number0.0012boolean0.0003complex0.0002
.Punctuation
replaceName.Othercomplex0.5174any0.4793string0.0010boolean0.0006void0.0003
(Punctuation
/\\(.)/gLiteral.String.Regex
,Punctuation
 Text.Whitespace
'$1'Literal.String.Single
)Punctuation
\nText.Whitespace
constKeyword.Declaration
 Text.Whitespace
regExpEscapeName.Otherany0.4672string0.3184RegExp0.1317boolean0.0285string[]0.0121
 Text.Whitespace
=Operator
 Text.Whitespace
sName.Otherstring0.5254any0.4676RegExp0.0018number0.0017boolean0.0008
 Text.Whitespace
=>Punctuation
 Text.Whitespace
sName.Otherstring0.6996any0.2974number0.0012boolean0.0005RegExp0.0003
.Punctuation
replaceName.Othercomplex0.7275any0.2686string0.0012boolean0.0010void0.0004
(Punctuation
/[-[\]{}()*+?.,\\^$|#\s]/gLiteral.String.Regex
,Punctuation
 Text.Whitespace
'\\$&'Literal.String.Single
)Punctuation
\n\nText.Whitespace
classKeyword.Declaration
 Text.Whitespace
MinimatchName.Otherany0.9942string0.0054complex0.0001boolean0.0001number0.0001
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
constructorKeyword.Reserved
 Text.Whitespace
(Punctuation
patternName.Otherstring0.8212any0.1311RegExp0.0295complex0.0047{}0.0027
,Punctuation
 Text.Whitespace
optionsName.Otherany0.2416Options0.1169ConnectionOptions0.0320Config0.0176{}0.0159
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
assertValidPatternName.Otherany0.3098boolean0.2209void0.1946string0.1281complex0.0531
(Punctuation
patternName.Otherstring0.8324any0.1355RegExp0.0108complex0.0071{}0.0043
)Punctuation
\n\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
optionsName.Otherany0.1997Options0.0911{}0.0628ConnectionOptions0.0215Config0.0178
)Punctuation
 Text.Whitespace
optionsName.Otherany0.3737{}0.3265complex0.0266Options0.0194boolean0.0055
 Text.Whitespace
=Operator
 Text.Whitespace
{Punctuation
}Punctuation
\n\n    Text.Whitespace
thisKeyword
.Punctuation
optionsName.Otherany0.4433Options0.0449ConnectionOptions0.0429complex0.0286Config0.0228
 Text.Whitespace
=Operator
 Text.Whitespace
optionsName.Otherany0.4312Options0.0500ConnectionOptions0.0399Config0.0246complex0.0231
\n    Text.Whitespace
thisKeyword
.Punctuation
setName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
[Punctuation
]Punctuation
\n    Text.Whitespace
thisKeyword
.Punctuation
patternName.Otherstring0.7437any0.1744RegExp0.0336complex0.0152boolean0.0135
 Text.Whitespace
=Operator
 Text.Whitespace
patternName.Otherstring0.5394RegExp0.2120any0.1542complex0.0255{}0.0102
\n    Text.Whitespace
thisKeyword
.Punctuation
windowsPathsNoEscapeName.Otherboolean0.9548any0.0140string0.0131number0.0066complex0.0021
 Text.Whitespace
=Operator
 Text.Whitespace
!Operator
!Operator
optionsName.Otherany0.3959Options0.0869complex0.0318ConnectionOptions0.0175boolean0.0146
.Punctuation
windowsPathsNoEscapeName.Otherboolean0.7983any0.1497string0.0196number0.0151complex0.0066
 Text.Whitespace
||Operator
\n      Text.Whitespace
optionsName.Otherany0.5334complex0.0676Options0.0610boolean0.0144{}0.0103
.Punctuation
allowWindowsEscapeName.Otherboolean0.7696any0.2069complex0.0078string0.0066number0.0052
 Text.Whitespace
===Operator
 Text.Whitespace
falseKeyword.Constant
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
thisKeyword
.Punctuation
windowsPathsNoEscapeName.Otherboolean0.6858string0.1498any0.1153number0.0210string[]0.0055
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
thisKeyword
.Punctuation
patternName.Otherstring0.8228any0.1607complex0.0039RegExp0.0034string[]0.0028
 Text.Whitespace
=Operator
 Text.Whitespace
thisKeyword
.Punctuation
patternName.Otherstring0.8746any0.1192RegExp0.0021complex0.0013number0.0009
.Punctuation
replaceName.Othercomplex0.9515any0.0467string0.0006boolean0.0003any[]0.0001
(Punctuation
/\\/gLiteral.String.Regex
,Punctuation
 Text.Whitespace
'/'Literal.String.Single
)Punctuation
\n    Text.Whitespace
}Punctuation
\n    Text.Whitespace
thisKeyword
.Punctuation
regexpName.OtherRegExp0.8645boolean0.0390string0.0174any0.0116false0.0092
 Text.Whitespace
=Operator
 Text.Whitespace
nullKeyword.Constant
\n    Text.Whitespace
thisKeyword
.Punctuation
negateName.Otherboolean0.9910any0.0039string0.0019number0.0008false0.0005
 Text.Whitespace
=Operator
 Text.Whitespace
falseKeyword.Constant
\n    Text.Whitespace
thisKeyword
.Punctuation
commentName.Otherboolean0.8374false0.0660string0.0423any0.0199number0.0053
 Text.Whitespace
=Operator
 Text.Whitespace
falseKeyword.Constant
\n    Text.Whitespace
thisKeyword
.Punctuation
emptyName.Otherboolean0.9923false0.0025string0.0017any0.0007true0.0004
 Text.Whitespace
=Operator
 Text.Whitespace
falseKeyword.Constant
\n    Text.Whitespace
thisKeyword
.Punctuation
partialName.Otherboolean0.8306any0.0431complex0.0224any[]0.0206string0.0200
 Text.Whitespace
=Operator
 Text.Whitespace
!Operator
!Operator
optionsName.Otherany0.3026complex0.1665Options0.0559ConnectionOptions0.0161{}0.0127
.Punctuation
partialName.Otherboolean0.3997any0.3862string0.0603complex0.0561number0.0326
\n\n    Text.Whitespace
// make the set of regexps etc.Comment.Single
\n    Text.Whitespace
thisKeyword
.Punctuation
makeName.Othervoid0.9471complex0.0235boolean0.0104any0.0034Promise<void>0.0030
(Punctuation
)Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
debugName.Othervoid0.9685any0.0202boolean0.0037complex0.0032Promise<void>0.0008
 Text.Whitespace
(Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
}Punctuation
\n\n  Text.Whitespace
makeName.Othervoid0.9470complex0.0155any0.0043boolean0.0040Promise<void>0.0040
 Text.Whitespace
(Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
patternName.Otherstring0.5963any0.1632complex0.0857RegExp0.0683string[]0.0109
 Text.Whitespace
=Operator
 Text.Whitespace
thisKeyword
.Punctuation
patternName.Otherstring0.8645any0.0518RegExp0.0406complex0.0199string[]0.0069
\n    Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
optionsName.Otherany0.1508complex0.0836ConnectionOptions0.0586Options0.0563Config0.0231
 Text.Whitespace
=Operator
 Text.Whitespace
thisKeyword
.Punctuation
optionsName.OtherConnectionOptions0.1228any0.1018Options0.0724complex0.0424Config0.0197
\n\n    Text.Whitespace
// empty patterns and comments match nothing.Comment.Single
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
optionsName.Otherany0.2211Options0.1162complex0.0959ConnectionOptions0.0327Config0.0101
.Punctuation
nocommentName.Otherboolean0.6167any0.1741string0.1443number0.0211complex0.0135
 Text.Whitespace
&&Operator
 Text.Whitespace
patternName.Otherstring0.8417any0.1433RegExp0.0056complex0.0048boolean0.0014
.Punctuation
charAtName.Otherstring0.8692any0.1234complex0.0027boolean0.0025number0.0004
(Punctuation
0Literal.Number.Float
)Punctuation
 Text.Whitespace
===Operator
 Text.Whitespace
'#'Literal.String.Single
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
thisKeyword
.Punctuation
commentName.Otherboolean0.7640string0.1365any0.0307false0.0168number0.0136
 Text.Whitespace
=Operator
 Text.Whitespace
trueKeyword.Constant
\n      Text.Whitespace
returnKeyword
\n    Text.Whitespace
}Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
patternName.Otherstring0.7411any0.1684RegExp0.0230boolean0.0195complex0.0185
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
thisKeyword
.Punctuation
emptyName.Otherboolean0.9876string0.0044any0.0022false0.0015void0.0007
 Text.Whitespace
=Operator
 Text.Whitespace
trueKeyword.Constant
\n      Text.Whitespace
returnKeyword
\n    Text.Whitespace
}Punctuation
\n\n    Text.Whitespace
// step 1: figure out negation, etc.Comment.Single
\n    Text.Whitespace
thisKeyword
.Punctuation
parseNegateName.Otherstring0.2510boolean0.2262void0.2127any0.1249complex0.0469
(Punctuation
)Punctuation
\n\n    Text.Whitespace
// step 2: expand bracesComment.Single
\n    Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
setName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
thisKeyword
.Punctuation
globSetName.Otherstring0.3552any0.2160number0.1138boolean0.0514string[]0.0369
 Text.Whitespace
=Operator
 Text.Whitespace
thisKeyword
.Punctuation
braceExpandName.Otherstring0.2651any0.2069complex0.0703number0.0585string[]0.0542
(Punctuation
)Punctuation
\n\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
optionsName.OtherOptions0.1045any0.0844complex0.0451Config0.0279ConnectionOptions0.0151
.Punctuation
debugName.Othercomplex0.3692void0.2344boolean0.2014any0.1120Function0.0057
)Punctuation
 Text.Whitespace
thisKeyword
.Punctuation
debugName.Othervoid0.8485any0.0642complex0.0505boolean0.0262number0.0016
 Text.Whitespace
=Operator
 Text.Whitespace
(Punctuation
...Punctuation
argsName.Otherany[]0.9301string[]0.0268any0.0117Array0.0016number[]0.0016
)Punctuation
 Text.Whitespace
=>Punctuation
 Text.Whitespace
consoleName.OtherConsole0.9989void0.0003any0.0002any[]0.0000Function0.0000
.Punctuation
errorName.Othervoid0.9976boolean0.0007complex0.0005any0.0004string0.0002
(Punctuation
...Punctuation
argsName.Otherany[]0.9467string[]0.0337any0.0067complex0.0014number[]0.0007
)Punctuation
\n\n    Text.Whitespace
thisKeyword
.Punctuation
debugName.Othervoid0.7235complex0.1358any0.1089boolean0.0103{}0.0026
(Punctuation
thisKeyword
.Punctuation
patternName.Otherstring0.8520any0.1305complex0.0035string[]0.0030RegExp0.0024
,Punctuation
 Text.Whitespace
setName.Other
)Punctuation
\n\n    Text.Whitespace
// step 3: now we have a set, so turn each one into a series of path-portionComment.Single
\n    Text.Whitespace
// matching patterns.Comment.Single
\n    Text.Whitespace
// These will be regexps, except in the case of "**", which isComment.Single
\n    Text.Whitespace
// set to the GLOBSTAR object for globstar behavior,Comment.Single
\n    Text.Whitespace
// and will not contain any / charactersComment.Single
\n    Text.Whitespace
setName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
thisKeyword
.Punctuation
globPartsName.Otherstring[]0.2583any0.2551string0.2387any[]0.1053boolean0.0476
 Text.Whitespace
=Operator
 Text.Whitespace
setName.Other
.Punctuation
mapName.OtherU[]0.6977any0.1737complex0.1095any[]0.0022string[]0.0010
(Punctuation
sName.Otherany0.5301string0.4535number0.0063boolean0.0015complex0.0013
 Text.Whitespace
=>Punctuation
 Text.Whitespace
sName.Otherstring0.7378any0.2571number0.0022complex0.0007boolean0.0006
.Punctuation
splitName.Othercomplex0.7573any0.2357string0.0015void0.0009string[]0.0009
(Punctuation
slashSplitName.Otherstring0.4564any0.2583RegExp0.1306string[]0.0350boolean0.0319
)Punctuation
)Punctuation
\n\n    Text.Whitespace
thisKeyword
.Punctuation
debugName.Othervoid0.7103complex0.1694any0.0830boolean0.0096{}0.0050
(Punctuation
thisKeyword
.Punctuation
patternName.Otherstring0.9005any0.0805complex0.0048string[]0.0037RegExp0.0034
,Punctuation
 Text.Whitespace
setName.Other
)Punctuation
\n\n    Text.Whitespace
// glob --> regexpsComment.Single
\n    Text.Whitespace
setName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
setName.Other
.Punctuation
mapName.OtherU[]0.5645any0.2170complex0.1928any[]0.0027...0.0014
(Punctuation
(Punctuation
sName.Otherstring0.8938any0.0957number0.0042complex0.0009string[]0.0009
,Punctuation
 Text.Whitespace
siName.Otherany0.4870string0.2816number0.0696complex0.0379string[]0.0101
,Punctuation
 Text.Whitespace
setName.Other
)Punctuation
 Text.Whitespace
=>Punctuation
 Text.Whitespace
sName.Otherstring0.5310any0.4348string[]0.0091any[]0.0048number0.0044
.Punctuation
mapName.OtherU[]0.6017any0.2761complex0.0946any[]0.0030U,...0.0019
(Punctuation
thisKeyword
.Punctuation
parseName.Otherboolean0.1011any[]0.0852complex0.0735string0.0655any0.0593
,Punctuation
 Text.Whitespace
thisKeyword
)Punctuation
)Punctuation
\n\n    Text.Whitespace
thisKeyword
.Punctuation
debugName.Othervoid0.7497complex0.1013any0.0878boolean0.0244{}0.0042
(Punctuation
thisKeyword
.Punctuation
patternName.Otherstring0.9059any0.0801complex0.0026string[]0.0025RegExp0.0023
,Punctuation
 Text.Whitespace
setName.Other
)Punctuation
\n\n    Text.Whitespace
// filter out everything that didn't compile properly.Comment.Single
\n    Text.Whitespace
setName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
setName.Other
.Punctuation
filterName.Othercomplex0.7647any0.2247string0.0026boolean0.0018any[]0.0009
(Punctuation
sName.Otherstring0.6386any0.3492number0.0057boolean0.0015complex0.0010
 Text.Whitespace
=>Punctuation
 Text.Whitespace
sName.Otherstring0.8461any0.1444string[]0.0035number0.0012boolean0.0012
.Punctuation
indexOfName.Othernumber0.7574any0.2281string0.0074boolean0.0030complex0.0023
(Punctuation
falseKeyword.Constant
)Punctuation
 Text.Whitespace
===Operator
 Text.Whitespace
-Operator
1Literal.Number.Float
)Punctuation
\n\n    Text.Whitespace
thisKeyword
.Punctuation
debugName.Othervoid0.9183complex0.0353any0.0276boolean0.0077number0.0013
(Punctuation
thisKeyword
.Punctuation
patternName.Otherstring0.9198any0.0664boolean0.0031complex0.0031number0.0020
,Punctuation
 Text.Whitespace
setName.Other
)Punctuation
\n\n    Text.Whitespace
thisKeyword
.Punctuation
setName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
setName.Other
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
parseNegateName.Otherboolean0.2872string0.2677any0.2055void0.0687number0.0494
 Text.Whitespace
(Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
thisKeyword
.Punctuation
optionsName.Otherany0.0950Options0.0489ConnectionOptions0.0283complex0.0229Config0.0094
.Punctuation
nonegateName.Otherboolean0.7817any0.1147string0.0409number0.0398complex0.0075
)Punctuation
 Text.Whitespace
returnKeyword
\n\n    Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
patternName.Otherstring0.5608any0.3553complex0.0238RegExp0.0211boolean0.0117
 Text.Whitespace
=Operator
 Text.Whitespace
thisKeyword
.Punctuation
patternName.Otherstring0.6550any0.2217boolean0.0344complex0.0301RegExp0.0285
\n    Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
negateName.Otherboolean0.9880any0.0064number0.0019string0.0016false0.0007
 Text.Whitespace
=Operator
 Text.Whitespace
falseKeyword.Constant
\n    Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
negateOffsetName.Othernumber0.8227any0.0859string0.0646boolean0.0191complex0.0027
 Text.Whitespace
=Operator
 Text.Whitespace
0Literal.Number.Float
\n\n    Text.Whitespace
forKeyword
 Text.Whitespace
(Punctuation
letKeyword.Declaration
 Text.Whitespace
iName.Othernumber0.9963any0.0029string0.0005boolean0.0001complex0.0001
 Text.Whitespace
=Operator
 Text.Whitespace
0Literal.Number.Float
;Punctuation
 Text.Whitespace
iName.Othernumber0.9776any0.0182string0.0025boolean0.0004void0.0004
 Text.Whitespace
<Operator
 Text.Whitespace
patternName.Otherstring0.7275any0.2073complex0.0177string[]0.0169RegExp0.0117
.Punctuation
lengthName.Othernumber0.8780any0.1168string0.0034complex0.0006boolean0.0005
 Text.Whitespace
&&Operator
 Text.Whitespace
patternName.Otherstring0.8834any0.1061RegExp0.0025complex0.0022boolean0.0021
.Punctuation
charAtName.Otherstring0.8811any0.1133boolean0.0025complex0.0016number0.0007
(Punctuation
iName.Othernumber0.9222any0.0661string0.0092boolean0.0011void0.0005
)Punctuation
 Text.Whitespace
===Operator
 Text.Whitespace
'!'Literal.String.Single
;Punctuation
 Text.Whitespace
iName.Othernumber0.9800any0.0187string0.0006boolean0.0003void0.0002
++Operator
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
negateName.Otherboolean0.9088any0.0410number0.0293string0.0115void0.0051
 Text.Whitespace
=Operator
 Text.Whitespace
!Operator
negateName.Otherboolean0.6548number0.2411any0.0651string0.0219void0.0079
\n      Text.Whitespace
negateOffsetName.Othernumber0.9520any0.0304boolean0.0082string0.0080void0.0005
++Operator
\n    Text.Whitespace
}Punctuation
\n\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
negateOffsetName.Otherboolean0.5236string0.1720number0.1399any0.1345complex0.0104
)Punctuation
 Text.Whitespace
thisKeyword
.Punctuation
patternName.Otherstring0.8862any0.1002boolean0.0035complex0.0030RegExp0.0021
 Text.Whitespace
=Operator
 Text.Whitespace
patternName.Otherstring0.8519any0.1231RegExp0.0108complex0.0041string[]0.0028
.Punctuation
substrName.Otherstring0.8723any0.1214complex0.0025number0.0015boolean0.0009
(Punctuation
negateOffsetName.Othernumber0.5227string0.1850any0.1395boolean0.1371complex0.0043
)Punctuation
\n    Text.Whitespace
thisKeyword
.Punctuation
negateName.Otherboolean0.6917number0.1212any0.0698void0.0632string0.0273
 Text.Whitespace
=Operator
 Text.Whitespace
negateName.Otherboolean0.6554number0.1082string0.0915any0.0703void0.0390
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
// set partial to true to test if, for example,Comment.Single
\n  Text.Whitespace
// "/a/b" matches the start of "/*/b/*/d"Comment.Single
\n  Text.Whitespace
// Partial means, if you run out of file before you runComment.Single
\n  Text.Whitespace
// out of pattern, then that's fine, as long as allComment.Single
\n  Text.Whitespace
// the parts match.Comment.Single
\n  Text.Whitespace
matchOneName.Othervoid0.4399any0.1792string0.1676boolean0.0567number0.0306
 Text.Whitespace
(Punctuation
fileName.Otherstring0.5080any0.3864File0.0326number0.0171{}0.0030
,Punctuation
 Text.Whitespace
patternName.Otherstring0.7219any0.2449number0.0074{}0.0047complex0.0046
,Punctuation
 Text.Whitespace
partialName.Otherany0.7401number0.1146boolean0.0683string0.0233void0.0154
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
varKeyword.Declaration
 Text.Whitespace
optionsName.Otherany0.4250complex0.0236Options0.0201{}0.0192ConnectionOptions0.0173
 Text.Whitespace
=Operator
 Text.Whitespace
thisKeyword
.Punctuation
optionsName.Otherany0.1992Options0.0539ConnectionOptions0.0325Config0.0317complex0.0285
\n\n    Text.Whitespace
thisKeyword
.Punctuation
debugName.Otherany0.4243complex0.3442void0.1161{}0.0093boolean0.0083
(Punctuation
'matchOne'Literal.String.Single
,Punctuation
\n      Text.Whitespace
{Punctuation
 Text.Whitespace
'this'Literal.String.Single
:Operator
 Text.Whitespace
thisKeyword
,Punctuation
 Text.Whitespace
fileName.Otherstring0.4747any0.2677File0.0891{}0.0109number0.0052
:Operator
 Text.Whitespace
fileKeyword.Typestring0.6918any0.2381File0.0227number0.0070{}0.0058
,Punctuation
 Text.Whitespace
patternName.Otherstring0.9419any0.0220RegExp0.0140{}0.0051string[]0.0034
:Operator
 Text.Whitespace
patternKeyword.Typestring0.8981any0.0714{}0.0071RegExp0.0066complex0.0046
 Text.Whitespace
}Punctuation
)Punctuation
\n\n    Text.Whitespace
thisKeyword
.Punctuation
debugName.Othervoid0.3477any0.3137complex0.2463boolean0.0089{}0.0089
(Punctuation
'matchOne'Literal.String.Single
,Punctuation
 Text.Whitespace
fileName.Otherstring0.5090string[]0.2194any0.1494any[]0.0393File0.0069
.Punctuation
lengthName.Othernumber0.9291any0.0672string0.0027complex0.0004boolean0.0002
,Punctuation
 Text.Whitespace
patternName.Otherstring0.7919any0.1484string[]0.0314any[]0.0096complex0.0056
.Punctuation
lengthName.Othernumber0.9349any0.0614string0.0027complex0.0003void0.0002
)Punctuation
\n\n    Text.Whitespace
forKeyword
 Text.Whitespace
(Punctuation
varKeyword.Declaration
 Text.Whitespace
fiName.Othernumber0.6713any0.1837string0.1244boolean0.0069{}0.0036
 Text.Whitespace
=Operator
 Text.Whitespace
0Literal.Number.Float
,Punctuation
\n        Text.Whitespace
piName.Othernumber0.9932any0.0053string0.0009complex0.0001boolean0.0001
 Text.Whitespace
=Operator
 Text.Whitespace
0Literal.Number.Float
,Punctuation
\n        Text.Whitespace
flName.Otherstring0.4429any0.3572number0.1763any[]0.0062boolean0.0042
 Text.Whitespace
=Operator
 Text.Whitespace
fileName.Otherstring0.5291any0.2217string[]0.1555any[]0.0350complex0.0105
.Punctuation
lengthName.Othernumber0.9140any0.0820string0.0029complex0.0004boolean0.0002
,Punctuation
\n        Text.Whitespace
plName.Otherany0.6405number0.1454string0.1292complex0.0706any[]0.0025
 Text.Whitespace
=Operator
 Text.Whitespace
patternName.Otherstring0.8199any0.0998string[]0.0411complex0.0117any[]0.0091
.Punctuation
lengthName.Othernumber0.9371any0.0599string0.0021complex0.0004boolean0.0002
\n        Text.Whitespace
;Punctuation
 Text.Whitespace
(Punctuation
fiName.Otherany0.5455string0.3375number0.1019boolean0.0082{}0.0015
 Text.Whitespace
<Operator
 Text.Whitespace
flName.Otherany0.6120string0.2889number0.0169complex0.0105any[]0.0056
)Punctuation
 Text.Whitespace
&&Operator
 Text.Whitespace
(Punctuation
piName.Othernumber0.9773any0.0186string0.0013complex0.0012void0.0004
 Text.Whitespace
<Operator
 Text.Whitespace
plName.Otherany0.7298complex0.1168string0.0493number0.0249T0.0057
)Punctuation
\n        Text.Whitespace
;Punctuation
 Text.Whitespace
fiName.Otherany0.4382number0.3839string0.1623boolean0.0090void0.0021
++Operator
,Punctuation
 Text.Whitespace
piName.Othernumber0.9882any0.0098string0.0011boolean0.0003complex0.0002
++Operator
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
thisKeyword
.Punctuation
debugName.Othervoid0.7992any0.0941complex0.0551boolean0.0194{}0.0056
(Punctuation
'matchOne loop'Literal.String.Single
)Punctuation
\n      Text.Whitespace
varKeyword.Declaration
 Text.Whitespace
pName.Otherstring0.8145any0.1389number0.0219complex0.0131{}0.0024
 Text.Whitespace
=Operator
 Text.Whitespace
patternName.Otherstring0.5540any0.2501complex0.0989string[]0.0292{}0.0207
[Punctuation
piName.Othernumber0.9603any0.0209string0.0161complex0.0011boolean0.0006
]Punctuation
\n      Text.Whitespace
varKeyword.Declaration
 Text.Whitespace
fName.Otherstring0.5193any0.4330boolean0.0178number0.0056complex0.0041
 Text.Whitespace
=Operator
 Text.Whitespace
fileName.Otherany0.5765string0.1639any[]0.0487{}0.0439string[]0.0426
[Punctuation
fiName.Otherstring0.7154any0.2391number0.0241complex0.0064boolean0.0052
]Punctuation
\n\n      Text.Whitespace
thisKeyword
.Punctuation
debugName.Othercomplex0.3413any0.2908void0.2172boolean0.0927{}0.0106
(Punctuation
patternName.Otherstring0.7721any0.2085complex0.0055RegExp0.0033number0.0033
,Punctuation
 Text.Whitespace
pName.Otherstring0.8124any0.1254number0.0292string[]0.0064complex0.0059
,Punctuation
 Text.Whitespace
fName.Otherstring0.8507any0.1181boolean0.0113number0.0103string[]0.0013
)Punctuation
\n\n      Text.Whitespace
// should be impossible.Comment.Single
\n      Text.Whitespace
// some invalid regexp stuff in the set.Comment.Single
\n      Text.Whitespace
/* istanbul ignore if */Comment.Multiline
\n      Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
pName.Otherany0.6427string0.1857boolean0.1076number0.0246complex0.0242
 Text.Whitespace
===Operator
 Text.Whitespace
falseKeyword.Constant
)Punctuation
 Text.Whitespace
returnKeyword
 Text.Whitespace
falseKeyword.Constant
\n\n      Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
pName.Otherstring0.5743any0.3036complex0.0524number0.0440boolean0.0097
 Text.Whitespace
===Operator
 Text.Whitespace
GLOBSTARName.Otherstring0.5737any0.1721number0.1549boolean0.0844complex0.0043
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
thisKeyword
.Punctuation
debugName.Othervoid0.5952any0.1981complex0.1515boolean0.0115{}0.0074
(Punctuation
'GLOBSTAR'Literal.String.Single
,Punctuation
 Text.Whitespace
[Punctuation
patternName.Otherstring0.8835any0.0929complex0.0120{}0.0029RegExp0.0024
,Punctuation
 Text.Whitespace
pName.Otherstring0.7689any0.1640number0.0315complex0.0118any[]0.0039
,Punctuation
 Text.Whitespace
fName.Otherstring0.8545any0.1219number0.0149boolean0.0039complex0.0009
]Punctuation
)Punctuation
\n\n        Text.Whitespace
// "**"Comment.Single
\n        Text.Whitespace
// a/**/b/**/c would match the following:Comment.Single
\n        Text.Whitespace
// a/b/x/y/z/cComment.Single
\n        Text.Whitespace
// a/x/y/z/b/cComment.Single
\n        Text.Whitespace
// a/b/x/b/x/cComment.Single
\n        Text.Whitespace
// a/b/cComment.Single
\n        Text.Whitespace
// To do this, take the rest of the pattern afterComment.Single
\n        Text.Whitespace
// the **, and see if it would match the file remainder.Comment.Single
\n        Text.Whitespace
// If so, return success.Comment.Single
\n        Text.Whitespace
// If not, the ** "swallows" a segment, and try again.Comment.Single
\n        Text.Whitespace
// This is recursively awful.Comment.Single
\n        Text.Whitespace
//Comment.Single
\n        Text.Whitespace
// a/**/b/**/c matching a/b/x/y/z/cComment.Single
\n        Text.Whitespace
// - a matches aComment.Single
\n        Text.Whitespace
// - doublestarComment.Single
\n        Text.Whitespace
//   - matchOne(b/x/y/z/c, b/**/c)Comment.Single
\n        Text.Whitespace
//     - b matches bComment.Single
\n        Text.Whitespace
//     - doublestarComment.Single
\n        Text.Whitespace
//       - matchOne(x/y/z/c, c) -> noComment.Single
\n        Text.Whitespace
//       - matchOne(y/z/c, c) -> noComment.Single
\n        Text.Whitespace
//       - matchOne(z/c, c) -> noComment.Single
\n        Text.Whitespace
//       - matchOne(c, c) yes, hitComment.Single
\n        Text.Whitespace
varKeyword.Declaration
 Text.Whitespace
frName.Otherany0.4396boolean0.3188string0.1281number0.0538{}0.0169
 Text.Whitespace
=Operator
 Text.Whitespace
fiName.Otherany0.5374string0.3584boolean0.0443number0.0277{}0.0060
\n        Text.Whitespace
varKeyword.Declaration
 Text.Whitespace
prName.Otherany0.4025string0.3898number0.0836Date0.0043boolean0.0039
 Text.Whitespace
=Operator
 Text.Whitespace
piName.Othernumber0.9555any0.0371string0.0063boolean0.0002void0.0001
 Text.Whitespace
+Operator
 Text.Whitespace
1Literal.Number.Float
\n        Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
prName.Otherany0.2902string0.1596number0.0230GitHubPRDSL0.0172{}0.0076
 Text.Whitespace
===Operator
 Text.Whitespace
plName.Otherany0.6120string0.1720T0.0223Function0.0177complex0.0153
)Punctuation
 Text.Whitespace
{Punctuation
\n          Text.Whitespace
thisKeyword
.Punctuation
debugName.Othervoid0.6647any0.2197complex0.0459boolean0.0079{}0.0053
(Punctuation
'** at the end'Literal.String.Single
)Punctuation
\n          Text.Whitespace
// a ** at the end will just swallow the rest.Comment.Single
\n          Text.Whitespace
// We have found a match.Comment.Single
\n          Text.Whitespace
// however, it will not swallow /.x, unlessComment.Single
\n          Text.Whitespace
// options.dot is set.Comment.Single
\n          Text.Whitespace
// . and .. are *never* matched by **, for explosivelyComment.Single
\n          Text.Whitespace
// exponential reasons.Comment.Single
\n          Text.Whitespace
forKeyword
 Text.Whitespace
(Punctuation
;Punctuation
 Text.Whitespace
fiName.Otherany0.7857string0.1788number0.0222boolean0.0038{}0.0013
 Text.Whitespace
<Operator
 Text.Whitespace
flName.Otherany0.8046string0.1717number0.0110complex0.0019any[]0.0014
;Punctuation
 Text.Whitespace
fiName.Otherany0.6081number0.2443string0.1334boolean0.0063{}0.0009
++Operator
)Punctuation
 Text.Whitespace
{Punctuation
\n            Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
fileName.Otherany0.6373string0.1436{}0.0436complex0.0278any[]0.0240
[Punctuation
fiName.Otherstring0.7849any0.1564number0.0268boolean0.0205complex0.0031
]Punctuation
 Text.Whitespace
===Operator
 Text.Whitespace
'.'Literal.String.Single
 Text.Whitespace
||Operator
 Text.Whitespace
fileName.Otherany0.5297string0.2331{}0.0385string[]0.0336boolean0.0309
[Punctuation
fiName.Otherstring0.8145any0.1358number0.0222boolean0.0165complex0.0028
]Punctuation
 Text.Whitespace
===Operator
 Text.Whitespace
'..'Literal.String.Single
 Text.Whitespace
||Operator
\n              Text.Whitespace
(Punctuation
!Operator
optionsName.Otherany0.1655complex0.0552Options0.0468{}0.0183ConnectionOptions0.0154
.Punctuation
dotName.Otherboolean0.7390string0.1091any0.0993number0.0409complex0.0085
 Text.Whitespace
&&Operator
 Text.Whitespace
fileName.Otherany0.3241string0.3041string[]0.0920boolean0.0771any[]0.0415
[Punctuation
fiName.Otherstring0.7155any0.1981boolean0.0497number0.0229{}0.0020
]Punctuation
.Punctuation
charAtName.Otherstring0.7706any0.2190boolean0.0064complex0.0017number0.0010
(Punctuation
0Literal.Number.Float
)Punctuation
 Text.Whitespace
===Operator
 Text.Whitespace
'.'Literal.String.Single
)Punctuation
)Punctuation
 Text.Whitespace
returnKeyword
 Text.Whitespace
falseKeyword.Constant
\n          Text.Whitespace
}Punctuation
\n          Text.Whitespace
returnKeyword
 Text.Whitespace
trueKeyword.Constant
\n        Text.Whitespace
}Punctuation
\n\n        Text.Whitespace
// ok, let's see if we can swallow whatever we can.Comment.Single
\n        Text.Whitespace
whileKeyword
 Text.Whitespace
(Punctuation
frName.Otherany0.5085string0.1979boolean0.1296number0.0847void0.0119
 Text.Whitespace
<Operator
 Text.Whitespace
flName.Otherany0.5815string0.3098number0.0124any[]0.0064boolean0.0062
)Punctuation
 Text.Whitespace
{Punctuation
\n          Text.Whitespace
varKeyword.Declaration
 Text.Whitespace
swalloweeName.Otherany0.5872string0.1766boolean0.1060any[]0.0293complex0.0198
 Text.Whitespace
=Operator
 Text.Whitespace
fileName.Otherany0.5376any[]0.0645string0.0458complex0.0444{}0.0325
[Punctuation
frName.Otherstring0.3507any0.2543boolean0.0706number0.0467{}0.0323
]Punctuation
\n\n          Text.Whitespace
thisKeyword
.Punctuation
debugName.Otherany0.4271void0.2888complex0.1889boolean0.0137{}0.0075
(Punctuation
'\nglobstar while'Literal.String.Single
,Punctuation
 Text.Whitespace
fileName.Otherstring0.7077any0.2194File0.0130number0.0108{}0.0029
,Punctuation
 Text.Whitespace
frName.Otherany0.2957boolean0.2700string0.2665{}0.0433number0.0239
,Punctuation
 Text.Whitespace
patternName.Otherstring0.8630any0.0958RegExp0.0170complex0.0074boolean0.0044
,Punctuation
 Text.Whitespace
prName.Otherany0.2975string0.1587GitHubPRDSL0.0478ResolvedUrl0.0098User0.0071
,Punctuation
 Text.Whitespace
swalloweeName.Otherstring0.4587any0.3244boolean0.0981number0.0653RegExp0.0073
)Punctuation
\n\n          Text.Whitespace
// XXX remove this slice.  Just pass the start index.Comment.Single
\n          Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
thisKeyword
.Punctuation
matchOneName.Otherboolean0.8298string0.1078any0.0300complex0.0073string[]0.0037
(Punctuation
fileName.Otherany0.3271string0.3013string[]0.0699File0.0400any[]0.0234
.Punctuation
sliceName.Otherstring0.5944any0.1970string[]0.0822any[]0.0294complex0.0136
(Punctuation
frName.Otherany0.3728string0.3476boolean0.1056number0.0377{}0.0304
)Punctuation
,Punctuation
 Text.Whitespace
patternName.Otherstring0.7625any0.1811RegExp0.0251string[]0.0099any[]0.0032
.Punctuation
sliceName.Otherstring0.7347any0.1394string[]0.0392any[]0.0112complex0.0074
(Punctuation
prName.Otherany0.2714string0.0822GitHubPRDSL0.0536ResolvedUrl0.0090RegExp0.0068
)Punctuation
,Punctuation
 Text.Whitespace
partialName.Otherany0.8617number0.0527string0.0316boolean0.0281void0.0053
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n            Text.Whitespace
thisKeyword
.Punctuation
debugName.Othervoid0.6458any0.1895complex0.0953boolean0.0248this0.0033
(Punctuation
'globstar found match!'Literal.String.Single
,Punctuation
 Text.Whitespace
frName.Otherany0.7245boolean0.0996string0.0960number0.0201{}0.0105
,Punctuation
 Text.Whitespace
flName.Otherany0.6377string0.3104number0.0081boolean0.0039any[]0.0030
,Punctuation
 Text.Whitespace
swalloweeName.Otherboolean0.4549any0.2842string0.1520number0.0934any[]0.0018
)Punctuation
\n            Text.Whitespace
// found a match.Comment.Single
\n            Text.Whitespace
returnKeyword
 Text.Whitespace
trueKeyword.Constant
\n          Text.Whitespace
}Punctuation
 Text.Whitespace
elseKeyword
 Text.Whitespace
{Punctuation
\n            Text.Whitespace
// can't swallow "." or ".." ever.Comment.Single
\n            Text.Whitespace
// can only swallow ".foo" when explicitly asked.Comment.Single
\n            Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
swalloweeName.Otherstring0.5150any0.4017boolean0.0606number0.0098complex0.0041
 Text.Whitespace
===Operator
 Text.Whitespace
'.'Literal.String.Single
 Text.Whitespace
||Operator
 Text.Whitespace
swalloweeName.Otherstring0.6565any0.2911boolean0.0339number0.0082RegExp0.0046
 Text.Whitespace
===Operator
 Text.Whitespace
'..'Literal.String.Single
 Text.Whitespace
||Operator
\n              Text.Whitespace
(Punctuation
!Operator
optionsName.Otherany0.2131Options0.0478ConnectionOptions0.0295complex0.0260RegExp0.0213
.Punctuation
dotName.Otherboolean0.5948any0.2403string0.1260number0.0259complex0.0064
 Text.Whitespace
&&Operator
 Text.Whitespace
swalloweeName.Otherstring0.8935any0.0922boolean0.0096number0.0016RegExp0.0014
.Punctuation
charAtName.Otherstring0.8521any0.1434boolean0.0019complex0.0013number0.0006
(Punctuation
0Literal.Number.Float
)Punctuation
 Text.Whitespace
===Operator
 Text.Whitespace
'.'Literal.String.Single
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n              Text.Whitespace
thisKeyword
.Punctuation
debugName.Othervoid0.7773complex0.1031any0.0798boolean0.0076{}0.0030
(Punctuation
'dot detected!'Literal.String.Single
,Punctuation
 Text.Whitespace
fileName.Otherstring0.7653any0.1514number0.0188File0.0102{}0.0057
,Punctuation
 Text.Whitespace
frName.Otherstring0.3997any0.3161boolean0.1389number0.0445{}0.0403
,Punctuation
 Text.Whitespace
patternName.Otherstring0.8635any0.0881RegExp0.0196complex0.0077{}0.0051
,Punctuation
 Text.Whitespace
prName.Otherany0.1662string0.0637GitHubPRDSL0.0590RegExp0.0123{}0.0096
)Punctuation
\n              Text.Whitespace
breakKeyword
\n            Text.Whitespace
}Punctuation
\n\n            Text.Whitespace
// ** swallows a segment, and continue.Comment.Single
\n            Text.Whitespace
thisKeyword
.Punctuation
debugName.Othervoid0.3976any0.2602complex0.1520this0.0152boolean0.0117
(Punctuation
'globstar swallow a segment, and continue'Literal.String.Single
)Punctuation
\n            Text.Whitespace
frName.Othernumber0.7358any0.1988string0.0398boolean0.0170void0.0024
++Operator
\n          Text.Whitespace
}Punctuation
\n        Text.Whitespace
}Punctuation
\n\n        Text.Whitespace
// no match was found.Comment.Single
\n        Text.Whitespace
// However, in partial mode, we can't say this is necessarily over.Comment.Single
\n        Text.Whitespace
// If there's more *pattern* left, thenComment.Single
\n        Text.Whitespace
/* istanbul ignore if */Comment.Multiline
\n        Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
partialName.Otherany0.5799boolean0.2099number0.1122string0.0597void0.0150
)Punctuation
 Text.Whitespace
{Punctuation
\n          Text.Whitespace
// ran out of fileComment.Single
\n          Text.Whitespace
thisKeyword
.Punctuation
debugName.Othervoid0.5147any0.2908complex0.1230boolean0.0266this0.0044
(Punctuation
'\n>>> no match, partial?'Literal.String.Single
,Punctuation
 Text.Whitespace
fileName.Otherstring0.5427any0.3035File0.0265number0.0132{}0.0060
,Punctuation
 Text.Whitespace
frName.Otherany0.5535boolean0.1809string0.1341{}0.0304number0.0221
,Punctuation
 Text.Whitespace
patternName.Otherstring0.7043any0.2414RegExp0.0176complex0.0113boolean0.0079
,Punctuation
 Text.Whitespace
prName.Otherany0.3869string0.0953GitHubPRDSL0.0341ResolvedUrl0.0084User0.0073
)Punctuation
\n          Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
frName.Otherany0.5588string0.2344boolean0.1213number0.0225{}0.0187
 Text.Whitespace
===Operator
 Text.Whitespace
flName.Otherany0.5520string0.3998number0.0083boolean0.0038complex0.0024
)Punctuation
 Text.Whitespace
returnKeyword
 Text.Whitespace
trueKeyword.Constant
\n        Text.Whitespace
}Punctuation
\n        Text.Whitespace
returnKeyword
 Text.Whitespace
falseKeyword.Constant
\n      Text.Whitespace
}Punctuation
\n\n      Text.Whitespace
// something other than **Comment.Single
\n      Text.Whitespace
// non-magic patterns just have to match exactlyComment.Single
\n      Text.Whitespace
// patterns with magic have been turned into regexps.Comment.Single
\n      Text.Whitespace
varKeyword.Declaration
 Text.Whitespace
hitName.Otherany0.6608boolean0.1175string0.0949complex0.0265number0.0162
\n      Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
typeofOperator.Word
 Text.Whitespace
pName.Otherany0.7317string0.1397complex0.0809number0.0058any[]0.0024
 Text.Whitespace
===Operator
 Text.Whitespace
'string'Literal.String.Single
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
hitName.Otherany0.5471boolean0.2694string0.1258number0.0253complex0.0109
 Text.Whitespace
=Operator
 Text.Whitespace
fName.Otherstring0.5218any0.4317number0.0178boolean0.0108complex0.0037
 Text.Whitespace
===Operator
 Text.Whitespace
pName.Otherstring0.5654any0.3827number0.0223complex0.0049boolean0.0029
\n        Text.Whitespace
thisKeyword
.Punctuation
debugName.Otherany0.5489complex0.3249void0.0245boolean0.0166{}0.0086
(Punctuation
'string match'Literal.String.Single
,Punctuation
 Text.Whitespace
pName.Otherstring0.7245any0.2095number0.0280complex0.0061string[]0.0045
,Punctuation
 Text.Whitespace
fName.Otherstring0.7269any0.2255boolean0.0146number0.0126string[]0.0021
,Punctuation
 Text.Whitespace
hitName.Otherany0.4377string0.4166boolean0.0561number0.0481complex0.0082
)Punctuation
\n      Text.Whitespace
}Punctuation
 Text.Whitespace
elseKeyword
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
hitName.Otherany0.7039boolean0.1456string0.1146number0.0164complex0.0060
 Text.Whitespace
=Operator
 Text.Whitespace
fName.Otherstring0.4964any0.4864boolean0.0062number0.0031complex0.0013
.Punctuation
matchName.Otherany0.6572complex0.3193boolean0.0114string0.0069number0.0006
(Punctuation
pName.Otherstring0.3341any0.3193RegExp0.2206complex0.0477number0.0084
)Punctuation
\n        Text.Whitespace
thisKeyword
.Punctuation
debugName.Otherany0.5173complex0.3055void0.1089boolean0.0186{}0.0053
(Punctuation
'pattern match'Literal.String.Single
,Punctuation
 Text.Whitespace
pName.Otherstring0.7308any0.1953number0.0259complex0.0069string[]0.0065
,Punctuation
 Text.Whitespace
fName.Otherstring0.6664any0.2626boolean0.0272number0.0134RegExp0.0038
,Punctuation
 Text.Whitespace
hitName.Otherany0.4523string0.3206boolean0.0820number0.0619{}0.0128
)Punctuation
\n      Text.Whitespace
}Punctuation
\n\n      Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
hitName.Otherany0.4569string0.2552boolean0.1598number0.0467complex0.0177
)Punctuation
 Text.Whitespace
returnKeyword
 Text.Whitespace
falseKeyword.Constant
\n    Text.Whitespace
}Punctuation
\n\n    Text.Whitespace
// Note: ending in / means that we'll get a final ""Comment.Single
\n    Text.Whitespace
// at the end of the pattern.  This can only match aComment.Single
\n    Text.Whitespace
// corresponding "" at the end of the file.Comment.Single
\n    Text.Whitespace
// If the file ends in /, then it can only match aComment.Single
\n    Text.Whitespace
// a pattern that ends in /, unless the pattern justComment.Single
\n    Text.Whitespace
// doesn't have any more for it. But, a/b/ should *not*Comment.Single
\n    Text.Whitespace
// match "a/b/*", even though "" matches against theComment.Single
\n    Text.Whitespace
// [^/]*? pattern, except in partial mode, where it mightComment.Single
\n    Text.Whitespace
// simply not be reached yet.Comment.Single
\n    Text.Whitespace
// However, a/b/ should still satisfy a/*Comment.Single
\n\n    Text.Whitespace
// now either we fell off the end of the pattern, or we're done.Comment.Single
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
fiName.Otherany0.5084string0.4586boolean0.0149number0.0131complex0.0015
 Text.Whitespace
===Operator
 Text.Whitespace
flName.Otherstring0.5919any0.3768number0.0098boolean0.0050complex0.0036
 Text.Whitespace
&&Operator
 Text.Whitespace
piName.Othernumber0.8966any0.0795string0.0170complex0.0030boolean0.0007
 Text.Whitespace
===Operator
 Text.Whitespace
plName.Otherany0.5912string0.1328complex0.0453number0.0168T0.0144
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
// ran out of pattern and filename at the same time.Comment.Single
\n      Text.Whitespace
// an exact hit!Comment.Single
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
trueKeyword.Constant
\n    Text.Whitespace
}Punctuation
 Text.Whitespace
elseKeyword
 Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
fiName.Otherstring0.5137any0.4566boolean0.0131number0.0076complex0.0011
 Text.Whitespace
===Operator
 Text.Whitespace
flName.Otherany0.5572string0.3687number0.0085complex0.0077any[]0.0046
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
// ran out of file, but still had pattern left.Comment.Single
\n      Text.Whitespace
// this is ok if we're doing the match as part ofComment.Single
\n      Text.Whitespace
// a glob fs traversal.Comment.Single
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
partialName.Otherany0.7887number0.1072string0.0378boolean0.0317complex0.0104
\n    Text.Whitespace
}Punctuation
 Text.Whitespace
elseKeyword
 Text.Whitespace
/* istanbul ignore else */Comment.Multiline
 Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
piName.Othernumber0.9409any0.0431string0.0090complex0.0036boolean0.0007
 Text.Whitespace
===Operator
 Text.Whitespace
plName.Otherany0.5631string0.1590complex0.0689number0.0206T0.0198
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
// ran out of pattern, still have file left.Comment.Single
\n      Text.Whitespace
// this is only acceptable if we're on the very lastComment.Single
\n      Text.Whitespace
// empty segment of a file with a trailing slash.Comment.Single
\n      Text.Whitespace
// a/* should match a/b/Comment.Single
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
(Punctuation
fiName.Otherstring0.5488any0.4169number0.0223boolean0.0045complex0.0009
 Text.Whitespace
===Operator
 Text.Whitespace
flName.Otherstring0.4790any0.4388number0.0678boolean0.0032complex0.0029
 Text.Whitespace
-Operator
 Text.Whitespace
1Literal.Number.Float
)Punctuation
 Text.Whitespace
&&Operator
 Text.Whitespace
(Punctuation
fileName.Otherany0.6060string0.1306{}0.0469complex0.0409string[]0.0355
[Punctuation
fiName.Otherstring0.7326any0.2023number0.0186boolean0.0177complex0.0064
]Punctuation
 Text.Whitespace
===Operator
 Text.Whitespace
''Literal.String.Single
)Punctuation
\n    Text.Whitespace
}Punctuation
\n\n    Text.Whitespace
// should be unreachable.Comment.Single
\n    Text.Whitespace
/* istanbul ignore next */Comment.Multiline
\n    Text.Whitespace
throwKeywordError0.3948any0.3821complex0.0470string0.0316{}0.0305
 Text.Whitespace
newOperator.Wordany0.5324ErrorConstructor0.1941Error0.1281string0.0946complex0.0071
 Text.Whitespace
ErrorName.ExceptionErrorConstructor1.0000Error0.0000any0.0000LogLevel.Error0.0000never0.0000
(Punctuation
'wtf?'Literal.String.Single
)Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
braceExpandName.Otherstring0.4044boolean0.3627any0.1653number0.0258complex0.0071
 Text.Whitespace
(Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
braceExpandName.Otherany0.3639string0.3171boolean0.1826complex0.0582number0.0201
(Punctuation
thisKeyword
.Punctuation
patternName.Otherstring0.8947any0.0803complex0.0077RegExp0.0064number0.0022
,Punctuation
 Text.Whitespace
thisKeyword
.Punctuation
optionsName.Otherany0.1257Options0.0791ConnectionOptions0.0491complex0.0326{}0.0229
)Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
parseName.Othercomplex0.0961any0.0550boolean0.0250void0.0185any[]0.0179
 Text.Whitespace
(Punctuation
patternName.Otherstring0.8914any0.0782RegExp0.0113complex0.0059number0.0023
,Punctuation
 Text.Whitespace
isSubName.Otherboolean0.4304string0.3661any0.1167number0.0549RegExp0.0086
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
assertValidPatternName.Otherstring0.4277boolean0.3423any0.1396complex0.0331number0.0229
(Punctuation
patternName.Otherstring0.8123any0.1099RegExp0.0256complex0.0254{}0.0056
)Punctuation
\n\n    Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
optionsName.Otherany0.3769complex0.0601Options0.0364{}0.0249ConnectionOptions0.0228
 Text.Whitespace
=Operator
 Text.Whitespace
thisKeyword
.Punctuation
optionsName.Otherany0.1930ConnectionOptions0.0908Options0.0640complex0.0330{}0.0153
\n\n    Text.Whitespace
// shortcutsComment.Single
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
patternName.Otherstring0.7086any0.2109complex0.0361RegExp0.0276{}0.0035
 Text.Whitespace
===Operator
 Text.Whitespace
'**'Literal.String.Single
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
optionsName.Otherany0.2061complex0.0781Options0.0440ConnectionOptions0.0202{}0.0196
.Punctuation
noglobstarName.Otherboolean0.9532any0.0315string0.0049number0.0043complex0.0034
)Punctuation
\n        Text.Whitespace
returnKeyword
 Text.Whitespace
GLOBSTARName.Otherstring0.5105any0.2753boolean0.1493number0.0423RegExp0.0065
\n      Text.Whitespace
elseKeyword
\n        Text.Whitespace
patternName.Otherstring0.6373any0.2765RegExp0.0610complex0.0093boolean0.0045
 Text.Whitespace
=Operator
 Text.Whitespace
'*'Literal.String.Single
\n    Text.Whitespace
}Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
patternName.Otherstring0.5377any0.3391complex0.0789RegExp0.0215boolean0.0100
 Text.Whitespace
===Operator
 Text.Whitespace
''Literal.String.Single
)Punctuation
 Text.Whitespace
returnKeyword
 Text.Whitespace
''Literal.String.Single
\n\n    Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
reName.OtherRegExp0.8354string0.1257any0.0228boolean0.0043complex0.0023
 Text.Whitespace
=Operator
 Text.Whitespace
''Literal.String.Single
\n    Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
hasMagicName.Otherboolean0.9759number0.0106any0.0053complex0.0023false0.0020
 Text.Whitespace
=Operator
 Text.Whitespace
!Operator
!Operator
optionsName.Otherany0.5252complex0.2978Options0.0185boolean0.0183any[]0.0115
.Punctuation
nocaseName.Otherboolean0.7086any0.2299number0.0395complex0.0140string0.0018
\n    Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
escapingName.Otherboolean0.9942any0.0018number0.0013false0.0007true0.0005
 Text.Whitespace
=Operator
 Text.Whitespace
falseKeyword.Constant
\n    Text.Whitespace
// ? => one single characterComment.Single
\n    Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
patternListStackName.Otherany[]0.8731string[]0.0489number[]0.0313any0.0095complex0.0065
 Text.Whitespace
=Operator
 Text.Whitespace
[Punctuation
]Punctuation
\n    Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
negativeListsName.Otherany[]0.9252string[]0.0267number[]0.0194any0.0058complex0.0028
 Text.Whitespace
=Operator
 Text.Whitespace
[Punctuation
]Punctuation
\n    Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
stateCharName.Othernumber0.5161boolean0.3307any0.0873string0.0456complex0.0044
\n    Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
inClassName.Otherboolean0.9845number0.0083any0.0035string0.0017false0.0005
 Text.Whitespace
=Operator
 Text.Whitespace
falseKeyword.Constant
\n    Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
reClassStartName.Othernumber0.9820any0.0112string0.0040boolean0.0019complex0.0004
 Text.Whitespace
=Operator
 Text.Whitespace
-Operator
1Literal.Number.Float
\n    Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
classStartName.Othernumber0.9837any0.0107string0.0039boolean0.0010complex0.0004
 Text.Whitespace
=Operator
 Text.Whitespace
-Operator
1Literal.Number.Float
\n    Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
csName.Otherstring0.3348number0.1785any0.0835boolean0.0672string[]0.0454
\n    Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
plName.Otherany0.6014string0.0909number0.0718complex0.0668Element0.0060
\n    Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
spName.Otherstring[]0.3095number0.1798string0.0590complex0.0544number[]0.0530
\n    Text.Whitespace
// . and .. never match anything that doesn't start with .,Comment.Single
\n    Text.Whitespace
// even when options.dot is set.Comment.Single
\n    Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
patternStartName.Otherstring0.7552any0.1071number0.0637boolean0.0620complex0.0043
 Text.Whitespace
=Operator
 Text.Whitespace
patternName.Otherstring0.9609any0.0310RegExp0.0023complex0.0020number0.0017
.Punctuation
charAtName.Otherstring0.9296any0.0648complex0.0027boolean0.0014number0.0006
(Punctuation
0Literal.Number.Float
)Punctuation
 Text.Whitespace
===Operator
 Text.Whitespace
'.'Literal.String.Single
 Text.Whitespace
?Operator
 Text.Whitespace
''Literal.String.Single
 Text.Whitespace
// anythingComment.Single
\n    Text.Whitespace
// not (start or / followed by . or .. followed by / or end)Comment.Single
\n    Text.Whitespace
:Operator
 Text.Whitespace
optionsName.Othercomplex0.1358any0.1110ConnectionOptions0.0237{}0.0236Options0.0233
.Punctuation
dotName.Otherboolean0.8317string0.0813any0.0533number0.0201complex0.0102
 Text.Whitespace
?Operator
 Text.Whitespace
'(?!(?:^|\\\/)\\.{1,2}(?:$|\\\/))'Literal.String.Single
\n    Text.Whitespace
:Operator
 Text.Whitespace
'(?!\\.)'Literal.String.Single
\n\n    Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
clearStateCharName.Othercomplex0.2207void0.1788boolean0.1248string0.1199string[]0.0593
 Text.Whitespace
=Operator
 Text.Whitespace
(Punctuation
)Punctuation
 Text.Whitespace
=>Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
stateCharName.Otherboolean0.7224string0.1564any0.0809number0.0239complex0.0062
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
// we had some state-tracking characterComment.Single
\n        Text.Whitespace
// that wasn't consumed by this pass.Comment.Single
\n        Text.Whitespace
switchKeyword
 Text.Whitespace
(Punctuation
stateCharName.Otherstring0.8188any0.1065boolean0.0414number0.0248complex0.0027
)Punctuation
 Text.Whitespace
{Punctuation
\n          Text.Whitespace
caseKeyword
 Text.Whitespace
'*'Literal.String.Single
:Operator
\n            Text.Whitespace
reName.Otherstring0.7679RegExp0.1409any0.0532number0.0133boolean0.0099
 Text.Whitespace
+=Operator
 Text.Whitespace
starName.Otherstring0.6620any0.1316number0.0941boolean0.0851RegExp0.0080
\n            Text.Whitespace
hasMagicName.Otherboolean0.9920number0.0026any0.0021false0.0010string0.0007
 Text.Whitespace
=Operator
 Text.Whitespace
trueKeyword.Constant
\n          Text.Whitespace
breakKeyword
\n          Text.Whitespace
caseKeyword
 Text.Whitespace
'?'Literal.String.Single
:Operator
\n            Text.Whitespace
reName.Otherstring0.7143RegExp0.1081any0.0612boolean0.0528number0.0331
 Text.Whitespace
+=Operator
 Text.Whitespace
qmarkName.Otherboolean0.3837string0.3527number0.1339any0.1150RegExp0.0042
\n            Text.Whitespace
hasMagicName.Otherboolean0.9821number0.0066any0.0043false0.0020string0.0015
 Text.Whitespace
=Operator
 Text.Whitespace
trueKeyword.Constant
\n          Text.Whitespace
breakKeyword
\n          Text.Whitespace
defaultName.Other
:Operator
\n            Text.Whitespace
reKeyword.Typestring0.6440RegExp0.2108any0.0880boolean0.0226complex0.0125
 Text.Whitespace
+=Operator
 Text.Whitespace
'\\'Literal.String.Single
 Text.Whitespace
+Operator
 Text.Whitespace
stateCharName.Otherstring0.4507any0.3482number0.1386boolean0.0388string[]0.0053
\n          Text.Whitespace
breakKeyword
\n        Text.Whitespace
}Punctuation
\n        Text.Whitespace
thisKeyword
.Punctuation
debugName.Othervoid0.4427complex0.2461any0.1630boolean0.0979{}0.0064
(Punctuation
'clearStateChar %j %j'Literal.String.Single
,Punctuation
 Text.Whitespace
stateCharName.Otherstring0.4264boolean0.3084number0.1252any0.1078RegExp0.0099
,Punctuation
 Text.Whitespace
reName.OtherRegExp0.7300string0.1236any0.0857boolean0.0226complex0.0086
)Punctuation
\n        Text.Whitespace
stateCharName.Otherboolean0.9845any0.0072number0.0036string0.0029false0.0005
 Text.Whitespace
=Operator
 Text.Whitespace
falseKeyword.Constant
\n      Text.Whitespace
}Punctuation
\n    Text.Whitespace
}Punctuation
\n\n    Text.Whitespace
forKeyword
 Text.Whitespace
(Punctuation
letKeyword.Declaration
 Text.Whitespace
iName.Othernumber0.9966any0.0022string0.0009boolean0.0001complex0.0000
 Text.Whitespace
=Operator
 Text.Whitespace
0Literal.Number.Float
,Punctuation
 Text.Whitespace
cName.Otherstring0.7863any0.1353number0.0573boolean0.0136complex0.0016
;Punctuation
 Text.Whitespace
(Punctuation
iName.Othernumber0.9339any0.0551string0.0095boolean0.0006complex0.0003
 Text.Whitespace
<Operator
 Text.Whitespace
patternName.Otherstring0.7651any0.1832string[]0.0143complex0.0101any[]0.0100
.Punctuation
lengthName.Othernumber0.9118any0.0837string0.0037boolean0.0003complex0.0002
)Punctuation
 Text.Whitespace
&&Operator
 Text.Whitespace
(Punctuation
cName.Otherstring0.9034any0.0864number0.0045boolean0.0037complex0.0008
 Text.Whitespace
=Operator
 Text.Whitespace
patternName.Otherstring0.9138any0.0794RegExp0.0026complex0.0017number0.0010
.Punctuation
charAtName.Otherstring0.9414any0.0559complex0.0010boolean0.0007number0.0005
(Punctuation
iName.Othernumber0.9270any0.0606string0.0112boolean0.0004complex0.0002
)Punctuation
)Punctuation
;Punctuation
 Text.Whitespace
iName.Othernumber0.9397any0.0579string0.0016boolean0.0004void0.0002
++Operator
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
thisKeyword
.Punctuation
debugName.Othervoid0.6326complex0.1856any0.1067boolean0.0508{}0.0040
(Punctuation
'%s\t%s %s %j'Literal.String.Single
,Punctuation
 Text.Whitespace
patternName.Otherstring0.8020any0.1551RegExp0.0116complex0.0090boolean0.0071
,Punctuation
 Text.Whitespace
iName.Othernumber0.9657any0.0272string0.0053boolean0.0012complex0.0002
,Punctuation
 Text.Whitespace
reName.OtherRegExp0.4739string0.2142any0.1812boolean0.0456complex0.0367
,Punctuation
 Text.Whitespace
cName.Otherstring0.8489any0.0789boolean0.0408number0.0118RegExp0.0094
)Punctuation
\n\n      Text.Whitespace
// skip over any that are escaped.Comment.Single
\n      Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
escapingName.Otherboolean0.7357string0.1245any0.0975number0.0239RegExp0.0065
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
/* istanbul ignore next - completely not allowed, even escaped. */Comment.Multiline
\n        Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
cName.Otherstring0.7996any0.1661boolean0.0191number0.0062complex0.0041
 Text.Whitespace
===Operator
 Text.Whitespace
'/'Literal.String.Single
)Punctuation
 Text.Whitespace
{Punctuation
\n          Text.Whitespace
returnKeyword
 Text.Whitespace
falseKeyword.Constant
\n        Text.Whitespace
}Punctuation
\n\n        Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
reSpecialsName.Otherany0.5409boolean0.1576string0.0951complex0.0538string[]0.0514
[Punctuation
cName.Otherstring0.9217any0.0466number0.0168boolean0.0116complex0.0011
]Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n          Text.Whitespace
reName.Otherstring0.6485RegExp0.1699any0.1205boolean0.0340number0.0124
 Text.Whitespace
+=Operator
 Text.Whitespace
'\\'Literal.String.Single
\n        Text.Whitespace
}Punctuation
\n        Text.Whitespace
reName.Otherstring0.4925boolean0.1857RegExp0.1840any0.0822number0.0204
 Text.Whitespace
+=Operator
 Text.Whitespace
cName.Otherstring0.6846any0.1506boolean0.1364number0.0223RegExp0.0015
\n        Text.Whitespace
escapingName.Otherboolean0.9357any0.0340string0.0218number0.0055complex0.0005
 Text.Whitespace
=Operator
 Text.Whitespace
falseKeyword.Constant
\n        Text.Whitespace
continueKeyword
\n      Text.Whitespace
}Punctuation
\n\n      Text.Whitespace
switchKeyword
 Text.Whitespace
(Punctuation
cName.Otherstring0.9485any0.0424number0.0048boolean0.0021complex0.0006
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
/* istanbul ignore next */Comment.Multiline
\n        Text.Whitespace
caseKeyword
 Text.Whitespace
'/'Literal.String.Single
:Operator
 Text.Whitespace
{Punctuation
\n          Text.Whitespace
// Should already be path-split by now.Comment.Single
\n          Text.Whitespace
returnKeyword
 Text.Whitespace
falseKeyword.Constant
\n        Text.Whitespace
}Punctuation
\n\n        Text.Whitespace
caseKeyword
 Text.Whitespace
'\\'Literal.String.Single
:Operator
\n          Text.Whitespace
clearStateCharName.Otherboolean0.7330string0.0893any0.0578void0.0426complex0.0264
(Punctuation
)Punctuation
\n          Text.Whitespace
escapingName.Otherboolean0.9781any0.0097false0.0021string0.0019void0.0012
 Text.Whitespace
=Operator
 Text.Whitespace
trueKeyword.Constant
\n        Text.Whitespace
continueKeyword
\n\n        Text.Whitespace
// the various stateChar valuesComment.Single
\n        Text.Whitespace
// for the "extglob" stuff.Comment.Single
\n        Text.Whitespace
caseKeyword
 Text.Whitespace
'?'Literal.String.Single
:Operator
\n        Text.Whitespace
caseKeyword
 Text.Whitespace
'*'Literal.String.Single
:Operator
\n        Text.Whitespace
caseKeyword
 Text.Whitespace
'+'Literal.String.Single
:Operator
\n        Text.Whitespace
caseKeyword
 Text.Whitespace
'@'Literal.String.Single
:Operator
\n        Text.Whitespace
caseKeyword
 Text.Whitespace
'!'Literal.String.Single
:Operator
\n          Text.Whitespace
thisKeyword
.Punctuation
debugName.Othervoid0.8028complex0.1151any0.0597boolean0.0087{}0.0015
(Punctuation
'%s\t%s %s %j <-- stateChar'Literal.String.Single
,Punctuation
 Text.Whitespace
patternName.Otherstring0.7897any0.1559RegExp0.0143complex0.0120number0.0069
,Punctuation
 Text.Whitespace
iName.Othernumber0.9683any0.0271string0.0032boolean0.0006void0.0002
,Punctuation
 Text.Whitespace
reName.OtherRegExp0.6072any0.1735string0.1075boolean0.0382complex0.0287
,Punctuation
 Text.Whitespace
cName.Otherstring0.6974any0.1987boolean0.0492number0.0159RegExp0.0140
)Punctuation
\n\n          Text.Whitespace
// all of those are literals inside a class, except thatComment.Single
\n          Text.Whitespace
// the glob [!a] means [^a] in regexpComment.Single
\n          Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
inClassName.Otherboolean0.7057any0.1486string0.0992number0.0240RegExp0.0073
)Punctuation
 Text.Whitespace
{Punctuation
\n            Text.Whitespace
thisKeyword
.Punctuation
debugName.Othervoid0.8283complex0.0808any0.0563boolean0.0215{}0.0015
(Punctuation
'  in class'Literal.String.Single
)Punctuation
\n            Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
cName.Otherstring0.8396any0.1329boolean0.0127number0.0055complex0.0036
 Text.Whitespace
===Operator
 Text.Whitespace
'!'Literal.String.Single
 Text.Whitespace
&&Operator
 Text.Whitespace
iName.Othernumber0.9117any0.0765string0.0078boolean0.0020complex0.0012
 Text.Whitespace
===Operator
 Text.Whitespace
classStartName.Othernumber0.7892any0.1368string0.0665boolean0.0052complex0.0011
 Text.Whitespace
+Operator
 Text.Whitespace
1Literal.Number.Float
)Punctuation
 Text.Whitespace
cName.Otherstring0.8937any0.0753boolean0.0130number0.0111complex0.0031
 Text.Whitespace
=Operator
 Text.Whitespace
'^'Literal.String.Single
\n            Text.Whitespace
reName.Otherstring0.6211any0.1478RegExp0.1095boolean0.0472number0.0322
 Text.Whitespace
+=Operator
 Text.Whitespace
cName.Otherstring0.8082any0.1565boolean0.0136number0.0125complex0.0020
\n            Text.Whitespace
continueKeyword
\n          Text.Whitespace
}Punctuation
\n\n          Text.Whitespace
// if we already have a stateChar, then it meansComment.Single
\n          Text.Whitespace
// that there was something like ** or +? in there.Comment.Single
\n          Text.Whitespace
// Handle the stateChar, then proceed with this one.Comment.Single
\n          Text.Whitespace
thisKeyword
.Punctuation
debugName.Othervoid0.5368complex0.2593any0.1419boolean0.0137{}0.0063
(Punctuation
'call clearStateChar %j'Literal.String.Single
,Punctuation
 Text.Whitespace
stateCharName.Otherstring0.5875any0.1714number0.1597boolean0.0576complex0.0060
)Punctuation
\n          Text.Whitespace
clearStateCharName.Otherboolean0.2200string0.1862any0.1635void0.1224number0.1125
(Punctuation
)Punctuation
\n          Text.Whitespace
stateCharName.Otherstring0.4894any0.2744number0.1112boolean0.1006complex0.0076
 Text.Whitespace
=Operator
 Text.Whitespace
cName.Otherstring0.7070any0.2418number0.0171boolean0.0167complex0.0036
\n          Text.Whitespace
// if extglob is disabled, then +(asdf|foo) isn't a thing.Comment.Single
\n          Text.Whitespace
// just clear the statechar *now*, rather than even diving intoComment.Single
\n          Text.Whitespace
// the patternList stuff.Comment.Single
\n          Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
optionsName.Otherany0.4938complex0.3027{}0.0158Options0.0144any[]0.0106
.Punctuation
noextName.Otherboolean0.5970complex0.1368any0.0890number0.0849void0.0273
)Punctuation
 Text.Whitespace
clearStateCharName.Othervoid0.7133boolean0.1349complex0.0530any0.0346string0.0305
(Punctuation
)Punctuation
\n        Text.Whitespace
continueKeyword
\n\n        Text.Whitespace
caseKeyword
 Text.Whitespace
'('Literal.String.Single
:Operator
\n          Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
inClassName.Otherboolean0.6865any0.1420string0.1070number0.0476complex0.0059
)Punctuation
 Text.Whitespace
{Punctuation
\n            Text.Whitespace
reName.Otherstring0.5656RegExp0.2109any0.1416boolean0.0367complex0.0218
 Text.Whitespace
+=Operator
 Text.Whitespace
'('Literal.String.Single
\n            Text.Whitespace
continueKeyword
\n          Text.Whitespace
}Punctuation
\n\n          Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
stateCharName.Otherboolean0.6811string0.1694any0.0998number0.0328complex0.0041
)Punctuation
 Text.Whitespace
{Punctuation
\n            Text.Whitespace
reName.Otherstring0.6238RegExp0.2210any0.0984boolean0.0275complex0.0113
 Text.Whitespace
+=Operator
 Text.Whitespace
'\\('Literal.String.Single
\n            Text.Whitespace
continueKeyword
\n          Text.Whitespace
}Punctuation
\n\n          Text.Whitespace
patternListStackName.Otherany[]0.5259any0.1354complex0.1117string[]0.0865number[]0.0276
.Punctuation
pushName.Othernumber0.9767any0.0188string0.0016boolean0.0009void0.0008
(Punctuation
{Punctuation
\n            Text.Whitespace
typeKeyword.Reserved
:Operator
 Text.Whitespace
stateCharName.Otherstring0.7285any0.1643number0.0602boolean0.0200complex0.0068
,Punctuation
\n            Text.Whitespace
startName.Othernumber0.9624any0.0289string0.0068boolean0.0005void0.0004
:Operator
 Text.Whitespace
iKeyword.Typenumber0.9407any0.0538string0.0045boolean0.0003void0.0002
 Text.Whitespace
-Operator
 Text.Whitespace
1Literal.Number.Float
,Punctuation
\n            Text.Whitespace
reStartName.Otherstring0.3762any0.3523number0.1937boolean0.0383complex0.0095
:Operator
 Text.Whitespace
re.lengthKeyword.Type
,Punctuation
\n            Text.Whitespace
openName.Otherstring0.5936any0.3922number0.0066boolean0.0021void0.0014
:Operator
 Text.Whitespace
plTypesKeyword.Typeany0.7252complex0.1130{}0.0710any[]0.0211string0.0204
[Punctuation
stateCharName.Otherstring0.6308number0.2721any0.0878boolean0.0024complex0.0015
]Punctuation
.Punctuation
openName.Otherstring0.6495any0.3220number0.0125void0.0061boolean0.0051
,Punctuation
\n            Text.Whitespace
closeName.Otherstring0.9011any0.0889number0.0066boolean0.0008void0.0007
:Operator
 Text.Whitespace
plTypesKeyword.Typeany0.6103complex0.1896{}0.0789any[]0.0319string[]0.0293
[Punctuation
stateCharName.Otherstring0.6974number0.2346any0.0560boolean0.0027complex0.0026
]Punctuation
.Punctuation
closeName.Otherstring0.5202any0.4621number0.0070boolean0.0041complex0.0024
\n          Text.Whitespace
}Punctuation
)Punctuation
\n          Text.Whitespace
// negation is (?:(?!js)[^/]*)Comment.Single
\n          Text.Whitespace
reName.Otherstring0.7175any0.1593RegExp0.0616boolean0.0304complex0.0106
 Text.Whitespace
+=Operator
 Text.Whitespace
stateCharName.Otherstring0.9250any0.0565number0.0070boolean0.0066RegExp0.0027
 Text.Whitespace
===Operator
 Text.Whitespace
'!'Literal.String.Single
 Text.Whitespace
?Operator
 Text.Whitespace
'(?:(?!(?:'Literal.String.Single
 Text.Whitespace
:Operator
 Text.Whitespace
'(?:'Literal.String.Single
\n          Text.Whitespace
thisKeyword
.Punctuation
debugName.Othercomplex0.5832void0.1987any0.1538boolean0.0240{}0.0061
(Punctuation
'plType %j %j'Literal.String.Single
,Punctuation
 Text.Whitespace
stateCharName.Otherstring0.4347boolean0.2393number0.1616any0.1402RegExp0.0053
,Punctuation
 Text.Whitespace
reName.OtherRegExp0.5376string0.2129any0.1552complex0.0264boolean0.0245
)Punctuation
\n          Text.Whitespace
stateCharName.Otherboolean0.9563any0.0246string0.0068number0.0054false0.0014
 Text.Whitespace
=Operator
 Text.Whitespace
falseKeyword.Constant
\n        Text.Whitespace
continueKeyword
\n\n        Text.Whitespace
caseKeyword
 Text.Whitespace
')'Literal.String.Single
:Operator
\n          Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
inClassName.Otherboolean0.3349any0.3034string0.2279number0.0953string[]0.0091
 Text.Whitespace
||Operator
 Text.Whitespace
!Operator
patternListStackName.Otherstring[]0.4042any0.2546string0.1508any[]0.1009boolean0.0253
.Punctuation
lengthName.Othernumber0.8713any0.1243string0.0025complex0.0007boolean0.0007
)Punctuation
 Text.Whitespace
{Punctuation
\n            Text.Whitespace
reName.Otherstring0.6699RegExp0.1670any0.1101boolean0.0233complex0.0133
 Text.Whitespace
+=Operator
 Text.Whitespace
'\\)'Literal.String.Single
\n            Text.Whitespace
continueKeyword
\n          Text.Whitespace
}Punctuation
\n\n          Text.Whitespace
clearStateCharName.Otherboolean0.5917void0.1250any0.0789complex0.0480string0.0478
(Punctuation
)Punctuation
\n          Text.Whitespace
hasMagicName.Otherboolean0.9868any0.0040number0.0025complex0.0018false0.0017
 Text.Whitespace
=Operator
 Text.Whitespace
trueKeyword.Constant
\n          Text.Whitespace
plName.Otherany0.7054complex0.1638string0.0626any[]0.0236number0.0103
 Text.Whitespace
=Operator
 Text.Whitespace
patternListStackName.Otherstring[]0.4193any0.2330any[]0.2050complex0.0900string0.0141
.Punctuation
popName.Otherany0.6784complex0.1959string0.0703number0.0132any[]0.0067
(Punctuation
)Punctuation
\n          Text.Whitespace
// negation is (?:(?!js)[^/]*)Comment.Single
\n          Text.Whitespace
// The others are (?:<pattern>)<type>Comment.Single
\n          Text.Whitespace
reName.Otherstring0.4622any0.3661complex0.0631boolean0.0375RegExp0.0250
 Text.Whitespace
+=Operator
 Text.Whitespace
plName.Otherany0.6592complex0.2691string0.0338T0.0079this0.0043
.Punctuation
closeName.Otherstring0.6170any0.3713complex0.0032number0.0025boolean0.0015
\n          Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
plName.Otherany0.7893complex0.1595string0.0175T0.0056this0.0048
.Punctuation
typeKeyword.Reserved
 Text.Whitespace
===Operator
 Text.Whitespace
'!'Literal.String.Single
)Punctuation
 Text.Whitespace
{Punctuation
\n            Text.Whitespace
negativeListsName.Otherany[]0.6205string[]0.2151any0.0794complex0.0145number[]0.0135
.Punctuation
pushName.Othernumber0.9822any0.0144string0.0012boolean0.0007void0.0007
(Punctuation
plName.Otherany0.7210complex0.1679string0.0584Function0.0048any[]0.0047
)Punctuation
\n          Text.Whitespace
}Punctuation
\n          Text.Whitespace
plName.Otherany0.6098complex0.3485string0.0046this0.0037void0.0033
.Punctuation
reEndName.Otherany0.9276string0.0274number0.0220boolean0.0125complex0.0044
 Text.Whitespace
=Operator
 Text.Whitespace
reName.OtherRegExp0.4228any0.2345string0.1761string[]0.0702any[]0.0320
.Punctuation
lengthName.Othernumber0.5201any0.4689string0.0052complex0.0036boolean0.0011
\n        Text.Whitespace
continueKeyword
\n\n        Text.Whitespace
caseKeyword
 Text.Whitespace
'|'Literal.String.Single
:Operator
\n          Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
inClassName.Otherany0.3695boolean0.2447string0.2380number0.1007string[]0.0147
 Text.Whitespace
||Operator
 Text.Whitespace
!Operator
patternListStackName.Otherstring[]0.4284any0.2518string0.1448any[]0.0972complex0.0187
.Punctuation
lengthName.Othernumber0.8498any0.1458string0.0026complex0.0007boolean0.0006
)Punctuation
 Text.Whitespace
{Punctuation
\n            Text.Whitespace
reName.Otherstring0.6005RegExp0.1977any0.1489boolean0.0217complex0.0134
 Text.Whitespace
+=Operator
 Text.Whitespace
'\\|'Literal.String.Single
\n            Text.Whitespace
continueKeyword
\n          Text.Whitespace
}Punctuation
\n\n          Text.Whitespace
clearStateCharName.Otherstring0.4286boolean0.2175void0.1524any0.0716complex0.0374
(Punctuation
)Punctuation
\n          Text.Whitespace
reName.Otherstring0.3971RegExp0.3374any0.2093boolean0.0185complex0.0184
 Text.Whitespace
+=Operator
 Text.Whitespace
'|'Literal.String.Single
\n        Text.Whitespace
continueKeyword
\n\n        Text.Whitespace
// these are mostly the same in regexp and globComment.Single
\n        Text.Whitespace
caseKeyword
 Text.Whitespace
'['Literal.String.Single
:Operator
\n          Text.Whitespace
// swallow any state-tracking char before the [Comment.Single
\n          Text.Whitespace
clearStateCharName.Otherstring0.4298void0.1508any0.1391boolean0.1356complex0.0578
(Punctuation
)Punctuation
\n\n          Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
inClassName.Otherboolean0.5697string0.1934any0.1809number0.0398complex0.0053
)Punctuation
 Text.Whitespace
{Punctuation
\n            Text.Whitespace
reName.Otherstring0.6533any0.1502RegExp0.1414boolean0.0243complex0.0118
 Text.Whitespace
+=Operator
 Text.Whitespace
'\\'Literal.String.Single
 Text.Whitespace
+Operator
 Text.Whitespace
cName.Otherstring0.7171any0.2559number0.0147boolean0.0079complex0.0012
\n            Text.Whitespace
continueKeyword
\n          Text.Whitespace
}Punctuation
\n\n          Text.Whitespace
inClassName.Otherboolean0.9610any0.0173string0.0092number0.0085complex0.0008
 Text.Whitespace
=Operator
 Text.Whitespace
trueKeyword.Constant
\n          Text.Whitespace
classStartName.Otherboolean0.4638any0.2462string0.1482number0.1236complex0.0085
 Text.Whitespace
=Operator
 Text.Whitespace
iName.Othernumber0.8196any0.1593string0.0160boolean0.0025complex0.0016
\n          Text.Whitespace
reClassStartName.Othernumber0.4955any0.2218string0.1866boolean0.0843complex0.0070
 Text.Whitespace
=Operator
 Text.Whitespace
reName.OtherRegExp0.4345string0.2401any0.1618string[]0.0741any[]0.0289
.Punctuation
lengthName.Othernumber0.5777any0.4144string0.0047complex0.0016boolean0.0008
\n          Text.Whitespace
reName.Otherstring0.3605any0.3049RegExp0.1286number0.0890complex0.0527
 Text.Whitespace
+=Operator
 Text.Whitespace
cName.Otherstring0.7436any0.2026boolean0.0211number0.0203complex0.0050
\n        Text.Whitespace
continueKeyword
\n\n        Text.Whitespace
caseKeyword
 Text.Whitespace
']'Literal.String.Single
:Operator
\n          Text.Whitespace
//  a right bracket shall lose its specialComment.Single
\n          Text.Whitespace
//  meaning and represent itself inComment.Single
\n          Text.Whitespace
//  a bracket expression if it occursComment.Single
\n          Text.Whitespace
//  first in the list.  -- POSIX.2 2.8.3.2Comment.Single
\n          Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
iName.Othernumber0.8375any0.1377string0.0185complex0.0028boolean0.0022
 Text.Whitespace
===Operator
 Text.Whitespace
classStartName.Othernumber0.7463any0.1563string0.0892boolean0.0043complex0.0018
 Text.Whitespace
+Operator
 Text.Whitespace
1Literal.Number.Float
 Text.Whitespace
||Operator
 Text.Whitespace
!Operator
inClassName.Otherboolean0.6860string0.1539any0.1050number0.0436complex0.0033
)Punctuation
 Text.Whitespace
{Punctuation
\n            Text.Whitespace
reName.Otherstring0.6587RegExp0.1616any0.1370boolean0.0153complex0.0100
 Text.Whitespace
+=Operator
 Text.Whitespace
'\\'Literal.String.Single
 Text.Whitespace
+Operator
 Text.Whitespace
cName.Otherstring0.8708any0.1105number0.0122boolean0.0021complex0.0013
\n            Text.Whitespace
continueKeyword
\n          Text.Whitespace
}Punctuation
\n\n          Text.Whitespace
// handle the case where we left a class open.Comment.Single
\n          Text.Whitespace
// "[z-a]" is valid, equivalent to "\[z-a\]"Comment.Single
\n          Text.Whitespace
// split where the last [ was, make sure we don't haveComment.Single
\n          Text.Whitespace
// an invalid re. if so, re-walk the contents of theComment.Single
\n          Text.Whitespace
// would-be class to re-translate any characters thatComment.Single
\n          Text.Whitespace
// were passed through as-isComment.Single
\n          Text.Whitespace
// TODO: It would probably be faster to determine thisComment.Single
\n          Text.Whitespace
// without a try/catch and a new RegExp, but it's trickyComment.Single
\n          Text.Whitespace
// to do safely.  For now, this is safe and works.Comment.Single
\n          Text.Whitespace
csName.Otherstring0.9405any0.0341number0.0047boolean0.0041RegExp0.0026
 Text.Whitespace
=Operator
 Text.Whitespace
patternName.Otherstring0.8999any0.0900RegExp0.0048string[]0.0019complex0.0011
.Punctuation
substringName.Otherstring0.8200any0.1548complex0.0204number0.0022void0.0008
(Punctuation
classStartName.Othernumber0.9055any0.0770string0.0151boolean0.0014complex0.0003
 Text.Whitespace
+Operator
 Text.Whitespace
1Literal.Number.Float
,Punctuation
 Text.Whitespace
iName.Othernumber0.9419any0.0481string0.0085boolean0.0009void0.0003
)Punctuation
\n          Text.Whitespace
tryKeyword
 Text.Whitespace
{Punctuation
\n            Text.Whitespace
RegExpName.BuiltinRegExpConstructor0.9980RegExp0.0004BooleanConstructor0.0000RegExp[]0.0000Configuration0.0000
(Punctuation
'['Literal.String.Single
 Text.Whitespace
+Operator
 Text.Whitespace
csName.Otherstring0.8535any0.0908number0.0314boolean0.0041Date0.0036
 Text.Whitespace
+Operator
 Text.Whitespace
']'Literal.String.Single
)Punctuation
\n          Text.Whitespace
}Punctuation
 Text.Whitespace
catchKeyword
 Text.Whitespace
(Punctuation
erName.Otherany0.9968string0.0012boolean0.0007complex0.0006number0.0002
)Punctuation
 Text.Whitespace
{Punctuation
\n            Text.Whitespace
// not a valid class!Comment.Single
\n            Text.Whitespace
spName.Otherstring[]0.3759any0.2351number[]0.0444any[]0.0341complex0.0247
 Text.Whitespace
=Operator
 Text.Whitespace
thisKeyword
.Punctuation
parseName.Othercomplex0.1317any0.0321string[]0.0226number0.0176boolean0.0174
(Punctuation
csName.Otherstring0.5588any0.1797number0.0217RegExp0.0172boolean0.0154
,Punctuation
 Text.Whitespace
SUBPARSEName.Otherstring0.7046any0.1305boolean0.0762number0.0715RegExp0.0049
)Punctuation
\n            Text.Whitespace
reName.Otherstring0.6466any0.2462RegExp0.0800boolean0.0114number0.0062
 Text.Whitespace
=Operator
 Text.Whitespace
reName.OtherRegExp0.5527string0.2924any0.1285string[]0.0046boolean0.0025
.Punctuation
substrName.Otherstring0.7650any0.2300number0.0015complex0.0011string[]0.0010
(Punctuation
0Literal.Number.Float
,Punctuation
 Text.Whitespace
reClassStartName.Othernumber0.4083string0.3741any0.1827boolean0.0252complex0.0026
)Punctuation
 Text.Whitespace
+Operator
 Text.Whitespace
'\\['Literal.String.Single
 Text.Whitespace
+Operator
 Text.Whitespace
spName.Otherstring[]0.8708number[]0.0294any[]0.0271any0.0178complex0.0095
[Punctuation
0Literal.Number.Float
]Punctuation
 Text.Whitespace
+Operator
 Text.Whitespace
'\\]'Literal.String.Single
\n            Text.Whitespace
hasMagicName.Otherboolean0.8614any0.0701number0.0250complex0.0112string0.0104
 Text.Whitespace
=Operator
 Text.Whitespace
hasMagicName.Otherboolean0.6234any0.2935number0.0258complex0.0178string0.0157
 Text.Whitespace
||Operator
 Text.Whitespace
spName.Otherstring[]0.8778any[]0.0384number[]0.0210any0.0106complex0.0076
[Punctuation
1Literal.Number.Float
]Punctuation
\n            Text.Whitespace
inClassName.Otherboolean0.9822any0.0091string0.0030number0.0023false0.0007
 Text.Whitespace
=Operator
 Text.Whitespace
falseKeyword.Constant
\n            Text.Whitespace
continueKeyword
\n          Text.Whitespace
}Punctuation
\n\n          Text.Whitespace
// finish up the class.Comment.Single
\n          Text.Whitespace
hasMagicName.Otherboolean0.9943false0.0014any0.0014true0.0009number0.0007
 Text.Whitespace
=Operator
 Text.Whitespace
trueKeyword.Constant
\n          Text.Whitespace
inClassName.Otherboolean0.9953any0.0018false0.0008string0.0006true0.0003
 Text.Whitespace
=Operator
 Text.Whitespace
falseKeyword.Constant
\n          Text.Whitespace
reName.Otherstring0.5972any0.1621RegExp0.0936complex0.0593boolean0.0533
 Text.Whitespace
+=Operator
 Text.Whitespace
cName.Otherstring0.8223any0.1454boolean0.0190number0.0060complex0.0024
\n        Text.Whitespace
continueKeyword
\n\n        Text.Whitespace
defaultKeyword
:Operator
\n          Text.Whitespace
// swallow any state char that wasn't consumedComment.Single
\n          Text.Whitespace
clearStateCharName.Otherstring0.6319any0.2289boolean0.0603number0.0206complex0.0195
(Punctuation
)Punctuation
\n\n          Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
reSpecialsName.Otherany0.4326string0.2181complex0.0708string[]0.0629boolean0.0602
[Punctuation
cName.Otherstring0.9338any0.0406number0.0173boolean0.0055complex0.0011
]Punctuation
 Text.Whitespace
&&Operator
 Text.Whitespace
!Operator
(Punctuation
cName.Otherstring0.7612any0.2209boolean0.0047complex0.0041number0.0039
 Text.Whitespace
===Operator
 Text.Whitespace
'^'Literal.String.Single
 Text.Whitespace
&&Operator
 Text.Whitespace
inClassName.Otherstring0.4368boolean0.3560any0.1584number0.0336RegExp0.0045
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n            Text.Whitespace
reName.Otherstring0.5734RegExp0.2505any0.1424boolean0.0142number0.0078
 Text.Whitespace
+=Operator
 Text.Whitespace
'\\'Literal.String.Single
\n          Text.Whitespace
}Punctuation
\n\n          Text.Whitespace
reName.Otherstring0.8160RegExp0.1036any0.0500boolean0.0121number0.0090
 Text.Whitespace
+=Operator
 Text.Whitespace
cName.Otherstring0.8518any0.1277number0.0120boolean0.0045RegExp0.0007
\n          Text.Whitespace
breakKeyword
\n\n      Text.Whitespace
}Punctuation
 Text.Whitespace
// switchComment.Single
\n    Text.Whitespace
}Punctuation
 Text.Whitespace
// forComment.Single
\n\n    Text.Whitespace
// handle the case where we left a class open.Comment.Single
\n    Text.Whitespace
// "[abc" is valid, equivalent to "\[abc"Comment.Single
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
inClassName.Otherboolean0.4590string0.3235any0.1674number0.0300RegExp0.0044
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
// split where the last [ was, and escape itComment.Single
\n      Text.Whitespace
// this is a huge pita.  We now have to re-walkComment.Single
\n      Text.Whitespace
// the contents of the would-be class to re-translateComment.Single
\n      Text.Whitespace
// any characters that were passed through as-isComment.Single
\n      Text.Whitespace
csName.Otherstring0.9189any0.0395string[]0.0052boolean0.0047RegExp0.0043
 Text.Whitespace
=Operator
 Text.Whitespace
patternName.Otherstring0.8954any0.0969RegExp0.0030complex0.0015string[]0.0010
.Punctuation
substrName.Otherstring0.8949any0.1012complex0.0016number0.0011string[]0.0005
(Punctuation
classStartName.Othernumber0.7392any0.1659string0.0908boolean0.0020complex0.0012
 Text.Whitespace
+Operator
 Text.Whitespace
1Literal.Number.Float
)Punctuation
\n      Text.Whitespace
spName.Otherstring[]0.4016any0.3470string0.0402number[]0.0338complex0.0329
 Text.Whitespace
=Operator
 Text.Whitespace
thisKeyword
.Punctuation
parseName.Othercomplex0.2398any0.0540number0.0430string[]0.0300any[]0.0263
(Punctuation
csName.Otherstring0.6996any0.1132number0.0316boolean0.0134string[]0.0102
,Punctuation
 Text.Whitespace
SUBPARSEName.Otherstring0.7324any0.1079number0.1042boolean0.0458RegExp0.0022
)Punctuation
\n      Text.Whitespace
reName.Otherstring0.7041any0.2008RegExp0.0662boolean0.0110number0.0078
 Text.Whitespace
=Operator
 Text.Whitespace
reName.OtherRegExp0.5050string0.3481any0.1153string[]0.0068boolean0.0028
.Punctuation
substrName.Otherstring0.7968any0.1977number0.0019string[]0.0012complex0.0011
(Punctuation
0Literal.Number.Float
,Punctuation
 Text.Whitespace
reClassStartName.Othernumber0.4571string0.3288any0.1836boolean0.0206string[]0.0026
)Punctuation
 Text.Whitespace
+Operator
 Text.Whitespace
'\\['Literal.String.Single
 Text.Whitespace
+Operator
 Text.Whitespace
spName.Otherstring[]0.8550any[]0.0262number[]0.0217any0.0150complex0.0066
[Punctuation
0Literal.Number.Float
]Punctuation
\n      Text.Whitespace
hasMagicName.Otherboolean0.9091any0.0347number0.0220complex0.0067string0.0045
 Text.Whitespace
=Operator
 Text.Whitespace
hasMagicName.Otherboolean0.5956any0.3175number0.0259complex0.0167string0.0107
 Text.Whitespace
||Operator
 Text.Whitespace
spName.Otherstring[]0.8806any[]0.0328number[]0.0135complex0.0090any0.0089
[Punctuation
1Literal.Number.Float
]Punctuation
\n    Text.Whitespace
}Punctuation
\n\n    Text.Whitespace
// handle the case where we had a +( thing at the *end*Comment.Single
\n    Text.Whitespace
// of the pattern.Comment.Single
\n    Text.Whitespace
// each pattern list stack adds 3 chars, and we need to go throughComment.Single
\n    Text.Whitespace
// and escape any | chars that were passed through as-is for the regexp.Comment.Single
\n    Text.Whitespace
// Go through and escape them, taking care not to double-escape anyComment.Single
\n    Text.Whitespace
// | chars that were already escaped.Comment.Single
\n    Text.Whitespace
forKeyword
 Text.Whitespace
(Punctuation
plName.Otherany0.9316string0.0346complex0.0099any[]0.0093string[]0.0038
 Text.Whitespace
=Operator
 Text.Whitespace
patternListStackName.Otherany0.5844string[]0.2059any[]0.1310string0.0183complex0.0117
.Punctuation
popName.Otherany0.8463string0.1092complex0.0156number0.0054any[]0.0049
(Punctuation
)Punctuation
;Punctuation
 Text.Whitespace
plName.Otherany0.8118complex0.0662string0.0547any[]0.0089this0.0066
;Punctuation
 Text.Whitespace
plName.Otherany0.7542string0.1644complex0.0487any[]0.0078string[]0.0029
 Text.Whitespace
=Operator
 Text.Whitespace
patternListStackName.Otherany0.5398string[]0.2035any[]0.1031complex0.0851string0.0334
.Punctuation
popName.Otherany0.8384string0.0969complex0.0433number0.0038any[]0.0038
(Punctuation
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
tailName.Otherstring0.6071any0.3719any[]0.0052string[]0.0045number0.0031
\n      Text.Whitespace
tailName.Otherstring0.6230any0.3331string[]0.0145any[]0.0136number0.0059
 Text.Whitespace
=Operator
 Text.Whitespace
reName.OtherRegExp0.4156any0.2092string0.2047string[]0.0850complex0.0267
.Punctuation
sliceName.Otherstring0.6412any0.2604string[]0.0462complex0.0179any[]0.0172
(Punctuation
plName.Otherany0.5937complex0.3699string0.0071this0.0032T0.0026
.Punctuation
reStartName.Otherany0.6917string0.2104number0.0830complex0.0099boolean0.0018
 Text.Whitespace
+Operator
 Text.Whitespace
plName.Otherany0.6195complex0.2987string0.0213any[]0.0098this0.0091
.Punctuation
openName.Otherstring0.7476any0.2447string[]0.0022complex0.0014number0.0009
.Punctuation
lengthName.Otherany0.6837number0.3097string0.0046complex0.0011void0.0002
)Punctuation
\n      Text.Whitespace
thisKeyword
.Punctuation
debugName.Othercomplex0.3719void0.3056any0.2862boolean0.0053{}0.0021
(Punctuation
'setting tail'Literal.String.Single
,Punctuation
 Text.Whitespace
reName.OtherRegExp0.4503string0.3114any0.1685complex0.0283boolean0.0107
,Punctuation
 Text.Whitespace
plName.Otherany0.6735string0.1462complex0.1417any[]0.0049T0.0029
)Punctuation
\n      Text.Whitespace
// maybe some even number of \, then maybe 1 \, followed by a |Comment.Single
\n      Text.Whitespace
tailName.Otherstring0.7850any0.1979number0.0120complex0.0013string[]0.0011
 Text.Whitespace
=Operator
 Text.Whitespace
tailName.Otherstring0.8390any0.1554number0.0028string[]0.0007complex0.0006
.Punctuation
replaceName.Othercomplex0.8519any0.1449string0.0013number0.0003boolean0.0003
(Punctuation
/((?:\\{2}){0,64})(\\?)\|/gLiteral.String.Regex
,Punctuation
 Text.Whitespace
(Punctuation
_Name.Otherany0.5099string0.4507complex0.0104number0.0091string[]0.0063
,Punctuation
 Text.Whitespace
$1Name.Other
,Punctuation
 Text.Whitespace
$2Name.Other
)Punctuation
 Text.Whitespace
=>Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
/* istanbul ignore else - should already be done */Comment.Multiline
\n        Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
$2Name.Other
)Punctuation
 Text.Whitespace
{Punctuation
\n          Text.Whitespace
// the | isn't already escaped, so escape it.Comment.Single
\n          Text.Whitespace
$2Name.Other
 Text.Whitespace
=Operator
 Text.Whitespace
'\\'Literal.String.Single
\n        Text.Whitespace
}Punctuation
\n\n        Text.Whitespace
// need to escape all those slashes *again*, without escaping theComment.Single
\n        Text.Whitespace
// one that we need for escaping the | character.  As it works out,Comment.Single
\n        Text.Whitespace
// escaping an even number of slashes can be done by simply repeatingComment.Single
\n        Text.Whitespace
// it exactly after itself.  That's why this trick works.Comment.Single
\n        Text.Whitespace
//Comment.Single
\n        Text.Whitespace
// I am sorry that you have to see this.Comment.Single
\n        Text.Whitespace
returnKeyword
 Text.Whitespace
$1Name.Other
 Text.Whitespace
+Operator
 Text.Whitespace
$1Name.Other
 Text.Whitespace
+Operator
 Text.Whitespace
$2Name.Other
 Text.Whitespace
+Operator
 Text.Whitespace
'|'Literal.String.Single
\n      Text.Whitespace
}Punctuation
)Punctuation
\n\n      Text.Whitespace
thisKeyword
.Punctuation
debugName.Othercomplex0.3376any0.3294void0.2798boolean0.0086tConsoleFn0.0026
(Punctuation
'tail=%j\n   %s'Literal.String.Single
,Punctuation
 Text.Whitespace
tailName.Otherstring0.7722any0.1878any[]0.0104string[]0.0092number0.0079
,Punctuation
 Text.Whitespace
tailName.Otherstring0.7340any0.2205any[]0.0138string[]0.0098number0.0078
,Punctuation
 Text.Whitespace
plName.Otherany0.7887string0.1186complex0.0702any[]0.0037number0.0016
,Punctuation
 Text.Whitespace
reName.OtherRegExp0.5854any0.1787string0.1588complex0.0321boolean0.0113
)Punctuation
\n      Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
tName.Otherany0.7324string0.2160boolean0.0303complex0.0071number0.0041
 Text.Whitespace
=Operator
 Text.Whitespace
plName.Otherany0.6913complex0.2476string0.0180T0.0059this0.0040
.Punctuation
typeKeyword.Reserved
 Text.Whitespace
===Operator
 Text.Whitespace
'*'Literal.String.Single
 Text.Whitespace
?Operator
 Text.Whitespace
starName.Otherstring0.6879any0.2486boolean0.0394number0.0121RegExp0.0030
\n        Text.Whitespace
:Operator
 Text.Whitespace
pl.typeKeyword.Type
 Text.Whitespace
===Operator
 Text.Whitespace
'?'Literal.String.Single
 Text.Whitespace
?Operator
 Text.Whitespace
qmarkName.Otherstring0.9467any0.0489number0.0015RegExp0.0009boolean0.0007
\n        Text.Whitespace
:Operator
 Text.Whitespace
'\\'Literal.String.Single
 Text.Whitespace
+Operator
 Text.Whitespace
plName.Otherany0.8113complex0.1566string0.0059T0.0042Function0.0019
.Punctuation
typeKeyword.Reserved
\n\n      Text.Whitespace
hasMagicName.Otherboolean0.5058any0.4534complex0.0206string0.0067number0.0038
 Text.Whitespace
=Operator
 Text.Whitespace
trueKeyword.Constant
\n      Text.Whitespace
reName.Otherany0.4417string0.2384RegExp0.1855string[]0.0561complex0.0302
 Text.Whitespace
=Operator
 Text.Whitespace
reName.OtherRegExp0.3677any0.2873string0.2118string[]0.0577any[]0.0237
.Punctuation
sliceName.Otherstring0.4351any0.3810string[]0.0889any[]0.0415complex0.0321
(Punctuation
0Literal.Number.Float
,Punctuation
 Text.Whitespace
plName.Otherany0.6847complex0.2940string0.0043T0.0019any[]0.0014
.Punctuation
reStartName.Otherany0.7594string0.1541number0.0513complex0.0135boolean0.0096
)Punctuation
 Text.Whitespace
+Operator
 Text.Whitespace
tName.Otherany0.8366string0.1462number0.0131complex0.0012{}0.0008
 Text.Whitespace
+Operator
 Text.Whitespace
'\\('Literal.String.Single
 Text.Whitespace
+Operator
 Text.Whitespace
tailName.Otherstring0.6542any0.3075number0.0134any[]0.0099string[]0.0048
\n    Text.Whitespace
}Punctuation
\n\n    Text.Whitespace
// handle trailing things that only matter at the very end.Comment.Single
\n    Text.Whitespace
clearStateCharName.Otherstring0.4070any0.2476boolean0.1124void0.0913complex0.0621
(Punctuation
)Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
escapingName.Otherboolean0.4479any0.3051string0.1913number0.0254complex0.0094
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
// trailing \\Comment.Single
\n      Text.Whitespace
reName.Otherstring0.6123RegExp0.2351any0.1309complex0.0065boolean0.0057
 Text.Whitespace
+=Operator
 Text.Whitespace
'\\\\'Literal.String.Single
\n    Text.Whitespace
}Punctuation
\n\n    Text.Whitespace
// only need to apply the nodot start if the re starts withComment.Single
\n    Text.Whitespace
// something that could conceivably capture a dotComment.Single
\n    Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
addPatternStartName.Otherany0.5227string0.4123boolean0.0261number0.0156complex0.0071
 Text.Whitespace
=Operator
 Text.Whitespace
addPatternStartSetName.Otherany0.4448complex0.3565{}0.0707string0.0359boolean0.0212
[Punctuation
reName.Otherstring0.6826RegExp0.1716any0.1272complex0.0056string[]0.0041
.Punctuation
charAtName.Otherstring0.8589any0.1385complex0.0008boolean0.0007number0.0005
(Punctuation
0Literal.Number.Float
)Punctuation
]Punctuation
\n\n    Text.Whitespace
// Hack to work around lack of negative lookbehind in JSComment.Single
\n    Text.Whitespace
// A pattern like: *.!(x).!(y|z) needs to ensure that a nameComment.Single
\n    Text.Whitespace
// like 'a.xyz.yz' doesn't match.  So, the first negativeComment.Single
\n    Text.Whitespace
// lookahead, has to look ALL the way ahead, to the end ofComment.Single
\n    Text.Whitespace
// the pattern.Comment.Single
\n    Text.Whitespace
forKeyword
 Text.Whitespace
(Punctuation
letKeyword.Declaration
 Text.Whitespace
nName.Othernumber0.9826any0.0130string0.0033complex0.0004boolean0.0003
 Text.Whitespace
=Operator
 Text.Whitespace
negativeListsName.Otherany0.3559string[]0.2544string0.2229any[]0.0664number0.0223
.Punctuation
lengthName.Othernumber0.8640any0.1325string0.0021complex0.0008boolean0.0002
 Text.Whitespace
-Operator
 Text.Whitespace
1Literal.Number.Float
;Punctuation
 Text.Whitespace
nName.Othernumber0.9825any0.0159string0.0011complex0.0001boolean0.0001
 Text.Whitespace
>Operator
 Text.Whitespace
-Operator
1Literal.Number.Float
;Punctuation
 Text.Whitespace
nName.Othernumber0.9902any0.0085string0.0009boolean0.0001complex0.0001
--Operator
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
nlName.Otherany0.4821string0.4220number0.0657boolean0.0086complex0.0083
 Text.Whitespace
=Operator
 Text.Whitespace
negativeListsName.Otherany0.4749string[]0.1774complex0.1663any[]0.0562string0.0316
[Punctuation
nName.Othernumber0.9205any0.0403string0.0368complex0.0011boolean0.0003
]Punctuation
\n\n      Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
nlBeforeName.Otherstring0.4727any0.3166boolean0.0810string[]0.0522number0.0267
 Text.Whitespace
=Operator
 Text.Whitespace
reName.OtherRegExp0.5336any0.2104string0.1275string[]0.0617any[]0.0174
.Punctuation
sliceName.Otherany0.4182string0.3299string[]0.1347any[]0.0529complex0.0264
(Punctuation
0Literal.Number.Float
,Punctuation
 Text.Whitespace
nlName.Otherany0.7268complex0.1424RegExp0.0498string0.0220string[]0.0078
.Punctuation
reStartName.Otherany0.3990string0.3574number0.1596boolean0.0482complex0.0145
)Punctuation
\n      Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
nlFirstName.Otherstring0.3625any0.3466string[]0.1093boolean0.0575RegExp0.0354
 Text.Whitespace
=Operator
 Text.Whitespace
reName.OtherRegExp0.5097any0.2390string0.1119string[]0.0686any[]0.0211
.Punctuation
sliceName.Otherstring0.5141any0.3465string[]0.0556complex0.0253any[]0.0241
(Punctuation
nlName.Otherany0.7409complex0.2008string0.0124RegExp0.0111number0.0024
.Punctuation
reStartName.Otherany0.4166string0.3614number0.1787complex0.0146boolean0.0110
,Punctuation
 Text.Whitespace
nlName.Otherany0.7370complex0.1642RegExp0.0232string0.0110number0.0062
.Punctuation
reEndName.Otherany0.4744number0.4520string0.0621boolean0.0049complex0.0040
 Text.Whitespace
-Operator
 Text.Whitespace
8Literal.Number.Float
)Punctuation
\n      Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
nlAfterName.Otherstring0.5416any0.3250string[]0.0337boolean0.0298number0.0206
 Text.Whitespace
=Operator
 Text.Whitespace
reName.OtherRegExp0.4933any0.2570string0.1353string[]0.0502any[]0.0191
.Punctuation
sliceName.Otherstring0.5161any0.3394string[]0.0568any[]0.0318complex0.0212
(Punctuation
nlName.Otherany0.7842complex0.1578RegExp0.0188string0.0090any[]0.0045
.Punctuation
reEndName.Otherstring0.4299any0.3931number0.1091boolean0.0368complex0.0119
)Punctuation
\n      Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
nlLastName.Otherstring0.5097any0.3204boolean0.0624string[]0.0313RegExp0.0242
 Text.Whitespace
=Operator
 Text.Whitespace
reName.OtherRegExp0.4723any0.2688string0.1548string[]0.0510any[]0.0153
.Punctuation
sliceName.Otherstring0.5464any0.3646string[]0.0332complex0.0172any[]0.0161
(Punctuation
nlName.Otherany0.8317complex0.0943RegExp0.0098string0.0065number0.0059
.Punctuation
reEndName.Othernumber0.4818any0.4437string0.0659complex0.0037boolean0.0032
 Text.Whitespace
-Operator
 Text.Whitespace
8Literal.Number.Float
,Punctuation
 Text.Whitespace
nlName.Otherany0.8176complex0.0777RegExp0.0253number0.0198string0.0158
.Punctuation
reEndName.Othernumber0.4493any0.3693string0.1413boolean0.0294complex0.0042
)Punctuation
 Text.Whitespace
+Operator
 Text.Whitespace
nlAfterName.Otherstring0.4418any0.3202number0.2214boolean0.0083string[]0.0029
\n\n      Text.Whitespace
// Handle nested stuff like *(*.js|!(*.json)), where open parensComment.Single
\n      Text.Whitespace
// mean that we should *not* include the ) in the bit that is consideredComment.Single
\n      Text.Whitespace
// "after" the negated section.Comment.Single
\n      Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
openParensBeforeName.Otherany0.5647string0.2917string[]0.0414boolean0.0389number0.0306
 Text.Whitespace
=Operator
 Text.Whitespace
nlBeforeName.Otherstring0.6932any0.2947number0.0062boolean0.0015string[]0.0012
.Punctuation
splitName.Othercomplex0.8305any0.1650string0.0008any[]0.0008string[]0.0007
(Punctuation
'('Literal.String.Single
)Punctuation
.Punctuation
lengthName.Othernumber0.5022any0.4933string0.0024complex0.0012boolean0.0003
 Text.Whitespace
-Operator
 Text.Whitespace
1Literal.Number.Float
\n      Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
cleanAfterName.Otherany0.4715string0.2609number0.2339string[]0.0106boolean0.0080
 Text.Whitespace
=Operator
 Text.Whitespace
nlAfterName.Otherany0.5052string0.2527number0.1966string[]0.0154complex0.0080
\n      Text.Whitespace
forKeyword
 Text.Whitespace
(Punctuation
letKeyword.Declaration
 Text.Whitespace
iName.Othernumber0.9863any0.0120string0.0013boolean0.0001complex0.0001
 Text.Whitespace
=Operator
 Text.Whitespace
0Literal.Number.Float
;Punctuation
 Text.Whitespace
iName.Othernumber0.9203any0.0732string0.0048complex0.0008void0.0004
 Text.Whitespace
<Operator
 Text.Whitespace
openParensBeforeName.Othernumber0.7661any0.1427string0.0840boolean0.0034complex0.0020
;Punctuation
 Text.Whitespace
iName.Othernumber0.9434any0.0531string0.0029boolean0.0002complex0.0002
++Operator
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
cleanAfterName.Otherany0.5492string0.3797number0.0486boolean0.0180string[]0.0010
 Text.Whitespace
=Operator
 Text.Whitespace
cleanAfterName.Otherstring0.5564any0.4326number0.0075boolean0.0016complex0.0005
.Punctuation
replaceName.Othercomplex0.7542any0.2416string0.0014boolean0.0008any[]0.0004
(Punctuation
/\)[+*?]?/Literal.String.Regex
,Punctuation
 Text.Whitespace
''Literal.String.Single
)Punctuation
\n      Text.Whitespace
}Punctuation
\n      Text.Whitespace
nlAfterName.Otherboolean0.4953string0.3125any0.1372number0.0398RegExp0.0052
 Text.Whitespace
=Operator
 Text.Whitespace
cleanAfterName.Otherstring0.4815boolean0.2368any0.1958number0.0730complex0.0030
\n\n      Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
dollarName.Otherboolean0.6849string0.1761any0.1036number0.0215RegExp0.0047
 Text.Whitespace
=Operator
 Text.Whitespace
nlAfterName.Otherstring0.7470any0.1875boolean0.0377number0.0152RegExp0.0069
 Text.Whitespace
===Operator
 Text.Whitespace
''Literal.String.Single
 Text.Whitespace
&&Operator
 Text.Whitespace
isSubName.Otherstring0.5079boolean0.2501any0.1319number0.1003RegExp0.0032
 Text.Whitespace
!==Operator
 Text.Whitespace
SUBPARSEName.Otherboolean0.8418string0.0788any0.0452number0.0276complex0.0015
 Text.Whitespace
?Operator
 Text.Whitespace
'$'Literal.String.Single
 Text.Whitespace
:Operator
 Text.Whitespace
''Literal.String.Single
\n      Text.Whitespace
reName.Otherstring0.6941any0.1580RegExp0.0963boolean0.0159number0.0133
 Text.Whitespace
=Operator
 Text.Whitespace
nlBeforeName.Otherstring0.7350any0.1409number0.1064boolean0.0109RegExp0.0022
 Text.Whitespace
+Operator
 Text.Whitespace
nlFirstName.Otherstring0.7075any0.1692number0.1156boolean0.0042complex0.0013
 Text.Whitespace
+Operator
 Text.Whitespace
nlAfterName.Otherstring0.6715any0.1862number0.1345boolean0.0042complex0.0014
 Text.Whitespace
+Operator
 Text.Whitespace
dollarName.Otherstring0.6980any0.1844number0.1090boolean0.0048complex0.0015
 Text.Whitespace
+Operator
 Text.Whitespace
nlLastName.Otherstring0.6572any0.2084number0.1057boolean0.0168RegExp0.0033
\n    Text.Whitespace
}Punctuation
\n\n    Text.Whitespace
// if the re is not "" at this point, then we need to make sureComment.Single
\n    Text.Whitespace
// it doesn't match against an empty path part.Comment.Single
\n    Text.Whitespace
// Otherwise a/* will match a/, which it should not.Comment.Single
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
reName.OtherRegExp0.6798string0.1500any0.1271boolean0.0131complex0.0126
 Text.Whitespace
!==Operator
 Text.Whitespace
''Literal.String.Single
 Text.Whitespace
&&Operator
 Text.Whitespace
hasMagicName.Otherboolean0.8565any0.0984number0.0162string0.0109complex0.0068
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
reName.OtherRegExp0.6522string0.2442any0.0843boolean0.0079complex0.0033
 Text.Whitespace
=Operator
 Text.Whitespace
'(?=.)'Literal.String.Single
 Text.Whitespace
+Operator
 Text.Whitespace
reName.OtherRegExp0.5360string0.2057any0.1679complex0.0247boolean0.0225
\n    Text.Whitespace
}Punctuation
\n\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
addPatternStartName.Otherboolean0.4615string0.2488any0.1942RegExp0.0421number0.0253
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
reName.OtherRegExp0.3292any0.2810string0.2607boolean0.0630number0.0249
 Text.Whitespace
=Operator
 Text.Whitespace
patternStartName.Otherany0.3904string0.3349number0.1834boolean0.0601RegExp0.0161
 Text.Whitespace
+Operator
 Text.Whitespace
reName.OtherRegExp0.4833string0.2505any0.1757complex0.0251boolean0.0209
\n    Text.Whitespace
}Punctuation
\n\n    Text.Whitespace
// parsing just a piece of a larger pattern.Comment.Single
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
isSubName.Otherstring0.5140any0.3266boolean0.0504number0.0399complex0.0335
 Text.Whitespace
===Operator
 Text.Whitespace
SUBPARSEName.Otherstring0.7002any0.1922number0.0508boolean0.0313RegExp0.0092
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
[Punctuation
reName.OtherRegExp0.5526string0.2228any0.1430complex0.0229boolean0.0168
,Punctuation
 Text.Whitespace
hasMagicName.Otherboolean0.4419any0.4195string0.0565number0.0510complex0.0156
]Punctuation
\n    Text.Whitespace
}Punctuation
\n\n    Text.Whitespace
// skip the regexp for non-magical patternsComment.Single
\n    Text.Whitespace
// unescape anything in it, though, so that it'll beComment.Single
\n    Text.Whitespace
// an exact match against a file etc.Comment.Single
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
hasMagicName.Otherboolean0.7176any0.2026number0.0326complex0.0164string0.0098
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
globUnescapeName.Otherboolean0.4859string0.2949any0.1384complex0.0304number0.0254
(Punctuation
patternName.Otherstring0.7570any0.1488complex0.0485RegExp0.0155{}0.0075
)Punctuation
\n    Text.Whitespace
}Punctuation
\n\n    Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
flagsName.Otherstring0.4336any0.2618number0.1743complex0.0484string[]0.0349
 Text.Whitespace
=Operator
 Text.Whitespace
optionsName.Otherany0.4115complex0.2500Options0.0286{}0.0189number0.0128
.Punctuation
nocaseName.Otherboolean0.6942any0.2356number0.0292complex0.0218string0.0065
 Text.Whitespace
?Operator
 Text.Whitespace
'i'Literal.String.Single
 Text.Whitespace
:Operator
 Text.Whitespace
''Literal.String.Single
\n    Text.Whitespace
tryKeyword
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
ObjectName.BuiltinObjectConstructor0.9997any0.0001complex0.0001Object0.0000{}0.0000
.Punctuation
assignName.Othercomplex0.8702any0.0849{}0.0095boolean0.0086any[]0.0049
(Punctuation
newOperator.Wordany0.5425RegExp0.1768string0.0938complex0.0291{}0.0196
 Text.Whitespace
RegExpName.BuiltinRegExpConstructor0.9995RegExp0.0001ErrorConstructor0.0000any0.0000BooleanConstructor0.0000
(Punctuation
'^'Literal.String.Single
 Text.Whitespace
+Operator
 Text.Whitespace
reName.Otherstring0.4515RegExp0.3230any0.1736complex0.0214number0.0122
 Text.Whitespace
+Operator
 Text.Whitespace
'$'Literal.String.Single
,Punctuation
 Text.Whitespace
flagsName.Otherstring0.6111string[]0.1194any0.1139number0.0542any[]0.0392
)Punctuation
,Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
_globName.Otherstring0.7079any0.1451RegExp0.1064complex0.0136number0.0072
:Operator
 Text.Whitespace
patternKeyword.Typestring0.7631any0.1309RegExp0.0741complex0.0126{}0.0048
,Punctuation
\n        Text.Whitespace
_srcName.OtherRegExp0.3687string0.3578any0.1872boolean0.0253number0.0177
:Operator
 Text.Whitespace
reKeyword.TypeRegExp0.9291string0.0297any0.0137boolean0.0062complex0.0054
,Punctuation
\n      Text.Whitespace
}Punctuation
)Punctuation
\n    Text.Whitespace
}Punctuation
 Text.Whitespace
catchKeyword
 Text.Whitespace
(Punctuation
erName.Otherany0.9972string0.0013boolean0.0005complex0.0005number0.0001
)Punctuation
 Text.Whitespace
/* istanbul ignore next - should be impossible */Comment.Multiline
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
// If it was an invalid regular expression, then it can't matchComment.Single
\n      Text.Whitespace
// anything.  This trick looks for a character after the end ofComment.Single
\n      Text.Whitespace
// the string, which is of course impossible, except in multi-lineComment.Single
\n      Text.Whitespace
// mode, but it's not a /m regex.Comment.Single
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
newOperator.Wordany0.7445string0.0749RegExp0.0646complex0.0111{}0.0074
 Text.Whitespace
RegExpName.BuiltinRegExpConstructor0.9996RegExp0.0000ErrorConstructor0.0000any0.0000BooleanConstructor0.0000
(Punctuation
'$.'Literal.String.Single
)Punctuation
\n    Text.Whitespace
}Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
makeReName.Otherstring0.5823boolean0.1748any0.1401number0.0314RegExp0.0194
 Text.Whitespace
(Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
thisKeyword
.Punctuation
regexpName.OtherRegExp0.8337boolean0.0636false0.0181any0.0146RegExp[]0.0071
 Text.Whitespace
||Operator
 Text.Whitespace
thisKeyword
.Punctuation
regexpName.OtherRegExp0.5620boolean0.2217false0.0346any0.0241RegExp[]0.0117
 Text.Whitespace
===Operator
 Text.Whitespace
falseKeyword.Constant
)Punctuation
 Text.Whitespace
returnKeyword
 Text.Whitespace
thisKeyword
.Punctuation
regexpName.OtherRegExp0.7424boolean0.0295any0.0267string0.0146false0.0100
\n\n    Text.Whitespace
// at this point, this.set is a 2d array of partialComment.Single
\n    Text.Whitespace
// pattern strings, or "**".Comment.Single
\n    Text.Whitespace
//Comment.Single
\n    Text.Whitespace
// It's better to use .match().  This function shouldn'tComment.Single
\n    Text.Whitespace
// be used, really, but it's pretty convenient sometimes,Comment.Single
\n    Text.Whitespace
// when you just want to work with a regex.Comment.Single
\n    Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
setName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
thisKeyword
.Punctuation
setName.Other
\n\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
setName.Other
.Punctuation
lengthName.Othernumber0.5060any0.4875string0.0032complex0.0010boolean0.0008
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
thisKeyword
.Punctuation
regexpName.OtherRegExp0.4055boolean0.3390any0.0599false0.0227string0.0125
 Text.Whitespace
=Operator
 Text.Whitespace
falseKeyword.Constant
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
thisKeyword
.Punctuation
regexpName.OtherRegExp0.7685boolean0.0608any0.0297string0.0159false0.0117
\n    Text.Whitespace
}Punctuation
\n    Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
optionsName.Otherany0.2866complex0.0817ConnectionOptions0.0345RegExp0.0192any[]0.0183
 Text.Whitespace
=Operator
 Text.Whitespace
thisKeyword
.Punctuation
optionsName.Otherany0.3178ConnectionOptions0.0737complex0.0479Options0.0193number0.0148
\n\n    Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
twoStarName.Otherany0.3712boolean0.2221number0.1631string0.1225complex0.0329
 Text.Whitespace
=Operator
 Text.Whitespace
optionsName.Otherany0.5230complex0.1683Options0.0160ConnectionOptions0.0150RegExp0.0116
.Punctuation
noglobstarName.Otherboolean0.8579any0.1072complex0.0127string0.0089number0.0051
 Text.Whitespace
?Operator
 Text.Whitespace
starName.Otherstring0.3694boolean0.3400any0.1862number0.0757complex0.0078
\n      Text.Whitespace
:Operator
 Text.Whitespace
options.dotKeyword.Type
 Text.Whitespace
?Operator
 Text.Whitespace
twoStarDotName.Otherstring0.3964any0.2556boolean0.1606number0.1425string[]0.0154
\n      Text.Whitespace
:Operator
 Text.Whitespace
twoStarNoDotKeyword.Typestring0.3590any0.2529number0.1988boolean0.1370string[]0.0195
\n    Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
flagsName.Otherstring0.3130any0.2340number0.2118string[]0.1234any[]0.0436
 Text.Whitespace
=Operator
 Text.Whitespace
optionsName.Otherany0.3867complex0.3036any[]0.0206{}0.0162Options0.0144
.Punctuation
nocaseName.Otherboolean0.7326any0.2111number0.0238complex0.0204string0.0036
 Text.Whitespace
?Operator
 Text.Whitespace
'i'Literal.String.Single
 Text.Whitespace
:Operator
 Text.Whitespace
''Literal.String.Single
\n\n    Text.Whitespace
// coalesce globstars and regexpify non-globstar patternsComment.Single
\n    Text.Whitespace
// if it's the only item, then we just do one twoStarComment.Single
\n    Text.Whitespace
// if it's the first, and there are more, prepend (\/|twoStar\/)? to nextComment.Single
\n    Text.Whitespace
// if it's the last, append (\/twoStar|) to previousComment.Single
\n    Text.Whitespace
// if it's in the middle, append (\/|\/twoStar\/) to previousComment.Single
\n    Text.Whitespace
// then filter out GLOBSTAR symbolsComment.Single
\n    Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
reName.Otherany0.2322string0.1827string[]0.1498RegExp0.1160complex0.1128
 Text.Whitespace
=Operator
 Text.Whitespace
setName.Other
.Punctuation
mapName.OtherU[]0.7777any0.1192complex0.0936any[]0.0015U,...0.0004
(Punctuation
patternName.Otherany0.5564string0.3939complex0.0176RegExp0.0145number0.0030
 Text.Whitespace
=>Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
patternName.Otherstring0.5728any0.3406complex0.0331any[]0.0173string[]0.0151
 Text.Whitespace
=Operator
 Text.Whitespace
patternName.Otherany0.4919string0.2872complex0.0611string[]0.0565any[]0.0452
.Punctuation
mapName.OtherU[]0.7128complex0.1810any0.0946any[]0.0018string0.0007
(Punctuation
pName.Otherstring0.6211any0.3322complex0.0134number0.0074boolean0.0062
 Text.Whitespace
=>Punctuation
\n        Text.Whitespace
typeofOperator.Word
 Text.Whitespace
pName.Otherany0.6165string0.2101complex0.1400any[]0.0117string[]0.0038
 Text.Whitespace
===Operator
 Text.Whitespace
'string'Literal.String.Single
 Text.Whitespace
?Operator
 Text.Whitespace
regExpEscapeName.Otherstring0.6485any0.1724boolean0.0731number0.0344string[]0.0302
(Punctuation
pName.Otherstring0.7677any0.1865number0.0173complex0.0140any[]0.0034
)Punctuation
\n        Text.Whitespace
:Operator
 Text.Whitespace
pName.Otherstring0.5322any0.3627complex0.0397number0.0379any[]0.0104
 Text.Whitespace
===Operator
 Text.Whitespace
GLOBSTARName.Otherstring0.3471any0.2672boolean0.1599number0.1566complex0.0238
 Text.Whitespace
?Operator
 Text.Whitespace
GLOBSTARName.Otherstring0.4110any0.2772number0.2717boolean0.0102any[]0.0093
\n        Text.Whitespace
:Operator
 Text.Whitespace
p._srcKeyword.Type
\n      Text.Whitespace
)Punctuation
.Punctuation
reduceName.Othercomplex0.6379any0.2898any...0.0509any[]0.0042number0.0039
(Punctuation
(Punctuation
setName.Other
,Punctuation
 Text.Whitespace
pName.Otherstring0.5855any0.3389number0.0346any[]0.0115complex0.0104
)Punctuation
 Text.Whitespace
=>Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
(Punctuation
setName.Other
[Punctuation
setName.Other
.Punctuation
lengthName.Otherany0.5500number0.4428string0.0044complex0.0012boolean0.0006
 Text.Whitespace
-Operator
 Text.Whitespace
1Literal.Number.Float
]Punctuation
 Text.Whitespace
===Operator
 Text.Whitespace
GLOBSTARName.Otherstring0.5628any0.2345number0.1630boolean0.0262complex0.0050
 Text.Whitespace
&&Operator
 Text.Whitespace
pName.Otherstring0.7688any0.1855number0.0246complex0.0112any[]0.0037
 Text.Whitespace
===Operator
 Text.Whitespace
GLOBSTARName.Otherstring0.6264any0.2067number0.1420boolean0.0124complex0.0037
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n          Text.Whitespace
setName.Other
.Punctuation
pushName.Othernumber0.9138any0.0793string0.0024boolean0.0020complex0.0008
(Punctuation
pName.Otherstring0.6833any0.2503number0.0334any[]0.0073complex0.0071
)Punctuation
\n        Text.Whitespace
}Punctuation
\n        Text.Whitespace
returnKeyword
 Text.Whitespace
setName.Other
\n      Text.Whitespace
}Punctuation
,Punctuation
 Text.Whitespace
[Punctuation
]Punctuation
)Punctuation
\n      Text.Whitespace
patternName.Otherany0.3438complex0.2134string[]0.1281any[]0.1250string0.0992
.Punctuation
forEachName.Othercomplex0.4038void0.4009any0.1570v...0.0156boolean0.0040
(Punctuation
(Punctuation
pName.Otherstring0.5968any0.3243number0.0356complex0.0203any[]0.0049
,Punctuation
 Text.Whitespace
iName.Othernumber0.9524any0.0373string0.0080boolean0.0010void0.0004
)Punctuation
 Text.Whitespace
=>Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
pName.Otherstring0.6990any0.2587number0.0175complex0.0138boolean0.0033
 Text.Whitespace
!==Operator
 Text.Whitespace
GLOBSTARName.Otherstring0.6849any0.2148number0.0721boolean0.0171complex0.0048
 Text.Whitespace
||Operator
 Text.Whitespace
patternName.Otherany0.4754string0.3469complex0.0926string[]0.0206any[]0.0166
[Punctuation
iName.Othernumber0.9090any0.0823string0.0072complex0.0006boolean0.0004
-Operator
1Literal.Number.Float
]Punctuation
 Text.Whitespace
===Operator
 Text.Whitespace
GLOBSTARName.Othernumber0.3710string0.3646any0.2418boolean0.0123complex0.0043
)Punctuation
 Text.Whitespace
{Punctuation
\n          Text.Whitespace
returnKeyword
\n        Text.Whitespace
}Punctuation
\n        Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
iName.Othernumber0.9165any0.0782string0.0035boolean0.0008complex0.0006
 Text.Whitespace
===Operator
 Text.Whitespace
0Literal.Number.Float
)Punctuation
 Text.Whitespace
{Punctuation
\n          Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
patternName.Otherstring0.6852any0.2514string[]0.0188complex0.0159RegExp0.0124
.Punctuation
lengthName.Othernumber0.8185any0.1779string0.0021complex0.0008boolean0.0003
 Text.Whitespace
>Operator
 Text.Whitespace
1Literal.Number.Float
)Punctuation
 Text.Whitespace
{Punctuation
\n            Text.Whitespace
patternName.Otherany0.4286complex0.1974string0.1481any[]0.0686string[]0.0655
[Punctuation
iName.Othernumber0.8106any0.1802string0.0076complex0.0009boolean0.0003
+Operator
1Literal.Number.Float
]Punctuation
 Text.Whitespace
=Operator
 Text.Whitespace
'(?:\\\/|'Literal.String.Single
 Text.Whitespace
+Operator
 Text.Whitespace
twoStarName.Otherstring0.3967any0.3438number0.2530boolean0.0028complex0.0020
 Text.Whitespace
+Operator
 Text.Whitespace
'\\\/)?'Literal.String.Single
 Text.Whitespace
+Operator
 Text.Whitespace
patternName.Otherany0.4355string0.2912complex0.1108string[]0.0697any[]0.0423
[Punctuation
iName.Othernumber0.8078any0.1842string0.0067complex0.0005boolean0.0003
+Operator
1Literal.Number.Float
]Punctuation
\n          Text.Whitespace
}Punctuation
 Text.Whitespace
elseKeyword
 Text.Whitespace
{Punctuation
\n            Text.Whitespace
patternName.Otherany0.6125string0.1895complex0.1140{}0.0220any[]0.0216
[Punctuation
iName.Othernumber0.7381any0.1866string0.0711complex0.0016boolean0.0010
]Punctuation
 Text.Whitespace
=Operator
 Text.Whitespace
twoStarName.Otherany0.5014string0.4093number0.0575complex0.0086boolean0.0084
\n          Text.Whitespace
}Punctuation
\n        Text.Whitespace
}Punctuation
 Text.Whitespace
elseKeyword
 Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
iName.Othernumber0.6752any0.2935string0.0254complex0.0034boolean0.0011
 Text.Whitespace
===Operator
 Text.Whitespace
patternName.Otherstring0.5861any0.3130string[]0.0414RegExp0.0227complex0.0192
.Punctuation
lengthName.Othernumber0.7904any0.2056string0.0026complex0.0007boolean0.0002
 Text.Whitespace
-Operator
 Text.Whitespace
1Literal.Number.Float
)Punctuation
 Text.Whitespace
{Punctuation
\n          Text.Whitespace
patternName.Otherany0.4363complex0.2001string0.1792any[]0.0589string[]0.0481
[Punctuation
iName.Othernumber0.6858any0.3006string0.0116complex0.0010boolean0.0003
-Operator
1Literal.Number.Float
]Punctuation
 Text.Whitespace
+=Operator
 Text.Whitespace
'(?:\\\/|'Literal.String.Single
 Text.Whitespace
+Operator
 Text.Whitespace
twoStarName.Otherstring0.6001any0.2796number0.1162complex0.0015boolean0.0012
 Text.Whitespace
+Operator
 Text.Whitespace
')?'Literal.String.Single
\n        Text.Whitespace
}Punctuation
 Text.Whitespace
elseKeyword
 Text.Whitespace
{Punctuation
\n          Text.Whitespace
patternName.Otherany0.4298string0.2503complex0.1876string[]0.0397any[]0.0349
[Punctuation
iName.Othernumber0.7756any0.2077string0.0144complex0.0010boolean0.0005
-Operator
1Literal.Number.Float
]Punctuation
 Text.Whitespace
+=Operator
 Text.Whitespace
'(?:\\\/|\\\/'Literal.String.Single
 Text.Whitespace
+Operator
 Text.Whitespace
twoStarName.Otherstring0.4749any0.3089number0.2104boolean0.0023complex0.0020
 Text.Whitespace
+Operator
 Text.Whitespace
'\\\/)'Literal.String.Single
 Text.Whitespace
+Operator
 Text.Whitespace
patternName.Otherany0.4121string0.3735complex0.0974string[]0.0498any[]0.0301
[Punctuation
iName.Othernumber0.8419any0.1475string0.0093complex0.0006boolean0.0003
+Operator
1Literal.Number.Float
]Punctuation
\n          Text.Whitespace
patternName.Otherany0.4359string0.3313complex0.1173string[]0.0413any[]0.0243
[Punctuation
iName.Othernumber0.7492any0.2272string0.0216complex0.0009boolean0.0004
+Operator
1Literal.Number.Float
]Punctuation
 Text.Whitespace
=Operator
 Text.Whitespace
GLOBSTARName.Otherany0.5327string0.3687number0.0660boolean0.0176complex0.0059
\n        Text.Whitespace
}Punctuation
\n      Text.Whitespace
}Punctuation
)Punctuation
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
patternName.Otherstring0.4348any0.4310RegExp0.0582string[]0.0299any[]0.0195
.Punctuation
filterName.Othercomplex0.7543any0.2362string0.0026any[]0.0010boolean0.0009
(Punctuation
pName.Otherstring0.6100any0.3575number0.0067any[]0.0053complex0.0050
 Text.Whitespace
=>Punctuation
 Text.Whitespace
pName.Otherstring0.8547any0.1294number0.0065string[]0.0027complex0.0019
 Text.Whitespace
!==Operator
 Text.Whitespace
GLOBSTARName.Otherstring0.8402any0.1207number0.0218boolean0.0098string[]0.0030
)Punctuation
.Punctuation
joinName.Otherstring0.8559any0.1357complex0.0035number0.0015string[]0.0009
(Punctuation
'/'Literal.String.Single
)Punctuation
\n    Text.Whitespace
}Punctuation
)Punctuation
.Punctuation
joinName.Otherstring0.7777any0.2064complex0.0090number0.0015boolean0.0010
(Punctuation
'|'Literal.String.Single
)Punctuation
\n\n    Text.Whitespace
// must match entire patternComment.Single
\n    Text.Whitespace
// ending in a * or ** will make it less strict.Comment.Single
\n    Text.Whitespace
reName.OtherRegExp0.6294string0.2229any0.1295string[]0.0057boolean0.0040
 Text.Whitespace
=Operator
 Text.Whitespace
'^(?:'Literal.String.Single
 Text.Whitespace
+Operator
 Text.Whitespace
reName.Otherstring0.4136any0.2854RegExp0.2519complex0.0132number0.0124
 Text.Whitespace
+Operator
 Text.Whitespace
')$'Literal.String.Single
\n\n    Text.Whitespace
// can match anything, as long as it's not this.Comment.Single
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
thisKeyword
.Punctuation
negateName.Otherboolean0.5624string0.2748any0.0934number0.0414void0.0095
)Punctuation
 Text.Whitespace
reName.OtherRegExp0.6970string0.2190any0.0630string[]0.0082boolean0.0042
 Text.Whitespace
=Operator
 Text.Whitespace
'^(?!'Literal.String.Single
 Text.Whitespace
+Operator
 Text.Whitespace
reName.Otherstring0.3951any0.2834RegExp0.2578complex0.0177boolean0.0158
 Text.Whitespace
+Operator
 Text.Whitespace
').*$'Literal.String.Single
\n\n    Text.Whitespace
tryKeyword
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
thisKeyword
.Punctuation
regexpName.OtherRegExp0.9716string0.0054boolean0.0048any0.0033string[]0.0014
 Text.Whitespace
=Operator
 Text.Whitespace
newOperator.Wordany0.5558string0.2754RegExp0.1005boolean0.0188complex0.0051
 Text.Whitespace
RegExpName.BuiltinRegExpConstructor0.9985RegExp0.0002any0.0001ErrorConstructor0.0000BooleanConstructor0.0000
(Punctuation
reName.OtherRegExp0.6920string0.1714any0.1077complex0.0078boolean0.0045
,Punctuation
 Text.Whitespace
flagsName.Otherstring0.5815any0.2087string[]0.0914number0.0280any[]0.0272
)Punctuation
\n    Text.Whitespace
}Punctuation
 Text.Whitespace
catchKeyword
 Text.Whitespace
(Punctuation
exName.Otherany0.9936string0.0053number0.0003boolean0.0003symbol0.0001
)Punctuation
 Text.Whitespace
/* istanbul ignore next - should be impossible */Comment.Multiline
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
thisKeyword
.Punctuation
regexpName.Otherboolean0.6857RegExp0.1557false0.0697any0.0278string0.0058
 Text.Whitespace
=Operator
 Text.Whitespace
falseKeyword.Constant
\n    Text.Whitespace
}Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
thisKeyword
.Punctuation
regexpName.OtherRegExp0.7468boolean0.0719any0.0471string0.0277false0.0132
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
matchName.Otherany0.9074boolean0.0352complex0.0224string0.0170void0.0043
 Text.Whitespace
(Punctuation
fName.Otherstring0.5629any0.3884boolean0.0218RegExp0.0059number0.0035
,Punctuation
 Text.Whitespace
partialName.Otherany0.8941string0.0408boolean0.0357number0.0153any[]0.0033
 Text.Whitespace
=Operator
 Text.Whitespace
thisKeyword
.Punctuation
partialName.Otherany0.4450boolean0.2276string0.1549number0.0866complex0.0208
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
thisKeyword
.Punctuation
debugName.Otherany0.3701void0.3617complex0.2085boolean0.0265{}0.0023
(Punctuation
'match'Literal.String.Single
,Punctuation
 Text.Whitespace
fName.Otherstring0.8073any0.1678boolean0.0093string[]0.0041any[]0.0021
,Punctuation
 Text.Whitespace
thisKeyword
.Punctuation
patternName.Otherstring0.8339any0.1183complex0.0172RegExp0.0154boolean0.0050
)Punctuation
\n    Text.Whitespace
// short-circuit in the case of busted things.Comment.Single
\n    Text.Whitespace
// comments, etc.Comment.Single
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
thisKeyword
.Punctuation
commentName.Otherstring0.4711any0.1015boolean0.0538false0.0162complex0.0145
)Punctuation
 Text.Whitespace
returnKeyword
 Text.Whitespace
falseKeyword.Constant
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
thisKeyword
.Punctuation
emptyName.Otherboolean0.9671string0.0162any0.0065false0.0024complex0.0011
)Punctuation
 Text.Whitespace
returnKeyword
 Text.Whitespace
fName.Otherstring0.6992any0.2786boolean0.0105number0.0017String0.0011
 Text.Whitespace
===Operator
 Text.Whitespace
''Literal.String.Single
\n\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
fName.Otherstring0.7115any0.2677boolean0.0127number0.0019string[]0.0007
 Text.Whitespace
===Operator
 Text.Whitespace
'/'Literal.String.Single
 Text.Whitespace
&&Operator
 Text.Whitespace
partialName.Otherany0.5799boolean0.2106string0.0959number0.0467any[]0.0277
)Punctuation
 Text.Whitespace
returnKeyword
 Text.Whitespace
trueKeyword.Constant
\n\n    Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
optionsName.Otherany0.4631complex0.0450any[]0.0267Options0.0172Config0.0152
 Text.Whitespace
=Operator
 Text.Whitespace
thisKeyword
.Punctuation
optionsName.Otherany0.2556ConnectionOptions0.0692Options0.0308Config0.0190complex0.0149
\n\n    Text.Whitespace
// windows: need to use /, not \Comment.Single
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
pathName.Otherany0.9981complex0.0009string0.0008boolean0.0001any[]0.0000
.Punctuation
sepName.Otherany0.9940string0.0055boolean0.0002complex0.0001number0.0001
 Text.Whitespace
!==Operator
 Text.Whitespace
'/'Literal.String.Single
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
fName.Otherstring0.5314any0.4525string[]0.0086boolean0.0033number0.0008
 Text.Whitespace
=Operator
 Text.Whitespace
fName.Otherstring0.6262any0.3695boolean0.0012string[]0.0009number0.0008
.Punctuation
splitName.Othercomplex0.6466any0.3471string0.0015string[]0.0011boolean0.0007
(Punctuation
pathName.Otherany0.9988complex0.0007string0.0004any[]0.0000string[]0.0000
.Punctuation
sepName.Otherany0.9941string0.0054number0.0001complex0.0001string[]0.0001
)Punctuation
.Punctuation
joinName.Otherstring0.7951any0.1993complex0.0015string[]0.0013number0.0010
(Punctuation
'/'Literal.String.Single
)Punctuation
\n    Text.Whitespace
}Punctuation
\n\n    Text.Whitespace
// treat the test path as a set of pathparts.Comment.Single
\n    Text.Whitespace
fName.Otherstring0.5503any0.4178string[]0.0225boolean0.0023RegExp0.0013
 Text.Whitespace
=Operator
 Text.Whitespace
fName.Otherstring0.5867any0.4087string[]0.0017number0.0006complex0.0006
.Punctuation
splitName.Othercomplex0.6565any0.3369string0.0013string[]0.0013void0.0007
(Punctuation
slashSplitName.Otherstring0.4368any0.2775RegExp0.1607boolean0.0360string[]0.0348
)Punctuation
\n    Text.Whitespace
thisKeyword
.Punctuation
debugName.Othervoid0.6953any0.1435complex0.1296boolean0.0128{}0.0021
(Punctuation
thisKeyword
.Punctuation
patternName.Otherstring0.8495any0.1138RegExp0.0190complex0.0062string[]0.0031
,Punctuation
 Text.Whitespace
'split'Literal.String.Single
,Punctuation
 Text.Whitespace
fName.Otherstring0.7771any0.1881string[]0.0112boolean0.0070number0.0031
)Punctuation
\n\n    Text.Whitespace
// just ONE of the pattern sets in this.set needs to matchComment.Single
\n    Text.Whitespace
// in order for it to be valid.  If negating, then just oneComment.Single
\n    Text.Whitespace
// match means that we have failed.Comment.Single
\n    Text.Whitespace
// Either way, return on the first hit.Comment.Single
\n\n    Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
setName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
thisKeyword
.Punctuation
setName.Other
\n    Text.Whitespace
thisKeyword
.Punctuation
debugName.Otherany0.4558complex0.4204void0.0600boolean0.0175number0.0031
(Punctuation
thisKeyword
.Punctuation
patternName.Otherstring0.7834any0.1682RegExp0.0287complex0.0063boolean0.0031
,Punctuation
 Text.Whitespace
'set'Literal.String.Single
,Punctuation
 Text.Whitespace
setName.Other
)Punctuation
\n\n    Text.Whitespace
// Find the basename of the path by looking for the last non-empty segmentComment.Single
\n    Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
filenameName.Otherany0.5893string0.3958number0.0034string[]0.0023any[]0.0016
\n    Text.Whitespace
forKeyword
 Text.Whitespace
(Punctuation
letKeyword.Declaration
 Text.Whitespace
iName.Othernumber0.9568any0.0372string0.0047boolean0.0006complex0.0002
 Text.Whitespace
=Operator
 Text.Whitespace
fName.Otherany0.4686string0.4562string[]0.0318any[]0.0104number0.0059
.Punctuation
lengthName.Othernumber0.6015any0.3947string0.0021complex0.0008boolean0.0003
 Text.Whitespace
-Operator
 Text.Whitespace
1Literal.Number.Float
;Punctuation
 Text.Whitespace
iName.Othernumber0.9100any0.0873string0.0019boolean0.0004void0.0001
 Text.Whitespace
>=Operator
 Text.Whitespace
0Literal.Number.Float
;Punctuation
 Text.Whitespace
iName.Othernumber0.9359any0.0622string0.0011boolean0.0004void0.0002
--Operator
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
filenameName.Otherany0.5006string0.4922number0.0034boolean0.0009complex0.0008
 Text.Whitespace
=Operator
 Text.Whitespace
fName.Otherany0.6397string0.1822string[]0.1102any[]0.0270complex0.0039
[Punctuation
iName.Othernumber0.9505any0.0394string0.0088boolean0.0004complex0.0002
]Punctuation
\n      Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
filenameName.Otherany0.5848string0.4050boolean0.0032number0.0021complex0.0013
)Punctuation
 Text.Whitespace
breakKeyword
\n    Text.Whitespace
}Punctuation
\n\n    Text.Whitespace
forKeyword
 Text.Whitespace
(Punctuation
letKeyword.Declaration
 Text.Whitespace
iName.Othernumber0.9926any0.0061string0.0008boolean0.0002complex0.0001
 Text.Whitespace
=Operator
 Text.Whitespace
0Literal.Number.Float
;Punctuation
 Text.Whitespace
iName.Othernumber0.9815any0.0161string0.0014boolean0.0004void0.0002
 Text.Whitespace
<Operator
 Text.Whitespace
setName.Other
.Punctuation
lengthName.Othernumber0.5500any0.4459string0.0022complex0.0007boolean0.0004
;Punctuation
 Text.Whitespace
iName.Othernumber0.9619any0.0358string0.0015boolean0.0003void0.0001
++Operator
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
patternName.Otherstring0.7392any0.2368boolean0.0053number0.0045complex0.0038
 Text.Whitespace
=Operator
 Text.Whitespace
setName.Other
[Punctuation
iName.Othernumber0.9001any0.0655string0.0316boolean0.0012complex0.0005
]Punctuation
\n      Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
fileName.Otherany0.5379string0.4284string[]0.0040number0.0037File0.0036
 Text.Whitespace
=Operator
 Text.Whitespace
fName.Otherstring0.6029any0.3395string[]0.0107boolean0.0075number0.0039
\n      Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
optionsName.Otherany0.2528complex0.0796any[]0.0285{}0.0140Options0.0136
.Punctuation
matchBaseName.Otherany0.4635boolean0.2668string[]0.0693string0.0638complex0.0385
 Text.Whitespace
&&Operator
 Text.Whitespace
patternName.Otherstring0.4689any0.4287string[]0.0539any[]0.0171RegExp0.0080
.Punctuation
lengthName.Othernumber0.6115any0.3812string0.0044complex0.0013boolean0.0005
 Text.Whitespace
===Operator
 Text.Whitespace
1Literal.Number.Float
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
fileName.Otherany0.5465string0.2105string[]0.1451any[]0.0364complex0.0110
 Text.Whitespace
=Operator
 Text.Whitespace
[Punctuation
filenameName.Otherstring0.7192any0.2715number0.0052complex0.0013boolean0.0005
]Punctuation
\n      Text.Whitespace
}Punctuation
\n      Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
hitName.Otherany0.6954string0.0748complex0.0644boolean0.0630any[]0.0258
 Text.Whitespace
=Operator
 Text.Whitespace
thisKeyword
.Punctuation
matchOneName.Otherany0.4608string0.2080boolean0.1212complex0.0778number0.0439
(Punctuation
fileName.Otherany0.6349string0.2845number0.0066File0.0056complex0.0055
,Punctuation
 Text.Whitespace
patternName.Otherstring0.5935any0.3218complex0.0257RegExp0.0193{}0.0069
,Punctuation
 Text.Whitespace
partialName.Otherany0.7519boolean0.0613number0.0592any[]0.0425complex0.0273
)Punctuation
\n      Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
hitName.Otherany0.6306boolean0.1503string0.1118number0.0300complex0.0166
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
optionsName.Otherany0.3977complex0.0619Options0.0197Config0.0098{}0.0097
.Punctuation
flipNegateName.Otherboolean0.8171any0.1177number0.0286string0.0156complex0.0095
)Punctuation
 Text.Whitespace
returnKeyword
 Text.Whitespace
trueKeyword.Constant
\n        Text.Whitespace
returnKeyword
 Text.Whitespace
!Operator
thisKeyword
.Punctuation
negateName.Otherboolean0.8652any0.0759number0.0119string0.0116void0.0069
\n      Text.Whitespace
}Punctuation
\n    Text.Whitespace
}Punctuation
\n\n    Text.Whitespace
// didn't get any hits.  this is success if it's a negativeComment.Single
\n    Text.Whitespace
// pattern, failure otherwise.Comment.Single
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
optionsName.Otherany0.3183complex0.0598Options0.0210Config0.0120{}0.0104
.Punctuation
flipNegateName.Otherboolean0.8176any0.0981number0.0278string0.0264complex0.0115
)Punctuation
 Text.Whitespace
returnKeyword
 Text.Whitespace
falseKeyword.Constant
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
thisKeyword
.Punctuation
negateName.Otherboolean0.8382any0.0725void0.0157string0.0132number0.0110
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
staticKeyword
 Text.Whitespace
defaultsName.Otherany0.9448boolean0.0102complex0.0087T0.0032string0.0026
 Text.Whitespace
(Punctuation
defName.Otherany0.7601Error0.0144boolean0.0142string0.0103number0.0080
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
minimatchName.Otherany0.9863string0.0007complex0.0004Promise<any>0.0002number0.0002
.Punctuation
defaultsName.Otherany0.9825complex0.0046T0.0026boolean0.0015Promise<any>0.0013
(Punctuation
defName.Otherany0.8780string0.0184{}0.0155boolean0.0109number0.0101
)Punctuation
.Punctuation
MinimatchName.Otherany0.9949string0.0029boolean0.0006complex0.0003number0.0002
\n  Text.Whitespace
}Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
minimatchName.Otherany0.9456string0.0010Assert0.0008Promise<any>0.0006complex0.0004
.Punctuation
MinimatchName.Otherany0.9931string0.0052boolean0.0004void0.0001number0.0001
 Text.Whitespace
=Operator
 Text.Whitespace
MinimatchName.Otherany0.9507string0.0307complex0.0022any[]0.0020boolean0.0014
\nText.Whitespace
