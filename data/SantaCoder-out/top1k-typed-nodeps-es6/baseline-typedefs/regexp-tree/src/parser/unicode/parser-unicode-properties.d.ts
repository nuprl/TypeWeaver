declare function isValidName(name: string): boolean;
declare function isValidValue(name: string, value: any): boolean;
declare function isAlias(name: string): boolean;
declare function isGeneralCategoryValue(value: string): boolean;
declare function isScriptCategoryValue(value: string): boolean;
declare function isBinaryPropertyName(name: string): boolean;
declare function getCanonicalName(name: string): any;
declare function getCanonicalValue(value: string): any;
declare const _default: {
    isAlias: typeof isAlias;
    isValidName: typeof isValidName;
    isValidValue: typeof isValidValue;
    isGeneralCategoryValue: typeof isGeneralCategoryValue;
    isScriptCategoryValue: typeof isScriptCategoryValue;
    isBinaryPropertyName: typeof isBinaryPropertyName;
    getCanonicalName: typeof getCanonicalName;
    getCanonicalValue: typeof getCanonicalValue;
    NON_BINARY_PROP_NAMES_TO_ALIASES: {
        General_Category: string;
        Script: string;
        Script_Extensions: string;
    };
    NON_BINARY_ALIASES_TO_PROP_NAMES: {};
    BINARY_PROP_NAMES_TO_ALIASES: {
        ASCII: string;
        ASCII_Hex_Digit: string;
        Alphabetic: string;
        Any: string;
        Assigned: string;
        Bidi_Control: string;
        Bidi_Mirrored: string;
        Case_Ignorable: string;
        Cased: string;
        Changes_When_Casefolded: string;
        Changes_When_Casemapped: string;
        Changes_When_Lowercased: string;
        Changes_When_NFKC_Casefolded: string;
        Changes_When_Titlecased: string;
        Changes_When_Uppercased: string;
        Dash: string;
        Default_Ignorable_Code_Point: string;
        Deprecated: string;
        Diacritic: string;
        Emoji: string;
        Emoji_Component: string;
        Emoji_Modifier: string;
        Emoji_Modifier_Base: string;
        Emoji_Presentation: string;
        Extended_Pictographic: string;
        Extender: string;
        Grapheme_Base: string;
        Grapheme_Extend: string;
        Hex_Digit: string;
        IDS_Binary_Operator: string;
        IDS_Trinary_Operator: string;
        ID_Continue: string;
        ID_Start: string;
        Ideographic: string;
        Join_Control: string;
        Logical_Order_Exception: string;
        Lowercase: string;
        Math: string;
        Noncharacter_Code_Point: string;
        Pattern_Syntax: string;
        Pattern_White_Space: string;
        Quotation_Mark: string;
        Radical: string;
        Regional_Indicator: string;
        Sentence_Terminal: string;
        Soft_Dotted: string;
        Terminal_Punctuation: string;
        Unified_Ideograph: string;
        Uppercase: string;
        Variation_Selector: string;
        White_Space: string;
        XID_Continue: string;
        XID_Start: string;
    };
    BINARY_ALIASES_TO_PROP_NAMES: {};
    GENERAL_CATEGORY_VALUE_TO_ALIASES: {
        Cased_Letter: string;
        Close_Punctuation: string;
        Connector_Punctuation: string;
        Control: string[];
        Currency_Symbol: string;
        Dash_Punctuation: string;
        Decimal_Number: string[];
        Enclosing_Mark: string;
        Final_Punctuation: string;
        Format: string;
        Initial_Punctuation: string;
        Letter: string;
        Letter_Number: string;
        Line_Separator: string;
        Lowercase_Letter: string;
        Mark: string[];
        Math_Symbol: string;
        Modifier_Letter: string;
        Modifier_Symbol: string;
        Nonspacing_Mark: string;
        Number: string;
        Open_Punctuation: string;
        Other: string;
        Other_Letter: string;
        Other_Number: string;
        Other_Punctuation: string;
        Other_Symbol: string;
        Paragraph_Separator: string;
        Private_Use: string;
        Punctuation: string[];
        Separator: string;
        Space_Separator: string;
        Spacing_Mark: string;
        Surrogate: string;
        Symbol: string;
        Titlecase_Letter: string;
        Unassigned: string;
        Uppercase_Letter: string;
    };
    GENERAL_CATEGORY_VALUE_ALIASES_TO_VALUES: {};
    SCRIPT_VALUE_TO_ALIASES: {
        Adlam: string;
        Ahom: string;
        Anatolian_Hieroglyphs: string;
        Arabic: string;
        Armenian: string;
        Avestan: string;
        Balinese: string;
        Bamum: string;
        Bassa_Vah: string;
        Batak: string;
        Bengali: string;
        Bhaiksuki: string;
        Bopomofo: string;
        Brahmi: string;
        Braille: string;
        Buginese: string;
        Buhid: string;
        Canadian_Aboriginal: string;
        Carian: string;
        Caucasian_Albanian: string;
        Chakma: string;
        Cham: string;
        Cherokee: string;
        Common: string;
        Coptic: string[];
        Cuneiform: string;
        Cypriot: string;
        Cyrillic: string;
        Deseret: string;
        Devanagari: string;
        Dogra: string;
        Duployan: string;
        Egyptian_Hieroglyphs: string;
        Elbasan: string;
        Ethiopic: string;
        Georgian: string;
        Glagolitic: string;
        Gothic: string;
        Grantha: string;
        Greek: string;
        Gujarati: string;
        Gunjala_Gondi: string;
        Gurmukhi: string;
        Han: string;
        Hangul: string;
        Hanifi_Rohingya: string;
        Hanunoo: string;
        Hatran: string;
        Hebrew: string;
        Hiragana: string;
        Imperial_Aramaic: string;
        Inherited: string[];
        Inscriptional_Pahlavi: string;
        Inscriptional_Parthian: string;
        Javanese: string;
        Kaithi: string;
        Kannada: string;
        Katakana: string;
        Kayah_Li: string;
        Kharoshthi: string;
        Khmer: string;
        Khojki: string;
        Khudawadi: string;
        Lao: string;
        Latin: string;
        Lepcha: string;
        Limbu: string;
        Linear_A: string;
        Linear_B: string;
        Lisu: string;
        Lycian: string;
        Lydian: string;
        Mahajani: string;
        Makasar: string;
        Malayalam: string;
        Mandaic: string;
        Manichaean: string;
        Marchen: string;
        Medefaidrin: string;
        Masaram_Gondi: string;
        Meetei_Mayek: string;
        Mende_Kikakui: string;
        Meroitic_Cursive: string;
        Meroitic_Hieroglyphs: string;
        Miao: string;
        Modi: string;
        Mongolian: string;
        Mro: string;
        Multani: string;
        Myanmar: string;
        Nabataean: string;
        New_Tai_Lue: string;
        Newa: string;
        Nko: string;
        Nushu: string;
        Ogham: string;
        Ol_Chiki: string;
        Old_Hungarian: string;
        Old_Italic: string;
        Old_North_Arabian: string;
        Old_Permic: string;
        Old_Persian: string;
        Old_Sogdian: string;
        Old_South_Arabian: string;
        Old_Turkic: string;
        Oriya: string;
        Osage: string;
        Osmanya: string;
        Pahawh_Hmong: string;
        Palmyrene: string;
        Pau_Cin_Hau: string;
        Phags_Pa: string;
        Phoenician: string;
        Psalter_Pahlavi: string;
        Rejang: string;
        Runic: string;
        Samaritan: string;
        Saurashtra: string;
        Sharada: string;
        Shavian: string;
        Siddham: string;
        SignWriting: string;
        Sinhala: string;
        Sogdian: string;
        Sora_Sompeng: string;
        Soyombo: string;
        Sundanese: string;
        Syloti_Nagri: string;
        Syriac: string;
        Tagalog: string;
        Tagbanwa: string;
        Tai_Le: string;
        Tai_Tham: string;
        Tai_Viet: string;
        Takri: string;
        Tamil: string;
        Tangut: string;
        Telugu: string;
        Thaana: string;
        Thai: string;
        Tibetan: string;
        Tifinagh: string;
        Tirhuta: string;
        Ugaritic: string;
        Vai: string;
        Warang_Citi: string;
        Yi: string;
        Zanabazar_Square: string;
    };
    SCRIPT_VALUE_ALIASES_TO_VALUE: {};
};
export default _default;
