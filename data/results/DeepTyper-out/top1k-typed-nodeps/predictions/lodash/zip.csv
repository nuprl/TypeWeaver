importKeyword
 Text.Whitespace
unzipName.Otherany0.0655void0.0336boolean0.0291string[]0.0204complex0.0146
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./unzip.js'Literal.String.Single
\n\nText.Whitespace
Text
/**\n * Creates an array of grouped elements, the first of which contains the\n * first elements of the given arrays, the second of which contains the\n * second elements of the given arrays, and so on.\n *\n * @since 0.1.0\n * @category Array\n * @param {...Array} [arrays] The arrays to process.\n * @returns {Array} Returns the new array of grouped elements.\n * @see unzip, unzipWith, zipObject, zipObjectDeep, zipWith\n * @example\n *\n * zip(['a', 'b'], [1, 2], [true, false])\n * // => [['a', 1, true], ['b', 2, false]]\n */Comment.Multiline
\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
zipName.Otherany0.1632complex0.0601any[]0.0186boolean0.0160Promise<any>0.0130
(Punctuation
...Punctuation
arraysName.Otherany[]0.7950any0.1067number[]0.0141string[]0.0118complex0.0046
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
returnKeyword
 Text.Whitespace
unzipName.Otherany0.3925any[]0.0747void0.0488boolean0.0465Promise<{}>0.0206
(Punctuation
arraysName.Otherany[]0.4999any0.3373string[]0.0427number[]0.0106string0.0086
)Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
exportKeyword
 Text.Whitespace
defaultKeyword
 Text.Whitespace
zipName.Otherany0.1000complex0.0101any[]0.0072number0.0043void0.0042
\nText.Whitespace
