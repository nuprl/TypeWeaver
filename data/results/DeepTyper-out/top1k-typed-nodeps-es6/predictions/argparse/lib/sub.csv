Text
// Limited implementation of python % string operator, supports only %s and %r for nowComment.Single
\nText.Whitespace
// (other formats are not used here, but may appear in custom templates)Comment.Single
\n\nText.Whitespace
'use strict'Literal.String.Single
\n\nText.Whitespace
importKeyword
 Text.Whitespace
{Punctuation
 Text.Whitespace
inspectName.Otherany0.7635complex0.1277string0.1028void0.0013Promise<string>0.0012
 Text.Whitespace
}Punctuation
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'util'Literal.String.Single
;Punctuation
\n\n\nText.Whitespace
exportKeyword
 Text.Whitespace
defaultKeyword
 Text.Whitespace
functionKeyword.Declaration
 Text.Whitespace
subName.Otherany0.5747string0.2074complex0.1049void0.0183T0.0065
(Punctuation
patternName.Otherstring0.8523any0.1132RegExp0.0147complex0.0028number0.0020
,Punctuation
 Text.Whitespace
...Punctuation
valuesName.Otherany[]0.4453any0.1820string[]0.1682number[]0.0657complex0.0127
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
regexName.OtherRegExp0.9816string0.0072any0.0042string[]0.0011RegExpExecArray0.0004
 Text.Whitespace
=Operator
 Text.Whitespace
/%(?:(%)|(-)?(\*)?(?:\((\w+)\))?([A-Za-z]))/gLiteral.String.Regex
\n\n    Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
resultName.Otherstring0.6502any0.3287number0.0062boolean0.0035complex0.0029
 Text.Whitespace
=Operator
 Text.Whitespace
patternName.Otherstring0.9357any0.0575RegExp0.0032number0.0014complex0.0010
.Punctuation
replaceName.Othercomplex0.9830any0.0142string0.0011RegExp0.0002boolean0.0002
(Punctuation
regexName.OtherRegExp0.9844string0.0084any0.0031complex0.0009string[]0.0009
,Punctuation
 Text.Whitespace
functionKeyword.Declaration
 Text.Whitespace
(Punctuation
_Name.Otherstring0.6914any0.2730boolean0.0074string[]0.0052RegExp0.0041
,Punctuation
 Text.Whitespace
is_literalName.Otherstring0.6914any0.1949boolean0.0518RegExp0.0224number0.0142
,Punctuation
 Text.Whitespace
is_left_alignName.Otherstring0.6562any0.2258boolean0.0654number0.0170RegExp0.0138
,Punctuation
 Text.Whitespace
is_paddedName.Otherstring0.6486any0.2216boolean0.0850number0.0191RegExp0.0076
,Punctuation
 Text.Whitespace
nameName.Otherstring0.8972any0.0993number0.0009complex0.0007string[]0.0005
,Punctuation
 Text.Whitespace
formatName.Otherstring0.9545any0.0360number0.0053complex0.0018boolean0.0005
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
is_literalName.Otherstring0.3268boolean0.2970any0.2910number0.0626RegExp0.0060
)Punctuation
 Text.Whitespace
returnKeyword
 Text.Whitespace
'%'Literal.String.Single
\n\n        Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
padded_countName.Othernumber0.4793string0.2714any0.1793boolean0.0577complex0.0013
 Text.Whitespace
=Operator
 Text.Whitespace
0Literal.Number.Float
\n        Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
is_paddedName.Otherany0.3504string0.3374boolean0.2318number0.0582complex0.0044
)Punctuation
 Text.Whitespace
{Punctuation
\n            Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
valuesName.Otherstring[]0.4482any0.2988any[]0.1441number[]0.0373string0.0238
.Punctuation
lengthName.Othernumber0.8549any0.1396string0.0027boolean0.0011complex0.0007
 Text.Whitespace
===Operator
 Text.Whitespace
0Literal.Number.Float
)Punctuation
 Text.Whitespace
throwKeywordany0.4012complex0.3974string0.0654boolean0.0360{}0.0286
 Text.Whitespace
newOperator.Wordany0.4330boolean0.2080complex0.1222string0.0805{}0.0285
 Text.Whitespace
TypeErrorName.ExceptionTypeErrorConstructor0.9877ErrorConstructor0.0015complex0.0004BooleanConstructor0.0003MapConstructor0.0003
(Punctuation
'not enough arguments for format string'Literal.String.Single
)Punctuation
\n            Text.Whitespace
padded_countName.Otherany0.4278number0.3825string0.1308boolean0.0348complex0.0046
 Text.Whitespace
=Operator
 Text.Whitespace
valuesName.Otherany0.3317string[]0.3227any[]0.2227number[]0.0527string0.0283
.Punctuation
shiftName.Otherstring0.5881any0.2566number0.1075complex0.0112number[]0.0026
(Punctuation
)Punctuation
\n            Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
NumberName.BuiltinNumberConstructor0.9900Console0.0004Number0.0003any0.0002Math0.0001
.Punctuation
isIntegerName.Otherboolean0.9948any0.0016string0.0012number0.0007complex0.0002
(Punctuation
padded_countName.Otherstring0.5889any0.2880number0.0893boolean0.0202complex0.0055
)Punctuation
)Punctuation
 Text.Whitespace
throwKeywordcomplex0.4726any0.3428string0.0418boolean0.0391{}0.0277
 Text.Whitespace
newOperator.Wordany0.4208boolean0.1987complex0.1227string0.0828{}0.0361
 Text.Whitespace
TypeErrorName.ExceptionTypeErrorConstructor0.9899ErrorConstructor0.0013complex0.0003undefined0.0002BooleanConstructor0.0002
(Punctuation
'* wants int'Literal.String.Single
)Punctuation
\n        Text.Whitespace
}Punctuation
\n\n        Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
strName.Otherstring0.4932any0.4889complex0.0082void0.0010boolean0.0010
\n        Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
nameName.Otherstring0.7199any0.2729complex0.0024number0.0014boolean0.0010
 Text.Whitespace
!==Operator
 Text.Whitespace
undefinedKeyword.Constant
)Punctuation
 Text.Whitespace
{Punctuation
\n            Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
dictName.Otherany0.4751complex0.2153any[]0.0736string[]0.0505boolean0.0479
 Text.Whitespace
=Operator
 Text.Whitespace
valuesName.Otherany[]0.4137string[]0.2599any0.1520number[]0.1114T[]0.0125
[Punctuation
0Literal.Number.Float
]Punctuation
\n            Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
typeofOperator.Word
 Text.Whitespace
dictName.Othercomplex0.7682any0.1818string[]0.0152any[]0.0109boolean0.0073
 Text.Whitespace
!==Operator
 Text.Whitespace
'object'Literal.String.Single
 Text.Whitespace
||Operator
 Text.Whitespace
dictName.Othercomplex0.7959any0.0865string[]0.0301any[]0.0242void0.0214
 Text.Whitespace
===Operator
 Text.Whitespace
nullKeyword.Constant
)Punctuation
 Text.Whitespace
throwKeywordcomplex0.5928any0.1487string0.0611boolean0.0484Error0.0377
 Text.Whitespace
newOperator.Wordboolean0.2310any0.2048complex0.1478string0.1233string[]0.0366
 Text.Whitespace
TypeErrorName.ExceptionTypeErrorConstructor0.9877ErrorConstructor0.0021BooleanConstructor0.0002MapConstructor0.0002undefined0.0002
(Punctuation
'format requires a mapping'Literal.String.Single
)Punctuation
\n            Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
(Punctuation
nameName.Otherstring0.9823any0.0138string[]0.0009complex0.0009never0.0006
 Text.Whitespace
inOperator.Word
 Text.Whitespace
dictName.Othercomplex0.9782any0.0116any[]0.0034string[]0.0024{}0.0015
)Punctuation
)Punctuation
 Text.Whitespace
throwKeywordcomplex0.6152any0.1628string0.0408boolean0.0383{}0.0259
 Text.Whitespace
newOperator.Wordany0.2850complex0.2453boolean0.1785string0.0773string[]0.0346
 Text.Whitespace
TypeErrorName.ExceptionTypeErrorConstructor0.9863ErrorConstructor0.0026complex0.0003MapConstructor0.0002undefined0.0002
(Punctuation
`Literal.String.Backtick
no such key: 'Literal.String.Backtick
${Literal.String.Interpol
nameName.Otherstring0.9616any0.0323complex0.0018never0.0014number0.0007
}Literal.String.Interpol
'Literal.String.Backtick
`Literal.String.Backtick
)Punctuation
\n            Text.Whitespace
strName.Otherany0.5734string0.3827complex0.0299never0.0018number0.0013
 Text.Whitespace
=Operator
 Text.Whitespace
dictName.Othercomplex0.7575any0.2164{}0.0099string[]0.0034boolean0.0026
[Punctuation
nameName.Otherstring0.9583any0.0363number0.0014never0.0012complex0.0010
]Punctuation
\n        Text.Whitespace
}Punctuation
 Text.Whitespace
elseKeyword
 Text.Whitespace
{Punctuation
\n            Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
valuesName.Otherstring[]0.7012any[]0.1995any0.0408number[]0.0200string0.0092
.Punctuation
lengthName.Othernumber0.9819any0.0152string0.0014boolean0.0007complex0.0003
 Text.Whitespace
===Operator
 Text.Whitespace
0Literal.Number.Float
)Punctuation
 Text.Whitespace
throwKeywordcomplex0.5168any0.2397string0.0634boolean0.0394Error0.0255
 Text.Whitespace
newOperator.Wordany0.2697boolean0.2159complex0.1454string0.1238string[]0.0345
 Text.Whitespace
TypeErrorName.ExceptionTypeErrorConstructor0.9910ErrorConstructor0.0010BooleanConstructor0.0002MapConstructor0.0002undefined0.0002
(Punctuation
'not enough arguments for format string'Literal.String.Single
)Punctuation
\n            Text.Whitespace
strName.Otherstring0.7440any0.2287complex0.0090string[]0.0052number0.0028
 Text.Whitespace
=Operator
 Text.Whitespace
valuesName.Otherstring[]0.6950any[]0.1491any0.0789number[]0.0289string0.0227
.Punctuation
shiftName.Otherstring0.9025any0.0481number0.0244complex0.0070string[]0.0027
(Punctuation
)Punctuation
\n        Text.Whitespace
}Punctuation
\n\n        Text.Whitespace
switchKeyword
 Text.Whitespace
(Punctuation
formatName.Otherstring0.9889any0.0045number0.0020complex0.0008never0.0006
)Punctuation
 Text.Whitespace
{Punctuation
\n            Text.Whitespace
caseKeyword
 Text.Whitespace
's'Literal.String.Single
:Operator
\n                Text.Whitespace
strName.Otherstring0.9248any0.0482complex0.0106boolean0.0035never0.0022
 Text.Whitespace
=Operator
 Text.Whitespace
StringName.BuiltinStringConstructor0.9987String0.0004string0.0000NumberConstructor0.0000complex0.0000
(Punctuation
strName.Otherstring0.8045any0.1558complex0.0184number0.0061never0.0042
)Punctuation
\n                Text.Whitespace
breakKeyword
\n            Text.Whitespace
caseKeyword
 Text.Whitespace
'r'Literal.String.Single
:Operator
\n                Text.Whitespace
strName.Otherstring0.8043any0.1587complex0.0209boolean0.0037number0.0022
 Text.Whitespace
=Operator
 Text.Whitespace
inspectName.Otherany0.4442complex0.3121string0.2285boolean0.0024never0.0020
(Punctuation
strName.Otherstring0.7804any0.1930complex0.0091never0.0039number0.0032
)Punctuation
\n                Text.Whitespace
breakKeyword
\n            Text.Whitespace
caseKeyword
 Text.Whitespace
'd'Literal.String.Single
:Operator
\n            Text.Whitespace
caseKeyword
 Text.Whitespace
'i'Literal.String.Single
:Operator
\n                Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
typeofOperator.Word
 Text.Whitespace
strName.Otherstring0.5423any0.2746complex0.1581number0.0084boolean0.0045
 Text.Whitespace
!==Operator
 Text.Whitespace
'number'Literal.String.Single
)Punctuation
 Text.Whitespace
{Punctuation
\n                    Text.Whitespace
throwKeywordcomplex0.4959any0.2011string0.0969boolean0.0785Error0.0288
 Text.Whitespace
newOperator.Wordboolean0.2468any0.1906complex0.1727string0.1593{}0.0274
 Text.Whitespace
TypeErrorName.ExceptionTypeErrorConstructor0.9902ErrorConstructor0.0017undefined0.0002MapConstructor0.0001BooleanConstructor0.0001
(Punctuation
`Literal.String.Backtick
%Literal.String.Backtick
${Literal.String.Interpol
formatName.Otherstring0.9554any0.0190number0.0190complex0.0025never0.0012
}Literal.String.Interpol
 format: a number is required, not Literal.String.Backtick
${Literal.String.Interpol
typeofOperator.Word
 Text.Whitespace
strName.Otherany0.5718string0.2297complex0.1802never0.0042number0.0036
}Literal.String.Interpol
`Literal.String.Backtick
)Punctuation
\n                Text.Whitespace
}Punctuation
\n                Text.Whitespace
strName.Otherstring0.9178any0.0666complex0.0058number0.0027boolean0.0023
 Text.Whitespace
=Operator
 Text.Whitespace
StringName.BuiltinStringConstructor0.9991String0.0004NumberConstructor0.0000string0.0000complex0.0000
(Punctuation
strName.Otherany0.6493string0.2226complex0.0761never0.0099number0.0085
.Punctuation
toFixedName.Otherstring0.9005complex0.0691any0.0144number0.0099boolean0.0006
(Punctuation
0Literal.Number.Float
)Punctuation
)Punctuation
\n                Text.Whitespace
breakKeyword
\n            Text.Whitespace
defaultName.Other
:Operator
\n                Text.Whitespace
throwKeyword.Typecomplex0.4901any0.2383string0.1225boolean0.0398Error0.0198
 Text.Whitespace
newOperator.Wordany0.2275boolean0.2195complex0.1517string0.1505string[]0.0265
 Text.Whitespace
TypeErrorName.ExceptionTypeErrorConstructor0.9856ErrorConstructor0.0040complex0.0003undefined0.0002BooleanConstructor0.0002
(Punctuation
`Literal.String.Backtick
unsupported format character 'Literal.String.Backtick
${Literal.String.Interpol
formatName.Otherstring0.9673number0.0138any0.0123complex0.0020never0.0013
}Literal.String.Interpol
'Literal.String.Backtick
`Literal.String.Backtick
)Punctuation
\n        Text.Whitespace
}Punctuation
\n\n        Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
padded_countName.Othernumber0.7579any0.1368string0.0574boolean0.0432complex0.0014
 Text.Whitespace
>Operator
 Text.Whitespace
0Literal.Number.Float
)Punctuation
 Text.Whitespace
{Punctuation
\n            Text.Whitespace
returnKeyword
 Text.Whitespace
is_left_alignName.Otherboolean0.4685string0.3893any0.1117number0.0164complex0.0042
 Text.Whitespace
?Operator
 Text.Whitespace
strName.Otherstring0.5641any0.3874complex0.0275number0.0019never0.0017
.Punctuation
padEndName.Otherstring0.9663any0.0290complex0.0020number0.0013boolean0.0005
(Punctuation
padded_countName.Otherstring0.5715number0.2178any0.1719boolean0.0174complex0.0042
)Punctuation
 Text.Whitespace
:Operator
 Text.Whitespace
strName.Otherany0.6801string0.2596complex0.0429{}0.0014never0.0013
.Punctuation
padStartName.Otherstring0.9038any0.0600complex0.0240string[]0.0040boolean0.0022
(Punctuation
padded_countName.Otherstring0.8196any0.0939number0.0769boolean0.0029complex0.0019
)Punctuation
\n        Text.Whitespace
}Punctuation
 Text.Whitespace
elseKeyword
 Text.Whitespace
{Punctuation
\n            Text.Whitespace
returnKeyword
 Text.Whitespace
strName.Otherstring0.6916any0.2998number0.0030complex0.0027boolean0.0005
\n        Text.Whitespace
}Punctuation
\n    Text.Whitespace
}Punctuation
)Punctuation
\n\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
valuesName.Otherstring[]0.4809any[]0.2474any0.1950number[]0.0252string0.0167
.Punctuation
lengthName.Othernumber0.9414any0.0543string0.0024boolean0.0006complex0.0005
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
valuesName.Otherstring[]0.5840any[]0.2373any0.1113number[]0.0240string0.0157
.Punctuation
lengthName.Othernumber0.9591any0.0375string0.0017boolean0.0007complex0.0006
 Text.Whitespace
===Operator
 Text.Whitespace
1Literal.Number.Float
 Text.Whitespace
&&Operator
 Text.Whitespace
typeofOperator.Word
 Text.Whitespace
valuesName.Otherany0.4045any[]0.2754string[]0.1549number[]0.0747complex0.0353
[Punctuation
0Literal.Number.Float
]Punctuation
 Text.Whitespace
===Operator
 Text.Whitespace
'object'Literal.String.Single
 Text.Whitespace
&&Operator
 Text.Whitespace
valuesName.Otherstring[]0.3622any0.3259any[]0.1666number[]0.0629string0.0374
[Punctuation
0Literal.Number.Float
]Punctuation
 Text.Whitespace
!==Operator
 Text.Whitespace
nullKeyword.Constant
)Punctuation
 Text.Whitespace
{Punctuation
\n            Text.Whitespace
// mappingComment.Single
\n        Text.Whitespace
}Punctuation
 Text.Whitespace
elseKeyword
 Text.Whitespace
{Punctuation
\n            Text.Whitespace
throwKeywordany0.4436complex0.3560string0.0480{}0.0336Error0.0315
 Text.Whitespace
newOperator.Wordany0.3532boolean0.1690complex0.1282string0.0857{}0.0351
 Text.Whitespace
TypeErrorName.ExceptionTypeErrorConstructor0.9917ErrorConstructor0.0014undefined0.0002BooleanConstructor0.0002complex0.0001
(Punctuation
'not all arguments converted during string formatting'Literal.String.Single
)Punctuation
\n        Text.Whitespace
}Punctuation
\n    Text.Whitespace
}Punctuation
\n\n    Text.Whitespace
returnKeyword
 Text.Whitespace
resultName.Otherany0.3785string0.2095{}0.0179number0.0155any[]0.0134
\nText.Whitespace
}Punctuation
;Punctuation
\nText.Whitespace
