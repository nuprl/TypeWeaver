importKeyword
 Text.Whitespace
createRangeName.OtherRange0.8465any0.0210complex0.0112Config0.0060Element0.0058
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./.internal/createRange.js'Literal.String.Single
\n\nText.Whitespace
Text
/**\n * This method is like `range` except that it populates values in\n * descending order.\n *\n * @since 4.0.0\n * @category Util\n * @param {number} [start=0] The start of the range.\n * @param {number} end The end of the range.\n * @param {number} [step=1] The value to increment or decrement by.\n * @returns {Array} Returns the range of numbers.\n * @see inRange, range\n * @example\n *\n * rangeRight(4)\n * // => [3, 2, 1, 0]\n *\n * rangeRight(-4)\n * // => [-3, -2, -1, 0]\n *\n * rangeRight(1, 5)\n * // => [4, 3, 2, 1]\n *\n * rangeRight(0, 20, 5)\n * // => [15, 10, 5, 0]\n *\n * rangeRight(0, -4, -1)\n * // => [-3, -2, -1, 0]\n *\n * rangeRight(1, 4, 0)\n * // => [1, 1, 1]\n *\n * rangeRight(0)\n * // => []\n */Comment.Multiline
\nText.Whitespace
constKeyword.Declaration
 Text.Whitespace
rangeRightName.OtherRange0.5911Element[]0.0352Element0.0100NodeListOf<Element>0.0088Node0.0069
 Text.Whitespace
=Operator
 Text.Whitespace
createRangeName.OtherRange0.8736any0.0215complex0.0075Element0.0051Node0.0033
(Punctuation
trueKeyword.Constant
)Punctuation
\n\nText.Whitespace
exportKeyword
 Text.Whitespace
defaultKeyword
 Text.Whitespace
rangeRightName.OtherRange0.1646any0.0572Node0.0193Position0.0118Element[]0.0115
\nText.Whitespace
