Text
/** Used to generate unique IDs. */Comment.Multiline
\nText.Whitespace
constKeyword.Declaration
 Text.Whitespace
idCounterName.Other{}0.2977any0.0247complex0.0135Set<string>0.0042Tensor<Rank>0.0037
 Text.Whitespace
=Operator
 Text.Whitespace
{Punctuation
}Punctuation
\n\nText.Whitespace
Text
/**\n * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n *\n * @since 0.1.0\n * @category Util\n * @param {string} [prefix=''] The value to prefix the ID with.\n * @returns {string} Returns the unique ID.\n * @see random\n * @example\n *\n * uniqueId('contact_')\n * // => 'contact_104'\n *\n * uniqueId()\n * // => '105'\n */Comment.Multiline
\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
uniqueIdName.Otherstring0.8778any0.0515void0.0266number0.0224complex0.0048
(Punctuation
prefixName.Otherstring0.9670any0.0289number0.0018boolean0.0003RegExp0.0003
=Operator
'$lodash$'Literal.String.Single
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
idCounterName.Othercomplex0.5779any0.2296{}0.0654string[]0.0042number[]0.0041
[Punctuation
prefixName.Otherstring0.9441any0.0416number0.0115complex0.0011boolean0.0004
]Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
idCounterName.Othercomplex0.7765any0.1329{}0.0323void0.0022number[]0.0018
[Punctuation
prefixName.Otherstring0.8095any0.1482number0.0336complex0.0048boolean0.0005
]Punctuation
 Text.Whitespace
=Operator
 Text.Whitespace
0Literal.Number.Float
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
idName.Othernumber0.9071string0.0501any0.0389complex0.0013boolean0.0009
 Text.Whitespace
=Operator
++Operator
idCounterName.Othercomplex0.6152any0.1271{}0.0455number0.0090number[]0.0050
[Punctuation
prefixName.Otherstring0.8743any0.0808number0.0386complex0.0037boolean0.0004
]Punctuation
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
prefixName.Otherstring0.8809any0.1071number0.0069complex0.0016boolean0.0015
 Text.Whitespace
===Operator
 Text.Whitespace
'$lodash$'Literal.String.Single
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
`Literal.String.Backtick
${Literal.String.Interpol
idName.Otherstring0.4851number0.3229any0.1504boolean0.0146complex0.0083
}Literal.String.Interpol
`Literal.String.Backtick
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
returnKeyword
 Text.Whitespace
`Literal.String.Backtick
${Literal.String.Interpol
prefixName.Otherstring0.9031any0.0733number0.0145boolean0.0024complex0.0023
}Literal.String.Interpol
${Literal.String.Interpol
idName.Otherstring0.4518number0.3186any0.1886boolean0.0113complex0.0096
}Literal.String.Interpol
`Literal.String.Backtick
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
exportKeyword
 Text.Whitespace
defaultKeyword
 Text.Whitespace
uniqueIdName.Otherstring0.6378any0.2622number0.0378void0.0086string[]0.0065
\nText.Whitespace
