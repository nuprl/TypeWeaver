declare function parseBool(option: string, optstr: string, arg: string): boolean;
declare function parseString(option: string, optstr: string, arg: string): any;
declare function parseNumber(option: any, optstr: string, arg: string): string;
declare function parseInteger(option: any, optstr: string, arg: string): string;
declare function parsePositiveInteger(option: any, optstr: string, arg: string): string;
declare function parseDate(option: string, optstr: string, arg: string): string;
declare function Parser(config: any): void;
declare function bashCompletionSpecFromOptions(args: any): void;
declare function bashCompletionFromOptions(args: any): void;
declare function createParser(config: any): any;
declare function parse(config_: any): void;
declare function addOptionType(optionType: any): void;
declare function getOptionType(name: string): string;
declare function synopsisFromOpt(o: any): void;
declare const _default: {
    createParser: typeof createParser;
    Parser: typeof Parser;
    parse: typeof parse;
    addOptionType: typeof addOptionType;
    getOptionType: typeof getOptionType;
    synopsisFromOpt: typeof synopsisFromOpt;
    BASH_COMPLETION_TEMPLATE_PATH: any;
    bashCompletionFromOptions: typeof bashCompletionFromOptions;
    bashCompletionSpecFromOptions: typeof bashCompletionSpecFromOptions;
    parseBool: typeof parseBool;
    parseString: typeof parseString;
    parseNumber: typeof parseNumber;
    parseInteger: typeof parseInteger;
    parsePositiveInteger: typeof parsePositiveInteger;
    parseDate: typeof parseDate;
};
export default _default;
