importKeyword
 Text.Whitespace
baseMeanName.Otherany0.3351complex0.0845string0.0693boolean0.0606void0.0437
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./meanBy.js'Literal.String.Single
\n\nText.Whitespace
Text
/**\n * Computes the mean of the values in `array`.\n *\n * @since 4.0.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {number} Returns the mean.\n * @example\n *\n * mean([4, 2, 8, 6])\n * // => 5\n */Comment.Multiline
\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
meanName.Otherany0.3446number0.1997complex0.0591boolean0.0491string0.0356
(Punctuation
arrayName.Otherany0.5115string0.1685number0.0547any[]0.0509string[]0.0243
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
returnKeyword
 Text.Whitespace
baseMeanName.Otherany0.8030string0.0472complex0.0417number0.0184any[]0.0097
(Punctuation
arrayName.Otherany0.5728string0.1329any[]0.0969number0.0393string[]0.0284
,Punctuation
 Text.Whitespace
(Punctuation
valueName.Otherany0.8215string0.0695number0.0622boolean0.0040never0.0025
)Punctuation
 Text.Whitespace
=>Punctuation
 Text.Whitespace
valueName.Otherany0.7461string0.1512number0.0472boolean0.0070never0.0053
)Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
exportKeyword
 Text.Whitespace
defaultKeyword
 Text.Whitespace
meanName.Otherany0.4147number0.0695string0.0261void0.0256complex0.0218
\nText.Whitespace
