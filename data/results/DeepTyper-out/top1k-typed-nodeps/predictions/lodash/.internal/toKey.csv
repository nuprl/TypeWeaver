importKeyword
 Text.Whitespace
isSymbolName.Otherany0.3907number0.1927complex0.1690string0.0931boolean0.0372
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'../isSymbol.js'Literal.String.Single
\n\nText.Whitespace
Text
/** Used as references for various `Number` constants. */Comment.Multiline
\nText.Whitespace
constKeyword.Declaration
 Text.Whitespace
INFINITYName.Othernumber0.8971any0.0677string0.0264boolean0.0055complex0.0010
 Text.Whitespace
=Operator
 Text.Whitespace
1Literal.Number.Float
 Text.Whitespace
/Operator
 Text.Whitespace
0Literal.Number.Float
\n\nText.Whitespace
Text
/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */Comment.Multiline
\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
toKeyName.Otherstring0.5832any0.3448number0.0493boolean0.0092complex0.0060
(Punctuation
valueName.Otherany0.7479string0.1703number0.0710complex0.0030boolean0.0030
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
typeofOperator.Word
 Text.Whitespace
valueName.Otherany0.8985string0.0474number0.0375complex0.0086boolean0.0022
 Text.Whitespace
===Operator
 Text.Whitespace
'string'Literal.String.Single
 Text.Whitespace
||Operator
 Text.Whitespace
isSymbolName.Othernumber0.3042boolean0.2496any0.2102string0.1438complex0.0803
(Punctuation
valueName.Otherany0.6563number0.2302string0.0963complex0.0073boolean0.0037
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
valueName.Otherany0.5842number0.1930string0.1922boolean0.0153Date0.0032
\n  Text.Whitespace
}Punctuation
\n  Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
resultName.Otherstring0.7128any0.2350number0.0363boolean0.0051complex0.0048
 Text.Whitespace
=Operator
 Text.Whitespace
`Literal.String.Backtick
${Literal.String.Interpol
valueName.Otherstring0.4584any0.3489number0.1639complex0.0092boolean0.0073
}Literal.String.Interpol
`Literal.String.Backtick
\n  Text.Whitespace
returnKeyword
 Text.Whitespace
(Punctuation
resultName.Otherstring0.6667any0.3100number0.0182complex0.0018boolean0.0007
 Text.Whitespace
==Operator
 Text.Whitespace
'0'Literal.String.Single
 Text.Whitespace
&&Operator
 Text.Whitespace
(Punctuation
1Literal.Number.Float
 Text.Whitespace
/Operator
 Text.Whitespace
valueName.Othernumber0.4449any0.4131string0.1302complex0.0038boolean0.0028
)Punctuation
 Text.Whitespace
==Operator
 Text.Whitespace
-Operator
INFINITYName.Othernumber0.7478any0.1319string0.0836boolean0.0277complex0.0025
)Punctuation
 Text.Whitespace
?Operator
 Text.Whitespace
'-0'Literal.String.Single
 Text.Whitespace
:Operator
 Text.Whitespace
resultName.Otherany0.6377string0.2891number0.0379boolean0.0094void0.0045
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
exportKeyword
 Text.Whitespace
defaultKeyword
 Text.Whitespace
toKeyName.Otherstring0.7328any0.1656complex0.0172number0.0165boolean0.0076
\nText.Whitespace
