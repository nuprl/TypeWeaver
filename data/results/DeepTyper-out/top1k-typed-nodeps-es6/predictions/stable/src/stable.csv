Text
// A stable array sort, because `Array#sort()` is not guaranteed stable.Comment.Single
\nText.Whitespace
// This is an implementation of merge sort, without recursion.Comment.Single
\n\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
stableName.Otherany0.5361void0.0223Function0.0201number0.0200Promise<any>0.0119
 Text.Whitespace
=Operator
 Text.Whitespace
functionKeyword.Declaration
 Text.Whitespace
(Punctuation
arrName.Otherany0.6202any[]0.0901string[]0.0306number[]0.0198string0.0168
,Punctuation
 Text.Whitespace
compName.Otherany0.8994string0.0539number0.0135complex0.0015Error0.0012
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
returnKeyword
 Text.Whitespace
execName.Otherany0.8686RegExpExecArray0.0298void0.0119string0.0081complex0.0050
(Punctuation
arrName.Otherany0.6894string[]0.1349string0.0788any[]0.0400number[]0.0118
.Punctuation
sliceName.Otherany0.5474string0.3253string[]0.0481any[]0.0148complex0.0122
(Punctuation
)Punctuation
,Punctuation
 Text.Whitespace
compName.Otherany0.8617number0.0695string0.0470void0.0029complex0.0017
)Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
stableName.Otherany0.3636Function0.0086void0.0086Promise<void>0.0076number0.0058
.Punctuation
inplaceName.Otherany0.8590number0.1143void0.0132string0.0055complex0.0020
 Text.Whitespace
=Operator
 Text.Whitespace
functionKeyword.Declaration
 Text.Whitespace
(Punctuation
arrName.Otherany0.7353any[]0.0936string[]0.0241number[]0.0154string0.0122
,Punctuation
 Text.Whitespace
compName.Otherany0.9370string0.0353number0.0143complex0.0010any[]0.0009
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
varKeyword.Declaration
 Text.Whitespace
resultName.Otherany0.7223RegExpExecArray0.0802any[]0.0239complex0.0112{}0.0112
 Text.Whitespace
=Operator
 Text.Whitespace
execName.Otherany0.4745RegExpExecArray0.3005complex0.0152void0.0085RegExp0.0079
(Punctuation
arrName.Otherany0.7417any[]0.0563string[]0.0539string0.0463complex0.0205
,Punctuation
 Text.Whitespace
compName.Otherany0.8652string0.0885number0.0218complex0.0036any[]0.0027
)Punctuation
\n\n  Text.Whitespace
// This simply copies back if the result isn't in the original array,Comment.Single
\n  Text.Whitespace
// which happens on an odd number of passes.Comment.Single
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
resultName.Otherany0.9135complex0.0175string0.0151any[]0.0086RegExpExecArray0.0077
 Text.Whitespace
!==Operator
 Text.Whitespace
arrName.Otherany0.6397any[]0.1141string[]0.0516string0.0411number[]0.0346
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
passName.Othervoid0.7613any0.0961complex0.0655Promise<void>0.0398any[]0.0050
(Punctuation
resultName.Otherany0.8557any[]0.0234{}0.0147number[]0.0120string0.0113
,Punctuation
 Text.Whitespace
nullKeyword.Constant
,Punctuation
 Text.Whitespace
arrName.Otherany0.4830any[]0.2138string[]0.1775number[]0.0353complex0.0116
.Punctuation
lengthName.Othernumber0.8195any0.1753string0.0032complex0.0007void0.0003
,Punctuation
 Text.Whitespace
arrName.Otherany0.6418any[]0.0939number0.0776number[]0.0478complex0.0354
)Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
returnKeyword
 Text.Whitespace
arrName.Otherany0.5937any[]0.1609number[]0.0630string[]0.0554number0.0271
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
Text
// Execute the sort using the input array and a second buffer as work space.Comment.Single
\nText.Whitespace
// Returns one of those two, containing the final result.Comment.Single
\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
execName.Otherany0.6996RegExpExecArray0.0445void0.0318complex0.0205Promise<void>0.0152
(Punctuation
arrName.Otherany0.8306string0.0630number0.0255any[]0.0197string[]0.0141
,Punctuation
 Text.Whitespace
compName.Otherany0.8827string0.0649number0.0364complex0.0020boolean0.0013
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
typeofOperator.Word
(Punctuation
compName.Otherany0.9095number0.0383string0.0380complex0.0028Function0.0008
)Punctuation
 Text.Whitespace
!==Operator
 Text.Whitespace
'function'Literal.String.Single
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
compName.Otherany0.6411string0.1848number0.1174boolean0.0344complex0.0037
 Text.Whitespace
=Operator
 Text.Whitespace
functionKeyword.Declaration
 Text.Whitespace
(Punctuation
aName.Otherstring0.5384any0.3757number0.0643Date0.0045boolean0.0028
,Punctuation
 Text.Whitespace
bName.Otherstring0.5363any0.4028number0.0498Date0.0016boolean0.0016
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
StringName.BuiltinStringConstructor0.9941String0.0026string0.0011any0.0001number0.0001
(Punctuation
aName.Otherstring0.4158any0.4096number0.1468String0.0042Date0.0035
)Punctuation
.Punctuation
localeCompareName.Othercomplex0.6529any0.3272string0.0077void0.0033number0.0031
(Punctuation
bName.Otherstring0.5095any0.4381number0.0364Date0.0031boolean0.0018
)Punctuation
\n    Text.Whitespace
}Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
// Short-circuit when there's nothing to sort.Comment.Single
\n  Text.Whitespace
varKeyword.Declaration
 Text.Whitespace
lenName.Othernumber0.8056any0.1893string0.0032boolean0.0005complex0.0004
 Text.Whitespace
=Operator
 Text.Whitespace
arrName.Otherany0.5316any[]0.1571string[]0.1152number[]0.0491string0.0084
.Punctuation
lengthName.Othernumber0.7003any0.2933string0.0023complex0.0017void0.0004
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
lenName.Othernumber0.8991any0.0984string0.0010boolean0.0005complex0.0004
 Text.Whitespace
<=Operator
 Text.Whitespace
1Literal.Number.Float
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
arrName.Otherany0.5591any[]0.0874number[]0.0777string[]0.0630number0.0394
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
// Rather than dividing input, simply iterate chunks of 1, 2, 4, 8, etc.Comment.Single
\n  Text.Whitespace
// Chunks are the size of the left or right hand in merge sort.Comment.Single
\n  Text.Whitespace
// Stop when the left-hand covers all of the array.Comment.Single
\n  Text.Whitespace
varKeyword.Declaration
 Text.Whitespace
bufferName.Otherany0.4016Buffer0.1609any[]0.1558complex0.0458ArrayBuffer0.0326
 Text.Whitespace
=Operator
 Text.Whitespace
newOperator.Wordany0.3703number[][]0.0421any[]0.0294number[]0.0169ArrayConstructor0.0165
 Text.Whitespace
ArrayName.BuiltinArrayConstructor0.9990any[]0.0000ObjectConstructor0.0000T[]0.0000Array0.0000
(Punctuation
lenName.Othernumber0.9660any0.0288complex0.0012any[]0.0006void0.0005
)Punctuation
\n  Text.Whitespace
forKeyword
 Text.Whitespace
(Punctuation
varKeyword.Declaration
 Text.Whitespace
chkName.Othernumber0.9946any0.0046string0.0002void0.0001boolean0.0001
 Text.Whitespace
=Operator
 Text.Whitespace
1Literal.Number.Float
;Punctuation
 Text.Whitespace
chkName.Othernumber0.9882any0.0095void0.0004string0.0003number[]0.0002
 Text.Whitespace
<Operator
 Text.Whitespace
lenName.Othernumber0.9154any0.0825string0.0006complex0.0003boolean0.0002
;Punctuation
 Text.Whitespace
chkName.Othernumber0.9894any0.0098string0.0004boolean0.0001void0.0001
 Text.Whitespace
*=Operator
 Text.Whitespace
2Literal.Number.Float
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
passName.Othervoid0.7249any0.0967complex0.0490any[]0.0435Promise<void>0.0276
(Punctuation
arrName.Otherany0.4953any[]0.2432number[]0.1099string[]0.0263number0.0252
,Punctuation
 Text.Whitespace
compName.Otherany0.8868number0.0426string0.0181any[]0.0135number[]0.0080
,Punctuation
 Text.Whitespace
chkName.Othernumber0.6121any0.3459string0.0221any[]0.0031boolean0.0027
,Punctuation
 Text.Whitespace
bufferName.Otherany0.7950any[]0.0801Buffer0.0670complex0.0105ArrayBuffer0.0090
)Punctuation
\n\n    Text.Whitespace
varKeyword.Declaration
 Text.Whitespace
tmpName.Otherany0.8269any[]0.0712number0.0148Buffer0.0083number[]0.0064
 Text.Whitespace
=Operator
 Text.Whitespace
arrName.Otherany[]0.4001any0.2916number[]0.0550string[]0.0264number[][]0.0098
\n    Text.Whitespace
arrName.Otherany0.3317any[]0.3147number[]0.0513string[]0.0201number[][]0.0146
 Text.Whitespace
=Operator
 Text.Whitespace
bufferName.Otherany0.5111Buffer0.1919any[]0.1248ArrayBuffer0.0445number0.0171
\n    Text.Whitespace
bufferName.Otherany0.4144any[]0.2557Buffer0.1312ArrayBuffer0.0430number0.0313
 Text.Whitespace
=Operator
 Text.Whitespace
tmpName.Otherany0.5683number0.1248any[]0.1234number[]0.0205complex0.0187
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
returnKeyword
 Text.Whitespace
arrName.Otherany[]0.4823any0.3116number[]0.0662string[]0.0371complex0.0141
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
Text
// Run a single pass with the given chunk size.Comment.Single
\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
passName.Othervoid0.9175any0.0355Promise<void>0.0079complex0.0078boolean0.0047
 Text.Whitespace
=Operator
 Text.Whitespace
functionKeyword.Declaration
 Text.Whitespace
(Punctuation
arrName.Otherany0.6802any[]0.0776number[]0.0374string[]0.0260number[][]0.0114
,Punctuation
 Text.Whitespace
compName.Otherany0.9345number0.0129string0.0072void0.0040Buffer0.0018
,Punctuation
 Text.Whitespace
chkName.Otherany0.5091number0.4322string0.0292void0.0098boolean0.0032
,Punctuation
 Text.Whitespace
resultName.Otherany0.8271any[]0.0145Buffer0.0110number[]0.0090void0.0067
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
varKeyword.Declaration
 Text.Whitespace
lenName.Othernumber0.7495any0.2450string0.0017complex0.0006boolean0.0006
 Text.Whitespace
=Operator
 Text.Whitespace
arrName.Otherany0.3817any[]0.2671string[]0.1033number[]0.0943complex0.0098
.Punctuation
lengthName.Othernumber0.6793any0.3167complex0.0010string0.0009void0.0006
\n  Text.Whitespace
varKeyword.Declaration
 Text.Whitespace
iName.Othernumber0.9890any0.0104string0.0002boolean0.0001complex0.0001
 Text.Whitespace
=Operator
 Text.Whitespace
0Literal.Number.Float
\n  Text.Whitespace
// Step size / double chunk size.Comment.Single
\n  Text.Whitespace
varKeyword.Declaration
 Text.Whitespace
dblName.Othernumber0.9868any0.0104string0.0014boolean0.0006complex0.0001
 Text.Whitespace
=Operator
 Text.Whitespace
chkName.Othernumber0.9089any0.0882string0.0015boolean0.0005complex0.0002
 Text.Whitespace
*Operator
 Text.Whitespace
2Literal.Number.Float
\n  Text.Whitespace
// Bounds of the left and right chunks.Comment.Single
\n  Text.Whitespace
varKeyword.Declaration
 Text.Whitespace
lName.Othernumber0.9377any0.0529string0.0048boolean0.0011void0.0006
,Punctuation
 Text.Whitespace
rName.Othernumber0.5151any0.4515string0.0118void0.0031complex0.0027
,Punctuation
 Text.Whitespace
eName.Otherany0.5118number0.4464boolean0.0085Error0.0056string0.0044
\n  Text.Whitespace
// Iterators over the left and right chunk.Comment.Single
\n  Text.Whitespace
varKeyword.Declaration
 Text.Whitespace
liName.Othernumber0.4974any0.2728string0.0319Element0.0204HTMLElement0.0075
,Punctuation
 Text.Whitespace
riName.Othernumber0.6689any0.2935string0.0119number[]0.0032void0.0016
\n\n  Text.Whitespace
// Iterate over pairs of chunks.Comment.Single
\n  Text.Whitespace
forKeyword
 Text.Whitespace
(Punctuation
lName.Othernumber0.7376any0.2554string0.0037boolean0.0005complex0.0003
 Text.Whitespace
=Operator
 Text.Whitespace
0Literal.Number.Float
;Punctuation
 Text.Whitespace
lName.Othernumber0.6905any0.2972string0.0061void0.0011boolean0.0009
 Text.Whitespace
<Operator
 Text.Whitespace
lenName.Othernumber0.5813any0.4148string0.0014boolean0.0005complex0.0004
;Punctuation
 Text.Whitespace
lName.Othernumber0.6794any0.2697string0.0475boolean0.0008void0.0004
 Text.Whitespace
+=Operator
 Text.Whitespace
dblName.Othernumber0.8972any0.0627string0.0332boolean0.0025complex0.0004
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
rName.Otherany0.6842number0.2690string0.0405boolean0.0015complex0.0012
 Text.Whitespace
=Operator
 Text.Whitespace
lName.Othernumber0.5228any0.4438string0.0289complex0.0008boolean0.0008
 Text.Whitespace
+Operator
 Text.Whitespace
chkName.Othernumber0.6641any0.2998string0.0314boolean0.0015complex0.0007
\n    Text.Whitespace
eName.Otherany0.7455number0.2203string0.0295boolean0.0010complex0.0008
 Text.Whitespace
=Operator
 Text.Whitespace
rName.Otherany0.6998number0.2695string0.0251complex0.0014{}0.0006
 Text.Whitespace
+Operator
 Text.Whitespace
chkName.Othernumber0.6412any0.3273string0.0238boolean0.0015complex0.0013
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
rName.Otherany0.6073number0.3721string0.0091boolean0.0037complex0.0026
 Text.Whitespace
>Operator
 Text.Whitespace
lenName.Othernumber0.8455any0.1510string0.0012complex0.0006boolean0.0005
)Punctuation
 Text.Whitespace
rName.Otherany0.7604number0.2277string0.0051complex0.0015boolean0.0011
 Text.Whitespace
=Operator
 Text.Whitespace
lenName.Othernumber0.5025any0.4934string0.0011boolean0.0009complex0.0005
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
eName.Otherany0.8106number0.1818string0.0029boolean0.0014complex0.0008
 Text.Whitespace
>Operator
 Text.Whitespace
lenName.Othernumber0.9036any0.0933string0.0008boolean0.0006complex0.0005
)Punctuation
 Text.Whitespace
eName.Otherany0.7748number0.2123string0.0034boolean0.0016complex0.0012
 Text.Whitespace
=Operator
 Text.Whitespace
lenName.Othernumber0.6809any0.3146boolean0.0013string0.0010complex0.0005
\n\n    Text.Whitespace
// Iterate both chunks in parallel.Comment.Single
\n    Text.Whitespace
liName.Othernumber0.6823any0.2820boolean0.0112string0.0045complex0.0018
 Text.Whitespace
=Operator
 Text.Whitespace
lName.Othernumber0.5829any0.3975string0.0090boolean0.0039complex0.0007
\n    Text.Whitespace
riName.Othernumber0.7371any0.2473boolean0.0056string0.0052complex0.0010
 Text.Whitespace
=Operator
 Text.Whitespace
rName.Otherany0.7828number0.1815string0.0124complex0.0057void0.0028
\n    Text.Whitespace
whileKeyword
 Text.Whitespace
(Punctuation
trueKeyword.Constant
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
// Compare the chunks.Comment.Single
\n      Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
liName.Othernumber0.5566any0.3653boolean0.0162string0.0133Element0.0050
 Text.Whitespace
<Operator
 Text.Whitespace
rName.Otherany0.4800number0.4707string0.0127complex0.0049boolean0.0045
 Text.Whitespace
&&Operator
 Text.Whitespace
riName.Othernumber0.9221any0.0702boolean0.0021string0.0019void0.0006
 Text.Whitespace
<Operator
 Text.Whitespace
eName.Otherany0.8690number0.1145string0.0035Error0.0017complex0.0013
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
// This works for a regular `sort()` compatible comparator,Comment.Single
\n        Text.Whitespace
// but also for a simple comparator like: `a > b`Comment.Single
\n        Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
compName.Otherany0.7829number0.0654void0.0352boolean0.0226number[]0.0135
(Punctuation
arrName.Otherany0.6833any[]0.0843number[]0.0626complex0.0262number[][]0.0187
[Punctuation
liName.Othernumber0.4419any0.3211string0.1496complex0.0114{}0.0072
]Punctuation
,Punctuation
 Text.Whitespace
arrName.Otherany0.4331any[]0.1910number[]0.0887complex0.0458number[][]0.0285
[Punctuation
riName.Othernumber0.9413any0.0429string0.0109complex0.0012number[]0.0004
]Punctuation
)Punctuation
 Text.Whitespace
<=Operator
 Text.Whitespace
0Literal.Number.Float
)Punctuation
 Text.Whitespace
{Punctuation
\n          Text.Whitespace
resultName.Othernumber[]0.2460any0.1878any[]0.1086number[][]0.0701string[]0.0312
[Punctuation
iName.Othernumber0.9782any0.0204string0.0006void0.0001number[]0.0001
++Operator
]Punctuation
 Text.Whitespace
=Operator
 Text.Whitespace
arrName.Othernumber[]0.4068any[]0.1954any0.1908string[]0.0507number[][]0.0378
[Punctuation
liName.Othernumber0.9719any0.0214string0.0022number[]0.0008complex0.0007
++Operator
]Punctuation
\n        Text.Whitespace
}Punctuation
\n        Text.Whitespace
elseKeyword
 Text.Whitespace
{Punctuation
\n          Text.Whitespace
resultName.Otherany0.3315any[]0.1784number[]0.1736number[][]0.0340string[]0.0282
[Punctuation
iName.Othernumber0.9723any0.0263string0.0007void0.0001boolean0.0001
++Operator
]Punctuation
 Text.Whitespace
=Operator
 Text.Whitespace
arrName.Othernumber[]0.3524any[]0.2528any0.1850string[]0.0584number[][]0.0267
[Punctuation
riName.Othernumber0.9842any0.0144string0.0005complex0.0002number[]0.0001
++Operator
]Punctuation
\n        Text.Whitespace
}Punctuation
\n      Text.Whitespace
}Punctuation
\n      Text.Whitespace
// Nothing to compare, just flush what's left.Comment.Single
\n      Text.Whitespace
elseKeyword
 Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
liName.Othernumber0.7937any0.1829string0.0098boolean0.0024complex0.0022
 Text.Whitespace
<Operator
 Text.Whitespace
rName.Othernumber0.4718any0.4636string0.0233complex0.0106number[]0.0038
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
resultName.Othernumber[]0.2835any0.1603any[]0.1417number[][]0.0608string[]0.0303
[Punctuation
iName.Othernumber0.9799any0.0188string0.0006boolean0.0001number[]0.0001
++Operator
]Punctuation
 Text.Whitespace
=Operator
 Text.Whitespace
arrName.Othernumber[]0.4037any[]0.2311any0.1524string[]0.0470number[][]0.0339
[Punctuation
liName.Othernumber0.9776any0.0148string0.0021number[]0.0012complex0.0007
++Operator
]Punctuation
\n      Text.Whitespace
}Punctuation
\n      Text.Whitespace
elseKeyword
 Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
riName.Othernumber0.9456any0.0482boolean0.0016string0.0014void0.0006
 Text.Whitespace
<Operator
 Text.Whitespace
eName.Otherany0.7761number0.1942Error0.0055string0.0054complex0.0024
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
resultName.Othernumber[]0.2621any0.1732any[]0.1567number[][]0.0429string[]0.0383
[Punctuation
iName.Othernumber0.9800any0.0184string0.0008void0.0001boolean0.0001
++Operator
]Punctuation
 Text.Whitespace
=Operator
 Text.Whitespace
arrName.Othernumber[]0.3370any0.2245any[]0.2236string[]0.0644number[][]0.0206
[Punctuation
riName.Othernumber0.9829any0.0152string0.0007complex0.0001number[]0.0001
++Operator
]Punctuation
\n      Text.Whitespace
}Punctuation
\n      Text.Whitespace
// Both iterators are at the chunk ends.Comment.Single
\n      Text.Whitespace
elseKeyword
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
breakKeyword
\n      Text.Whitespace
}Punctuation
\n    Text.Whitespace
}Punctuation
\n  Text.Whitespace
}Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
exportKeyword
 Text.Whitespace
defaultKeyword
 Text.Whitespace
stableName.Otherany0.0682void0.0099never0.0090Function0.0051number0.0046
\nText.Whitespace
