importKeyword
 Text.Whitespace
eachOfLimitName.Otherany0.0797complex0.0428string0.0282void0.0269boolean0.0255
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./internal/eachOfLimit.js'Literal.String.Single
\nText.Whitespace
importKeyword
 Text.Whitespace
withoutIndexName.Otherany0.1164string0.0807boolean0.0553complex0.0391void0.0378
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./internal/withoutIndex.js'Literal.String.Single
\nText.Whitespace
importKeyword
 Text.Whitespace
wrapAsyncName.Otherany0.1202string0.1038boolean0.0672void0.0465complex0.0417
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./internal/wrapAsync.js'Literal.String.Single
\nText.Whitespace
importKeyword
 Text.Whitespace
awaitifyName.Otherstring0.1264any0.1250boolean0.0698void0.0597complex0.0415
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./internal/awaitify.js'Literal.String.Single
\n\nText.Whitespace
Text
/**\n * The same as [`each`]{@link module:Collections.each} but runs a maximum of `limit` async operations at a time.\n *\n * @name eachLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.each]{@link module:Collections.each}\n * @alias forEachLimit\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The array index is not passed to the iteratee.\n * If you need the index, use `eachOfLimit`.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @returns {Promise} a promise, if a callback is omitted\n */Comment.Multiline
\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
eachLimitName.Otherstring0.1677any0.1236number0.0569boolean0.0515complex0.0415
(Punctuation
collName.Otherany0.3359any[]0.0538string0.0409number0.0164Buffer0.0159
,Punctuation
 Text.Whitespace
limitName.Othernumber0.8350any0.1088string0.0330boolean0.0036any[]0.0018
,Punctuation
 Text.Whitespace
iterateeName.Otherany0.4967number0.2412string0.1277boolean0.0135Buffer0.0048
,Punctuation
 Text.Whitespace
callbackName.Otherany0.4451number0.1899Function0.0741string0.0180boolean0.0136
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
eachOfLimitName.Otherany0.3350complex0.0964number0.0788void0.0753string0.0476
(Punctuation
limitName.Othernumber0.9560any0.0285string0.0071boolean0.0019any[]0.0008
)Punctuation
(Punctuation
collName.Otherany0.2417any[]0.1580string0.0098T[]0.0096Buffer0.0095
,Punctuation
 Text.Whitespace
withoutIndexName.Otherany0.3871string0.0760any[]0.0613number0.0612complex0.0346
(Punctuation
wrapAsyncName.Otherany0.3580string0.2030number0.0648any[]0.0525boolean0.0258
(Punctuation
iterateeName.Otherany0.4976string0.1769number0.1503any[]0.0067boolean0.0054
)Punctuation
)Punctuation
,Punctuation
 Text.Whitespace
callbackName.Otherany0.6064Function0.1250number0.0862void0.0304boolean0.0182
)Punctuation
;Punctuation
\nText.Whitespace
}Punctuation
\nText.Whitespace
exportKeyword
 Text.Whitespace
defaultKeyword
 Text.Whitespace
awaitifyName.Otherany0.3416void0.0941number0.0508complex0.0483string0.0356
(Punctuation
eachLimitName.Othernumber0.4276any0.2061string0.1284boolean0.0216void0.0069
,Punctuation
 Text.Whitespace
4Literal.Number.Float
)Punctuation
\nText.Whitespace
