Text
// Adapted from https://github.com/sindresorhus/make-dirComment.Single
\nText.Whitespace
// Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)Comment.Single
\nText.Whitespace
// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:Comment.Single
\nText.Whitespace
// The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.Comment.Single
\nText.Whitespace
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.Comment.Single
\nText.Whitespace
'use strict'Literal.String.Single
\nText.Whitespace
importKeyword
 Text.Whitespace
pathName.Otherany0.8336string0.1381complex0.0159string[]0.0029void0.0015
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'path'Literal.String.Single
;Punctuation
\n\nText.Whitespace
// https://github.com/nodejs/node/issues/8987Comment.Single
\nText.Whitespace
// https://github.com/libuv/libuv/pull/1088Comment.Single
\nText.Whitespace
exportKeyword
 Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
checkPathName.Othervoid0.5868any0.1393string0.0893boolean0.0332complex0.0317
 Text.Whitespace
=Operator
 Text.Whitespace
functionKeyword.Declaration
 Text.Whitespace
checkPathName.Othervoid0.5314string0.1872any0.1024complex0.0849boolean0.0415
 Text.Whitespace
(Punctuation
pthName.Otherstring0.9305any0.0447boolean0.0149number0.0039string[]0.0023
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
processName.Otherany0.9843complex0.0039Process0.0019string0.0008void0.0006
.Punctuation
platformName.Otherany0.8943string0.0965boolean0.0031complex0.0024void0.0015
 Text.Whitespace
===Operator
 Text.Whitespace
'win32'Literal.String.Single
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
pathHasInvalidWinCharactersName.Otherstring0.4197boolean0.4131any0.0746RegExp0.0700number0.0061
 Text.Whitespace
=Operator
 Text.Whitespace
/[<>:"|?*]/Literal.String.Regex
.Punctuation
testName.Otherboolean0.9379string0.0328any0.0123complex0.0116string[]0.0013
(Punctuation
pthName.Otherstring0.9750any0.0235number0.0004boolean0.0003RegExp0.0003
.Punctuation
replaceName.Othercomplex0.8145any0.1762string0.0065boolean0.0006string[]0.0002
(Punctuation
pathName.Otherany0.9955string0.0026complex0.0015Path0.0001string[]0.0000
.Punctuation
parseName.Otherany0.8503complex0.1232string0.0029T0.0011boolean0.0009
(Punctuation
pthName.Otherstring0.9482any0.0399number0.0053boolean0.0034RegExp0.0007
)Punctuation
.Punctuation
rootName.Otherstring0.7647any0.2190number0.0039string[]0.0022boolean0.0018
,Punctuation
 Text.Whitespace
''Literal.String.Single
)Punctuation
)Punctuation
\n\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
pathHasInvalidWinCharactersName.Otherstring0.6570boolean0.1954any0.1184number0.0188string[]0.0019
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
errorName.OtherError0.8665any0.0744ErrorConstructor0.0059string0.0051{}0.0029
 Text.Whitespace
=Operator
 Text.Whitespace
newOperator.WordErrorConstructor0.5467Error0.2645any0.0690string0.0459complex0.0045
 Text.Whitespace
ErrorName.ExceptionErrorConstructor0.9999Error0.0000any0.0000complex0.0000void0.0000
(Punctuation
`Literal.String.Backtick
Path contains invalid characters: Literal.String.Backtick
${Literal.String.Interpol
pthName.Otherstring0.9469any0.0254number0.0067boolean0.0055string[]0.0050
}Literal.String.Interpol
`Literal.String.Backtick
)Punctuation
\n      Text.Whitespace
errorName.Otherany0.6089Error0.2894complex0.0166{}0.0042string0.0032
.Punctuation
codeName.Otherany0.7592string0.2274Error0.0021void0.0017string[]0.0016
 Text.Whitespace
=Operator
 Text.Whitespace
'EINVAL'Literal.String.Single
\n      Text.Whitespace
throwKeywordany0.6104Error0.2832string0.0673{}0.0077void0.0041
 Text.Whitespace
errorName.OtherError0.8017any0.1505string0.0162{}0.0030never0.0017
\n    Text.Whitespace
}Punctuation
\n  Text.Whitespace
}Punctuation
\nText.Whitespace
}Punctuation
;Punctuation
\nText.Whitespace
