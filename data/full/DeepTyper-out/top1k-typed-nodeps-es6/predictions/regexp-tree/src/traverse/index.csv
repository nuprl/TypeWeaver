Text
/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */Comment.Multiline
\n\nText.Whitespace
'use strict'Literal.String.Single
;Punctuation
\n\nText.Whitespace
importKeyword
 Text.Whitespace
NodePathName.Otherany0.8287string0.0184void0.0128complex0.0075T0.0044
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./node-path'Literal.String.Single
;Punctuation
\n\nText.Whitespace
/**\n * Does an actual AST traversal, using visitor pattern,\n * and calling set of callbacks.\n *\n * Based on https://github.com/olov/ast-traverse\n *\n * Expects AST in Mozilla Parser API: nodes which are supposed to be\n * handled should have `type` property.\n *\n * @param Object root - a root node to start traversal from.\n *\n * @param Object options - an object with set of callbacks:\n *\n *   - `pre(node, parent, prop, index)` - a hook called on node enter\n *   - `post`(node, parent, prop, index) - a hook called on node exit\n *   - `skipProperty(prop)` - a predicated whether a property should be skipped\n */Comment.Multiline
\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
astTraverseName.Otherany0.3920void0.1363boolean0.1033string0.0624number0.0235
(Punctuation
rootName.Otherstring0.3339any0.1424Node0.0215number0.0097never0.0071
,Punctuation
 Text.Whitespace
optionsName.Otherany0.3248Options0.1019{}0.0504RequestOptions0.0092complex0.0078
 Text.Whitespace
=Operator
 Text.Whitespace
{Punctuation
}Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
preName.Otherany0.6143string0.1519boolean0.0339{}0.0283complex0.0274
 Text.Whitespace
=Operator
 Text.Whitespace
optionsName.Otherany0.6328complex0.0853Options0.0835{}0.0070void0.0043
.Punctuation
preName.Otherstring0.4547any0.3892complex0.0328boolean0.0235number0.0179
;Punctuation
\n  Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
postName.Otherany0.8026complex0.0562string0.0174Post0.0128Promise<any>0.0033
 Text.Whitespace
=Operator
 Text.Whitespace
optionsName.Otherany0.6102complex0.1099Options0.0616{}0.0050ConnectionOptions0.0040
.Punctuation
postName.Otherany0.6876complex0.1531string0.0289Post0.0176void0.0043
;Punctuation
\n  Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
skipPropertyName.Otherboolean0.4324any0.3792string0.0863complex0.0338number0.0171
 Text.Whitespace
=Operator
 Text.Whitespace
optionsName.Otherany0.7263complex0.0666Options0.0573number0.0047{}0.0045
.Punctuation
skipPropertyName.Otherany0.4403boolean0.3678complex0.0495string0.0391void0.0376
;Punctuation
\n\n  Text.Whitespace
functionKeyword.Declaration
 Text.Whitespace
visitName.Othervoid0.9940any0.0024Promise<void>0.0020complex0.0006string0.0003
(Punctuation
nodeName.Otherany0.7012Node0.0311ITreeNode0.0122Element0.0100string0.0065
,Punctuation
 Text.Whitespace
parentName.Otherany0.8417string0.0243Node0.0052HTMLElement0.0037Element0.0033
,Punctuation
 Text.Whitespace
propName.Otherany0.6142string0.3454number0.0118boolean0.0035complex0.0012
,Punctuation
 Text.Whitespace
idxName.Otherany0.6734number0.3110string0.0065boolean0.0023void0.0014
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
nodeName.Otherany0.9257boolean0.0064Node0.0056complex0.0054string0.0030
 Text.Whitespace
||Operator
 Text.Whitespace
typeofOperator.Word
 Text.Whitespace
nodeName.Otherany0.8430complex0.0213Node0.0097never0.0046Function0.0019
.Punctuation
typeKeyword.Reserved
 Text.Whitespace
!==Operator
 Text.Whitespace
'string'Literal.String.Single
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
returnKeyword
;Punctuation
\n    Text.Whitespace
}Punctuation
\n\n    Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
resName.Otherany0.8150string0.0913boolean0.0444number0.0178void0.0112
 Text.Whitespace
=Operator
 Text.Whitespace
undefinedKeyword.Constant
;Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
preName.Otherany0.3946string0.3313boolean0.2148complex0.0150void0.0095
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
resName.Otherany0.7071string0.1017boolean0.0910void0.0421complex0.0271
 Text.Whitespace
=Operator
 Text.Whitespace
preName.Otherany0.5037string0.1617void0.1584complex0.0919boolean0.0516
(Punctuation
nodeName.Otherany0.7674string0.0196Node0.0152complex0.0120never0.0101
,Punctuation
 Text.Whitespace
parentName.Otherany0.7522string0.1067never0.0055number0.0049Node0.0035
,Punctuation
 Text.Whitespace
propName.Otherany0.5268string0.4367number0.0144boolean0.0041complex0.0032
,Punctuation
 Text.Whitespace
idxName.Othernumber0.6500any0.3332string0.0077boolean0.0029void0.0020
)Punctuation
;Punctuation
\n    Text.Whitespace
}Punctuation
\n\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
resName.Otherboolean0.7247any0.2194void0.0207string0.0129complex0.0110
 Text.Whitespace
!==Operator
 Text.Whitespace
falseKeyword.Constant
)Punctuation
 Text.Whitespace
{Punctuation
\n\n      Text.Whitespace
// A node can be replaced during traversal, so we have toComment.Single
\n      Text.Whitespace
// recalculate it from the parent, to avoid traversing "dead" nodes.Comment.Single
\n      Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
parentName.Otherany0.7283string0.0202complex0.0079ViewBase0.0062Node0.0056
 Text.Whitespace
&&Operator
 Text.Whitespace
parentName.Otherany0.8805{}0.0086complex0.0073T0.0034string0.0031
[Punctuation
propName.Otherstring0.5657any0.4012number0.0204complex0.0034boolean0.0011
]Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
isNaNName.Builtinboolean0.9930complex0.0039any0.0013number0.0005string0.0002
(Punctuation
idxName.Othernumber0.6546any0.3334string0.0050boolean0.0016void0.0009
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n          Text.Whitespace
nodeName.Otherany0.9278complex0.0046Node0.0025Function0.0023T0.0017
 Text.Whitespace
=Operator
 Text.Whitespace
parentName.Otherany0.9205complex0.0034{}0.0028T0.0024ViewBase0.0013
[Punctuation
propName.Otherstring0.6553any0.2900number0.0374complex0.0018boolean0.0007
]Punctuation
[Punctuation
idxName.Othernumber0.8539any0.1353string0.0081void0.0004complex0.0002
]Punctuation
;Punctuation
\n        Text.Whitespace
}Punctuation
 Text.Whitespace
elseKeyword
 Text.Whitespace
{Punctuation
\n          Text.Whitespace
nodeName.Otherany0.9408complex0.0050string0.0029never0.0023Node0.0023
 Text.Whitespace
=Operator
 Text.Whitespace
parentName.Otherany0.9407complex0.0039{}0.0021string0.0020T0.0018
[Punctuation
propName.Otherstring0.5390any0.4188number0.0243complex0.0029{}0.0009
]Punctuation
;Punctuation
\n        Text.Whitespace
}Punctuation
\n      Text.Whitespace
}Punctuation
\n\n      Text.Whitespace
forKeyword
 Text.Whitespace
(Punctuation
letKeyword.Declaration
 Text.Whitespace
propName.Otherstring0.9287any0.0605number0.0066complex0.0011boolean0.0008
 Text.Whitespace
inOperator.Word
 Text.Whitespace
nodeName.Otherany0.5309complex0.2050{}0.0113string0.0111Node0.0089
)Punctuation
 Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
nodeName.Otherany0.6780complex0.1030Node0.0143T0.0074boolean0.0046
.Punctuation
hasOwnPropertyName.Othercomplex0.5237any0.4651boolean0.0036string0.0016Object0.0013
(Punctuation
propName.Otherstring0.6907any0.2550complex0.0144number0.0059{}0.0020
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
skipPropertyName.Otherboolean0.7306any0.1575string0.0561complex0.0300string[]0.0056
 Text.Whitespace
?Operator
 Text.Whitespace
skipPropertyName.Otherboolean0.5180any0.2862string0.0977complex0.0607any[]0.0057
(Punctuation
propName.Otherstring0.6396any0.3196complex0.0074number0.0071Object0.0014
,Punctuation
 Text.Whitespace
nodeName.Otherany0.7525string0.0440never0.0173complex0.0162Node0.0095
)Punctuation
 Text.Whitespace
:Operator
 Text.Whitespace
propName.Otherany0.5940string0.3477complex0.0091string[]0.0066number0.0061
[Punctuation
0Literal.Number.Float
]Punctuation
 Text.Whitespace
===Operator
 Text.Whitespace
'$'Literal.String.Single
)Punctuation
 Text.Whitespace
{Punctuation
\n          Text.Whitespace
continueKeyword
;Punctuation
\n        Text.Whitespace
}Punctuation
\n\n        Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
childName.Otherany0.4822complex0.0106T0.0106Node0.0093View0.0062
 Text.Whitespace
=Operator
 Text.Whitespace
nodeName.Otherany0.6976complex0.0387T0.0174Node0.0090{}0.0079
[Punctuation
propName.Otherstring0.8353any0.1317number0.0109complex0.0061{}0.0008
]Punctuation
;Punctuation
\n\n        Text.Whitespace
// Collection node.Comment.Single
\n        Text.Whitespace
//Comment.Single
\n        Text.Whitespace
// NOTE: a node (or several nodes) can be removed or insertedComment.Single
\n        Text.Whitespace
// during traversal.Comment.Single
\n        Text.Whitespace
//Comment.Single
\n        Text.Whitespace
// Current traversing index is stored on top of theComment.Single
\n        Text.Whitespace
// `NodePath.traversingIndexStack`. The stack is used to supportComment.Single
\n        Text.Whitespace
// recursive nature of the traversal.Comment.Single
\n        Text.Whitespace
//Comment.Single
\n        Text.Whitespace
// In this case `NodePath.traversingIndex` (which we use here) isComment.Single
\n        Text.Whitespace
// updated in the NodePath remove/insert methods.Comment.Single
\n        Text.Whitespace
//Comment.Single
\n        Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
ArrayName.BuiltinArrayConstructor0.9997Math0.0000ObjectConstructor0.0000complex0.0000any0.0000
.Punctuation
isArrayName.Othercomplex0.9983any0.0005any[]0.0003boolean0.0002void0.0001
(Punctuation
childName.Otherany0.5632complex0.0816any[]0.0150never0.0071Node0.0050
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n          Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
indexName.Othernumber0.9018any0.0922complex0.0017void0.0009string0.0007
 Text.Whitespace
=Operator
 Text.Whitespace
0Literal.Number.Float
;Punctuation
\n          Text.Whitespace
NodePathName.Otherany0.4524complex0.0082Object0.0062void0.0056Program0.0044
.Punctuation
traversingIndexStackName.Otherany0.7179any[]0.1026string[]0.0490complex0.0240number[]0.0070
.Punctuation
pushName.Othernumber0.8619any0.1307void0.0036boolean0.0011string0.0007
(Punctuation
indexName.Otherany0.5235number0.4626string0.0059complex0.0014void0.0009
)Punctuation
;Punctuation
\n          Text.Whitespace
whileKeyword
 Text.Whitespace
(Punctuation
indexName.Othernumber0.8506any0.1435string0.0016complex0.0008boolean0.0005
 Text.Whitespace
<Operator
 Text.Whitespace
childName.Otherany0.6395any[]0.0136complex0.0081Node0.0059string[]0.0044
.Punctuation
lengthName.Otherany0.5739number0.4210void0.0014string0.0012complex0.0009
)Punctuation
 Text.Whitespace
{Punctuation
\n            Text.Whitespace
visitName.Othervoid0.9844any0.0089Promise<void>0.0039complex0.0009number0.0003
(Punctuation
\n              Text.Whitespace
childName.Otherany0.8432any[]0.0121complex0.0051string[]0.0030Node0.0016
[Punctuation
indexName.Othernumber0.8606any0.1275string0.0074void0.0010complex0.0009
]Punctuation
,Punctuation
\n              Text.Whitespace
nodeName.Otherany0.8132Node0.0108string0.0099never0.0093complex0.0059
,Punctuation
\n              Text.Whitespace
propName.Otherany0.8055string0.1271number0.0163complex0.0034Object0.0019
,Punctuation
\n              Text.Whitespace
indexName.Othernumber0.5978any0.3877string0.0049complex0.0011void0.0008
\n            Text.Whitespace
)Punctuation
;Punctuation
\n            Text.Whitespace
indexName.Othernumber0.5242any0.4598string0.0086complex0.0010void0.0006
 Text.Whitespace
=Operator
 Text.Whitespace
NodePathName.Otherany0.9534number0.0166string0.0037complex0.0010Object0.0007
.Punctuation
updateTraversingIndexName.Otherany0.8393number0.1161string0.0137void0.0089complex0.0069
(Punctuation
+Operator
1Literal.Number.Float
)Punctuation
;Punctuation
\n          Text.Whitespace
}Punctuation
\n          Text.Whitespace
NodePathName.Otherany0.8156{}0.0044number0.0042void0.0037string0.0035
.Punctuation
traversingIndexStackName.Otherany0.9307complex0.0137string[]0.0132any[]0.0089string0.0067
.Punctuation
popName.Otherany0.9241string0.0296complex0.0082number0.0071void0.0031
(Punctuation
)Punctuation
;Punctuation
\n        Text.Whitespace
}Punctuation
\n\n        Text.Whitespace
// Simple node.Comment.Single
\n        Text.Whitespace
elseKeyword
 Text.Whitespace
{Punctuation
\n          Text.Whitespace
visitName.Othervoid0.9870any0.0068Promise<void>0.0038complex0.0008string0.0002
(Punctuation
childName.Otherany0.8984complex0.0069void0.0040T0.0040Node0.0034
,Punctuation
 Text.Whitespace
nodeName.Otherany0.9140never0.0075complex0.0062string0.0059Node0.0053
,Punctuation
 Text.Whitespace
propName.Otherany0.8378string0.1191number0.0079complex0.0052{}0.0032
)Punctuation
;Punctuation
\n        Text.Whitespace
}Punctuation
\n      Text.Whitespace
}Punctuation
\n    Text.Whitespace
}Punctuation
\n\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
postName.Otherany0.6065complex0.0759string0.0319boolean0.0286void0.0193
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
postName.Otherany0.8943complex0.0752void0.0118Promise<any>0.0016string0.0011
(Punctuation
nodeName.Otherany0.6429complex0.0168Node0.0155never0.0153string0.0113
,Punctuation
 Text.Whitespace
parentName.Otherany0.6542string0.0281never0.0155void0.0084complex0.0075
,Punctuation
 Text.Whitespace
propName.Otherany0.7582string0.1520number0.0100complex0.0056{}0.0025
,Punctuation
 Text.Whitespace
idxName.Othernumber0.6821any0.3025string0.0048void0.0026boolean0.0012
)Punctuation
;Punctuation
\n    Text.Whitespace
}Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
visitName.Othervoid0.9736Promise<void>0.0181any0.0043complex0.0007Promise<{}>0.0002
(Punctuation
rootName.Otherany0.4294string0.0659Node0.0171void0.0165T0.0131
,Punctuation
 Text.Whitespace
nullKeyword.Constant
)Punctuation
;Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
exportKeyword
 Text.Whitespace
defaultKeyword
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
/**\n   * Traverses an AST.\n   *\n   * @param Object ast - an AST node\n   *\n   * @param Object | Array<Object> handlers:\n   *\n   *   an object (or an array of objects)\n   *\n   *   Each such object contains a handler function per node.\n   *   In case of an array of handlers, they are applied in order.\n   *   A handler may return a transformed node (or a different type).\n   *\n   *   The per-node function may instead be an object with functions pre and post.\n   *   pre is called before visiting the node, post after.\n   *   If a handler is a function, it is treated as the pre function, with an empty post.\n   *\n   * @param Object options:\n   *\n   *   a config object, specifying traversal options:\n   *\n   *   `asNodes`: boolean - whether handlers should receives raw AST nodes\n   *   (false by default), instead of a `NodePath` wrapper. Note, by default\n   *   `NodePath` wrapper provides a set of convenient method to manipulate\n   *   a traversing AST, and also has access to all parents list. A raw\n   *   nodes traversal should be used in rare cases, when no `NodePath`\n   *   features are needed.\n   *\n   * Special hooks:\n   *\n   *   - `shouldRun(ast)` - a predicate determining whether the handler\n   *                        should be applied.\n   *\n   * NOTE: Multiple handlers are used as an optimization of applying all of\n   * them in one AST traversal pass.\n   */Comment.Multiline
\n  Text.Whitespace
traverseName.Otherany0.3311complex0.2890void0.2473boolean0.0994string0.0044
(Punctuation
astName.Otherany0.7265boolean0.0381string0.0365number0.0287complex0.0091
,Punctuation
 Text.Whitespace
handlersName.Othercomplex0.1723any[]0.1708any0.0716Handlers0.0165Object0.0117
,Punctuation
 Text.Whitespace
optionsName.Othercomplex0.4802any0.3184Options0.0153ConnectionOptions0.0062{}0.0050
 Text.Whitespace
=Operator
 Text.Whitespace
{Punctuation
asNodesName.Otherboolean0.9951any0.0026string0.0004false0.0003void0.0003
:Operator
 Text.Whitespace
falseKeyword.Type
}Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
ArrayName.BuiltinArrayConstructor0.9996Math0.0000ObjectConstructor0.0000any0.0000complex0.0000
.Punctuation
isArrayName.Othercomplex0.9974any0.0008any[]0.0005boolean0.0004void0.0001
(Punctuation
handlersName.Otherany[]0.6738complex0.0478Array0.0113any0.0085string[]0.0084
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
handlersName.Otherany[]0.4672complex0.0376Function[]0.0138Array0.0101Handlers0.0087
 Text.Whitespace
=Operator
 Text.Whitespace
[Punctuation
handlersName.Otherany[]0.3309complex0.1275any0.0670Object0.0287string[]0.0157
]Punctuation
;Punctuation
\n    Text.Whitespace
}Punctuation
\n\n    Text.Whitespace
// Filter out handlers by result of `shouldRun`, if the method is present.Comment.Single
\n    Text.Whitespace
handlersName.Otherany[]0.3500complex0.0279Handlers0.0126XMLHttpRequest0.0093Function[]0.0091
 Text.Whitespace
=Operator
 Text.Whitespace
handlersName.Otherany[]0.3161complex0.0931any0.0133XMLHttpRequest0.0100Handlers0.0097
.Punctuation
filterName.Othercomplex0.9830any0.0117v...0.0014U[]0.0005any[]0.0003
(Punctuation
handlerName.Otherany0.6409Function0.0350complex0.0209void0.0085boolean0.0084
 Text.Whitespace
=>Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
typeofOperator.Word
 Text.Whitespace
handlerName.Otherany0.5194complex0.0275Function0.0222boolean0.0059Node0.0039
.Punctuation
shouldRunName.Otherany0.7182boolean0.1989string0.0397complex0.0161void0.0031
 Text.Whitespace
!==Operator
 Text.Whitespace
'function'Literal.String.Single
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
returnKeyword
 Text.Whitespace
trueKeyword.Constant
;Punctuation
\n      Text.Whitespace
}Punctuation
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
handlerName.Otherany0.5706Function0.0179complex0.0121EventListener0.0062{}0.0042
.Punctuation
shouldRunName.Otherany0.5088void0.2861boolean0.1423complex0.0233Function0.0069
(Punctuation
astName.Otherany0.7332boolean0.0643string0.0310void0.0260number0.0257
)Punctuation
;Punctuation
\n    Text.Whitespace
}Punctuation
)Punctuation
;Punctuation
\n\n    Text.Whitespace
NodePathName.Otherany0.5903string0.0139Object0.0079{}0.0077number0.0073
.Punctuation
initRegistryName.Otherany0.4789void0.2742boolean0.1635complex0.0241string0.0125
(Punctuation
)Punctuation
;Punctuation
\n\n    Text.Whitespace
// Allow handlers to initializer themselves.Comment.Single
\n    Text.Whitespace
handlersName.Otherany[]0.2003complex0.1107any0.0277Function[]0.0189XMLHttpRequest0.0130
.Punctuation
forEachName.Othercomplex0.4261void0.3486any0.1561v...0.0458U[]0.0017
(Punctuation
handlerName.Otherany0.6782complex0.0362void0.0301Function0.0264string0.0050
 Text.Whitespace
=>Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
typeofOperator.Word
 Text.Whitespace
handlerName.Otherany0.6127complex0.0483Function0.0218void0.0060{}0.0055
.Punctuation
initName.Otherany0.7856void0.1237boolean0.0229complex0.0174string0.0148
 Text.Whitespace
===Operator
 Text.Whitespace
'function'Literal.String.Single
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
handlerName.Otherany0.6905Function0.0177complex0.0106{}0.0046EventListener0.0033
.Punctuation
initName.Othervoid0.7661any0.2113boolean0.0053Function0.0044complex0.0025
(Punctuation
astName.Otherany0.8534string0.0290boolean0.0177number0.0159void0.0153
)Punctuation
;Punctuation
\n      Text.Whitespace
}Punctuation
\n    Text.Whitespace
}Punctuation
)Punctuation
;Punctuation
\n\n    Text.Whitespace
functionKeyword.Declaration
 Text.Whitespace
getPathForName.Otherany0.5110boolean0.1556string0.0657complex0.0577void0.0571
(Punctuation
nodeName.Otherany0.3468Node0.0494ITreeNode0.0148TreeModel0.0109Tree0.0100
,Punctuation
 Text.Whitespace
parentName.Otherany0.3504string0.0333Node0.0166Element0.0083Tree0.0077
,Punctuation
 Text.Whitespace
propName.Otherany0.4463string0.3066number0.0473complex0.0052Object0.0041
,Punctuation
 Text.Whitespace
indexName.Othernumber0.7799any0.2070string0.0059boolean0.0007complex0.0005
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
parentPathName.Otherany0.5014string0.4352number0.0059complex0.0052{}0.0016
 Text.Whitespace
=Operator
 Text.Whitespace
NodePathName.Otherany0.8434string0.0606number0.0113complex0.0023{}0.0016
.Punctuation
getForNodeName.Otherany0.4840string0.4129number0.0156complex0.0155boolean0.0151
(Punctuation
parentName.Otherany0.5476string0.1669complex0.0077T0.0070Element0.0055
)Punctuation
;Punctuation
\n      Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
nodePathName.Otherany0.7584string0.0562complex0.0444Path0.0030boolean0.0029
 Text.Whitespace
=Operator
 Text.Whitespace
NodePathName.Otherany0.9076string0.0146complex0.0074number0.0049{}0.0021
.Punctuation
getForNodeName.Otherany0.7055complex0.0545string0.0496boolean0.0325number0.0098
(Punctuation
\n        Text.Whitespace
nodeName.Otherany0.7892string0.0227complex0.0128Node0.0075ITreeNode0.0057
,Punctuation
\n        Text.Whitespace
parentPathName.Otherstring0.6445any0.3397number0.0039complex0.0018boolean0.0006
,Punctuation
\n        Text.Whitespace
propName.Otherany0.5514string0.3777number0.0159complex0.0020{}0.0019
,Punctuation
\n        Text.Whitespace
indexName.Othernumber0.5874any0.3968string0.0071complex0.0007void0.0006
\n      Text.Whitespace
)Punctuation
;Punctuation
\n\n      Text.Whitespace
returnKeyword
 Text.Whitespace
nodePathName.Otherany0.8664string0.0333complex0.0079any[]0.0049boolean0.0035
;Punctuation
\n    Text.Whitespace
}Punctuation
\n\n    Text.Whitespace
// Handle actual nodes.Comment.Single
\n    Text.Whitespace
astTraverseName.Otherany0.3769boolean0.1578void0.0927complex0.0650string0.0458
(Punctuation
astName.Otherany0.3963string0.0128TsSimpleAst0.0109number0.0088Function0.0088
,Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
/**\n       * Handler on node enter.\n       */Comment.Multiline
\n      Text.Whitespace
preName.Otherany0.6377boolean0.1453string0.0748complex0.0464void0.0319
(Punctuation
nodeName.Otherany0.5364Node0.0330ITreeNode0.0126Element0.0109TreeNode0.0087
,Punctuation
 Text.Whitespace
parentName.Otherany0.5279string0.0432Node0.0120Element0.0113HTMLElement0.0045
,Punctuation
 Text.Whitespace
propName.Otherany0.5960string0.1926number0.0226complex0.0053Object0.0051
,Punctuation
 Text.Whitespace
indexName.Othernumber0.6270any0.3602string0.0049complex0.0008boolean0.0008
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
nodePathName.Otherany0.8908string0.0224complex0.0187any[]0.0038boolean0.0019
;Punctuation
\n        Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
optionsName.Otherany0.4526complex0.0711Options0.0301ConnectionOptions0.0048boolean0.0033
.Punctuation
asNodesName.Otherboolean0.5524any0.3527string0.0298number0.0284complex0.0187
)Punctuation
 Text.Whitespace
{Punctuation
\n          Text.Whitespace
nodePathName.Otherany0.9347string0.0232complex0.0203number0.0027any[]0.0026
 Text.Whitespace
=Operator
 Text.Whitespace
getPathForName.Otherany0.7945complex0.0662string0.0552boolean0.0246number0.0150
(Punctuation
nodeName.Otherany0.7785complex0.0115Node0.0098Element0.0091string0.0063
,Punctuation
 Text.Whitespace
parentName.Otherany0.7633string0.0487Element0.0054complex0.0052Node0.0047
,Punctuation
 Text.Whitespace
propName.Otherany0.8041string0.1393number0.0132complex0.0055{}0.0035
,Punctuation
 Text.Whitespace
indexName.Othernumber0.5447any0.4428string0.0047complex0.0012any[]0.0007
)Punctuation
;Punctuation
\n        Text.Whitespace
}Punctuation
\n\n        Text.Whitespace
forKeyword
 Text.Whitespace
(Punctuation
constKeyword.Declaration
 Text.Whitespace
handlerName.Otherany0.7144complex0.0149Function0.0134string0.0046{}0.0035
 Text.Whitespace
ofKeyword
 Text.Whitespace
handlersName.Othercomplex0.2257any[]0.1966any0.0694Handlers0.0114Array0.0051
)Punctuation
 Text.Whitespace
{Punctuation
\n          Text.Whitespace
// "Catch-all" `*` handler.Comment.Single
\n          Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
typeofOperator.Word
 Text.Whitespace
handlerName.Otherany0.8373complex0.0287{}0.0264Function0.0087boolean0.0059
[Punctuation
'*'Literal.String.Single
]Punctuation
 Text.Whitespace
===Operator
 Text.Whitespace
'function'Literal.String.Single
)Punctuation
 Text.Whitespace
{Punctuation
\n            Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
nodePathName.Otherany0.9105string0.0411boolean0.0149complex0.0128any[]0.0011
)Punctuation
 Text.Whitespace
{Punctuation
\n              Text.Whitespace
// A path/node can be removed by some previous handler.Comment.Single
\n              Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
nodePathName.Otherany0.9276complex0.0195string0.0029boolean0.0020RegExp0.0018
.Punctuation
isRemovedName.Otherany0.6859boolean0.3022complex0.0052string0.0037true0.0003
(Punctuation
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n                Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
handlerResultName.Otherany0.8701boolean0.0790string0.0115Function0.0060complex0.0044
 Text.Whitespace
=Operator
 Text.Whitespace
handlerName.Otherany0.5921{}0.0432Function0.0273complex0.0240Object0.0043
[Punctuation
'*'Literal.String.Single
]Punctuation
(Punctuation
nodePathName.Otherany0.8711string0.0830complex0.0250any[]0.0023boolean0.0014
)Punctuation
;Punctuation
\n                Text.Whitespace
// Explicitly stop traversal.Comment.Single
\n                Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
handlerResultName.Otherboolean0.7923any0.1883complex0.0081string0.0037false0.0020
 Text.Whitespace
===Operator
 Text.Whitespace
falseKeyword.Constant
)Punctuation
 Text.Whitespace
{Punctuation
\n                  Text.Whitespace
returnKeyword
 Text.Whitespace
falseKeyword.Constant
;Punctuation
\n                Text.Whitespace
}Punctuation
\n              Text.Whitespace
}Punctuation
\n            Text.Whitespace
}Punctuation
 Text.Whitespace
elseKeyword
 Text.Whitespace
{Punctuation
\n              Text.Whitespace
handlerName.Otherany0.7719{}0.0216Function0.0152complex0.0074Event0.0027
[Punctuation
'*'Literal.String.Single
]Punctuation
(Punctuation
nodeName.Otherany0.6969Node0.0220never0.0181complex0.0161Element0.0101
,Punctuation
 Text.Whitespace
parentName.Otherany0.6968string0.0351never0.0141complex0.0093Node0.0077
,Punctuation
 Text.Whitespace
propName.Otherany0.8177string0.1093number0.0085complex0.0079{}0.0078
,Punctuation
 Text.Whitespace
indexName.Othernumber0.4950any0.4891string0.0064complex0.0020{}0.0010
)Punctuation
;Punctuation
\n            Text.Whitespace
}Punctuation
\n          Text.Whitespace
}Punctuation
\n\n          Text.Whitespace
// Per-node handler.Comment.Single
\n          Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
handlerFuncPreName.Otherany0.8430boolean0.0646string0.0323void0.0174complex0.0132
;Punctuation
\n          Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
typeofOperator.Word
 Text.Whitespace
handlerName.Otherany0.7672complex0.0650{}0.0202Function0.0149void0.0091
[Punctuation
nodeName.Otherany0.7657complex0.0492Node0.0126string0.0071never0.0070
.Punctuation
typeKeyword.Reserved
]Punctuation
 Text.Whitespace
===Operator
 Text.Whitespace
'function'Literal.String.Single
)Punctuation
 Text.Whitespace
{Punctuation
\n            Text.Whitespace
handlerFuncPreName.Otherany0.8449boolean0.0780string0.0338complex0.0132Function0.0108
 Text.Whitespace
=Operator
 Text.Whitespace
handlerName.Otherany0.6687complex0.0492Function0.0307{}0.0249void0.0076
[Punctuation
nodeName.Otherany0.7100complex0.0404Node0.0140never0.0096string0.0075
.Punctuation
typeKeyword.Reserved
]Punctuation
;Punctuation
\n          Text.Whitespace
}Punctuation
 Text.Whitespace
elseKeyword
 Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
\n            Text.Whitespace
typeofOperator.Word
 Text.Whitespace
handlerName.Otherany0.7922complex0.0622{}0.0171Function0.0128void0.0080
[Punctuation
nodeName.Otherany0.8168complex0.0534Node0.0119never0.0078string0.0068
.Punctuation
typeKeyword.Reserved
]Punctuation
 Text.Whitespace
===Operator
 Text.Whitespace
'object'Literal.String.Single
 Text.Whitespace
&&Operator
\n            Text.Whitespace
typeofOperator.Word
 Text.Whitespace
handlerName.Otherany0.8051complex0.0568Function0.0122{}0.0104void0.0067
[Punctuation
nodeName.Otherany0.8202complex0.0370Node0.0121never0.0071string0.0055
.Punctuation
typeKeyword.Reserved
]Punctuation
.Punctuation
preName.Otherany0.9624string0.0157complex0.0088boolean0.0049void0.0021
 Text.Whitespace
===Operator
 Text.Whitespace
'function'Literal.String.Single
\n          Text.Whitespace
)Punctuation
 Text.Whitespace
{Punctuation
\n            Text.Whitespace
handlerFuncPreName.Otherany0.8299boolean0.0961string0.0335complex0.0121Function0.0088
 Text.Whitespace
=Operator
 Text.Whitespace
handlerName.Otherany0.7163complex0.0414{}0.0258Function0.0220void0.0075
[Punctuation
nodeName.Otherany0.8049complex0.0291Node0.0122never0.0073string0.0068
.Punctuation
typeKeyword.Reserved
]Punctuation
.Punctuation
preName.Otherany0.9750string0.0137boolean0.0025complex0.0020void0.0019
;Punctuation
\n          Text.Whitespace
}Punctuation
\n\n          Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
handlerFuncPreName.Otherboolean0.5805any0.3380string0.0403complex0.0192number0.0049
)Punctuation
 Text.Whitespace
{Punctuation
\n            Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
nodePathName.Otherany0.9270string0.0239complex0.0170boolean0.0091any[]0.0012
)Punctuation
 Text.Whitespace
{Punctuation
\n              Text.Whitespace
// A path/node can be removed by some previous handler.Comment.Single
\n              Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
nodePathName.Otherany0.9444complex0.0162string0.0020boolean0.0016any[]0.0005
.Punctuation
isRemovedName.Otherany0.6544boolean0.3354complex0.0050string0.0021void0.0004
(Punctuation
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n                Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
handlerResultName.Otherany0.7534boolean0.2091string0.0122complex0.0050Function0.0045
 Text.Whitespace
=Operator
 Text.Whitespace
handlerFuncPreName.Otherany0.8977boolean0.0363complex0.0195string0.0152Function0.0074
.Punctuation
callName.Otherany0.9894complex0.0018string0.0017number0.0008Function0.0007
(Punctuation
handlerName.Otherany0.8907Function0.0182void0.0170complex0.0087boolean0.0062
,Punctuation
 Text.Whitespace
nodePathName.Otherany0.8503complex0.0571string0.0500boolean0.0032any[]0.0031
)Punctuation
;Punctuation
\n                Text.Whitespace
// Explicitly stop traversal.Comment.Single
\n                Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
handlerResultName.Otherboolean0.6429any0.3333complex0.0075false0.0046string0.0037
 Text.Whitespace
===Operator
 Text.Whitespace
falseKeyword.Constant
)Punctuation
 Text.Whitespace
{Punctuation
\n                  Text.Whitespace
returnKeyword
 Text.Whitespace
falseKeyword.Constant
;Punctuation
\n                Text.Whitespace
}Punctuation
\n              Text.Whitespace
}Punctuation
\n            Text.Whitespace
}Punctuation
 Text.Whitespace
elseKeyword
 Text.Whitespace
{Punctuation
\n              Text.Whitespace
handlerFuncPreName.Otherany0.8598void0.0914complex0.0120Function0.0109boolean0.0078
.Punctuation
callName.Otherany0.9918void0.0018number0.0011complex0.0009Function0.0007
(Punctuation
handlerName.Otherany0.8498Function0.0310void0.0153complex0.0136{}0.0039
,Punctuation
 Text.Whitespace
nodeName.Otherany0.6361Node0.0197complex0.0147never0.0136Element0.0074
,Punctuation
 Text.Whitespace
parentName.Otherany0.7697string0.0204never0.0064complex0.0053Node0.0048
,Punctuation
 Text.Whitespace
propName.Otherany0.8867string0.0606number0.0076{}0.0050complex0.0046
,Punctuation
 Text.Whitespace
indexName.Otherany0.6480number0.3374string0.0037complex0.0017{}0.0008
)Punctuation
;Punctuation
\n            Text.Whitespace
}Punctuation
\n          Text.Whitespace
}Punctuation
\n        Text.Whitespace
}Punctuation
 Text.Whitespace
// Loop over handlersComment.Single
\n\n      Text.Whitespace
}Punctuation
,Punctuation
 Text.Whitespace
// pre funcComment.Single
\n\n      Text.Whitespace
/**\n       * Handler on node exit.\n       */Comment.Multiline
\n      Text.Whitespace
postName.Otherany0.7831void0.0623complex0.0452Function0.0068string0.0058
(Punctuation
nodeName.Otherany0.6031Node0.0266ITreeNode0.0108string0.0068Element0.0067
,Punctuation
 Text.Whitespace
parentName.Otherany0.7102string0.0320Node0.0057Element0.0037never0.0035
,Punctuation
 Text.Whitespace
propName.Otherany0.7529string0.1408number0.0097complex0.0058Object0.0052
,Punctuation
 Text.Whitespace
indexName.Otherany0.5337number0.4504string0.0056complex0.0016void0.0007
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
nodeName.Otherany0.8303Node0.0135complex0.0064Element0.0050never0.0044
)Punctuation
 Text.Whitespace
{Punctuation
\n          Text.Whitespace
returnKeyword
;Punctuation
\n        Text.Whitespace
}Punctuation
\n\n        Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
nodePathName.Otherany0.9371string0.0244complex0.0091any[]0.0022boolean0.0013
;Punctuation
\n        Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
optionsName.Otherany0.6110complex0.0631Options0.0231ConnectionOptions0.0036boolean0.0033
.Punctuation
asNodesName.Otherany0.4566boolean0.4452string0.0331number0.0242complex0.0204
)Punctuation
 Text.Whitespace
{Punctuation
\n          Text.Whitespace
nodePathName.Otherany0.9519string0.0203complex0.0140number0.0018any[]0.0017
 Text.Whitespace
=Operator
 Text.Whitespace
getPathForName.Otherany0.8276string0.0595complex0.0475boolean0.0160number0.0113
(Punctuation
nodeName.Otherany0.8146complex0.0107Node0.0101string0.0075Element0.0069
,Punctuation
 Text.Whitespace
parentName.Otherany0.8117string0.0448complex0.0055Node0.0039Element0.0035
,Punctuation
 Text.Whitespace
propName.Otherany0.8008string0.1461number0.0122complex0.0064{}0.0047
,Punctuation
 Text.Whitespace
indexName.Othernumber0.4940any0.4925string0.0058complex0.0014any[]0.0007
)Punctuation
;Punctuation
\n        Text.Whitespace
}Punctuation
\n\n        Text.Whitespace
forKeyword
 Text.Whitespace
(Punctuation
constKeyword.Declaration
 Text.Whitespace
handlerName.Otherany0.7425Function0.0240complex0.0217{}0.0056string0.0042
 Text.Whitespace
ofKeyword
 Text.Whitespace
handlersName.Othercomplex0.3689any[]0.1770any0.1039Handlers0.0069XMLHttpRequest0.0048
)Punctuation
 Text.Whitespace
{Punctuation
\n          Text.Whitespace
// Per-node handler.Comment.Single
\n          Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
handlerFuncPostName.Otherany0.8864boolean0.0404complex0.0239string0.0114void0.0110
;Punctuation
\n          Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
\n            Text.Whitespace
typeofOperator.Word
 Text.Whitespace
handlerName.Otherany0.8457complex0.0488{}0.0147Function0.0121void0.0065
[Punctuation
nodeName.Otherany0.8685complex0.0330Node0.0095string0.0069never0.0039
.Punctuation
typeKeyword.Reserved
]Punctuation
 Text.Whitespace
===Operator
 Text.Whitespace
'object'Literal.String.Single
 Text.Whitespace
&&Operator
\n            Text.Whitespace
typeofOperator.Word
 Text.Whitespace
handlerName.Otherany0.8829complex0.0364Function0.0082{}0.0069void0.0034
[Punctuation
nodeName.Otherany0.8953complex0.0212Node0.0091string0.0041never0.0036
.Punctuation
typeKeyword.Reserved
]Punctuation
.Punctuation
postName.Otherany0.9788complex0.0094string0.0053any[]0.0003boolean0.0003
 Text.Whitespace
===Operator
 Text.Whitespace
'function'Literal.String.Single
\n          Text.Whitespace
)Punctuation
 Text.Whitespace
{Punctuation
\n            Text.Whitespace
handlerFuncPostName.Otherany0.8590boolean0.0885string0.0244Function0.0066complex0.0059
 Text.Whitespace
=Operator
 Text.Whitespace
handlerName.Otherany0.7736complex0.0251Function0.0218{}0.0124void0.0065
[Punctuation
nodeName.Otherany0.8129complex0.0165Node0.0126string0.0084never0.0062
.Punctuation
typeKeyword.Reserved
]Punctuation
.Punctuation
postName.Otherany0.9822complex0.0057string0.0036void0.0009Promise<any>0.0006
;Punctuation
\n          Text.Whitespace
}Punctuation
\n\n          Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
handlerFuncPostName.Otherboolean0.5931any0.3348string0.0335complex0.0133number0.0049
)Punctuation
 Text.Whitespace
{Punctuation
\n            Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
nodePathName.Otherany0.9307string0.0238complex0.0109boolean0.0090number0.0012
)Punctuation
 Text.Whitespace
{Punctuation
\n              Text.Whitespace
// A path/node can be removed by some previous handler.Comment.Single
\n              Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
nodePathName.Otherany0.9597complex0.0099string0.0019boolean0.0016any[]0.0004
.Punctuation
isRemovedName.Otherany0.6953boolean0.2954complex0.0041string0.0020void0.0004
(Punctuation
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n                Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
handlerResultName.Otherany0.7326boolean0.2319string0.0107complex0.0040Function0.0036
 Text.Whitespace
=Operator
 Text.Whitespace
handlerFuncPostName.Otherany0.8931boolean0.0501complex0.0140string0.0130Function0.0061
.Punctuation
callName.Otherany0.9903string0.0017complex0.0014number0.0008void0.0006
(Punctuation
handlerName.Otherany0.8993Function0.0147void0.0137complex0.0065boolean0.0060
,Punctuation
 Text.Whitespace
nodePathName.Otherany0.8445string0.0540complex0.0514boolean0.0037any[]0.0034
)Punctuation
;Punctuation
\n                Text.Whitespace
// Explicitly stop traversal.Comment.Single
\n                Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
handlerResultName.Otherboolean0.6717any0.3049false0.0058complex0.0057string0.0035
 Text.Whitespace
===Operator
 Text.Whitespace
falseKeyword.Constant
)Punctuation
 Text.Whitespace
{Punctuation
\n                  Text.Whitespace
returnKeyword
 Text.Whitespace
falseKeyword.Constant
;Punctuation
\n                Text.Whitespace
}Punctuation
\n              Text.Whitespace
}Punctuation
\n            Text.Whitespace
}Punctuation
 Text.Whitespace
elseKeyword
 Text.Whitespace
{Punctuation
\n              Text.Whitespace
handlerFuncPostName.Otherany0.8134void0.1099boolean0.0311Function0.0114complex0.0108
.Punctuation
callName.Otherany0.9912void0.0015number0.0012string0.0009complex0.0006
(Punctuation
handlerName.Otherany0.7845Function0.0242complex0.0120void0.0109{}0.0050
,Punctuation
 Text.Whitespace
nodeName.Otherany0.5046Node0.0491never0.0241complex0.0163Element0.0095
,Punctuation
 Text.Whitespace
parentName.Otherany0.6393string0.0312Node0.0125never0.0117Element0.0056
,Punctuation
 Text.Whitespace
propName.Otherany0.8018string0.1179number0.0112{}0.0068complex0.0063
,Punctuation
 Text.Whitespace
indexName.Othernumber0.4956any0.4880string0.0064complex0.0015{}0.0008
)Punctuation
;Punctuation
\n            Text.Whitespace
}Punctuation
\n          Text.Whitespace
}Punctuation
\n        Text.Whitespace
}Punctuation
 Text.Whitespace
// Loop over handlersComment.Single
\n      Text.Whitespace
}Punctuation
,Punctuation
 Text.Whitespace
// post funcComment.Single
\n\n      Text.Whitespace
/**\n       * Skip locations by default.\n       */Comment.Multiline
\n      Text.Whitespace
skipPropertyName.Otherboolean0.9480any0.0191string0.0094complex0.0027number0.0024
(Punctuation
propName.Otherany0.6268string0.2805number0.0115{}0.0039complex0.0039
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
returnKeyword
 Text.Whitespace
propName.Otherany0.5363string0.4156number0.0073complex0.0049boolean0.0040
 Text.Whitespace
===Operator
 Text.Whitespace
'loc'Literal.String.Single
;Punctuation
\n      Text.Whitespace
}Punctuation
,Punctuation
\n    Text.Whitespace
}Punctuation
)Punctuation
;Punctuation
\n  Text.Whitespace
}Punctuation
,Punctuation
\nText.Whitespace
}Punctuation
;Punctuation
\nText.Whitespace
