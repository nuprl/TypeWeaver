varKeyword.Declaration
 Text.Whitespace
colorsName.Otherany0.9141string0.0398string[]0.0050complex0.0042any[]0.0031
 Text.Whitespace
=Operator
 Text.Whitespace
requireName.Other
(Punctuation
'./colors'Literal.String.Single
)Punctuation
;Punctuation
\nText.Whitespace
moduleName.Other
[Punctuation
'exports'Literal.String.Single
]Punctuation
 Text.Whitespace
=Operator
 Text.Whitespace
colorsName.Otherany0.5980string0.1433string[]0.0517complex0.0357any[]0.0174
;Punctuation
\n\nText.Whitespace
// Remark: By default, colors will add style properties to String.prototype.Comment.Single
\nText.Whitespace
//Comment.Single
\nText.Whitespace
// If you don't wish to extend String.prototype, you can do this instead andComment.Single
\nText.Whitespace
// native String will not be touched:Comment.Single
\nText.Whitespace
//Comment.Single
\nText.Whitespace
//   var colors = require('colors/safe);Comment.Single
\nText.Whitespace
//   colors.red("foo")Comment.Single
\nText.Whitespace
//Comment.Single
\nText.Whitespace
//Comment.Single
\nText.Whitespace
requireName.Other
(Punctuation
'./extendStringPrototype'Literal.String.Single
)Punctuation
(Punctuation
)Punctuation
;Punctuation
\n\nText.Whitespace
/* remove this line after testing */Comment.Multiline
\nText.Whitespace
letKeyword.Declaration
 Text.Whitespace
amName.Otherany0.8079string0.0920void0.0370number0.0168Function0.0073
 Text.Whitespace
=Operator
 Text.Whitespace
requireName.Other
(Punctuation
'../lib/custom/american'Literal.String.Single
)Punctuation
;Punctuation
\nText.Whitespace
amName.Othervoid0.9138any0.0189number0.0159Promise<void>0.0093string0.0068
(Punctuation
)Punctuation
;Punctuation
\nText.Whitespace
forKeyword
 Text.Whitespace
(Punctuation
letKeyword.Declaration
 Text.Whitespace
iName.Othernumber0.9986any0.0009string0.0003boolean0.0001void0.0000
 Text.Whitespace
=Operator
 Text.Whitespace
666Literal.Number.Float
;Punctuation
 Text.Whitespace
iName.Othernumber0.9946any0.0046string0.0004void0.0001boolean0.0001
 Text.Whitespace
<Operator
 Text.Whitespace
InfinityKeyword.Constantnumber0.9975any0.0016string0.0004boolean0.0002void0.0001
;Punctuation
 Text.Whitespace
iName.Othernumber0.9948any0.0046string0.0003boolean0.0001void0.0001
++Operator
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
iName.Othernumber0.9897any0.0095string0.0004boolean0.0002void0.0001
 Text.Whitespace
%Operator
 Text.Whitespace
333Literal.Number.Float
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
// console.log('testing'.zalgo.rainbow)Comment.Single
\n  Text.Whitespace
}Punctuation
\n  Text.Whitespace
consoleName.OtherConsole0.9998any0.0000void0.0000ToolRunner0.0000Assert0.0000
.Punctuation
logName.Othervoid0.9974complex0.0007any0.0006Promise<void>0.0002boolean0.0001
(Punctuation
'testing testing testing testing testing testing testing'Literal.String.Single
.Punctuation
zalgoName.Otherstring0.7622number0.1077any0.0840string[]0.0082void0.0042
)Punctuation
\nText.Whitespace
}Punctuation
\nText.Whitespace
