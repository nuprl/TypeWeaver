Found multiple declarations; skipping rest of declarations.
	let e: number = exponent, num = Number(arg), result = [], val = 0, u = EMPTY;
Found multiple declarations; skipping rest of declarations.
	let e: number = exponent, num = Number(arg), result = [], val = 0, u = EMPTY;
Found multiple declarations; skipping rest of declarations.
	let e: number = exponent, num = Number(arg), result = [], val = 0, u = EMPTY;
Found multiple declarations; skipping rest of declarations.
	let e: number = exponent, num = Number(arg), result = [], val = 0, u = EMPTY;
Found multiple declarations; skipping rest of declarations.
	const ceil: number = base === 10 ? 1000 : 1024, full = fullform === true, neg = 
Found multiple declarations; skipping rest of declarations.
	const ceil: number = base === 10 ? 1000 : 1024, full = fullform === true, neg = 
Found multiple declarations; skipping rest of declarations.
	const ceil: number = base === 10 ? 1000 : 1024, full = fullform === true, neg = 
Found multiple declarations; skipping rest of declarations.
	const x: any = separator || PERIOD, tmp = result[0].toString().split(x), s = tmp
Found multiple declarations; skipping rest of declarations.
	const x: any = separator || PERIOD, tmp = result[0].toString().split(x), s = tmp
Found multiple declarations; skipping rest of declarations.
	const x: any = separator || PERIOD, tmp = result[0].toString().split(x), s = tmp
Found multiple declarations; skipping rest of declarations.
	const x: any = separator || PERIOD, tmp = result[0].toString().split(x), s = tmp

