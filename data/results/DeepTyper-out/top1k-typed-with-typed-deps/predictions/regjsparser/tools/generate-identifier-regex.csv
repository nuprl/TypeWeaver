Text
// Based on https://gist.github.com/mathiasbynens/6334847 by @mathiasComment.Single
\n\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
regenerateName.Otherany0.7806string0.1018number0.0255Function0.0103void0.0056
 Text.Whitespace
=Operator
 Text.Whitespace
requireName.Other
(Punctuation
'regenerate'Literal.String.Single
)Punctuation
;Punctuation
\n\nText.Whitespace
// Which Unicode version should be used?Comment.Single
\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
versionName.Otherstring0.9542any0.0416RegExp0.0012number0.0011string[]0.0007
 Text.Whitespace
=Operator
 Text.Whitespace
'11.0.0'Literal.String.Single
;Punctuation
 Text.Whitespace
// note: also update `package.json` when this changesComment.Single
\n\nText.Whitespace
// Shorthand functionComment.Single
\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
getName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
functionKeyword.Declaration
(Punctuation
whatName.Otherany0.7318string0.2624number0.0023complex0.0006string[]0.0005
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
returnKeyword
 Text.Whitespace
requireName.Other
(Punctuation
'unicode-'Literal.String.Single
 Text.Whitespace
+Operator
 Text.Whitespace
versionName.Otherstring0.6988any0.2745number0.0241complex0.0010boolean0.0003
 Text.Whitespace
+Operator
 Text.Whitespace
'/'Literal.String.Single
 Text.Whitespace
+Operator
 Text.Whitespace
whatName.Otherstring0.5141any0.4780number0.0061complex0.0005void0.0002
 Text.Whitespace
+Operator
 Text.Whitespace
'/code-points'Literal.String.Single
)Punctuation
;Punctuation
\nText.Whitespace
}Punctuation
;Punctuation
\n\nText.Whitespace
// Get the Unicode properties needed to construct the regex.Comment.Single
\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
ID_StartName.Otherany0.7368string0.0308complex0.0064number0.0050void0.0049
 Text.Whitespace
=Operator
 Text.Whitespace
getName.Other
(Punctuation
'Binary_Property/ID_Start'Literal.String.Single
)Punctuation
;Punctuation
\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
ID_ContinueName.Otherany0.7924string0.0268number0.0062complex0.0056void0.0042
 Text.Whitespace
=Operator
 Text.Whitespace
getName.Other
(Punctuation
'Binary_Property/ID_Continue'Literal.String.Single
)Punctuation
;Punctuation
\n\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
generateRegexName.Otherany0.4347void0.2395string0.0479complex0.0418number0.0132
 Text.Whitespace
=Operator
 Text.Whitespace
functionKeyword.Declaration
(Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
// https://tc39.github.io/ecma262/#sec-identifier-names-static-semantics-early-errorsComment.Single
\n  Text.Whitespace
// http://unicode.org/reports/tr31/#Default_Identifier_SyntaxComment.Single
\n  Text.Whitespace
// https://bugs.ecmascript.org/show_bug.cgi?id=2717#c0Comment.Single
\n  Text.Whitespace
varKeyword.Declaration
 Text.Whitespace
identifierStartName.Otherany0.7422string0.0980number0.0297complex0.0064boolean0.0039
 Text.Whitespace
=Operator
 Text.Whitespace
regenerateName.Otherany0.7272string0.1130number0.0217complex0.0216void0.0027
(Punctuation
'$'Literal.String.Single
,Punctuation
 Text.Whitespace
'_'Literal.String.Single
)Punctuation
\n    Text.Whitespace
// Note: this already includes `Other_ID_Start`. http://git.io/wRCAfQComment.Single
\n    Text.Whitespace
.Punctuation
addName.Otherany0.8914complex0.0286void0.0107Set<any>0.0039string0.0026
(Punctuation
ID_StartName.Otherany0.7332string0.1639number0.0599void0.0168complex0.0051
)Punctuation
\n    Text.Whitespace
.Punctuation
removeRangeName.Otherany0.8311void0.0476string0.0237number0.0196complex0.0114
(Punctuation
0x0Literal.Number.Hex
,Punctuation
 Text.Whitespace
0x7FLiteral.Number.Hex
)Punctuation
;Punctuation
 Text.Whitespace
// remove ASCII symbols (regjsparser-specific)Comment.Single
\n  Text.Whitespace
varKeyword.Declaration
 Text.Whitespace
identifierPartOnlyName.Otherany0.7487string0.1186number0.0572complex0.0051void0.0034
 Text.Whitespace
=Operator
 Text.Whitespace
regenerateName.Otherany0.7642string0.0948number0.0277complex0.0244void0.0019
(Punctuation
'\u200C'Literal.String.Single
,Punctuation
 Text.Whitespace
'\u200D'Literal.String.Single
)Punctuation
\n    Text.Whitespace
// Note: `ID_Continue` already includes `Other_ID_Continue`. http://git.io/wRCAfQComment.Single
\n    Text.Whitespace
.Punctuation
addName.Otherany0.9121complex0.0269void0.0037Set<any>0.0033string0.0022
(Punctuation
ID_ContinueName.Otherany0.7917string0.1153number0.0574void0.0081complex0.0067
)Punctuation
\n    Text.Whitespace
.Punctuation
removeName.Otherany0.9507complex0.0229void0.0089string0.0037number0.0031
(Punctuation
ID_StartName.Otherany0.7366number0.1220string0.1056void0.0115complex0.0045
)Punctuation
\n    Text.Whitespace
.Punctuation
removeRangeName.Otherany0.8946void0.0285number0.0228string0.0201complex0.0094
(Punctuation
0x0Literal.Number.Hex
,Punctuation
 Text.Whitespace
0x7FLiteral.Number.Hex
)Punctuation
;Punctuation
 Text.Whitespace
// remove ASCII symbols (regjsparser-specific)Comment.Single
\n  Text.Whitespace
returnKeyword
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
'NonAsciiIdentifierStart'Literal.String.Single
:Operator
 Text.Whitespace
identifierStartName.Otherany0.8503number0.0767string0.0454void0.0067boolean0.0028
.Punctuation
toStringName.Otherany0.6781string0.3126complex0.0034number0.0019void0.0009
(Punctuation
)Punctuation
,Punctuation
\n    Text.Whitespace
'NonAsciiIdentifierPartOnly'Literal.String.Single
:Operator
 Text.Whitespace
identifierPartOnlyName.Otherany0.8343string0.0847number0.0584void0.0026boolean0.0020
.Punctuation
toStringName.Otherany0.7201string0.2734complex0.0019number0.0012void0.0007
(Punctuation
)Punctuation
\n  Text.Whitespace
}Punctuation
;Punctuation
\nText.Whitespace
}Punctuation
;Punctuation
\n\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
resultName.Otherany0.5984void0.0779string0.0523complex0.0286number0.0158
 Text.Whitespace
=Operator
 Text.Whitespace
generateRegexName.Otherany0.5376string0.0906complex0.0878void0.0810number0.0338
(Punctuation
)Punctuation
;Punctuation
\nText.Whitespace
consoleName.OtherConsole0.9998any0.0001void0.0000DOMTokenList0.0000Assert0.0000
.Punctuation
logName.Othervoid0.9969any0.0010complex0.0010Promise<void>0.0001number0.0001
(Punctuation
\n  Text.Whitespace
'// ECMAScript (Unicode v%s) NonAsciiIdentifierStart:\n\n%s\n'Literal.String.Single
,Punctuation
\n  Text.Whitespace
versionName.Otherstring0.5625any0.3579number0.0741complex0.0017string[]0.0006
,Punctuation
\n  Text.Whitespace
resultName.Otherany0.7277complex0.0066void0.0036string0.0034Console0.0019
.Punctuation
NonAsciiIdentifierStartName.Otherany0.8556number0.0512string0.0491void0.0247boolean0.0098
\nText.Whitespace
)Punctuation
;Punctuation
\nText.Whitespace
consoleName.OtherConsole0.9998any0.0001void0.0000Function0.0000number0.0000
.Punctuation
logName.Othervoid0.9971complex0.0009any0.0009number0.0001Promise<void>0.0001
(Punctuation
\n  Text.Whitespace
'// ECMAScript (Unicode v%s) NonAsciiIdentifierPartOnly:\n\n%s'Literal.String.Single
,Punctuation
\n  Text.Whitespace
versionName.Otherstring0.6785any0.2513number0.0637complex0.0019string[]0.0009
,Punctuation
\n  Text.Whitespace
resultName.Otherany0.6880complex0.0136void0.0040string0.0028{}0.0021
.Punctuation
NonAsciiIdentifierPartOnlyName.Otherany0.8032string0.0706number0.0681void0.0248boolean0.0096
\nText.Whitespace
)Punctuation
;Punctuation
\nText.Whitespace
