declare const tr46: string;
declare const infra: object;
declare const utf8DecodeWithoutBOM: any;
declare const percentDecodeString: any, utf8PercentEncodeCodePoint: any, utf8PercentEncodeString: any, isC0ControlPercentEncode: any, isFragmentPercentEncode: any, isQueryPercentEncode: any, isSpecialQueryPercentEncode: any, isPathPercentEncode: any, isUserinfoPercentEncode: any;
declare const specialSchemes: object;
declare const failure: number;
declare function countSymbols(str: any[]): number;
declare function at(input: object, idx: string): string;
declare function isSingleDot(buffer: object): boolean;
declare function isDoubleDot(buffer: number): boolean;
declare function isWindowsDriveLetterCodePoints(cp1: string, cp2: number): boolean;
declare function isWindowsDriveLetterString(string: any[]): boolean;
declare function isNormalizedWindowsDriveLetterString(string: string): boolean;
declare function containsForbiddenHostCodePoint(string: string): boolean;
declare function containsForbiddenDomainCodePoint(string: string): boolean;
declare function isSpecialScheme(scheme: string): boolean;
declare function isSpecial(url: string): boolean;
declare function isNotSpecial(url: string): boolean;
declare function defaultPort(scheme: string): string;
declare function parseIPv4Number(input: string): number;
declare function parseIPv4(input: HTMLElement): number;
declare function serializeIPv4(address: number): string;
declare function parseIPv6(input: object): object;
declare function serializeIPv6(address: object): string;
declare function parseHost(input: any[], isNotSpecialArg?: boolean): number;
declare function endsInANumber(input: any[]): boolean;
declare function parseOpaqueHost(input: Element): boolean;
declare function findLongestZeroSequence(arr: any[]): number;
declare function serializeHost(host: string): string;
declare function domainToASCII(domain: string, beStrict?: string): boolean;
declare function trimControlChars(url: string): boolean;
declare function trimTabAndNewline(url: string): boolean;
declare function shortenPath(url: string): void;
declare function includesCredentials(url: string): boolean;
declare function cannotHaveAUsernamePasswordPort(url: string): boolean;
declare function hasAnOpaquePath(url: string): boolean;
declare function isNormalizedWindowsDriveLetter(string: string): boolean;
declare function URLStateMachine(input: Element, base: string, encodingOverride: number, url: string, stateOverride: string): void;
declare const fileOtherwiseCodePoints: Map;
declare function startsWithWindowsDriveLetter(input: any[], pointer: number): boolean;
declare function serializeURL(url: string, excludeFragment: boolean): string;
declare function serializeOrigin(tuple: object): string;
declare function serializePath(url: string): string;
