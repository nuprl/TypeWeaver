browserShim.ts(4,13): error TS2339: Property 'shim' does not exist on type 'object'.
browserShim.ts(8,23): error TS2339: Property 'shim' does not exist on type 'Function'.
browserShim.ts(10,15): error TS2339: Property 'shim' does not exist on type 'Function'.
hasSymbols.ts(10,6): error TS2322: Type 'symbol' is not assignable to type 'string'.
hasSymbols.ts(25,2): error TS2322: Type 'number' is not assignable to type 'never'.
hasSymbols.ts(38,7): error TS2740: Type 'PropertyDescriptor' is missing the following properties from type 'Element': attributes, classList, className, clientHeight, and 160 more.
hasSymbols.ts(39,18): error TS2339: Property 'value' does not exist on type 'Element'.
hasSymbols.ts(39,49): error TS2339: Property 'enumerable' does not exist on type 'Element'.
implementation.ts(9,5): error TS2740: Type 'ObjectConstructor' is missing the following properties from type 'any[]': pop, push, concat, join, and 25 more.
implementation.ts(12,33): error TS2322: Type '(o: any) => symbol[]' is not assignable to type 'any[]'.
implementation.ts(17,19): error TS2349: This expression is not callable.
  Type 'any[]' has no call signatures.
implementation.ts(22,22): error TS2349: This expression is not callable.
  Type 'any[]' has no call signatures.
implementation.ts(26,7): error TS2322: Type 'any[] | ((o: any) => symbol[])' is not assignable to type 'Function'.
  Type 'any[]' is missing the following properties from type 'Function': apply, call, bind, prototype, and 5 more.
index.ts(9,41): error TS2345: Argument of type 'object' is not assignable to parameter of type '(this: unknown, ...args: readonly unknown[]) => unknown'.
  Type '{}' provides no match for the signature '(this: unknown, ...args: readonly unknown[]): unknown'.
shim.ts(7,6): error TS2322: Type 'object' is not assignable to type 'string'.
shim.ts(11,34): error TS2367: This condition will always return 'true' since the types '{ <T extends {}, U>(target: T, source: U): T & U; <T extends {}, U, V>(target: T, source1: U, source2: V): T & U & V; <T extends {}, U, V, W>(target: T, source1: U, source2: V, source3: W): T & ... 2 more ... & W; (target: object, ...sources: any[]): any; }' and 'string' have no overlap.

