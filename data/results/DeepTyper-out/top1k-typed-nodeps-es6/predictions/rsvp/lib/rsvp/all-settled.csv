importKeyword
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
defaultKeyword
 Text.Whitespace
asKeyword.Reserved
 Text.Whitespace
EnumeratorName.Otherany0.9985string0.0007complex0.0006void0.0001number0.0000
,Punctuation
\n  Text.Whitespace
setSettledResultName.Otherany0.8737complex0.0490void0.0148Promise<void>0.0095boolean0.0078
\nText.Whitespace
}Punctuation
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./enumerator'Literal.String.Single
;Punctuation
\nText.Whitespace
importKeyword
 Text.Whitespace
PromiseName.BuiltinPromiseConstructor0.8960any0.0860complex0.0095string0.0022Promise<any>0.0016
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./promise'Literal.String.Single
;Punctuation
\n\nText.Whitespace
/**\n@module rsvp\n@public\n**/Comment.Multiline
\n\nText.Whitespace
classKeyword.Declaration
 Text.Whitespace
AllSettledName.Otherany0.9983complex0.0011string0.0002void0.0001number0.0001
 Text.Whitespace
extendsKeyword
 Text.Whitespace
EnumeratorName.Otherany0.9992complex0.0006string0.0001void0.0000boolean0.0000
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
constructorKeyword.Reserved
(Punctuation
ConstructorName.Otherany0.7684string0.0777boolean0.0466void0.0102number0.0091
,Punctuation
 Text.Whitespace
entriesName.Otherany0.4131number0.1269string0.0335boolean0.0289Object0.0248
,Punctuation
 Text.Whitespace
labelName.Otherstring0.8688any0.0879number0.0031void0.0026complex0.0020
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
superKeyword
(Punctuation
ConstructorName.Otherany0.9511string0.0437number0.0016boolean0.0011void0.0011
,Punctuation
 Text.Whitespace
entriesName.Otherany0.4818any[]0.0316complex0.0236Object0.0146string0.0115
,Punctuation
 Text.Whitespace
falseKeyword.Constant
 Text.Whitespace
/* don't abort on reject */Comment.Multiline
,Punctuation
 Text.Whitespace
labelName.Otherstring0.6341any0.3130void0.0082complex0.0073number0.0020
)Punctuation
;Punctuation
\n  Text.Whitespace
}Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
AllSettledName.Otherany0.7183void0.1433complex0.0215Promise<void>0.0121Promise<{}>0.0037
.Punctuation
prototypeName.Otherany0.1379Object0.0212IterableX<any>0.0102void0.0097SDK0.0062
.Punctuation
_setResultAtName.Otherany0.4381void0.0852string0.0561complex0.0547boolean0.0370
 Text.Whitespace
=Operator
 Text.Whitespace
setSettledResultName.Otherany0.5337void0.1368complex0.0469string0.0317boolean0.0138
;Punctuation
\n\n  Text.Whitespace
/**\n  `RSVP.allSettled` is similar to `RSVP.all`, but instead of implementing\n  a fail-fast method, it waits until all the promises have returned and\n  shows you all the results. This is useful if you want to handle multiple\n  promises' failure states together as a set.\n\n  Returns a promise that is fulfilled when all the given promises have been\n  settled. The return promise is fulfilled with an array of the states of\n  the promises passed into the `promises` array argument.\n\n  Each state object will either indicate fulfillment or rejection, and\n  provide the corresponding value or reason. The states will take one of\n  the following formats:\n\n  ```javascript\n  { state: 'fulfilled', value: value }\n    or\n  { state: 'rejected', reason: reason }\n  ```\n\n  Example:\n\n  ```javascript\n  let promise1 = RSVP.Promise.resolve(1);\n  let promise2 = RSVP.Promise.reject(new Error('2'));\n  let promise3 = RSVP.Promise.reject(new Error('3'));\n  let promises = [ promise1, promise2, promise3 ];\n\n  RSVP.allSettled(promises).then(function(array){\n    // array == [\n    //   { state: 'fulfilled', value: 1 },\n    //   { state: 'rejected', reason: Error },\n    //   { state: 'rejected', reason: Error }\n    // ]\n    // Note that for the second item, reason.message will be '2', and for the\n    // third item, reason.message will be '3'.\n  }, function(error) {\n    // Not run. (This block would only be called if allSettled had failed,\n    // for instance if passed an incorrect argument type.)\n  });\n  ```\n\n  @method allSettled\n  @public\n  @static\n  @for rsvp\n  @param {Array} entries\n  @param {String} [label] - optional string that describes the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled with an array of the settled\n  states of the constituent promises.\n  */Comment.Multiline
\n\nText.Whitespace
exportKeyword
 Text.Whitespace
defaultKeyword
 Text.Whitespace
functionKeyword.Declaration
 Text.Whitespace
allSettledName.Otherany0.4315void0.1197complex0.0426Promise<void>0.0325boolean0.0313
(Punctuation
entriesName.Otherany0.7061number0.0209Object0.0124string0.0121any[]0.0037
,Punctuation
 Text.Whitespace
labelName.Otherstring0.6127any0.3002Buffer0.0036number0.0035complex0.0028
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
ArrayName.BuiltinArrayConstructor0.9995any0.0000Math0.0000ObjectConstructor0.0000complex0.0000
.Punctuation
isArrayName.Othercomplex0.9974any0.0011boolean0.0004number0.0001any[]0.0001
(Punctuation
entriesName.Otherany0.7913complex0.0441any[]0.0242Object0.0124number0.0105
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
PromiseName.BuiltinPromiseConstructor0.9895any0.0087complex0.0003Promise<any>0.0003string0.0002
.Punctuation
rejectName.Othercomplex0.9948any0.0029void0.0005any[]0.0001Promise<any>0.0001
(Punctuation
newOperator.Wordcomplex0.1697any0.1424boolean0.0377TypeErrorConstructor0.0272string0.0169
 Text.Whitespace
TypeErrorName.ExceptionTypeErrorConstructor0.9897ErrorConstructor0.0012MapConstructor0.0002BooleanConstructor0.0001NumberConstructor0.0001
(Punctuation
"Promise.allSettled must be called with an array"Literal.String.Double
)Punctuation
,Punctuation
 Text.Whitespace
labelName.Otherstring0.7113any0.2619void0.0025number0.0017complex0.0015
)Punctuation
;Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
returnKeyword
 Text.Whitespace
newOperator.Wordany0.7705Promise<any>0.0190complex0.0132Promise<{}>0.0116Promise<void>0.0100
 Text.Whitespace
AllSettledName.Otherany0.9913complex0.0041Promise<any>0.0007Promise<void>0.0006void0.0005
(Punctuation
PromiseName.BuiltinPromiseConstructor0.9927any0.0043Promise<any>0.0007complex0.0002string0.0002
,Punctuation
 Text.Whitespace
entriesName.Otherany0.3499any[]0.0737complex0.0404Object0.0286number0.0269
,Punctuation
 Text.Whitespace
labelName.Otherany0.5247string0.3565complex0.0143void0.0128Promise<string>0.0056
)Punctuation
.Punctuation
promiseName.OtherPromise<any>0.3447Promise<void>0.1323any0.1241Promise<number>0.0828Promise<string>0.0604
;Punctuation
\nText.Whitespace
}Punctuation
\nText.Whitespace
