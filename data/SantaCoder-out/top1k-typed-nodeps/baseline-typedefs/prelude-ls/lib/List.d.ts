declare var each: any, map: any, compact: any, filter: any, reject: any, remove: any, partition: any, find: any, head: any, first: any, tail: any, last: any, initial: any, empty: any, reverse: any, unique: any, uniqueBy: any, fold: any, foldl: any, fold1: any, foldl1: any, foldr: any, foldr1: any, unfoldr: any, concat: any, concatMap: any, flatten: any, difference: any, intersection: any, union: any, countBy: any, groupBy: any, andList: any, orList: any, any: any, all: any, sort: any, sortWith: any, sortBy: any, sum: any, product: any, mean: any, average: any, maximum: any, minimum: any, maximumBy: any, minimumBy: any, scan: any, scanl: any, scan1: any, scanl1: any, scanr: any, scanr1: any, slice: any, take: any, drop: any, splitAt: any, takeWhile: any, dropWhile: any, span: any, breakList: any, zip: any, zipWith: any, zipAll: any, zipAllWith: any, at: any, elemIndex: any, elemIndices: any, findIndex: any, findIndices: any, toString$: () => string;
declare function in$(x: any, xs: any[]): boolean;
declare function compose$(): () => any;
declare function not$(x: boolean): boolean;
