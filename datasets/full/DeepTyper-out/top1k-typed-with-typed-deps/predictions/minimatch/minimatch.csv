constKeyword.Declaration
 Text.Whitespace
minimatchName.Otherany0.9071string0.0619number0.0028complex0.0017Path0.0007
 Text.Whitespace
=Operator
 Text.Whitespace
moduleKeyword.Reserved
.exportsName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
(Punctuation
pName.Otherstring0.7987any0.1618number0.0068complex0.0050{}0.0015
,Punctuation
 Text.Whitespace
patternName.Otherstring0.8074any0.1485RegExp0.0171complex0.0063{}0.0057
,Punctuation
 Text.Whitespace
optionsName.Otherany0.2908{}0.1366complex0.0372Options0.0286ConnectionOptions0.0070
 Text.Whitespace
=Operator
 Text.Whitespace
{Punctuation
}Punctuation
)Punctuation
 Text.Whitespace
=>Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
assertValidPatternName.Otherboolean0.4737any0.2821string0.1684complex0.0451number0.0041
(Punctuation
patternName.Otherstring0.7411any0.1594RegExp0.0405complex0.0387{}0.0035
)Punctuation
\n\n  Text.Whitespace
// shortcut: comments match nothing.Comment.Single
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
optionsName.Otherany0.3831Options0.1012complex0.0921boolean0.0100ConnectionOptions0.0099
.Punctuation
nocommentName.Otherboolean0.7456any0.1591string0.0686RegExp0.0062complex0.0058
 Text.Whitespace
&&Operator
 Text.Whitespace
patternName.Otherstring0.8093any0.1666RegExp0.0120complex0.0061boolean0.0031
.Punctuation
charAtName.Otherstring0.8128any0.1790boolean0.0040complex0.0027number0.0003
(Punctuation
0Literal.Number.Float
)Punctuation
 Text.Whitespace
===Operator
 Text.Whitespace
'#'Literal.String.Single
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
falseKeyword.Constant
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
returnKeyword
 Text.Whitespace
newOperator.Wordany0.9385string0.0335complex0.0058boolean0.0026{}0.0025
 Text.Whitespace
MinimatchName.Otherany0.9966string0.0024complex0.0006boolean0.0001void0.0001
(Punctuation
patternName.Otherstring0.9114any0.0675complex0.0108RegExp0.0041string[]0.0014
,Punctuation
 Text.Whitespace
optionsName.Otherany0.2694complex0.1817Options0.0725{}0.0177string0.0109
)Punctuation
.Punctuation
matchName.Otherany0.8219complex0.1674boolean0.0052string0.0028void0.0006
(Punctuation
pName.Otherany0.4417string0.3846complex0.0824RegExp0.0379{}0.0070
)Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
moduleKeyword.Reserved
.exportsName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
minimatchName.Otherany0.9888string0.0087number0.0004complex0.0002{}0.0001
\n\nText.Whitespace
constKeyword.Declaration
 Text.Whitespace
pathName.Otherany0.9948string0.0045complex0.0004any[]0.0001Path0.0000
 Text.Whitespace
=Operator
 Text.Whitespace
requireName.Other
(Punctuation
'./lib/path.js'Literal.String.Single
)Punctuation
\nText.Whitespace
minimatchName.Otherany0.9991string0.0003complex0.0001number0.0000void0.0000
.Punctuation
sepName.Otherany0.9984string0.0015number0.0000complex0.0000boolean0.0000
 Text.Whitespace
=Operator
 Text.Whitespace
pathName.Otherany0.9993string0.0004complex0.0002number0.0000any[]0.0000
.Punctuation
sepName.Otherany0.9987string0.0011number0.0000complex0.0000symbol0.0000
\n\nText.Whitespace
constKeyword.Declaration
 Text.Whitespace
GLOBSTARName.Otherany0.4501symbol0.2112number0.0685complex0.0623string0.0521
 Text.Whitespace
=Operator
 Text.Whitespace
SymbolName.BuiltinSymbolConstructor0.9797any0.0062symbol0.0035complex0.0026{}0.0009
(Punctuation
'globstar **'Literal.String.Single
)Punctuation
\nText.Whitespace
minimatchName.Otherany0.9709string0.0011complex0.0008symbol0.0004{}0.0003
.Punctuation
GLOBSTARName.Otherany0.9609string0.0292number0.0026boolean0.0022void0.0008
 Text.Whitespace
=Operator
 Text.Whitespace
GLOBSTARName.Otherany0.7052string0.2143boolean0.0192number0.0146void0.0086
\nText.Whitespace
constKeyword.Declaration
 Text.Whitespace
expandName.Otherany0.9798string0.0050any[]0.0042complex0.0031boolean0.0017
 Text.Whitespace
=Operator
 Text.Whitespace
requireName.Other
(Punctuation
'brace-expansion'Literal.String.Single
)Punctuation
\n\nText.Whitespace
constKeyword.Declaration
 Text.Whitespace
plTypesName.Othercomplex0.7798any0.0786{}0.0060string0.0032any[]0.0021
 Text.Whitespace
=Operator
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
'!'Literal.String.Single
:Operator
 Text.Whitespace
{Punctuation
 Text.Whitespace
openName.Otherstring0.9944any0.0022RegExp0.0018number0.0006boolean0.0003
:Operator
 Text.Whitespace
'(?:(?!(?:'Literal.String.Single
,Punctuation
 Text.Whitespace
closeName.Otherstring0.9977any0.0009RegExp0.0005number0.0004string[]0.0002
:Operator
 Text.Whitespace
'))[^/]*?)'Literal.String.Single
}Punctuation
,Punctuation
\n  Text.Whitespace
'?'Literal.String.Single
:Operator
 Text.Whitespace
{Punctuation
 Text.Whitespace
openName.Otherstring0.9951RegExp0.0020any0.0014number0.0005boolean0.0003
:Operator
 Text.Whitespace
'(?:'Literal.String.Single
,Punctuation
 Text.Whitespace
closeName.Otherstring0.9979any0.0007RegExp0.0005number0.0004string[]0.0002
:Operator
 Text.Whitespace
')?'Literal.String.Single
 Text.Whitespace
}Punctuation
,Punctuation
\n  Text.Whitespace
'+'Literal.String.Single
:Operator
 Text.Whitespace
{Punctuation
 Text.Whitespace
openName.Otherstring0.9954RegExp0.0019any0.0012number0.0005boolean0.0003
:Operator
 Text.Whitespace
'(?:'Literal.String.Single
,Punctuation
 Text.Whitespace
closeName.Otherstring0.9980any0.0006RegExp0.0005number0.0004string[]0.0002
:Operator
 Text.Whitespace
')+'Literal.String.Single
 Text.Whitespace
}Punctuation
,Punctuation
\n  Text.Whitespace
'*'Literal.String.Single
:Operator
 Text.Whitespace
{Punctuation
 Text.Whitespace
openName.Otherstring0.9955RegExp0.0019any0.0012number0.0005boolean0.0003
:Operator
 Text.Whitespace
'(?:'Literal.String.Single
,Punctuation
 Text.Whitespace
closeName.Otherstring0.9981any0.0006RegExp0.0005number0.0004string[]0.0002
:Operator
 Text.Whitespace
')*'Literal.String.Single
 Text.Whitespace
}Punctuation
,Punctuation
\n  Text.Whitespace
'@'Literal.String.Single
:Operator
 Text.Whitespace
{Punctuation
 Text.Whitespace
openName.Otherstring0.9955RegExp0.0019any0.0012number0.0005boolean0.0003
:Operator
 Text.Whitespace
'(?:'Literal.String.Single
,Punctuation
 Text.Whitespace
closeName.Otherstring0.9980RegExp0.0006any0.0006number0.0004string[]0.0002
:Operator
 Text.Whitespace
')'Literal.String.Single
 Text.Whitespace
}Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
Text
// any single thing other than /Comment.Single
\nText.Whitespace
// don't need to escape / when using new RegExp()Comment.Single
\nText.Whitespace
constKeyword.Declaration
 Text.Whitespace
qmarkName.OtherRegExp0.5740string0.4013any0.0113string[]0.0047number0.0019
 Text.Whitespace
=Operator
 Text.Whitespace
'[^/]'Literal.String.Single
\n\nText.Whitespace
Text
// * => any number of charactersComment.Single
\nText.Whitespace
constKeyword.Declaration
 Text.Whitespace
starName.Otherstring0.9741any0.0146number0.0048string[]0.0019complex0.0015
 Text.Whitespace
=Operator
 Text.Whitespace
qmarkName.Otherstring0.8613any0.0975number0.0293complex0.0036boolean0.0031
 Text.Whitespace
+Operator
 Text.Whitespace
'*?'Literal.String.Single
\n\nText.Whitespace
Text
// ** when dots are allowed.  Anything goes, except .. and .Comment.Single
\nText.Whitespace
// not (^ or / followed by one or two dots followed by $ or /),Comment.Single
\nText.Whitespace
// followed by anything, any number of times.Comment.Single
\nText.Whitespace
constKeyword.Declaration
 Text.Whitespace
twoStarDotName.OtherRegExp0.6797string0.2896any0.0147string[]0.0069boolean0.0022
 Text.Whitespace
=Operator
 Text.Whitespace
'(?:(?!(?:\\\/|^)(?:\\.{1,2})($|\\\/)).)*?'Literal.String.Single
\n\nText.Whitespace
Text
// not a ^ or / followed by a dot,Comment.Single
\nText.Whitespace
// followed by anything, any number of times.Comment.Single
\nText.Whitespace
constKeyword.Declaration
 Text.Whitespace
twoStarNoDotName.OtherRegExp0.7810string0.1863string[]0.0137any0.0098boolean0.0021
 Text.Whitespace
=Operator
 Text.Whitespace
'(?:(?!(?:\\\/|^)\\.).)*?'Literal.String.Single
\n\nText.Whitespace
Text
// "abc" -> { a:true, b:true, c:true }Comment.Single
\nText.Whitespace
constKeyword.Declaration
 Text.Whitespace
charSetName.Otherstring[]0.4072string0.2671any0.1723RegExp0.0522boolean0.0224
 Text.Whitespace
=Operator
 Text.Whitespace
sName.Otherstring0.7776any0.2117string[]0.0036number0.0020complex0.0013
 Text.Whitespace
=>Punctuation
 Text.Whitespace
sName.Otherstring0.9020any0.0953number0.0011string[]0.0004boolean0.0003
.Punctuation
splitName.Othercomplex0.8881any0.1079string0.0010string[]0.0008boolean0.0002
(Punctuation
''Literal.String.Single
)Punctuation
.Punctuation
reduceName.Othercomplex0.7961any0.1269any...0.0648U[]0.0012number0.0012
(Punctuation
(Punctuation
setName.Other
,Punctuation
 Text.Whitespace
cName.Otherstring0.9458any0.0372number0.0050complex0.0047boolean0.0029
)Punctuation
 Text.Whitespace
=>Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
setName.Other
[Punctuation
cName.Otherstring0.9378any0.0417number0.0131complex0.0030boolean0.0018
]Punctuation
 Text.Whitespace
=Operator
 Text.Whitespace
trueKeyword.Constant
\n  Text.Whitespace
returnKeyword
 Text.Whitespace
setName.Other
\nText.Whitespace
}Punctuation
,Punctuation
 Text.Whitespace
{Punctuation
}Punctuation
)Punctuation
\n\nText.Whitespace
Text
// characters that need to be escaped in RegExp.Comment.Single
\nText.Whitespace
constKeyword.Declaration
 Text.Whitespace
reSpecialsName.Otherstring0.3916any0.2561RegExp0.0736complex0.0710string[]0.0458
 Text.Whitespace
=Operator
 Text.Whitespace
charSetName.Otherstring0.3747any0.2273complex0.1973boolean0.0376number0.0313
(Punctuation
'().*{}+?[]^$\\!'Literal.String.Single
)Punctuation
\n\nText.Whitespace
Text
// characters that indicate we have to add the pattern startComment.Single
\nText.Whitespace
constKeyword.Declaration
 Text.Whitespace
addPatternStartSetName.Otherstring0.4602any0.2320complex0.0648RegExp0.0586string[]0.0523
 Text.Whitespace
=Operator
 Text.Whitespace
charSetName.Otherstring0.4168any0.2062complex0.1710boolean0.0329string[]0.0313
(Punctuation
'[.('Literal.String.Single
)Punctuation
\n\nText.Whitespace
Text
// normalizes slashes.Comment.Single
\nText.Whitespace
constKeyword.Declaration
 Text.Whitespace
slashSplitName.Otherstring0.5932RegExp0.2301any0.0816string[]0.0456boolean0.0132
 Text.Whitespace
=Operator
 Text.Whitespace
/\/+/Literal.String.Regex
\n\nText.Whitespace
minimatchName.Otherany0.9605string0.0056complex0.0024{}0.0006HTMLDivElement0.0005
.Punctuation
filterName.Otherany0.8951complex0.0830string0.0152boolean0.0016{}0.0006
 Text.Whitespace
=Operator
 Text.Whitespace
(Punctuation
patternName.Otherstring0.9029any0.0762complex0.0092RegExp0.0025{}0.0022
,Punctuation
 Text.Whitespace
optionsName.Otherany0.2879{}0.2513complex0.0939string0.0109Options0.0076
 Text.Whitespace
=Operator
 Text.Whitespace
{Punctuation
}Punctuation
)Punctuation
 Text.Whitespace
=>Punctuation
\n  Text.Whitespace
(Punctuation
pName.Otherstring0.8555any0.1189number0.0060complex0.0051string[]0.0035
,Punctuation
 Text.Whitespace
iName.Othernumber0.8955any0.0668string0.0316boolean0.0016complex0.0010
,Punctuation
 Text.Whitespace
listName.Otherany0.6358string0.1059string[]0.0835complex0.0236any[]0.0120
)Punctuation
 Text.Whitespace
=>Punctuation
 Text.Whitespace
minimatchName.Otherany0.9899string0.0063complex0.0005number0.0003{}0.0002
(Punctuation
pName.Otherstring0.9093any0.0727complex0.0067string[]0.0037number0.0033
,Punctuation
 Text.Whitespace
patternName.Otherstring0.9377any0.0484complex0.0057string[]0.0022{}0.0014
,Punctuation
 Text.Whitespace
optionsName.Otherany0.2031Options0.0722complex0.0672{}0.0599string0.0200
)Punctuation
\n\nText.Whitespace
constKeyword.Declaration
 Text.Whitespace
extName.Otherany0.8171string0.0943complex0.0213number0.0044{}0.0030
 Text.Whitespace
=Operator
 Text.Whitespace
(Punctuation
aName.Otherany0.5137string0.3378{}0.0639complex0.0176number0.0081
,Punctuation
 Text.Whitespace
bName.Other{}0.6124any0.3113complex0.0140string0.0094object0.0068
 Text.Whitespace
=Operator
 Text.Whitespace
{Punctuation
}Punctuation
)Punctuation
 Text.Whitespace
=>Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
tName.Other{}0.5346any0.3700complex0.0215string0.0147object0.0042
 Text.Whitespace
=Operator
 Text.Whitespace
{Punctuation
}Punctuation
\n  Text.Whitespace
ObjectName.BuiltinObjectConstructor0.9997complex0.0001any0.0001Object0.0000{}0.0000
.Punctuation
keysName.Otherstring[]0.9945any[]0.0019complex0.0017string0.0008any0.0002
(Punctuation
aName.Otherany0.6764complex0.1398{}0.1216string0.0250Object0.0083
)Punctuation
.Punctuation
forEachName.Othervoid0.8485complex0.1065any0.0172v...0.0120boolean0.0026
(Punctuation
kName.Otherstring0.9230any0.0720number0.0014complex0.0011boolean0.0007
 Text.Whitespace
=>Punctuation
 Text.Whitespace
tName.Otherany0.7436{}0.1399string0.0235complex0.0224string[]0.0054
[Punctuation
kName.Otherstring0.9793any0.0171number0.0016complex0.0007string[]0.0003
]Punctuation
 Text.Whitespace
=Operator
 Text.Whitespace
aName.Otherany0.7900{}0.0821complex0.0718string0.0292string[]0.0073
[Punctuation
kName.Otherstring0.9718any0.0214number0.0037complex0.0011{}0.0006
]Punctuation
)Punctuation
\n  Text.Whitespace
ObjectName.BuiltinObjectConstructor0.9994complex0.0002any0.0002Object0.0000{}0.0000
.Punctuation
keysName.Otherstring[]0.9937complex0.0025any[]0.0018string0.0008any0.0002
(Punctuation
bName.Otherany0.5379{}0.3129complex0.1063string0.0083T0.0043
)Punctuation
.Punctuation
forEachName.Othervoid0.8456complex0.0972any0.0245v...0.0138boolean0.0027
(Punctuation
kName.Otherstring0.8884any0.1048number0.0026complex0.0012boolean0.0009
 Text.Whitespace
=>Punctuation
 Text.Whitespace
tName.Otherany0.7557{}0.1253complex0.0182string0.0180string[]0.0036
[Punctuation
kName.Otherstring0.9711any0.0236number0.0032complex0.0008boolean0.0003
]Punctuation
 Text.Whitespace
=Operator
 Text.Whitespace
bName.Otherany0.6379{}0.2373complex0.0537string0.0181string[]0.0046
[Punctuation
kName.Otherstring0.9312any0.0552number0.0090complex0.0015{}0.0008
]Punctuation
)Punctuation
\n  Text.Whitespace
returnKeyword
 Text.Whitespace
tName.Otherany0.8828string0.0522{}0.0211number0.0046boolean0.0032
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
minimatchName.Otherany0.9786string0.0010complex0.0007{}0.0003T0.0002
.Punctuation
defaultsName.Otherany0.9933complex0.0021string0.0017{}0.0006number0.0003
 Text.Whitespace
=Operator
 Text.Whitespace
defName.Otherany0.9408string0.0153{}0.0076number0.0047Object0.0028
 Text.Whitespace
=>Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
defName.Otherany0.8573boolean0.0388string0.0190{}0.0155complex0.0108
 Text.Whitespace
||Operator
 Text.Whitespace
typeofOperator.Word
 Text.Whitespace
defName.Otherany0.9300string0.0118{}0.0084complex0.0065boolean0.0058
 Text.Whitespace
!==Operator
 Text.Whitespace
'object'Literal.String.Single
 Text.Whitespace
||Operator
 Text.Whitespace
!Operator
ObjectName.BuiltinObjectConstructor0.9991complex0.0004any0.0002Object0.0000{}0.0000
.Punctuation
keysName.Otherstring[]0.9891any[]0.0045complex0.0036string0.0008any0.0005
(Punctuation
defName.Otherany0.9109{}0.0246complex0.0092number0.0049Object0.0044
)Punctuation
.Punctuation
lengthName.Othernumber0.7914any0.2039string0.0030complex0.0005boolean0.0003
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
minimatchName.Otherany0.9764string0.0124number0.0010{}0.0005Promise<any>0.0005
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
origName.Otherany0.7549complex0.1111Promise<any>0.0164string0.0139any[]0.0040
 Text.Whitespace
=Operator
 Text.Whitespace
minimatchName.Otherany0.9927string0.0032complex0.0003number0.0003Promise<any>0.0002
\n\n  Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
mName.Otherany0.8465complex0.0344string0.0190Promise<any>0.0037any[]0.0027
 Text.Whitespace
=Operator
 Text.Whitespace
(Punctuation
pName.Otherstring0.7213any0.2083complex0.0148number0.0073any[]0.0043
,Punctuation
 Text.Whitespace
patternName.Otherstring0.8036any0.1669complex0.0088RegExp0.0047{}0.0043
,Punctuation
 Text.Whitespace
optionsName.Otherany0.4896Options0.0469complex0.0353ConnectionOptions0.0201{}0.0183
)Punctuation
 Text.Whitespace
=>Punctuation
 Text.Whitespace
origName.Otherany0.8095complex0.1457string0.0096Promise<any>0.0070boolean0.0021
(Punctuation
pName.Otherany0.6098string0.3067complex0.0508number0.0034any[]0.0034
,Punctuation
 Text.Whitespace
patternName.Otherstring0.6789any0.2885complex0.0115RegExp0.0063{}0.0035
,Punctuation
 Text.Whitespace
extName.Otherany0.9505complex0.0201string0.0187boolean0.0013{}0.0006
(Punctuation
defName.Otherany0.9321{}0.0121complex0.0082string0.0073Object0.0043
,Punctuation
 Text.Whitespace
optionsName.Otherany0.3830Options0.1105complex0.0931{}0.0467ConnectionOptions0.0146
)Punctuation
)Punctuation
\n  Text.Whitespace
mName.Otherany0.9131complex0.0659{}0.0012string0.0011any[]0.0008
.Punctuation
MinimatchName.Otherany0.9909string0.0069complex0.0009boolean0.0005Promise<any>0.0002
 Text.Whitespace
=Operator
 Text.Whitespace
classKeyword.Declaration
 Text.Whitespace
MinimatchName.Otherany0.9957string0.0032complex0.0007boolean0.0001number0.0001
 Text.Whitespace
extendsKeyword
 Text.Whitespace
origName.Otherany0.9152complex0.0706string0.0028any[]0.0024{}0.0011
.Punctuation
MinimatchName.Otherany0.9987string0.0008complex0.0002any[]0.0000{}0.0000
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
constructorKeyword.Reserved
 Text.Whitespace
(Punctuation
patternName.Otherstring0.8062any0.1460RegExp0.0207complex0.0079{}0.0047
,Punctuation
 Text.Whitespace
optionsName.Otherany0.5216Options0.0883complex0.0155{}0.0119Config0.0116
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
superKeyword
(Punctuation
patternName.Otherstring0.7750any0.2063complex0.0073RegExp0.0030{}0.0017
,Punctuation
 Text.Whitespace
extName.Otherany0.9461string0.0234complex0.0210boolean0.0015{}0.0006
(Punctuation
defName.Otherany0.9446{}0.0066string0.0053number0.0050complex0.0043
,Punctuation
 Text.Whitespace
optionsName.Otherany0.3727Options0.1260{}0.0345complex0.0326ConnectionOptions0.0154
)Punctuation
)Punctuation
\n    Text.Whitespace
}Punctuation
\n  Text.Whitespace
}Punctuation
\n  Text.Whitespace
mName.Otherany0.9337complex0.0352string0.0012Promise<any>0.0010{}0.0007
.Punctuation
MinimatchName.Otherany0.9928complex0.0041string0.0019{}0.0002boolean0.0002
.Punctuation
defaultsName.Otherany0.9769complex0.0114string0.0063{}0.0008number0.0008
 Text.Whitespace
=Operator
 Text.Whitespace
optionsName.Otherany0.8051complex0.0764Options0.0093{}0.0084string0.0051
 Text.Whitespace
=>Punctuation
 Text.Whitespace
origName.Otherany0.9281complex0.0543string0.0037Promise<any>0.0014number0.0011
.Punctuation
defaultsName.Otherany0.9840complex0.0131string0.0004T0.0003boolean0.0003
(Punctuation
extName.Otherany0.9145complex0.0606string0.0127boolean0.0019number0.0011
(Punctuation
defName.Otherany0.9435complex0.0084{}0.0074number0.0040Object0.0033
,Punctuation
 Text.Whitespace
optionsName.Otherany0.3322Options0.1450complex0.0943{}0.0481ConnectionOptions0.0206
)Punctuation
)Punctuation
.Punctuation
MinimatchName.Otherany0.9918string0.0047complex0.0022boolean0.0003{}0.0001
\n  Text.Whitespace
mName.Otherany0.9491complex0.0288string0.0072Promise<any>0.0008any[]0.0007
.Punctuation
filterName.Otherany0.9015complex0.0888string0.0048boolean0.0011any[]0.0006
 Text.Whitespace
=Operator
 Text.Whitespace
(Punctuation
patternName.Otherstring0.7168any0.2484complex0.0145RegExp0.0088{}0.0032
,Punctuation
 Text.Whitespace
optionsName.Otherany0.7056complex0.0399Options0.0321{}0.0175Config0.0099
)Punctuation
 Text.Whitespace
=>Punctuation
 Text.Whitespace
origName.Otherany0.9159complex0.0538string0.0081any[]0.0062string[]0.0019
.Punctuation
filterName.Otherany0.7672complex0.2293string0.0008boolean0.0003v...0.0003
(Punctuation
patternName.Otherstring0.5213any0.4444complex0.0163boolean0.0056RegExp0.0035
,Punctuation
 Text.Whitespace
extName.Otherany0.9537complex0.0222string0.0170boolean0.0017number0.0008
(Punctuation
defName.Otherany0.9596string0.0076number0.0061complex0.0056{}0.0049
,Punctuation
 Text.Whitespace
optionsName.Otherany0.5903complex0.0532Options0.0483{}0.0299ConnectionOptions0.0140
)Punctuation
)Punctuation
\n  Text.Whitespace
mName.Otherany0.9471complex0.0304string0.0013Promise<any>0.0007{}0.0007
.Punctuation
defaultsName.Otherany0.9755complex0.0154string0.0029number0.0012boolean0.0010
 Text.Whitespace
=Operator
 Text.Whitespace
optionsName.Otherany0.8391complex0.0535Options0.0086{}0.0058string0.0053
 Text.Whitespace
=>Punctuation
 Text.Whitespace
origName.Otherany0.9385complex0.0421string0.0040Promise<any>0.0014number0.0011
.Punctuation
defaultsName.Otherany0.9855complex0.0113string0.0005T0.0004boolean0.0004
(Punctuation
extName.Otherany0.9406complex0.0399string0.0115boolean0.0013number0.0009
(Punctuation
defName.Otherany0.9560complex0.0065{}0.0059number0.0043string0.0037
,Punctuation
 Text.Whitespace
optionsName.Otherany0.3888complex0.0863Options0.0841{}0.0308ConnectionOptions0.0212
)Punctuation
)Punctuation
\n  Text.Whitespace
mName.Otherany0.8951complex0.0641string0.0021Promise<any>0.0013{}0.0010
.Punctuation
makeReName.Otherany0.9327string0.0259boolean0.0150complex0.0146number0.0042
 Text.Whitespace
=Operator
 Text.Whitespace
(Punctuation
patternName.Otherstring0.6401any0.2804complex0.0333RegExp0.0235{}0.0066
,Punctuation
 Text.Whitespace
optionsName.Otherany0.5827complex0.0733Options0.0469{}0.0219ConnectionOptions0.0137
)Punctuation
 Text.Whitespace
=>Punctuation
 Text.Whitespace
origName.Otherany0.8685complex0.1026string0.0063any[]0.0020{}0.0011
.Punctuation
makeReName.Otherany0.9214complex0.0446boolean0.0129string0.0113any[]0.0013
(Punctuation
patternName.Otherstring0.5541any0.3771complex0.0345RegExp0.0129{}0.0058
,Punctuation
 Text.Whitespace
extName.Otherany0.9308complex0.0329string0.0244boolean0.0020number0.0011
(Punctuation
defName.Otherany0.9429string0.0077{}0.0061complex0.0057number0.0048
,Punctuation
 Text.Whitespace
optionsName.Otherany0.3964Options0.0897complex0.0845ConnectionOptions0.0264{}0.0261
)Punctuation
)Punctuation
\n  Text.Whitespace
mName.Otherany0.9029complex0.0550string0.0028Promise<any>0.0012{}0.0011
.Punctuation
braceExpandName.Otherany0.9311string0.0294boolean0.0157complex0.0131number0.0034
 Text.Whitespace
=Operator
 Text.Whitespace
(Punctuation
patternName.Otherstring0.6973any0.2325complex0.0269RegExp0.0249{}0.0053
,Punctuation
 Text.Whitespace
optionsName.Otherany0.6052complex0.0783Options0.0392{}0.0212ConnectionOptions0.0145
)Punctuation
 Text.Whitespace
=>Punctuation
 Text.Whitespace
origName.Otherany0.8789complex0.0922string0.0076any[]0.0019number0.0012
.Punctuation
braceExpandName.Otherany0.9194complex0.0487string0.0110boolean0.0110any[]0.0014
(Punctuation
patternName.Otherstring0.5708any0.3567complex0.0370RegExp0.0152{}0.0056
,Punctuation
 Text.Whitespace
extName.Otherany0.9257complex0.0358string0.0250boolean0.0029number0.0012
(Punctuation
defName.Otherany0.9358string0.0075{}0.0057Date0.0050number0.0047
,Punctuation
 Text.Whitespace
optionsName.Otherany0.5435Options0.0739complex0.0560{}0.0254ConnectionOptions0.0141
)Punctuation
)Punctuation
\n  Text.Whitespace
mName.Otherany0.9610complex0.0184string0.0033Promise<any>0.0006void0.0006
.Punctuation
matchName.Otherany0.9234complex0.0719string0.0020boolean0.0006any[]0.0003
 Text.Whitespace
=Operator
 Text.Whitespace
(Punctuation
listName.Otherany0.7991RegExp0.0975string0.0274string[]0.0192complex0.0109
,Punctuation
 Text.Whitespace
patternName.Otherstring0.5008any0.3115RegExp0.1591complex0.0128string[]0.0026
,Punctuation
 Text.Whitespace
optionsName.Otherany0.7887complex0.0186RegExpMatchArray0.0171RegExp0.0138Options0.0103
)Punctuation
 Text.Whitespace
=>Punctuation
 Text.Whitespace
origName.Otherany0.9529string0.0364complex0.0056RegExp0.0007number0.0006
.Punctuation
matchName.Otherany0.9092complex0.0874string0.0013boolean0.0007any[]0.0002
(Punctuation
listName.Otherany0.7507RegExp0.1066string[]0.0307string0.0250complex0.0213
,Punctuation
 Text.Whitespace
patternName.Otherany0.4457string0.3853RegExp0.1307complex0.0164{}0.0042
,Punctuation
 Text.Whitespace
extName.Otherany0.9675string0.0139complex0.0116boolean0.0016number0.0007
(Punctuation
defName.Otherany0.9502string0.0088{}0.0065Date0.0050number0.0044
,Punctuation
 Text.Whitespace
optionsName.Otherany0.6186complex0.0446{}0.0381Options0.0356ConnectionOptions0.0103
)Punctuation
)Punctuation
\n\n  Text.Whitespace
returnKeyword
 Text.Whitespace
mName.Otherany0.9447string0.0249number0.0071complex0.0042any[]0.0018
\nText.Whitespace
}Punctuation
\n\n\n\n\n\nText.Whitespace
Text
// Brace expansion:Comment.Single
\nText.Whitespace
// a{b,c}d -> abd acdComment.Single
\nText.Whitespace
// a{b,}c -> abc acComment.Single
\nText.Whitespace
// a{0..3}d -> a0d a1d a2d a3dComment.Single
\nText.Whitespace
// a{b,c{d,e}f}g -> abg acdfg acefgComment.Single
\nText.Whitespace
// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfgComment.Single
\nText.Whitespace
//Comment.Single
\nText.Whitespace
// Invalid sets are not expanded.Comment.Single
\nText.Whitespace
// a{2..}b -> a{2..}bComment.Single
\nText.Whitespace
// a{b}c -> a{b}cComment.Single
\nText.Whitespace
minimatchName.Otherany0.9765string0.0011{}0.0005complex0.0004Error0.0002
.Punctuation
braceExpandName.Otherany0.9797string0.0174complex0.0009number0.0006boolean0.0004
 Text.Whitespace
=Operator
 Text.Whitespace
(Punctuation
patternName.Otherstring0.8402any0.1282RegExp0.0117complex0.0071{}0.0042
,Punctuation
 Text.Whitespace
optionsName.Otherany0.6595Options0.0278complex0.0191{}0.0175ConnectionOptions0.0166
)Punctuation
 Text.Whitespace
=>Punctuation
 Text.Whitespace
braceExpandName.Otherany0.5753string0.2261boolean0.0763complex0.0309void0.0252
(Punctuation
patternName.Otherstring0.7722any0.1757RegExp0.0242complex0.0114{}0.0054
,Punctuation
 Text.Whitespace
optionsName.Otherany0.4092Options0.0602complex0.0501{}0.0442ConnectionOptions0.0403
)Punctuation
\n\nText.Whitespace
constKeyword.Declaration
 Text.Whitespace
braceExpandName.Otherany0.5242string0.2584boolean0.0684RegExp0.0429complex0.0261
 Text.Whitespace
=Operator
 Text.Whitespace
(Punctuation
patternName.Otherstring0.6705any0.2397RegExp0.0509{}0.0111complex0.0103
,Punctuation
 Text.Whitespace
optionsName.Other{}0.4718any0.2212complex0.0332Options0.0118any[]0.0086
 Text.Whitespace
=Operator
 Text.Whitespace
{Punctuation
}Punctuation
)Punctuation
 Text.Whitespace
=>Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
assertValidPatternName.Otherany0.5361string0.2071boolean0.1098complex0.0770void0.0196
(Punctuation
patternName.Otherstring0.7339any0.1541RegExp0.0661complex0.0299{}0.0049
)Punctuation
\n\n  Text.Whitespace
// Thanks to Yeting Li <https://github.com/yetingli> forComment.Single
\n  Text.Whitespace
// improving this regexp to avoid a ReDOS vulnerability.Comment.Single
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
optionsName.Otherany0.5529complex0.2490{}0.0254Options0.0150RegExp0.0091
.Punctuation
nobraceName.Otherany0.6471complex0.1466boolean0.1155string0.0672RegExp0.0047
 Text.Whitespace
||Operator
 Text.Whitespace
!Operator
/\{(?:(?!\{).)*\}/Literal.String.Regex
.Punctuation
testName.Otherboolean0.9704complex0.0120any0.0098string0.0027true0.0006
(Punctuation
patternName.Otherstring0.6933any0.2813complex0.0096RegExp0.0047{}0.0031
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
// shortcut. no need to expand.Comment.Single
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
[Punctuation
patternName.Otherstring0.8213any0.1635complex0.0055{}0.0028number0.0023
]Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
returnKeyword
 Text.Whitespace
expandName.Otherany0.4188complex0.2103any[]0.1352string0.0913string[]0.0337
(Punctuation
patternName.Otherstring0.6649any0.1310RegExp0.0822complex0.0564{}0.0185
)Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
constKeyword.Declaration
 Text.Whitespace
MAX_PATTERN_LENGTHName.Othernumber0.9645any0.0229string0.0081boolean0.0013number[]0.0005
 Text.Whitespace
=Operator
 Text.Whitespace
1024Literal.Number.Float
 Text.Whitespace
*Operator
 Text.Whitespace
64Literal.Number.Float
\nText.Whitespace
constKeyword.Declaration
 Text.Whitespace
assertValidPatternName.Otherany0.4145string0.2473RegExp0.0687complex0.0500{}0.0370
 Text.Whitespace
=Operator
 Text.Whitespace
patternName.Otherstring0.4886any0.3853complex0.0348RegExp0.0338{}0.0216
 Text.Whitespace
=>Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
typeofOperator.Word
 Text.Whitespace
patternName.Otherstring0.5870any0.2181RegExp0.0769complex0.0664{}0.0213
 Text.Whitespace
!==Operator
 Text.Whitespace
'string'Literal.String.Single
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
throwKeywordany0.4991complex0.2073Error0.0990{}0.0747string0.0295
 Text.Whitespace
newOperator.Wordany0.5464complex0.0727string0.0725boolean0.0620{}0.0494
 Text.Whitespace
TypeErrorName.ExceptionTypeErrorConstructor0.9840ErrorConstructor0.0020SymbolConstructor0.0003complex0.0003BooleanConstructor0.0002
(Punctuation
'invalid pattern'Literal.String.Single
)Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
patternName.Otherstring0.7400any0.1315string[]0.0413RegExp0.0337complex0.0186
.Punctuation
lengthName.Othernumber0.9458any0.0509string0.0018complex0.0004boolean0.0003
 Text.Whitespace
>Operator
 Text.Whitespace
MAX_PATTERN_LENGTHName.Othernumber0.8173string0.0721boolean0.0457any0.0395complex0.0058
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
throwKeywordany0.4629complex0.2235Error0.1087{}0.0783string0.0168
 Text.Whitespace
newOperator.Wordany0.5361complex0.0723{}0.0651boolean0.0558string0.0535
 Text.Whitespace
TypeErrorName.ExceptionTypeErrorConstructor0.9872ErrorConstructor0.0013BooleanConstructor0.0002SymbolConstructor0.0002complex0.0002
(Punctuation
'pattern is too long'Literal.String.Single
)Punctuation
\n  Text.Whitespace
}Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
Text
// parse a component of the expanded set.Comment.Single
\nText.Whitespace
// At this point, no pattern may contain "/" in itComment.Single
\nText.Whitespace
// so we're going to return a 2d array, where each entry is the fullComment.Single
\nText.Whitespace
// pattern, split on '/', and then turned into a regular expression.Comment.Single
\nText.Whitespace
// A regexp is made at the end which joins each array with anComment.Single
\nText.Whitespace
// escaped /, and another full one which joins each regexp with |.Comment.Single
\nText.Whitespace
//Comment.Single
\nText.Whitespace
// Following the lead of Bash 4.1, note that "**" only has special meaningComment.Single
\nText.Whitespace
// when it is the *only* thing in a path portion.  Otherwise, any seriesComment.Single
\nText.Whitespace
// of * is equivalent to a single *.  Globstar behavior is enabled byComment.Single
\nText.Whitespace
// default, and can be disabled by setting options.noglobstar.Comment.Single
\nText.Whitespace
constKeyword.Declaration
 Text.Whitespace
SUBPARSEName.Othersymbol0.4917any0.1352number0.0313{}0.0274SymbolConstructor0.0172
 Text.Whitespace
=Operator
 Text.Whitespace
SymbolName.BuiltinSymbolConstructor0.9963symbol0.0008any0.0006complex0.0002{}0.0001
(Punctuation
'subparse'Literal.String.Single
)Punctuation
\n\nText.Whitespace
minimatchName.Otherany0.7473symbol0.0028{}0.0023HTMLDivElement0.0022string0.0020
.Punctuation
makeReName.Otherany0.9085string0.0773boolean0.0037number0.0033complex0.0014
 Text.Whitespace
=Operator
 Text.Whitespace
(Punctuation
patternName.Otherstring0.8205any0.1479RegExp0.0097complex0.0045{}0.0036
,Punctuation
 Text.Whitespace
optionsName.Otherany0.3253{}0.0404ConnectionOptions0.0340Options0.0305complex0.0177
)Punctuation
 Text.Whitespace
=>Punctuation
\n  Text.Whitespace
newOperator.Wordany0.9330string0.0297complex0.0067{}0.0050Error0.0017
 Text.Whitespace
MinimatchName.Otherany0.9967string0.0021complex0.0005{}0.0001boolean0.0001
(Punctuation
patternName.Otherstring0.8484any0.1210RegExp0.0116complex0.0052{}0.0045
,Punctuation
 Text.Whitespace
optionsName.Otherany0.2861{}0.0885Options0.0352ConnectionOptions0.0132complex0.0088
 Text.Whitespace
||Operator
 Text.Whitespace
{Punctuation
}Punctuation
)Punctuation
.Punctuation
makeReName.Otherany0.8600boolean0.0326string0.0255complex0.0225any[]0.0086
(Punctuation
)Punctuation
\n\nText.Whitespace
minimatchName.Otherany0.9647string0.0028{}0.0008complex0.0004URI0.0004
.Punctuation
matchName.Otherany0.9577complex0.0379string0.0020boolean0.0005{}0.0003
 Text.Whitespace
=Operator
 Text.Whitespace
(Punctuation
listName.Otherany0.6900RegExp0.0618string[]0.0571string0.0446any[]0.0276
,Punctuation
 Text.Whitespace
patternName.Otherstring0.6493any0.2510RegExp0.0618{}0.0125complex0.0057
,Punctuation
 Text.Whitespace
optionsName.Otherany0.2212{}0.1643Options0.0169symbol0.0100ConnectionOptions0.0091
 Text.Whitespace
=Operator
 Text.Whitespace
{Punctuation
}Punctuation
)Punctuation
 Text.Whitespace
=>Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
mmName.Otherany0.9879string0.0075complex0.0005Path0.0003{}0.0001
 Text.Whitespace
=Operator
 Text.Whitespace
newOperator.Wordany0.9730string0.0154complex0.0021{}0.0016boolean0.0008
 Text.Whitespace
MinimatchName.Otherany0.9976string0.0017complex0.0003boolean0.0001any[]0.0001
(Punctuation
patternName.Otherstring0.8122any0.1572RegExp0.0115complex0.0049{}0.0034
,Punctuation
 Text.Whitespace
optionsName.Otherany0.3409Options0.0646ConnectionOptions0.0227{}0.0166Config0.0117
)Punctuation
\n  Text.Whitespace
listName.Otherany0.7577any[]0.0758string[]0.0367complex0.0227{}0.0056
 Text.Whitespace
=Operator
 Text.Whitespace
listName.Otherany0.8505any[]0.0540string[]0.0254complex0.0054string0.0050
.Punctuation
filterName.Otherany0.7336complex0.2560string0.0016v...0.0013any[]0.0011
(Punctuation
fName.Otherany0.6765string0.3073boolean0.0022complex0.0015RegExp0.0015
 Text.Whitespace
=>Punctuation
 Text.Whitespace
mmName.Otherany0.9789string0.0194complex0.0006boolean0.0001any[]0.0001
.Punctuation
matchName.Otherany0.9653complex0.0307string0.0025boolean0.0006any[]0.0002
(Punctuation
fName.Otherstring0.6150any0.3709number0.0025RegExp0.0019string[]0.0016
)Punctuation
)Punctuation
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
mmName.Otherany0.9905string0.0042complex0.0007boolean0.0003{}0.0002
.Punctuation
optionsName.Otherany0.9610complex0.0029{}0.0018RegExp0.0017string0.0017
.Punctuation
nonullName.Otherany0.9560string0.0258boolean0.0150number0.0012complex0.0003
 Text.Whitespace
&&Operator
 Text.Whitespace
!Operator
listName.Otherany0.9035string[]0.0382any[]0.0211string0.0122complex0.0018
.Punctuation
lengthName.Otherany0.8627number0.1346string0.0016complex0.0005boolean0.0002
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
listName.Otherany0.5073any[]0.3036string[]0.0975number[]0.0061string0.0040
.Punctuation
pushName.Othernumber0.6426any0.3481string0.0038complex0.0015boolean0.0009
(Punctuation
patternName.Otherany0.4863string0.4863complex0.0085RegExp0.0071{}0.0030
)Punctuation
\n  Text.Whitespace
}Punctuation
\n  Text.Whitespace
returnKeyword
 Text.Whitespace
listName.Otherany0.6079string[]0.1329any[]0.0753string0.0717RegExp0.0176
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
Text
// replace stuff like \* with *Comment.Single
\nText.Whitespace
constKeyword.Declaration
 Text.Whitespace
globUnescapeName.Otherany0.5546string0.2960RegExp0.0432string[]0.0170boolean0.0169
 Text.Whitespace
=Operator
 Text.Whitespace
sName.Otherany0.6779string0.3136number0.0019RegExp0.0009complex0.0006
 Text.Whitespace
=>Punctuation
 Text.Whitespace
sName.Otherstring0.4988any0.4983number0.0012boolean0.0003complex0.0002
.Punctuation
replaceName.Otherany0.5120complex0.4848string0.0010boolean0.0005void0.0003
(Punctuation
/\\(.)/gLiteral.String.Regex
,Punctuation
 Text.Whitespace
'$1'Literal.String.Single
)Punctuation
\nText.Whitespace
constKeyword.Declaration
 Text.Whitespace
regExpEscapeName.Otherany0.4801string0.3010RegExp0.1422boolean0.0253string[]0.0115
 Text.Whitespace
=Operator
 Text.Whitespace
sName.Otherstring0.5120any0.4807RegExp0.0020number0.0017boolean0.0008
 Text.Whitespace
=>Punctuation
 Text.Whitespace
sName.Otherstring0.6823any0.3147number0.0012boolean0.0005RegExp0.0004
.Punctuation
replaceName.Othercomplex0.7078any0.2883string0.0013boolean0.0010void0.0004
(Punctuation
/[-[\]{}()*+?.,\\^$|#\s]/gLiteral.String.Regex
,Punctuation
 Text.Whitespace
'\\$&'Literal.String.Single
)Punctuation
\n\nText.Whitespace
classKeyword.Declaration
 Text.Whitespace
MinimatchName.Otherany0.9944string0.0052complex0.0001number0.0001boolean0.0000
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
constructorKeyword.Reserved
 Text.Whitespace
(Punctuation
patternName.Otherstring0.8088any0.1407RegExp0.0324complex0.0047{}0.0027
,Punctuation
 Text.Whitespace
optionsName.Otherany0.2801Options0.1222ConnectionOptions0.0236Config0.0175{}0.0161
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
assertValidPatternName.Otherany0.3249boolean0.2116void0.1930string0.1291complex0.0500
(Punctuation
patternName.Otherstring0.8203any0.1467RegExp0.0121complex0.0068{}0.0042
)Punctuation
\n\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
optionsName.Otherany0.2471Options0.0967{}0.0617Config0.0176ConnectionOptions0.0155
)Punctuation
 Text.Whitespace
optionsName.Otherany0.4207{}0.3072complex0.0260Options0.0196boolean0.0056
 Text.Whitespace
=Operator
 Text.Whitespace
{Punctuation
}Punctuation
\n\n    Text.Whitespace
thisKeyword
.Punctuation
optionsName.Otherany0.4947Options0.0446ConnectionOptions0.0317complex0.0285Config0.0218
 Text.Whitespace
=Operator
 Text.Whitespace
optionsName.Otherany0.4880Options0.0510ConnectionOptions0.0283Config0.0242complex0.0228
\n    Text.Whitespace
thisKeyword
.Punctuation
setName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
[Punctuation
]Punctuation
\n    Text.Whitespace
thisKeyword
.Punctuation
patternName.Otherstring0.7400any0.1827RegExp0.0325complex0.0142boolean0.0128
 Text.Whitespace
=Operator
 Text.Whitespace
patternName.Otherstring0.5258RegExp0.2270any0.1583complex0.0245{}0.0098
\n    Text.Whitespace
thisKeyword
.Punctuation
windowsPathsNoEscapeName.Otherboolean0.9481any0.0166string0.0155number0.0073RegExp0.0025
 Text.Whitespace
=Operator
 Text.Whitespace
!Operator
!Operator
optionsName.Otherany0.4484Options0.0878complex0.0309boolean0.0143ConnectionOptions0.0126
.Punctuation
windowsPathsNoEscapeName.Otherboolean0.7627any0.1821string0.0209number0.0162complex0.0069
 Text.Whitespace
||Operator
\n      Text.Whitespace
optionsName.Otherany0.5743complex0.0633Options0.0606boolean0.0136{}0.0096
.Punctuation
allowWindowsEscapeName.Otherboolean0.7343any0.2418complex0.0077string0.0067number0.0055
 Text.Whitespace
===Operator
 Text.Whitespace
falseKeyword.Constant
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
thisKeyword
.Punctuation
windowsPathsNoEscapeName.Otherboolean0.6689string0.1587any0.1225number0.0212string[]0.0058
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
thisKeyword
.Punctuation
patternName.Otherstring0.8188any0.1648complex0.0037RegExp0.0036string[]0.0027
 Text.Whitespace
=Operator
 Text.Whitespace
thisKeyword
.Punctuation
patternName.Otherstring0.8653any0.1286RegExp0.0022complex0.0013number0.0010
.Punctuation
replaceName.Othercomplex0.9469any0.0513string0.0006boolean0.0003any[]0.0001
(Punctuation
/\\/gLiteral.String.Regex
,Punctuation
 Text.Whitespace
'/'Literal.String.Single
)Punctuation
\n    Text.Whitespace
}Punctuation
\n    Text.Whitespace
thisKeyword
.Punctuation
regexpName.OtherRegExp0.8784boolean0.0353string0.0169any0.0116false0.0082
 Text.Whitespace
=Operator
 Text.Whitespace
nullKeyword.Constant
\n    Text.Whitespace
thisKeyword
.Punctuation
negateName.Otherboolean0.9903any0.0043string0.0020number0.0009false0.0006
 Text.Whitespace
=Operator
 Text.Whitespace
falseKeyword.Constant
\n    Text.Whitespace
thisKeyword
.Punctuation
commentName.Otherboolean0.8341false0.0661string0.0442any0.0214number0.0057
 Text.Whitespace
=Operator
 Text.Whitespace
falseKeyword.Constant
\n    Text.Whitespace
thisKeyword
.Punctuation
emptyName.Otherboolean0.9923false0.0025string0.0018any0.0007true0.0004
 Text.Whitespace
=Operator
 Text.Whitespace
falseKeyword.Constant
\n    Text.Whitespace
thisKeyword
.Punctuation
partialName.Otherboolean0.8302any0.0451complex0.0213string0.0207any[]0.0202
 Text.Whitespace
=Operator
 Text.Whitespace
!Operator
!Operator
optionsName.Otherany0.3352complex0.1559Options0.0601{}0.0128ConnectionOptions0.0116
.Punctuation
partialName.Otherany0.4077boolean0.3816string0.0594complex0.0533number0.0332
\n\n    Text.Whitespace
// make the set of regexps etc.Comment.Single
\n    Text.Whitespace
thisKeyword
.Punctuation
makeName.Othervoid0.9487complex0.0218boolean0.0101any0.0035Promise<void>0.0034
(Punctuation
)Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
debugName.Othervoid0.9682any0.0208boolean0.0037complex0.0029Promise<void>0.0008
 Text.Whitespace
(Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
}Punctuation
\n\n  Text.Whitespace
makeName.Othervoid0.9468complex0.0157any0.0044Promise<void>0.0043boolean0.0040
 Text.Whitespace
(Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
patternName.Otherstring0.5811any0.1631RegExp0.0847complex0.0822string[]0.0119
 Text.Whitespace
=Operator
 Text.Whitespace
thisKeyword
.Punctuation
patternName.Otherstring0.8607any0.0549RegExp0.0424complex0.0193string[]0.0069
\n    Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
optionsName.Otherany0.1806complex0.0824Options0.0610ConnectionOptions0.0432Config0.0240
 Text.Whitespace
=Operator
 Text.Whitespace
thisKeyword
.Punctuation
optionsName.Otherany0.1200ConnectionOptions0.1009Options0.0807complex0.0447Config0.0212
\n\n    Text.Whitespace
// empty patterns and comments match nothing.Comment.Single
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
optionsName.Otherany0.2509Options0.1208complex0.0912ConnectionOptions0.0257Config0.0102
.Punctuation
nocommentName.Otherboolean0.5889any0.1990string0.1438number0.0219complex0.0137
 Text.Whitespace
&&Operator
 Text.Whitespace
patternName.Otherstring0.8270any0.1572RegExp0.0063complex0.0046boolean0.0015
.Punctuation
charAtName.Otherstring0.8629any0.1298complex0.0027boolean0.0025number0.0004
(Punctuation
0Literal.Number.Float
)Punctuation
 Text.Whitespace
===Operator
 Text.Whitespace
'#'Literal.String.Single
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
thisKeyword
.Punctuation
commentName.Otherboolean0.7621string0.1387any0.0324false0.0158number0.0146
 Text.Whitespace
=Operator
 Text.Whitespace
trueKeyword.Constant
\n      Text.Whitespace
returnKeyword
\n    Text.Whitespace
}Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
patternName.Otherstring0.7285any0.1802RegExp0.0258boolean0.0192complex0.0176
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
thisKeyword
.Punctuation
emptyName.Otherboolean0.9873string0.0046any0.0024false0.0015void0.0008
 Text.Whitespace
=Operator
 Text.Whitespace
trueKeyword.Constant
\n      Text.Whitespace
returnKeyword
\n    Text.Whitespace
}Punctuation
\n\n    Text.Whitespace
// step 1: figure out negation, etc.Comment.Single
\n    Text.Whitespace
thisKeyword
.Punctuation
parseNegateName.Otherstring0.2617boolean0.2126void0.2122any0.1313complex0.0424
(Punctuation
)Punctuation
\n\n    Text.Whitespace
// step 2: expand bracesComment.Single
\n    Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
setName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
thisKeyword
.Punctuation
globSetName.Otherstring0.3565any0.2229number0.1180boolean0.0489string[]0.0352
 Text.Whitespace
=Operator
 Text.Whitespace
thisKeyword
.Punctuation
braceExpandName.Otherstring0.2660any0.2144complex0.0673number0.0603string[]0.0519
(Punctuation
)Punctuation
\n\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
optionsName.OtherOptions0.1111any0.0973complex0.0442Config0.0292ConnectionOptions0.0118
.Punctuation
debugName.Othercomplex0.3545void0.2327boolean0.2070any0.1207Function0.0057
)Punctuation
 Text.Whitespace
thisKeyword
.Punctuation
debugName.Othervoid0.8458any0.0682complex0.0484boolean0.0269number0.0017
 Text.Whitespace
=Operator
 Text.Whitespace
(Punctuation
...Punctuation
argsName.Otherany[]0.9315string[]0.0263any0.0123number[]0.0017Array0.0016
)Punctuation
 Text.Whitespace
=>Punctuation
 Text.Whitespace
consoleName.OtherConsole0.9988void0.0003any0.0003any[]0.0000Function0.0000
.Punctuation
errorName.Othervoid0.9975boolean0.0007complex0.0005any0.0004string0.0002
(Punctuation
...Punctuation
argsName.Otherany[]0.9483string[]0.0327any0.0068complex0.0013number[]0.0007
)Punctuation
\n\n    Text.Whitespace
thisKeyword
.Punctuation
debugName.Othervoid0.7207complex0.1311any0.1163boolean0.0100{}0.0026
(Punctuation
thisKeyword
.Punctuation
patternName.Otherstring0.8460any0.1364complex0.0035string[]0.0030RegExp0.0026
,Punctuation
 Text.Whitespace
setName.Other
)Punctuation
\n\n    Text.Whitespace
// step 3: now we have a set, so turn each one into a series of path-portionComment.Single
\n    Text.Whitespace
// matching patterns.Comment.Single
\n    Text.Whitespace
// These will be regexps, except in the case of "**", which isComment.Single
\n    Text.Whitespace
// set to the GLOBSTAR object for globstar behavior,Comment.Single
\n    Text.Whitespace
// and will not contain any / charactersComment.Single
\n    Text.Whitespace
setName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
thisKeyword
.Punctuation
globPartsName.Otherany0.2732string0.2441string[]0.2349any[]0.1052boolean0.0482
 Text.Whitespace
=Operator
 Text.Whitespace
setName.Other
.Punctuation
mapName.OtherU[]0.6794any0.1930complex0.1080any[]0.0024string[]0.0010
(Punctuation
sName.Otherany0.5390string0.4443number0.0066boolean0.0015complex0.0013
 Text.Whitespace
=>Punctuation
 Text.Whitespace
sName.Otherstring0.7289any0.2658number0.0023complex0.0007boolean0.0007
.Punctuation
splitName.Othercomplex0.7388any0.2537string0.0016void0.0010string[]0.0009
(Punctuation
slashSplitName.Otherstring0.4619any0.2589RegExp0.1311string[]0.0332boolean0.0312
)Punctuation
)Punctuation
\n\n    Text.Whitespace
thisKeyword
.Punctuation
debugName.Othervoid0.7099complex0.1634any0.0887boolean0.0094{}0.0052
(Punctuation
thisKeyword
.Punctuation
patternName.Otherstring0.8958any0.0850complex0.0047RegExp0.0037string[]0.0036
,Punctuation
 Text.Whitespace
setName.Other
)Punctuation
\n\n    Text.Whitespace
// glob --> regexpsComment.Single
\n    Text.Whitespace
setName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
setName.Other
.Punctuation
mapName.OtherU[]0.5427any0.2414complex0.1896any[]0.0031...0.0016
(Punctuation
(Punctuation
sName.Otherstring0.8876any0.1014number0.0045string[]0.0009complex0.0009
,Punctuation
 Text.Whitespace
siName.Otherany0.5060string0.2723number0.0679complex0.0367string[]0.0098
,Punctuation
 Text.Whitespace
setName.Other
)Punctuation
 Text.Whitespace
=>Punctuation
 Text.Whitespace
sName.Otherstring0.5189any0.4476string[]0.0085any[]0.0050number0.0046
.Punctuation
mapName.OtherU[]0.5777any0.3013complex0.0927any[]0.0032string0.0021
(Punctuation
thisKeyword
.Punctuation
parseName.Otherboolean0.1035any[]0.0900complex0.0724string0.0684any0.0635
,Punctuation
 Text.Whitespace
thisKeyword
)Punctuation
)Punctuation
\n\n    Text.Whitespace
thisKeyword
.Punctuation
debugName.Othervoid0.7460complex0.0976any0.0941boolean0.0239{}0.0044
(Punctuation
thisKeyword
.Punctuation
patternName.Otherstring0.9024any0.0835complex0.0025RegExp0.0025string[]0.0024
,Punctuation
 Text.Whitespace
setName.Other
)Punctuation
\n\n    Text.Whitespace
// filter out everything that didn't compile properly.Comment.Single
\n    Text.Whitespace
setName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
setName.Other
.Punctuation
filterName.Othercomplex0.7458any0.2434string0.0027boolean0.0019any[]0.0010
(Punctuation
sName.Otherstring0.6286any0.3587number0.0060boolean0.0015complex0.0010
 Text.Whitespace
=>Punctuation
 Text.Whitespace
sName.Otherstring0.8411any0.1496string[]0.0033number0.0013boolean0.0012
.Punctuation
indexOfName.Othernumber0.7470any0.2386string0.0075boolean0.0028complex0.0022
(Punctuation
falseKeyword.Constant
)Punctuation
 Text.Whitespace
===Operator
 Text.Whitespace
-Operator
1Literal.Number.Float
)Punctuation
\n\n    Text.Whitespace
thisKeyword
.Punctuation
debugName.Othervoid0.9175complex0.0341any0.0294boolean0.0074number0.0014
(Punctuation
thisKeyword
.Punctuation
patternName.Otherstring0.9186any0.0676boolean0.0030complex0.0029number0.0022
,Punctuation
 Text.Whitespace
setName.Other
)Punctuation
\n\n    Text.Whitespace
thisKeyword
.Punctuation
setName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
setName.Other
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
parseNegateName.Otherboolean0.2767string0.2692any0.2141void0.0676number0.0527
 Text.Whitespace
(Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
thisKeyword
.Punctuation
optionsName.Otherany0.1052Options0.0523ConnectionOptions0.0240complex0.0222Config0.0097
.Punctuation
nonegateName.Otherboolean0.7552any0.1337number0.0443string0.0423complex0.0076
)Punctuation
 Text.Whitespace
returnKeyword
\n\n    Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
patternName.Otherstring0.5533any0.3587RegExp0.0258complex0.0224boolean0.0111
 Text.Whitespace
=Operator
 Text.Whitespace
thisKeyword
.Punctuation
patternName.Otherstring0.6504any0.2280boolean0.0332RegExp0.0303complex0.0283
\n    Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
negateName.Otherboolean0.9876any0.0065number0.0020string0.0017false0.0007
 Text.Whitespace
=Operator
 Text.Whitespace
falseKeyword.Constant
\n    Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
negateOffsetName.Othernumber0.8214any0.0883string0.0645boolean0.0184complex0.0025
 Text.Whitespace
=Operator
 Text.Whitespace
0Literal.Number.Float
\n\n    Text.Whitespace
forKeyword
 Text.Whitespace
(Punctuation
letKeyword.Declaration
 Text.Whitespace
iName.Othernumber0.9962any0.0030string0.0005boolean0.0001complex0.0001
 Text.Whitespace
=Operator
 Text.Whitespace
0Literal.Number.Float
;Punctuation
 Text.Whitespace
iName.Othernumber0.9764any0.0194string0.0025boolean0.0004void0.0004
 Text.Whitespace
<Operator
 Text.Whitespace
patternName.Otherstring0.7202any0.2148complex0.0173string[]0.0166RegExp0.0126
.Punctuation
lengthName.Othernumber0.8743any0.1206string0.0034complex0.0006boolean0.0005
 Text.Whitespace
&&Operator
 Text.Whitespace
patternName.Otherstring0.8762any0.1129RegExp0.0029complex0.0021number0.0021
.Punctuation
charAtName.Otherstring0.8782any0.1165boolean0.0023complex0.0015number0.0007
(Punctuation
iName.Othernumber0.9205any0.0680string0.0090boolean0.0011void0.0005
)Punctuation
 Text.Whitespace
===Operator
 Text.Whitespace
'!'Literal.String.Single
;Punctuation
 Text.Whitespace
iName.Othernumber0.9792any0.0195string0.0006boolean0.0003void0.0002
++Operator
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
negateName.Otherboolean0.9037any0.0443number0.0306string0.0118void0.0053
 Text.Whitespace
=Operator
 Text.Whitespace
!Operator
negateName.Otherboolean0.6415number0.2489any0.0698string0.0227void0.0080
\n      Text.Whitespace
negateOffsetName.Othernumber0.9508any0.0315string0.0082boolean0.0081void0.0005
++Operator
\n    Text.Whitespace
}Punctuation
\n\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
negateOffsetName.Otherboolean0.5169string0.1679number0.1462any0.1389complex0.0101
)Punctuation
 Text.Whitespace
thisKeyword
.Punctuation
patternName.Otherstring0.8806any0.1056boolean0.0036complex0.0029RegExp0.0023
 Text.Whitespace
=Operator
 Text.Whitespace
patternName.Otherstring0.8455any0.1287RegExp0.0119complex0.0039string[]0.0027
.Punctuation
substrName.Otherstring0.8657any0.1280complex0.0025number0.0015boolean0.0009
(Punctuation
negateOffsetName.Othernumber0.5349string0.1799any0.1412boolean0.1291complex0.0039
)Punctuation
\n    Text.Whitespace
thisKeyword
.Punctuation
negateName.Otherboolean0.6797number0.1255any0.0745void0.0645string0.0291
 Text.Whitespace
=Operator
 Text.Whitespace
negateName.Otherboolean0.6341number0.1139string0.0983any0.0793void0.0393
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
// set partial to true to test if, for example,Comment.Single
\n  Text.Whitespace
// "/a/b" matches the start of "/*/b/*/d"Comment.Single
\n  Text.Whitespace
// Partial means, if you run out of file before you runComment.Single
\n  Text.Whitespace
// out of pattern, then that's fine, as long as allComment.Single
\n  Text.Whitespace
// the parts match.Comment.Single
\n  Text.Whitespace
matchOneName.Othervoid0.4243any0.1952string0.1736boolean0.0539number0.0312
 Text.Whitespace
(Punctuation
fileName.Otherstring0.4919any0.4088File0.0287number0.0173{}0.0032
,Punctuation
 Text.Whitespace
patternName.Otherstring0.7063any0.2603number0.0076{}0.0049RegExp0.0046
,Punctuation
 Text.Whitespace
partialName.Otherany0.7473number0.1117boolean0.0666string0.0230void0.0144
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
varKeyword.Declaration
 Text.Whitespace
optionsName.Otherany0.4533complex0.0227Options0.0200{}0.0189ConnectionOptions0.0135
 Text.Whitespace
=Operator
 Text.Whitespace
thisKeyword
.Punctuation
optionsName.Otherany0.2145Options0.0544Config0.0324complex0.0291ConnectionOptions0.0272
\n\n    Text.Whitespace
thisKeyword
.Punctuation
debugName.Otherany0.4544complex0.3192void0.1108{}0.0092boolean0.0079
(Punctuation
'matchOne'Literal.String.Single
,Punctuation
\n      Text.Whitespace
{Punctuation
 Text.Whitespace
'this'Literal.String.Single
:Operator
 Text.Whitespace
thisKeyword
,Punctuation
 Text.Whitespace
fileName.Otherstring0.4821any0.2810File0.0779{}0.0108number0.0054
:Operator
 Text.Whitespace
fileKeyword.Typestring0.6874any0.2470File0.0194number0.0074{}0.0058
,Punctuation
 Text.Whitespace
patternName.Otherstring0.9398any0.0229RegExp0.0157{}0.0050string[]0.0035
:Operator
 Text.Whitespace
patternKeyword.Typestring0.8940any0.0747RegExp0.0074{}0.0070number0.0045
 Text.Whitespace
}Punctuation
)Punctuation
\n\n    Text.Whitespace
thisKeyword
.Punctuation
debugName.Othervoid0.3404any0.3328complex0.2347{}0.0091boolean0.0088
(Punctuation
'matchOne'Literal.String.Single
,Punctuation
 Text.Whitespace
fileName.Otherstring0.5141string[]0.2126any0.1582any[]0.0388File0.0059
.Punctuation
lengthName.Othernumber0.9257any0.0705string0.0027complex0.0004boolean0.0002
,Punctuation
 Text.Whitespace
patternName.Otherstring0.7835any0.1560string[]0.0319any[]0.0098complex0.0055
.Punctuation
lengthName.Othernumber0.9311any0.0651string0.0028complex0.0003void0.0002
)Punctuation
\n\n    Text.Whitespace
forKeyword
 Text.Whitespace
(Punctuation
varKeyword.Declaration
 Text.Whitespace
fiName.Othernumber0.6739any0.1873string0.1187boolean0.0065{}0.0038
 Text.Whitespace
=Operator
 Text.Whitespace
0Literal.Number.Float
,Punctuation
\n        Text.Whitespace
piName.Othernumber0.9928any0.0058string0.0009complex0.0001boolean0.0001
 Text.Whitespace
=Operator
 Text.Whitespace
0Literal.Number.Float
,Punctuation
\n        Text.Whitespace
flName.Otherstring0.4333any0.3682number0.1754any[]0.0062boolean0.0041
 Text.Whitespace
=Operator
 Text.Whitespace
fileName.Otherstring0.5220any0.2279string[]0.1572any[]0.0356complex0.0105
.Punctuation
lengthName.Othernumber0.9136any0.0825string0.0029complex0.0004boolean0.0002
,Punctuation
\n        Text.Whitespace
plName.Otherany0.6502number0.1488string0.1216complex0.0659any[]0.0024
 Text.Whitespace
=Operator
 Text.Whitespace
patternName.Otherstring0.8135any0.1050string[]0.0418complex0.0113any[]0.0093
.Punctuation
lengthName.Othernumber0.9355any0.0616string0.0021complex0.0004boolean0.0002
\n        Text.Whitespace
;Punctuation
 Text.Whitespace
(Punctuation
fiName.Otherany0.5449string0.3329number0.1074boolean0.0080{}0.0014
 Text.Whitespace
<Operator
 Text.Whitespace
flName.Otherany0.6213string0.2790number0.0177complex0.0100any[]0.0057
)Punctuation
 Text.Whitespace
&&Operator
 Text.Whitespace
(Punctuation
piName.Othernumber0.9771any0.0190string0.0012complex0.0011void0.0004
 Text.Whitespace
<Operator
 Text.Whitespace
plName.Otherany0.7526complex0.1031string0.0447number0.0245T0.0059
)Punctuation
\n        Text.Whitespace
;Punctuation
 Text.Whitespace
fiName.Otherany0.4382number0.3902string0.1561boolean0.0088void0.0021
++Operator
,Punctuation
 Text.Whitespace
piName.Othernumber0.9877any0.0102string0.0011boolean0.0002void0.0002
++Operator
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
thisKeyword
.Punctuation
debugName.Othervoid0.7902any0.1027complex0.0547boolean0.0189{}0.0058
(Punctuation
'matchOne loop'Literal.String.Single
)Punctuation
\n      Text.Whitespace
varKeyword.Declaration
 Text.Whitespace
pName.Otherstring0.8117any0.1414number0.0227complex0.0125{}0.0025
 Text.Whitespace
=Operator
 Text.Whitespace
patternName.Otherstring0.5523any0.2523complex0.0962string[]0.0297{}0.0211
[Punctuation
piName.Othernumber0.9602any0.0217string0.0155complex0.0010boolean0.0006
]Punctuation
\n      Text.Whitespace
varKeyword.Declaration
 Text.Whitespace
fName.Otherstring0.5099any0.4429boolean0.0174number0.0057complex0.0039
 Text.Whitespace
=Operator
 Text.Whitespace
fileName.Otherany0.5811string0.1664any[]0.0496{}0.0439string[]0.0417
[Punctuation
fiName.Otherstring0.7102any0.2437number0.0250complex0.0063boolean0.0051
]Punctuation
\n\n      Text.Whitespace
thisKeyword
.Punctuation
debugName.Othercomplex0.3228any0.3168void0.2126boolean0.0885{}0.0107
(Punctuation
patternName.Otherstring0.7666any0.2137complex0.0053RegExp0.0037number0.0034
,Punctuation
 Text.Whitespace
pName.Otherstring0.8081any0.1297number0.0294string[]0.0063complex0.0057
,Punctuation
 Text.Whitespace
fName.Otherstring0.8439any0.1244boolean0.0115number0.0106string[]0.0012
)Punctuation
\n\n      Text.Whitespace
// should be impossible.Comment.Single
\n      Text.Whitespace
// some invalid regexp stuff in the set.Comment.Single
\n      Text.Whitespace
/* istanbul ignore if */Comment.Multiline
\n      Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
pName.Otherany0.6473string0.1829boolean0.1049number0.0267complex0.0227
 Text.Whitespace
===Operator
 Text.Whitespace
falseKeyword.Constant
)Punctuation
 Text.Whitespace
returnKeyword
 Text.Whitespace
falseKeyword.Constant
\n\n      Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
pName.Otherstring0.5581any0.3181complex0.0495number0.0484boolean0.0094
 Text.Whitespace
===Operator
 Text.Whitespace
GLOBSTARName.Otherstring0.5612any0.1763number0.1665boolean0.0813complex0.0040
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
thisKeyword
.Punctuation
debugName.Othervoid0.5850any0.2118complex0.1472boolean0.0113{}0.0076
(Punctuation
'GLOBSTAR'Literal.String.Single
,Punctuation
 Text.Whitespace
[Punctuation
patternName.Otherstring0.8803any0.0955complex0.0121{}0.0030RegExp0.0028
,Punctuation
 Text.Whitespace
pName.Otherstring0.7610any0.1708number0.0324complex0.0117any[]0.0039
,Punctuation
 Text.Whitespace
fName.Otherstring0.8511any0.1253number0.0150boolean0.0038complex0.0009
]Punctuation
)Punctuation
\n\n        Text.Whitespace
// "**"Comment.Single
\n        Text.Whitespace
// a/**/b/**/c would match the following:Comment.Single
\n        Text.Whitespace
// a/b/x/y/z/cComment.Single
\n        Text.Whitespace
// a/x/y/z/b/cComment.Single
\n        Text.Whitespace
// a/b/x/b/x/cComment.Single
\n        Text.Whitespace
// a/b/cComment.Single
\n        Text.Whitespace
// To do this, take the rest of the pattern afterComment.Single
\n        Text.Whitespace
// the **, and see if it would match the file remainder.Comment.Single
\n        Text.Whitespace
// If so, return success.Comment.Single
\n        Text.Whitespace
// If not, the ** "swallows" a segment, and try again.Comment.Single
\n        Text.Whitespace
// This is recursively awful.Comment.Single
\n        Text.Whitespace
//Comment.Single
\n        Text.Whitespace
// a/**/b/**/c matching a/b/x/y/z/cComment.Single
\n        Text.Whitespace
// - a matches aComment.Single
\n        Text.Whitespace
// - doublestarComment.Single
\n        Text.Whitespace
//   - matchOne(b/x/y/z/c, b/**/c)Comment.Single
\n        Text.Whitespace
//     - b matches bComment.Single
\n        Text.Whitespace
//     - doublestarComment.Single
\n        Text.Whitespace
//       - matchOne(x/y/z/c, c) -> noComment.Single
\n        Text.Whitespace
//       - matchOne(y/z/c, c) -> noComment.Single
\n        Text.Whitespace
//       - matchOne(z/c, c) -> noComment.Single
\n        Text.Whitespace
//       - matchOne(c, c) yes, hitComment.Single
\n        Text.Whitespace
varKeyword.Declaration
 Text.Whitespace
frName.Otherany0.4474boolean0.3088string0.1283number0.0548{}0.0176
 Text.Whitespace
=Operator
 Text.Whitespace
fiName.Otherany0.5480string0.3500boolean0.0424number0.0279{}0.0059
\n        Text.Whitespace
varKeyword.Declaration
 Text.Whitespace
prName.Otherany0.4097string0.3872number0.0842Date0.0045RegExp0.0041
 Text.Whitespace
=Operator
 Text.Whitespace
piName.Othernumber0.9541any0.0384string0.0063boolean0.0002void0.0001
 Text.Whitespace
+Operator
 Text.Whitespace
1Literal.Number.Float
\n        Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
prName.Otherany0.3162string0.1668number0.0243GitHubPRDSL0.0143{}0.0077
 Text.Whitespace
===Operator
 Text.Whitespace
plName.Otherany0.6364string0.1653T0.0219Function0.0153complex0.0146
)Punctuation
 Text.Whitespace
{Punctuation
\n          Text.Whitespace
thisKeyword
.Punctuation
debugName.Othervoid0.6548any0.2308complex0.0446boolean0.0078{}0.0054
(Punctuation
'** at the end'Literal.String.Single
)Punctuation
\n          Text.Whitespace
// a ** at the end will just swallow the rest.Comment.Single
\n          Text.Whitespace
// We have found a match.Comment.Single
\n          Text.Whitespace
// however, it will not swallow /.x, unlessComment.Single
\n          Text.Whitespace
// options.dot is set.Comment.Single
\n          Text.Whitespace
// . and .. are *never* matched by **, for explosivelyComment.Single
\n          Text.Whitespace
// exponential reasons.Comment.Single
\n          Text.Whitespace
forKeyword
 Text.Whitespace
(Punctuation
;Punctuation
 Text.Whitespace
fiName.Otherany0.7909string0.1731number0.0232boolean0.0037{}0.0012
 Text.Whitespace
<Operator
 Text.Whitespace
flName.Otherany0.8068string0.1688number0.0117complex0.0018any[]0.0015
;Punctuation
 Text.Whitespace
fiName.Otherany0.6115number0.2456string0.1292boolean0.0059{}0.0009
++Operator
)Punctuation
 Text.Whitespace
{Punctuation
\n            Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
fileName.Otherany0.6420string0.1446{}0.0433complex0.0274any[]0.0242
[Punctuation
fiName.Otherstring0.7826any0.1582number0.0278boolean0.0205complex0.0030
]Punctuation
 Text.Whitespace
===Operator
 Text.Whitespace
'.'Literal.String.Single
 Text.Whitespace
||Operator
 Text.Whitespace
fileName.Otherany0.5365string0.2326{}0.0382string[]0.0335boolean0.0303
[Punctuation
fiName.Otherstring0.8101any0.1400number0.0230boolean0.0164complex0.0027
]Punctuation
 Text.Whitespace
===Operator
 Text.Whitespace
'..'Literal.String.Single
 Text.Whitespace
||Operator
\n              Text.Whitespace
(Punctuation
!Operator
optionsName.Otherany0.1902complex0.0550Options0.0504{}0.0185ConnectionOptions0.0118
.Punctuation
dotName.Otherboolean0.7255any0.1119string0.1091number0.0420complex0.0083
 Text.Whitespace
&&Operator
 Text.Whitespace
fileName.Otherany0.3360string0.2998string[]0.0923boolean0.0740any[]0.0420
[Punctuation
fiName.Otherstring0.7118any0.2018boolean0.0492number0.0236{}0.0020
]Punctuation
.Punctuation
charAtName.Otherstring0.7670any0.2229boolean0.0061complex0.0017number0.0010
(Punctuation
0Literal.Number.Float
)Punctuation
 Text.Whitespace
===Operator
 Text.Whitespace
'.'Literal.String.Single
)Punctuation
)Punctuation
 Text.Whitespace
returnKeyword
 Text.Whitespace
falseKeyword.Constant
\n          Text.Whitespace
}Punctuation
\n          Text.Whitespace
returnKeyword
 Text.Whitespace
trueKeyword.Constant
\n        Text.Whitespace
}Punctuation
\n\n        Text.Whitespace
// ok, let's see if we can swallow whatever we can.Comment.Single
\n        Text.Whitespace
whileKeyword
 Text.Whitespace
(Punctuation
frName.Otherany0.5039string0.1976boolean0.1279number0.0895void0.0121
 Text.Whitespace
<Operator
 Text.Whitespace
flName.Otherany0.5901string0.2990number0.0128any[]0.0067boolean0.0062
)Punctuation
 Text.Whitespace
{Punctuation
\n          Text.Whitespace
varKeyword.Declaration
 Text.Whitespace
swalloweeName.Otherany0.5980string0.1759boolean0.0992any[]0.0291complex0.0177
 Text.Whitespace
=Operator
 Text.Whitespace
fileName.Otherany0.5521any[]0.0662string0.0469complex0.0420{}0.0316
[Punctuation
frName.Otherstring0.3469any0.2571boolean0.0696number0.0508{}0.0329
]Punctuation
\n\n          Text.Whitespace
thisKeyword
.Punctuation
debugName.Otherany0.4527void0.2752complex0.1789boolean0.0133{}0.0072
(Punctuation
'\nglobstar while'Literal.String.Single
,Punctuation
 Text.Whitespace
fileName.Otherstring0.7050any0.2281File0.0111number0.0109{}0.0029
,Punctuation
 Text.Whitespace
frName.Otherany0.3050string0.2691boolean0.2540{}0.0457number0.0255
,Punctuation
 Text.Whitespace
patternName.Otherstring0.8591any0.0975RegExp0.0196complex0.0071boolean0.0043
,Punctuation
 Text.Whitespace
prName.Otherany0.3277string0.1673GitHubPRDSL0.0402ResolvedUrl0.0113User0.0064
,Punctuation
 Text.Whitespace
swalloweeName.Otherstring0.4559any0.3362boolean0.0925number0.0652RegExp0.0073
)Punctuation
\n\n          Text.Whitespace
// XXX remove this slice.  Just pass the start index.Comment.Single
\n          Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
thisKeyword
.Punctuation
matchOneName.Otherboolean0.8216string0.1147any0.0319complex0.0072string[]0.0036
(Punctuation
fileName.Otherany0.3461string0.3073string[]0.0683File0.0354any[]0.0235
.Punctuation
sliceName.Otherstring0.6065any0.2009string[]0.0767any[]0.0278complex0.0129
(Punctuation
frName.Otherany0.3879string0.3423boolean0.0996number0.0399{}0.0297
)Punctuation
,Punctuation
 Text.Whitespace
patternName.Otherstring0.7489any0.1941RegExp0.0268string[]0.0097any[]0.0032
.Punctuation
sliceName.Otherstring0.7371any0.1460string[]0.0364any[]0.0105complex0.0071
(Punctuation
prName.Otherany0.2956string0.0874GitHubPRDSL0.0463ResolvedUrl0.0107RegExp0.0080
)Punctuation
,Punctuation
 Text.Whitespace
partialName.Otherany0.8652number0.0529string0.0301boolean0.0273void0.0051
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n            Text.Whitespace
thisKeyword
.Punctuation
debugName.Othervoid0.6412any0.1965complex0.0936boolean0.0242this0.0033
(Punctuation
'globstar found match!'Literal.String.Single
,Punctuation
 Text.Whitespace
frName.Otherany0.7282string0.0973boolean0.0956number0.0210{}0.0105
,Punctuation
 Text.Whitespace
flName.Otherany0.6533string0.2982number0.0082boolean0.0037any[]0.0030
,Punctuation
 Text.Whitespace
swalloweeName.Otherboolean0.4400any0.2947string0.1538number0.0967complex0.0017
)Punctuation
\n            Text.Whitespace
// found a match.Comment.Single
\n            Text.Whitespace
returnKeyword
 Text.Whitespace
trueKeyword.Constant
\n          Text.Whitespace
}Punctuation
 Text.Whitespace
elseKeyword
 Text.Whitespace
{Punctuation
\n            Text.Whitespace
// can't swallow "." or ".." ever.Comment.Single
\n            Text.Whitespace
// can only swallow ".foo" when explicitly asked.Comment.Single
\n            Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
swalloweeName.Otherstring0.5075any0.4108boolean0.0583number0.0104RegExp0.0041
 Text.Whitespace
===Operator
 Text.Whitespace
'.'Literal.String.Single
 Text.Whitespace
||Operator
 Text.Whitespace
swalloweeName.Otherstring0.6489any0.2998boolean0.0325number0.0084RegExp0.0049
 Text.Whitespace
===Operator
 Text.Whitespace
'..'Literal.String.Single
 Text.Whitespace
||Operator
\n              Text.Whitespace
(Punctuation
!Operator
optionsName.Otherany0.2539Options0.0516complex0.0259ConnectionOptions0.0230RegExp0.0222
.Punctuation
dotName.Otherboolean0.5698any0.2717string0.1201number0.0259complex0.0061
 Text.Whitespace
&&Operator
 Text.Whitespace
swalloweeName.Otherstring0.8845any0.1008boolean0.0098number0.0016RegExp0.0015
.Punctuation
charAtName.Otherstring0.8456any0.1500boolean0.0019complex0.0012number0.0006
(Punctuation
0Literal.Number.Float
)Punctuation
 Text.Whitespace
===Operator
 Text.Whitespace
'.'Literal.String.Single
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n              Text.Whitespace
thisKeyword
.Punctuation
debugName.Othervoid0.7748complex0.1005any0.0843boolean0.0074{}0.0030
(Punctuation
'dot detected!'Literal.String.Single
,Punctuation
 Text.Whitespace
fileName.Otherstring0.7649any0.1573number0.0192File0.0087{}0.0055
,Punctuation
 Text.Whitespace
frName.Otherstring0.4000any0.3187boolean0.1362number0.0465{}0.0395
,Punctuation
 Text.Whitespace
patternName.Otherstring0.8590any0.0906RegExp0.0219complex0.0075{}0.0051
,Punctuation
 Text.Whitespace
prName.Otherany0.1912string0.0700GitHubPRDSL0.0513RegExp0.0143ResolvedUrl0.0106
)Punctuation
\n              Text.Whitespace
breakKeyword
\n            Text.Whitespace
}Punctuation
\n\n            Text.Whitespace
// ** swallows a segment, and continue.Comment.Single
\n            Text.Whitespace
thisKeyword
.Punctuation
debugName.Othervoid0.3985any0.2721complex0.1453this0.0146boolean0.0113
(Punctuation
'globstar swallow a segment, and continue'Literal.String.Single
)Punctuation
\n            Text.Whitespace
frName.Othernumber0.7420any0.1940string0.0395boolean0.0161void0.0024
++Operator
\n          Text.Whitespace
}Punctuation
\n        Text.Whitespace
}Punctuation
\n\n        Text.Whitespace
// no match was found.Comment.Single
\n        Text.Whitespace
// However, in partial mode, we can't say this is necessarily over.Comment.Single
\n        Text.Whitespace
// If there's more *pattern* left, thenComment.Single
\n        Text.Whitespace
/* istanbul ignore if */Comment.Multiline
\n        Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
partialName.Otherany0.5809boolean0.2082number0.1163string0.0582void0.0142
)Punctuation
 Text.Whitespace
{Punctuation
\n          Text.Whitespace
// ran out of fileComment.Single
\n          Text.Whitespace
thisKeyword
.Punctuation
debugName.Othervoid0.5063any0.3039complex0.1175boolean0.0262this0.0045
(Punctuation
'\n>>> no match, partial?'Literal.String.Single
,Punctuation
 Text.Whitespace
fileName.Otherstring0.5473any0.3135File0.0225number0.0137{}0.0058
,Punctuation
 Text.Whitespace
frName.Otherany0.5578boolean0.1763string0.1347{}0.0307number0.0237
,Punctuation
 Text.Whitespace
patternName.Otherstring0.6995any0.2450RegExp0.0193complex0.0108boolean0.0077
,Punctuation
 Text.Whitespace
prName.Otherany0.4191string0.0997GitHubPRDSL0.0287ResolvedUrl0.0095User0.0066
)Punctuation
\n          Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
frName.Otherany0.5643string0.2326boolean0.1178number0.0234{}0.0187
 Text.Whitespace
===Operator
 Text.Whitespace
flName.Otherany0.5621string0.3918number0.0085boolean0.0036complex0.0023
)Punctuation
 Text.Whitespace
returnKeyword
 Text.Whitespace
trueKeyword.Constant
\n        Text.Whitespace
}Punctuation
\n        Text.Whitespace
returnKeyword
 Text.Whitespace
falseKeyword.Constant
\n      Text.Whitespace
}Punctuation
\n\n      Text.Whitespace
// something other than **Comment.Single
\n      Text.Whitespace
// non-magic patterns just have to match exactlyComment.Single
\n      Text.Whitespace
// patterns with magic have been turned into regexps.Comment.Single
\n      Text.Whitespace
varKeyword.Declaration
 Text.Whitespace
hitName.Otherany0.6722boolean0.1097string0.0961complex0.0243number0.0163
\n      Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
typeofOperator.Word
 Text.Whitespace
pName.Otherany0.7340string0.1403complex0.0768number0.0063{}0.0026
 Text.Whitespace
===Operator
 Text.Whitespace
'string'Literal.String.Single
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
hitName.Otherany0.5595boolean0.2553string0.1274number0.0264complex0.0103
 Text.Whitespace
=Operator
 Text.Whitespace
fName.Otherstring0.5169any0.4365number0.0186boolean0.0108complex0.0036
 Text.Whitespace
===Operator
 Text.Whitespace
pName.Otherstring0.5619any0.3849number0.0240complex0.0048boolean0.0028
\n        Text.Whitespace
thisKeyword
.Punctuation
debugName.Otherany0.5712complex0.3017void0.0242boolean0.0166{}0.0086
(Punctuation
'string match'Literal.String.Single
,Punctuation
 Text.Whitespace
pName.Otherstring0.7245any0.2099number0.0288complex0.0059string[]0.0044
,Punctuation
 Text.Whitespace
fName.Otherstring0.7259any0.2270boolean0.0144number0.0132string[]0.0021
,Punctuation
 Text.Whitespace
hitName.Otherany0.4361string0.4194boolean0.0546number0.0493complex0.0079
)Punctuation
\n      Text.Whitespace
}Punctuation
 Text.Whitespace
elseKeyword
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
hitName.Otherany0.7069boolean0.1401string0.1168number0.0171complex0.0059
 Text.Whitespace
=Operator
 Text.Whitespace
fName.Otherany0.4926string0.4902boolean0.0062number0.0032complex0.0013
.Punctuation
matchName.Otherany0.6723complex0.3052boolean0.0109string0.0067number0.0007
(Punctuation
pName.Otherstring0.3249any0.3175RegExp0.2380complex0.0445number0.0089
)Punctuation
\n        Text.Whitespace
thisKeyword
.Punctuation
debugName.Otherany0.5372complex0.2907void0.1039boolean0.0182{}0.0053
(Punctuation
'pattern match'Literal.String.Single
,Punctuation
 Text.Whitespace
pName.Otherstring0.7300any0.1967number0.0266complex0.0067string[]0.0063
,Punctuation
 Text.Whitespace
fName.Otherstring0.6680any0.2623boolean0.0265number0.0137RegExp0.0042
,Punctuation
 Text.Whitespace
hitName.Otherany0.4518string0.3235boolean0.0798number0.0637{}0.0128
)Punctuation
\n      Text.Whitespace
}Punctuation
\n\n      Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
hitName.Otherany0.4483string0.2603boolean0.1580number0.0493complex0.0179
)Punctuation
 Text.Whitespace
returnKeyword
 Text.Whitespace
falseKeyword.Constant
\n    Text.Whitespace
}Punctuation
\n\n    Text.Whitespace
// Note: ending in / means that we'll get a final ""Comment.Single
\n    Text.Whitespace
// at the end of the pattern.  This can only match aComment.Single
\n    Text.Whitespace
// corresponding "" at the end of the file.Comment.Single
\n    Text.Whitespace
// If the file ends in /, then it can only match aComment.Single
\n    Text.Whitespace
// a pattern that ends in /, unless the pattern justComment.Single
\n    Text.Whitespace
// doesn't have any more for it. But, a/b/ should *not*Comment.Single
\n    Text.Whitespace
// match "a/b/*", even though "" matches against theComment.Single
\n    Text.Whitespace
// [^/]*? pattern, except in partial mode, where it mightComment.Single
\n    Text.Whitespace
// simply not be reached yet.Comment.Single
\n    Text.Whitespace
// However, a/b/ should still satisfy a/*Comment.Single
\n\n    Text.Whitespace
// now either we fell off the end of the pattern, or we're done.Comment.Single
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
fiName.Otherany0.5105string0.4565boolean0.0144number0.0136complex0.0014
 Text.Whitespace
===Operator
 Text.Whitespace
flName.Otherstring0.5886any0.3804number0.0101boolean0.0049complex0.0035
 Text.Whitespace
&&Operator
 Text.Whitespace
piName.Othernumber0.8961any0.0803string0.0169complex0.0028boolean0.0007
 Text.Whitespace
===Operator
 Text.Whitespace
plName.Otherany0.6112string0.1282complex0.0425number0.0168T0.0149
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
// ran out of pattern and filename at the same time.Comment.Single
\n      Text.Whitespace
// an exact hit!Comment.Single
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
trueKeyword.Constant
\n    Text.Whitespace
}Punctuation
 Text.Whitespace
elseKeyword
 Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
fiName.Otherstring0.5188any0.4515boolean0.0128number0.0079complex0.0011
 Text.Whitespace
===Operator
 Text.Whitespace
flName.Otherany0.5735string0.3545number0.0087complex0.0076any[]0.0046
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
// ran out of file, but still had pattern left.Comment.Single
\n      Text.Whitespace
// this is ok if we're doing the match as part ofComment.Single
\n      Text.Whitespace
// a glob fs traversal.Comment.Single
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
partialName.Otherany0.7878number0.1110string0.0376boolean0.0306complex0.0097
\n    Text.Whitespace
}Punctuation
 Text.Whitespace
elseKeyword
 Text.Whitespace
/* istanbul ignore else */Comment.Multiline
 Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
piName.Othernumber0.9422any0.0427string0.0086complex0.0033boolean0.0007
 Text.Whitespace
===Operator
 Text.Whitespace
plName.Otherany0.5917string0.1522complex0.0640number0.0210T0.0197
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
// ran out of pattern, still have file left.Comment.Single
\n      Text.Whitespace
// this is only acceptable if we're on the very lastComment.Single
\n      Text.Whitespace
// empty segment of a file with a trailing slash.Comment.Single
\n      Text.Whitespace
// a/* should match a/b/Comment.Single
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
(Punctuation
fiName.Otherstring0.5427any0.4225number0.0230boolean0.0044complex0.0009
 Text.Whitespace
===Operator
 Text.Whitespace
flName.Otherstring0.4756any0.4409number0.0696boolean0.0031complex0.0028
 Text.Whitespace
-Operator
 Text.Whitespace
1Literal.Number.Float
)Punctuation
 Text.Whitespace
&&Operator
 Text.Whitespace
(Punctuation
fileName.Otherany0.6118string0.1328{}0.0458complex0.0388string[]0.0356
[Punctuation
fiName.Otherstring0.7346any0.2008number0.0194boolean0.0180complex0.0063
]Punctuation
 Text.Whitespace
===Operator
 Text.Whitespace
''Literal.String.Single
)Punctuation
\n    Text.Whitespace
}Punctuation
\n\n    Text.Whitespace
// should be unreachable.Comment.Single
\n    Text.Whitespace
/* istanbul ignore next */Comment.Multiline
\n    Text.Whitespace
throwKeywordError0.4093any0.3762complex0.0443string0.0320{}0.0287
 Text.Whitespace
newOperator.Wordany0.5322ErrorConstructor0.1858Error0.1348string0.0973complex0.0071
 Text.Whitespace
ErrorName.ExceptionErrorConstructor1.0000Error0.0000any0.0000LogLevel.Error0.0000never0.0000
(Punctuation
'wtf?'Literal.String.Single
)Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
braceExpandName.Otherstring0.4157boolean0.3405any0.1741number0.0272complex0.0070
 Text.Whitespace
(Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
braceExpandName.Otherany0.3675string0.3268boolean0.1730complex0.0560number0.0211
(Punctuation
thisKeyword
.Punctuation
patternName.Otherstring0.8932any0.0816complex0.0075RegExp0.0070number0.0023
,Punctuation
 Text.Whitespace
thisKeyword
.Punctuation
optionsName.Otherany0.1455Options0.0832ConnectionOptions0.0381complex0.0343{}0.0245
)Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
parseName.Othercomplex0.0934any0.0561boolean0.0261void0.0193any[]0.0181
 Text.Whitespace
(Punctuation
patternName.Otherstring0.8897any0.0787RegExp0.0126complex0.0058number0.0024
,Punctuation
 Text.Whitespace
isSubName.Otherboolean0.4149string0.3773any0.1196number0.0556RegExp0.0095
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
assertValidPatternName.Otherstring0.4290boolean0.3379any0.1435complex0.0315number0.0240
(Punctuation
patternName.Otherstring0.8053any0.1134RegExp0.0286complex0.0259{}0.0056
)Punctuation
\n\n    Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
optionsName.Otherany0.4287complex0.0590Options0.0356{}0.0238ConnectionOptions0.0160
 Text.Whitespace
=Operator
 Text.Whitespace
thisKeyword
.Punctuation
optionsName.Otherany0.2153ConnectionOptions0.0714Options0.0662complex0.0351{}0.0163
\n\n    Text.Whitespace
// shortcutsComment.Single
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
patternName.Otherstring0.7029any0.2135complex0.0350RegExp0.0316{}0.0035
 Text.Whitespace
===Operator
 Text.Whitespace
'**'Literal.String.Single
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
optionsName.Otherany0.2308complex0.0770Options0.0466{}0.0200RegExp0.0168
.Punctuation
noglobstarName.Otherboolean0.9475any0.0358string0.0053number0.0049complex0.0036
)Punctuation
\n        Text.Whitespace
returnKeyword
 Text.Whitespace
GLOBSTARName.Otherstring0.5145any0.2787boolean0.1408number0.0430RegExp0.0072
\n      Text.Whitespace
elseKeyword
\n        Text.Whitespace
patternName.Otherstring0.6302any0.2725RegExp0.0725complex0.0087boolean0.0044
 Text.Whitespace
=Operator
 Text.Whitespace
'*'Literal.String.Single
\n    Text.Whitespace
}Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
patternName.Otherstring0.5363any0.3375complex0.0771RegExp0.0257boolean0.0100
 Text.Whitespace
===Operator
 Text.Whitespace
''Literal.String.Single
)Punctuation
 Text.Whitespace
returnKeyword
 Text.Whitespace
''Literal.String.Single
\n\n    Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
reName.OtherRegExp0.8470string0.1162any0.0219boolean0.0039complex0.0021
 Text.Whitespace
=Operator
 Text.Whitespace
''Literal.String.Single
\n    Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
hasMagicName.Otherboolean0.9746number0.0114any0.0055complex0.0023false0.0020
 Text.Whitespace
=Operator
 Text.Whitespace
!Operator
!Operator
optionsName.Otherany0.5518complex0.2813Options0.0186boolean0.0178any[]0.0112
.Punctuation
nocaseName.Otherboolean0.6835any0.2532number0.0415complex0.0137string0.0019
\n    Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
escapingName.Otherboolean0.9941any0.0019number0.0014false0.0007true0.0005
 Text.Whitespace
=Operator
 Text.Whitespace
falseKeyword.Constant
\n    Text.Whitespace
// ? => one single characterComment.Single
\n    Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
patternListStackName.Otherany[]0.8762string[]0.0457number[]0.0323any0.0095complex0.0061
 Text.Whitespace
=Operator
 Text.Whitespace
[Punctuation
]Punctuation
\n    Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
negativeListsName.Otherany[]0.9266string[]0.0259number[]0.0197any0.0059complex0.0026
 Text.Whitespace
=Operator
 Text.Whitespace
[Punctuation
]Punctuation
\n    Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
stateCharName.Othernumber0.5249boolean0.3193any0.0891string0.0465complex0.0043
\n    Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
inClassName.Otherboolean0.9835number0.0090any0.0037string0.0018false0.0005
 Text.Whitespace
=Operator
 Text.Whitespace
falseKeyword.Constant
\n    Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
reClassStartName.Othernumber0.9818any0.0114string0.0040boolean0.0019complex0.0004
 Text.Whitespace
=Operator
 Text.Whitespace
-Operator
1Literal.Number.Float
\n    Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
classStartName.Othernumber0.9838any0.0106string0.0038boolean0.0009complex0.0004
 Text.Whitespace
=Operator
 Text.Whitespace
-Operator
1Literal.Number.Float
\n    Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
csName.Otherstring0.3270number0.1847any0.0848boolean0.0649string[]0.0469
\n    Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
plName.Otherany0.6230string0.0864number0.0721complex0.0605Element0.0058
\n    Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
spName.Otherstring[]0.2996number0.1983string0.0636any0.0585complex0.0551
\n    Text.Whitespace
// . and .. never match anything that doesn't start with .,Comment.Single
\n    Text.Whitespace
// even when options.dot is set.Comment.Single
\n    Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
patternStartName.Otherstring0.7504any0.1133number0.0645boolean0.0602complex0.0040
 Text.Whitespace
=Operator
 Text.Whitespace
patternName.Otherstring0.9591any0.0323RegExp0.0027complex0.0019number0.0018
.Punctuation
charAtName.Otherstring0.9286any0.0658complex0.0026boolean0.0014number0.0006
(Punctuation
0Literal.Number.Float
)Punctuation
 Text.Whitespace
===Operator
 Text.Whitespace
'.'Literal.String.Single
 Text.Whitespace
?Operator
 Text.Whitespace
''Literal.String.Single
 Text.Whitespace
// anythingComment.Single
\n    Text.Whitespace
// not (start or / followed by . or .. followed by / or end)Comment.Single
\n    Text.Whitespace
:Operator
 Text.Whitespace
optionsName.Othercomplex0.1312any0.1191Options0.0251{}0.0241ConnectionOptions0.0193
.Punctuation
dotName.Otherboolean0.8236string0.0828any0.0585number0.0211complex0.0103
 Text.Whitespace
?Operator
 Text.Whitespace
'(?!(?:^|\\\/)\\.{1,2}(?:$|\\\/))'Literal.String.Single
\n    Text.Whitespace
:Operator
 Text.Whitespace
'(?!\\.)'Literal.String.Single
\n\n    Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
clearStateCharName.Othercomplex0.2113void0.1827string0.1247boolean0.1204any0.0611
 Text.Whitespace
=Operator
 Text.Whitespace
(Punctuation
)Punctuation
 Text.Whitespace
=>Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
stateCharName.Otherboolean0.7089string0.1631any0.0851number0.0258complex0.0062
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
// we had some state-tracking characterComment.Single
\n        Text.Whitespace
// that wasn't consumed by this pass.Comment.Single
\n        Text.Whitespace
switchKeyword
 Text.Whitespace
(Punctuation
stateCharName.Otherstring0.8220any0.1057boolean0.0385number0.0254complex0.0026
)Punctuation
 Text.Whitespace
{Punctuation
\n          Text.Whitespace
caseKeyword
 Text.Whitespace
'*'Literal.String.Single
:Operator
\n            Text.Whitespace
reName.Otherstring0.7562RegExp0.1537any0.0527number0.0135boolean0.0096
 Text.Whitespace
+=Operator
 Text.Whitespace
starName.Otherstring0.6535any0.1356number0.0982boolean0.0842RegExp0.0093
\n            Text.Whitespace
hasMagicName.Otherboolean0.9918number0.0028any0.0021false0.0010string0.0007
 Text.Whitespace
=Operator
 Text.Whitespace
trueKeyword.Constant
\n          Text.Whitespace
breakKeyword
\n          Text.Whitespace
caseKeyword
 Text.Whitespace
'?'Literal.String.Single
:Operator
\n            Text.Whitespace
reName.Otherstring0.7037RegExp0.1215any0.0592boolean0.0522number0.0342
 Text.Whitespace
+=Operator
 Text.Whitespace
qmarkName.Otherboolean0.3697string0.3585number0.1421any0.1149RegExp0.0044
\n            Text.Whitespace
hasMagicName.Otherboolean0.9812number0.0073any0.0045false0.0019string0.0016
 Text.Whitespace
=Operator
 Text.Whitespace
trueKeyword.Constant
\n          Text.Whitespace
breakKeyword
\n          Text.Whitespace
defaultName.Other
:Operator
\n            Text.Whitespace
reKeyword.Typestring0.6247RegExp0.2324any0.0861boolean0.0229complex0.0119
 Text.Whitespace
+=Operator
 Text.Whitespace
'\\'Literal.String.Single
 Text.Whitespace
+Operator
 Text.Whitespace
stateCharName.Otherstring0.4452any0.3504number0.1452boolean0.0365string[]0.0049
\n          Text.Whitespace
breakKeyword
\n        Text.Whitespace
}Punctuation
\n        Text.Whitespace
thisKeyword
.Punctuation
debugName.Othervoid0.4410complex0.2412any0.1682boolean0.0967{}0.0065
(Punctuation
'clearStateChar %j %j'Literal.String.Single
,Punctuation
 Text.Whitespace
stateCharName.Otherstring0.4312boolean0.2922number0.1302any0.1137RegExp0.0108
,Punctuation
 Text.Whitespace
reName.OtherRegExp0.7402string0.1174any0.0851boolean0.0207complex0.0082
)Punctuation
\n        Text.Whitespace
stateCharName.Otherboolean0.9834any0.0076number0.0039string0.0030false0.0005
 Text.Whitespace
=Operator
 Text.Whitespace
falseKeyword.Constant
\n      Text.Whitespace
}Punctuation
\n    Text.Whitespace
}Punctuation
\n\n    Text.Whitespace
forKeyword
 Text.Whitespace
(Punctuation
letKeyword.Declaration
 Text.Whitespace
iName.Othernumber0.9966any0.0022string0.0009boolean0.0001complex0.0000
 Text.Whitespace
=Operator
 Text.Whitespace
0Literal.Number.Float
,Punctuation
 Text.Whitespace
cName.Otherstring0.7815any0.1344number0.0632boolean0.0133complex0.0016
;Punctuation
 Text.Whitespace
(Punctuation
iName.Othernumber0.9325any0.0564string0.0096boolean0.0006complex0.0003
 Text.Whitespace
<Operator
 Text.Whitespace
patternName.Otherstring0.7538any0.1927string[]0.0144RegExp0.0108any[]0.0107
.Punctuation
lengthName.Othernumber0.9106any0.0850string0.0036boolean0.0003complex0.0002
)Punctuation
 Text.Whitespace
&&Operator
 Text.Whitespace
(Punctuation
cName.Otherstring0.9037any0.0859number0.0048boolean0.0036complex0.0008
 Text.Whitespace
=Operator
 Text.Whitespace
patternName.Otherstring0.9130any0.0799RegExp0.0029complex0.0017number0.0011
.Punctuation
charAtName.Otherstring0.9435any0.0540complex0.0010boolean0.0007number0.0005
(Punctuation
iName.Othernumber0.9278any0.0605string0.0106boolean0.0004complex0.0002
)Punctuation
)Punctuation
;Punctuation
 Text.Whitespace
iName.Othernumber0.9413any0.0565string0.0016boolean0.0003void0.0002
++Operator
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
thisKeyword
.Punctuation
debugName.Othervoid0.6385complex0.1768any0.1102boolean0.0493{}0.0042
(Punctuation
'%s\t%s %s %j'Literal.String.Single
,Punctuation
 Text.Whitespace
patternName.Otherstring0.7936any0.1604RegExp0.0135complex0.0092boolean0.0071
,Punctuation
 Text.Whitespace
iName.Othernumber0.9651any0.0278string0.0054boolean0.0012complex0.0002
,Punctuation
 Text.Whitespace
reName.OtherRegExp0.5019string0.2003any0.1753boolean0.0416complex0.0338
,Punctuation
 Text.Whitespace
cName.Otherstring0.8454any0.0808boolean0.0402number0.0127RegExp0.0105
)Punctuation
\n\n      Text.Whitespace
// skip over any that are escaped.Comment.Single
\n      Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
escapingName.Otherboolean0.7217string0.1283any0.1046number0.0256RegExp0.0076
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
/* istanbul ignore next - completely not allowed, even escaped. */Comment.Multiline
\n        Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
cName.Otherstring0.8010any0.1647boolean0.0186number0.0065complex0.0039
 Text.Whitespace
===Operator
 Text.Whitespace
'/'Literal.String.Single
)Punctuation
 Text.Whitespace
{Punctuation
\n          Text.Whitespace
returnKeyword
 Text.Whitespace
falseKeyword.Constant
\n        Text.Whitespace
}Punctuation
\n\n        Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
reSpecialsName.Otherany0.5486boolean0.1507string0.0940complex0.0507string[]0.0506
[Punctuation
cName.Otherstring0.9207any0.0466number0.0182boolean0.0111complex0.0010
]Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n          Text.Whitespace
reName.Otherstring0.6352RegExp0.1861any0.1198boolean0.0325number0.0124
 Text.Whitespace
+=Operator
 Text.Whitespace
'\\'Literal.String.Single
\n        Text.Whitespace
}Punctuation
\n        Text.Whitespace
reName.Otherstring0.4811RegExp0.2067boolean0.1754any0.0815number0.0208
 Text.Whitespace
+=Operator
 Text.Whitespace
cName.Otherstring0.6832any0.1523boolean0.1347number0.0235RegExp0.0017
\n        Text.Whitespace
escapingName.Otherboolean0.9309any0.0364string0.0233number0.0061RegExp0.0005
 Text.Whitespace
=Operator
 Text.Whitespace
falseKeyword.Constant
\n        Text.Whitespace
continueKeyword
\n      Text.Whitespace
}Punctuation
\n\n      Text.Whitespace
switchKeyword
 Text.Whitespace
(Punctuation
cName.Otherstring0.9485any0.0419number0.0052boolean0.0021complex0.0005
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
/* istanbul ignore next */Comment.Multiline
\n        Text.Whitespace
caseKeyword
 Text.Whitespace
'/'Literal.String.Single
:Operator
 Text.Whitespace
{Punctuation
\n          Text.Whitespace
// Should already be path-split by now.Comment.Single
\n          Text.Whitespace
returnKeyword
 Text.Whitespace
falseKeyword.Constant
\n        Text.Whitespace
}Punctuation
\n\n        Text.Whitespace
caseKeyword
 Text.Whitespace
'\\'Literal.String.Single
:Operator
\n          Text.Whitespace
clearStateCharName.Otherboolean0.7145string0.0974any0.0630void0.0458complex0.0259
(Punctuation
)Punctuation
\n          Text.Whitespace
escapingName.Otherboolean0.9769any0.0102false0.0021string0.0021void0.0013
 Text.Whitespace
=Operator
 Text.Whitespace
trueKeyword.Constant
\n        Text.Whitespace
continueKeyword
\n\n        Text.Whitespace
// the various stateChar valuesComment.Single
\n        Text.Whitespace
// for the "extglob" stuff.Comment.Single
\n        Text.Whitespace
caseKeyword
 Text.Whitespace
'?'Literal.String.Single
:Operator
\n        Text.Whitespace
caseKeyword
 Text.Whitespace
'*'Literal.String.Single
:Operator
\n        Text.Whitespace
caseKeyword
 Text.Whitespace
'+'Literal.String.Single
:Operator
\n        Text.Whitespace
caseKeyword
 Text.Whitespace
'@'Literal.String.Single
:Operator
\n        Text.Whitespace
caseKeyword
 Text.Whitespace
'!'Literal.String.Single
:Operator
\n          Text.Whitespace
thisKeyword
.Punctuation
debugName.Othervoid0.8057complex0.1115any0.0603boolean0.0084{}0.0016
(Punctuation
'%s\t%s %s %j <-- stateChar'Literal.String.Single
,Punctuation
 Text.Whitespace
patternName.Otherstring0.7804any0.1614RegExp0.0162complex0.0123number0.0075
,Punctuation
 Text.Whitespace
iName.Othernumber0.9678any0.0275string0.0033boolean0.0006void0.0002
,Punctuation
 Text.Whitespace
reName.OtherRegExp0.6275any0.1679string0.0992boolean0.0353complex0.0265
,Punctuation
 Text.Whitespace
cName.Otherstring0.6899any0.2032boolean0.0494number0.0167RegExp0.0154
)Punctuation
\n\n          Text.Whitespace
// all of those are literals inside a class, except thatComment.Single
\n          Text.Whitespace
// the glob [!a] means [^a] in regexpComment.Single
\n          Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
inClassName.Otherboolean0.6921any0.1580string0.1012number0.0253RegExp0.0082
)Punctuation
 Text.Whitespace
{Punctuation
\n            Text.Whitespace
thisKeyword
.Punctuation
debugName.Othervoid0.8316complex0.0768any0.0569boolean0.0211{}0.0015
(Punctuation
'  in class'Literal.String.Single
)Punctuation
\n            Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
cName.Otherstring0.8380any0.1340boolean0.0130number0.0058complex0.0035
 Text.Whitespace
===Operator
 Text.Whitespace
'!'Literal.String.Single
 Text.Whitespace
&&Operator
 Text.Whitespace
iName.Othernumber0.9132any0.0753string0.0077boolean0.0019complex0.0012
 Text.Whitespace
===Operator
 Text.Whitespace
classStartName.Othernumber0.7914any0.1366string0.0648boolean0.0050complex0.0011
 Text.Whitespace
+Operator
 Text.Whitespace
1Literal.Number.Float
)Punctuation
 Text.Whitespace
cName.Otherstring0.8929any0.0758boolean0.0128number0.0116complex0.0030
 Text.Whitespace
=Operator
 Text.Whitespace
'^'Literal.String.Single
\n            Text.Whitespace
reName.Otherstring0.6130any0.1484RegExp0.1184boolean0.0461number0.0332
 Text.Whitespace
+=Operator
 Text.Whitespace
cName.Otherstring0.8063any0.1578boolean0.0134number0.0132complex0.0020
\n            Text.Whitespace
continueKeyword
\n          Text.Whitespace
}Punctuation
\n\n          Text.Whitespace
// if we already have a stateChar, then it meansComment.Single
\n          Text.Whitespace
// that there was something like ** or +? in there.Comment.Single
\n          Text.Whitespace
// Handle the stateChar, then proceed with this one.Comment.Single
\n          Text.Whitespace
thisKeyword
.Punctuation
debugName.Othervoid0.5330complex0.2547any0.1472boolean0.0139{}0.0066
(Punctuation
'call clearStateChar %j'Literal.String.Single
,Punctuation
 Text.Whitespace
stateCharName.Otherstring0.5869any0.1759number0.1594boolean0.0542complex0.0058
)Punctuation
\n          Text.Whitespace
clearStateCharName.Otherboolean0.2039string0.1916any0.1782void0.1226number0.1183
(Punctuation
)Punctuation
\n          Text.Whitespace
stateCharName.Otherstring0.4879any0.2795number0.1145boolean0.0941complex0.0071
 Text.Whitespace
=Operator
 Text.Whitespace
cName.Otherstring0.7086any0.2392number0.0181boolean0.0168complex0.0034
\n          Text.Whitespace
// if extglob is disabled, then +(asdf|foo) isn't a thing.Comment.Single
\n          Text.Whitespace
// just clear the statechar *now*, rather than even diving intoComment.Single
\n          Text.Whitespace
// the patternList stuff.Comment.Single
\n          Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
optionsName.Otherany0.5251complex0.2833{}0.0152Options0.0141any[]0.0105
.Punctuation
noextName.Otherboolean0.5780complex0.1388any0.0973number0.0919void0.0280
)Punctuation
 Text.Whitespace
clearStateCharName.Othervoid0.7264boolean0.1248complex0.0506any0.0349string0.0295
(Punctuation
)Punctuation
\n        Text.Whitespace
continueKeyword
\n\n        Text.Whitespace
caseKeyword
 Text.Whitespace
'('Literal.String.Single
:Operator
\n          Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
inClassName.Otherboolean0.6767any0.1467string0.1100number0.0494complex0.0058
)Punctuation
 Text.Whitespace
{Punctuation
\n            Text.Whitespace
reName.Otherstring0.5522RegExp0.2278any0.1405boolean0.0353complex0.0208
 Text.Whitespace
+=Operator
 Text.Whitespace
'('Literal.String.Single
\n            Text.Whitespace
continueKeyword
\n          Text.Whitespace
}Punctuation
\n\n          Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
stateCharName.Otherboolean0.6720string0.1732any0.1037number0.0339complex0.0040
)Punctuation
 Text.Whitespace
{Punctuation
\n            Text.Whitespace
reName.Otherstring0.6079RegExp0.2382any0.0981boolean0.0270complex0.0107
 Text.Whitespace
+=Operator
 Text.Whitespace
'\\('Literal.String.Single
\n            Text.Whitespace
continueKeyword
\n          Text.Whitespace
}Punctuation
\n\n          Text.Whitespace
patternListStackName.Otherany[]0.5307any0.1373complex0.1079string[]0.0821number[]0.0285
.Punctuation
pushName.Othernumber0.9769any0.0186string0.0016boolean0.0009void0.0008
(Punctuation
{Punctuation
\n            Text.Whitespace
typeKeyword.Reserved
:Operator
 Text.Whitespace
stateCharName.Otherstring0.7191any0.1721number0.0631boolean0.0193complex0.0066
,Punctuation
\n            Text.Whitespace
startName.Othernumber0.9616any0.0297string0.0069boolean0.0005void0.0004
:Operator
 Text.Whitespace
iKeyword.Typenumber0.9414any0.0532string0.0045boolean0.0003void0.0002
 Text.Whitespace
-Operator
 Text.Whitespace
1Literal.Number.Float
,Punctuation
\n            Text.Whitespace
reStartName.Otherstring0.3711any0.3601number0.1950boolean0.0365complex0.0087
:Operator
 Text.Whitespace
re.lengthKeyword.Type
,Punctuation
\n            Text.Whitespace
openName.Otherstring0.5798any0.4057number0.0068boolean0.0022void0.0015
:Operator
 Text.Whitespace
plTypesKeyword.Typeany0.7310complex0.1073{}0.0714any[]0.0212string0.0202
[Punctuation
stateCharName.Otherstring0.6214number0.2794any0.0901boolean0.0024complex0.0015
]Punctuation
.Punctuation
openName.Otherstring0.6259any0.3470number0.0125void0.0053boolean0.0046
,Punctuation
\n            Text.Whitespace
closeName.Otherstring0.8901any0.0991number0.0072boolean0.0008void0.0008
:Operator
 Text.Whitespace
plTypesKeyword.Typeany0.6175complex0.1822{}0.0791any[]0.0327string[]0.0280
[Punctuation
stateCharName.Otherstring0.6892number0.2414any0.0577boolean0.0026complex0.0025
]Punctuation
.Punctuation
closeName.Otherstring0.4939any0.4893number0.0069boolean0.0036complex0.0024
\n          Text.Whitespace
}Punctuation
)Punctuation
\n          Text.Whitespace
// negation is (?:(?!js)[^/]*)Comment.Single
\n          Text.Whitespace
reName.Otherstring0.7110any0.1601RegExp0.0678boolean0.0299complex0.0102
 Text.Whitespace
+=Operator
 Text.Whitespace
stateCharName.Otherstring0.9231any0.0584number0.0071boolean0.0064RegExp0.0029
 Text.Whitespace
===Operator
 Text.Whitespace
'!'Literal.String.Single
 Text.Whitespace
?Operator
 Text.Whitespace
'(?:(?!(?:'Literal.String.Single
 Text.Whitespace
:Operator
 Text.Whitespace
'(?:'Literal.String.Single
\n          Text.Whitespace
thisKeyword
.Punctuation
debugName.Othercomplex0.5698void0.2036any0.1607boolean0.0237{}0.0062
(Punctuation
'plType %j %j'Literal.String.Single
,Punctuation
 Text.Whitespace
stateCharName.Otherstring0.4373boolean0.2276number0.1641any0.1467RegExp0.0057
,Punctuation
 Text.Whitespace
reName.OtherRegExp0.5568string0.2021any0.1514complex0.0254boolean0.0225
)Punctuation
\n          Text.Whitespace
stateCharName.Otherboolean0.9534any0.0263string0.0073number0.0059false0.0014
 Text.Whitespace
=Operator
 Text.Whitespace
falseKeyword.Constant
\n        Text.Whitespace
continueKeyword
\n\n        Text.Whitespace
caseKeyword
 Text.Whitespace
')'Literal.String.Single
:Operator
\n          Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
inClassName.Otherboolean0.3205any0.3131string0.2299number0.0987string[]0.0088
 Text.Whitespace
||Operator
 Text.Whitespace
!Operator
patternListStackName.Otherstring[]0.3904any0.2662string0.1547any[]0.0991boolean0.0252
.Punctuation
lengthName.Othernumber0.8690any0.1267string0.0025complex0.0007boolean0.0006
)Punctuation
 Text.Whitespace
{Punctuation
\n            Text.Whitespace
reName.Otherstring0.6541RegExp0.1840any0.1094boolean0.0231complex0.0128
 Text.Whitespace
+=Operator
 Text.Whitespace
'\\)'Literal.String.Single
\n            Text.Whitespace
continueKeyword
\n          Text.Whitespace
}Punctuation
\n\n          Text.Whitespace
clearStateCharName.Otherboolean0.5815void0.1255any0.0840string0.0506number0.0467
(Punctuation
)Punctuation
\n          Text.Whitespace
hasMagicName.Otherboolean0.9865any0.0041number0.0027complex0.0018false0.0017
 Text.Whitespace
=Operator
 Text.Whitespace
trueKeyword.Constant
\n          Text.Whitespace
plName.Otherany0.7281complex0.1472string0.0595any[]0.0222number0.0109
 Text.Whitespace
=Operator
 Text.Whitespace
patternListStackName.Otherstring[]0.3959any0.2612any[]0.2007complex0.0874string0.0151
.Punctuation
popName.Otherany0.6994complex0.1785string0.0671number0.0137any[]0.0067
(Punctuation
)Punctuation
\n          Text.Whitespace
// negation is (?:(?!js)[^/]*)Comment.Single
\n          Text.Whitespace
// The others are (?:<pattern>)<type>Comment.Single
\n          Text.Whitespace
reName.Otherstring0.4539any0.3709complex0.0612boolean0.0373RegExp0.0292
 Text.Whitespace
+=Operator
 Text.Whitespace
plName.Otherany0.6840complex0.2468string0.0326T0.0079this0.0039
.Punctuation
closeName.Otherstring0.5834any0.4044complex0.0034number0.0026boolean0.0014
\n          Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
plName.Otherany0.7993complex0.1513string0.0164T0.0057this0.0046
.Punctuation
typeKeyword.Reserved
 Text.Whitespace
===Operator
 Text.Whitespace
'!'Literal.String.Single
)Punctuation
 Text.Whitespace
{Punctuation
\n            Text.Whitespace
negativeListsName.Otherany[]0.6353string[]0.1969any0.0860number[]0.0141complex0.0137
.Punctuation
pushName.Othernumber0.9818any0.0149string0.0012boolean0.0007void0.0007
(Punctuation
plName.Otherany0.7345complex0.1584string0.0561any[]0.0046T0.0046
)Punctuation
\n          Text.Whitespace
}Punctuation
\n          Text.Whitespace
plName.Otherany0.6318complex0.3278string0.0044this0.0034T0.0032
.Punctuation
reEndName.Otherany0.9315string0.0260number0.0212boolean0.0114complex0.0041
 Text.Whitespace
=Operator
 Text.Whitespace
reName.OtherRegExp0.4567any0.2218string0.1642string[]0.0667any[]0.0301
.Punctuation
lengthName.Othernumber0.5245any0.4649string0.0051complex0.0034boolean0.0010
\n        Text.Whitespace
continueKeyword
\n\n        Text.Whitespace
caseKeyword
 Text.Whitespace
'|'Literal.String.Single
:Operator
\n          Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
inClassName.Otherany0.3810string0.2378boolean0.2320number0.1034string[]0.0139
 Text.Whitespace
||Operator
 Text.Whitespace
!Operator
patternListStackName.Otherstring[]0.4059any0.2690string0.1509any[]0.0957complex0.0179
.Punctuation
lengthName.Othernumber0.8424any0.1533string0.0026complex0.0007boolean0.0006
)Punctuation
 Text.Whitespace
{Punctuation
\n            Text.Whitespace
reName.Otherstring0.5814RegExp0.2198any0.1470boolean0.0214complex0.0127
 Text.Whitespace
+=Operator
 Text.Whitespace
'\\|'Literal.String.Single
\n            Text.Whitespace
continueKeyword
\n          Text.Whitespace
}Punctuation
\n\n          Text.Whitespace
clearStateCharName.Otherstring0.4341boolean0.2086void0.1525any0.0738complex0.0356
(Punctuation
)Punctuation
\n          Text.Whitespace
reName.Otherstring0.3806RegExp0.3619any0.2039boolean0.0177complex0.0172
 Text.Whitespace
+=Operator
 Text.Whitespace
'|'Literal.String.Single
\n        Text.Whitespace
continueKeyword
\n\n        Text.Whitespace
// these are mostly the same in regexp and globComment.Single
\n        Text.Whitespace
caseKeyword
 Text.Whitespace
'['Literal.String.Single
:Operator
\n          Text.Whitespace
// swallow any state-tracking char before the [Comment.Single
\n          Text.Whitespace
clearStateCharName.Otherstring0.4410void0.1468any0.1446boolean0.1254complex0.0535
(Punctuation
)Punctuation
\n\n          Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
inClassName.Otherboolean0.5509string0.1999any0.1915number0.0410complex0.0054
)Punctuation
 Text.Whitespace
{Punctuation
\n            Text.Whitespace
reName.Otherstring0.6407RegExp0.1550any0.1502boolean0.0238complex0.0113
 Text.Whitespace
+=Operator
 Text.Whitespace
'\\'Literal.String.Single
 Text.Whitespace
+Operator
 Text.Whitespace
cName.Otherstring0.7117any0.2598number0.0161boolean0.0078complex0.0011
\n            Text.Whitespace
continueKeyword
\n          Text.Whitespace
}Punctuation
\n\n          Text.Whitespace
inClassName.Otherboolean0.9588any0.0184string0.0096number0.0090complex0.0008
 Text.Whitespace
=Operator
 Text.Whitespace
trueKeyword.Constant
\n          Text.Whitespace
classStartName.Otherboolean0.4537any0.2524string0.1474number0.1284complex0.0082
 Text.Whitespace
=Operator
 Text.Whitespace
iName.Othernumber0.8216any0.1577string0.0159boolean0.0024complex0.0015
\n          Text.Whitespace
reClassStartName.Othernumber0.5089any0.2199string0.1805boolean0.0793complex0.0066
 Text.Whitespace
=Operator
 Text.Whitespace
reName.OtherRegExp0.4682string0.2240any0.1540string[]0.0695any[]0.0273
.Punctuation
lengthName.Othernumber0.5801any0.4122string0.0046complex0.0015boolean0.0008
\n          Text.Whitespace
reName.Otherstring0.3442any0.3062RegExp0.1430number0.0936complex0.0501
 Text.Whitespace
+=Operator
 Text.Whitespace
cName.Otherstring0.7373any0.2078number0.0217boolean0.0205complex0.0050
\n        Text.Whitespace
continueKeyword
\n\n        Text.Whitespace
caseKeyword
 Text.Whitespace
']'Literal.String.Single
:Operator
\n          Text.Whitespace
//  a right bracket shall lose its specialComment.Single
\n          Text.Whitespace
//  meaning and represent itself inComment.Single
\n          Text.Whitespace
//  a bracket expression if it occursComment.Single
\n          Text.Whitespace
//  first in the list.  -- POSIX.2 2.8.3.2Comment.Single
\n          Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
iName.Othernumber0.8409any0.1351string0.0179complex0.0026boolean0.0021
 Text.Whitespace
===Operator
 Text.Whitespace
classStartName.Othernumber0.7494any0.1555string0.0872boolean0.0040complex0.0017
 Text.Whitespace
+Operator
 Text.Whitespace
1Literal.Number.Float
 Text.Whitespace
||Operator
 Text.Whitespace
!Operator
inClassName.Otherboolean0.6739string0.1579any0.1108number0.0458complex0.0033
)Punctuation
 Text.Whitespace
{Punctuation
\n            Text.Whitespace
reName.Otherstring0.6427RegExp0.1756any0.1396boolean0.0150number0.0098
 Text.Whitespace
+=Operator
 Text.Whitespace
'\\'Literal.String.Single
 Text.Whitespace
+Operator
 Text.Whitespace
cName.Otherstring0.8682any0.1117number0.0135boolean0.0021complex0.0013
\n            Text.Whitespace
continueKeyword
\n          Text.Whitespace
}Punctuation
\n\n          Text.Whitespace
// handle the case where we left a class open.Comment.Single
\n          Text.Whitespace
// "[z-a]" is valid, equivalent to "\[z-a\]"Comment.Single
\n          Text.Whitespace
// split where the last [ was, make sure we don't haveComment.Single
\n          Text.Whitespace
// an invalid re. if so, re-walk the contents of theComment.Single
\n          Text.Whitespace
// would-be class to re-translate any characters thatComment.Single
\n          Text.Whitespace
// were passed through as-isComment.Single
\n          Text.Whitespace
// TODO: It would probably be faster to determine thisComment.Single
\n          Text.Whitespace
// without a try/catch and a new RegExp, but it's trickyComment.Single
\n          Text.Whitespace
// to do safely.  For now, this is safe and works.Comment.Single
\n          Text.Whitespace
csName.Otherstring0.9387any0.0346number0.0049boolean0.0041RegExp0.0031
 Text.Whitespace
=Operator
 Text.Whitespace
patternName.Otherstring0.8975any0.0914RegExp0.0057string[]0.0019complex0.0011
.Punctuation
substringName.Otherstring0.8152any0.1597complex0.0203number0.0023void0.0008
(Punctuation
classStartName.Othernumber0.9036any0.0785string0.0155boolean0.0014complex0.0003
 Text.Whitespace
+Operator
 Text.Whitespace
1Literal.Number.Float
,Punctuation
 Text.Whitespace
iName.Othernumber0.9398any0.0501string0.0085boolean0.0009void0.0003
)Punctuation
\n          Text.Whitespace
tryKeyword
 Text.Whitespace
{Punctuation
\n            Text.Whitespace
RegExpName.BuiltinRegExpConstructor0.9979RegExp0.0005BooleanConstructor0.0000RegExp[]0.0000Configuration0.0000
(Punctuation
'['Literal.String.Single
 Text.Whitespace
+Operator
 Text.Whitespace
csName.Otherstring0.8494any0.0922number0.0331Date0.0041boolean0.0040
 Text.Whitespace
+Operator
 Text.Whitespace
']'Literal.String.Single
)Punctuation
\n          Text.Whitespace
}Punctuation
 Text.Whitespace
catchKeyword
 Text.Whitespace
(Punctuation
erName.Otherany0.9967string0.0012boolean0.0007complex0.0006number0.0003
)Punctuation
 Text.Whitespace
{Punctuation
\n            Text.Whitespace
// not a valid class!Comment.Single
\n            Text.Whitespace
spName.Otherstring[]0.3669any0.2542number[]0.0456any[]0.0353complex0.0239
 Text.Whitespace
=Operator
 Text.Whitespace
thisKeyword
.Punctuation
parseName.Othercomplex0.1283any0.0341string[]0.0227number0.0188boolean0.0173
(Punctuation
csName.Otherstring0.5415any0.1804number0.0236RegExp0.0203boolean0.0153
,Punctuation
 Text.Whitespace
SUBPARSEName.Otherstring0.7059any0.1313number0.0743boolean0.0705RegExp0.0055
)Punctuation
\n            Text.Whitespace
reName.Otherstring0.6321any0.2531RegExp0.0878boolean0.0111number0.0065
 Text.Whitespace
=Operator
 Text.Whitespace
reName.OtherRegExp0.5742string0.2753any0.1255string[]0.0044boolean0.0023
.Punctuation
substrName.Otherstring0.7578any0.2372number0.0015complex0.0011string[]0.0010
(Punctuation
0Literal.Number.Float
,Punctuation
 Text.Whitespace
reClassStartName.Othernumber0.4171string0.3664any0.1832boolean0.0237complex0.0026
)Punctuation
 Text.Whitespace
+Operator
 Text.Whitespace
'\\['Literal.String.Single
 Text.Whitespace
+Operator
 Text.Whitespace
spName.Otherstring[]0.8699number[]0.0312any[]0.0276any0.0179complex0.0092
[Punctuation
0Literal.Number.Float
]Punctuation
 Text.Whitespace
+Operator
 Text.Whitespace
'\\]'Literal.String.Single
\n            Text.Whitespace
hasMagicName.Otherboolean0.8552any0.0742number0.0267complex0.0113string0.0105
 Text.Whitespace
=Operator
 Text.Whitespace
hasMagicName.Otherboolean0.6075any0.3074number0.0272complex0.0178string0.0158
 Text.Whitespace
||Operator
 Text.Whitespace
spName.Otherstring[]0.8766any[]0.0394number[]0.0222any0.0111complex0.0075
[Punctuation
1Literal.Number.Float
]Punctuation
\n            Text.Whitespace
inClassName.Otherboolean0.9804any0.0100string0.0033number0.0026false0.0007
 Text.Whitespace
=Operator
 Text.Whitespace
falseKeyword.Constant
\n            Text.Whitespace
continueKeyword
\n          Text.Whitespace
}Punctuation
\n\n          Text.Whitespace
// finish up the class.Comment.Single
\n          Text.Whitespace
hasMagicName.Otherboolean0.9942any0.0014false0.0014true0.0009number0.0007
 Text.Whitespace
=Operator
 Text.Whitespace
trueKeyword.Constant
\n          Text.Whitespace
inClassName.Otherboolean0.9951any0.0020false0.0008string0.0007true0.0004
 Text.Whitespace
=Operator
 Text.Whitespace
falseKeyword.Constant
\n          Text.Whitespace
reName.Otherstring0.5917any0.1603RegExp0.1061complex0.0563boolean0.0512
 Text.Whitespace
+=Operator
 Text.Whitespace
cName.Otherstring0.8277any0.1407boolean0.0180number0.0059complex0.0024
\n        Text.Whitespace
continueKeyword
\n\n        Text.Whitespace
defaultKeyword
:Operator
\n          Text.Whitespace
// swallow any state char that wasn't consumedComment.Single
\n          Text.Whitespace
clearStateCharName.Otherstring0.6388any0.2241boolean0.0634complex0.0183number0.0181
(Punctuation
)Punctuation
\n\n          Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
reSpecialsName.Otherany0.4443string0.2176complex0.0681string[]0.0599boolean0.0573
[Punctuation
cName.Otherstring0.9319any0.0410number0.0187boolean0.0054complex0.0011
]Punctuation
 Text.Whitespace
&&Operator
 Text.Whitespace
!Operator
(Punctuation
cName.Otherstring0.7634any0.2187boolean0.0046number0.0040complex0.0040
 Text.Whitespace
===Operator
 Text.Whitespace
'^'Literal.String.Single
 Text.Whitespace
&&Operator
 Text.Whitespace
inClassName.Otherstring0.4430boolean0.3398any0.1668number0.0346RegExp0.0051
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n            Text.Whitespace
reName.Otherstring0.5574RegExp0.2717any0.1385boolean0.0136number0.0077
 Text.Whitespace
+=Operator
 Text.Whitespace
'\\'Literal.String.Single
\n          Text.Whitespace
}Punctuation
\n\n          Text.Whitespace
reName.Otherstring0.8012RegExp0.1180any0.0505boolean0.0117number0.0094
 Text.Whitespace
+=Operator
 Text.Whitespace
cName.Otherstring0.8505any0.1280number0.0128boolean0.0045RegExp0.0008
\n          Text.Whitespace
breakKeyword
\n\n      Text.Whitespace
}Punctuation
 Text.Whitespace
// switchComment.Single
\n    Text.Whitespace
}Punctuation
 Text.Whitespace
// forComment.Single
\n\n    Text.Whitespace
// handle the case where we left a class open.Comment.Single
\n    Text.Whitespace
// "[abc" is valid, equivalent to "\[abc"Comment.Single
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
inClassName.Otherboolean0.4452string0.3299any0.1723number0.0313RegExp0.0052
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
// split where the last [ was, and escape itComment.Single
\n      Text.Whitespace
// this is a huge pita.  We now have to re-walkComment.Single
\n      Text.Whitespace
// the contents of the would-be class to re-translateComment.Single
\n      Text.Whitespace
// any characters that were passed through as-isComment.Single
\n      Text.Whitespace
csName.Otherstring0.9169any0.0397string[]0.0051RegExp0.0050boolean0.0047
 Text.Whitespace
=Operator
 Text.Whitespace
patternName.Otherstring0.8919any0.0999RegExp0.0035complex0.0014string[]0.0010
.Punctuation
substrName.Otherstring0.8918any0.1042complex0.0016number0.0011string[]0.0005
(Punctuation
classStartName.Othernumber0.7357any0.1695string0.0908boolean0.0020complex0.0011
 Text.Whitespace
+Operator
 Text.Whitespace
1Literal.Number.Float
)Punctuation
\n      Text.Whitespace
spName.Otherstring[]0.3914any0.3600string0.0402number[]0.0352complex0.0314
 Text.Whitespace
=Operator
 Text.Whitespace
thisKeyword
.Punctuation
parseName.Othercomplex0.2288any0.0564number0.0452string[]0.0297any[]0.0269
(Punctuation
csName.Otherstring0.6839any0.1148number0.0338boolean0.0134Date0.0114
,Punctuation
 Text.Whitespace
SUBPARSEName.Otherstring0.7316any0.1080number0.1076boolean0.0428RegExp0.0025
)Punctuation
\n      Text.Whitespace
reName.Otherstring0.6898any0.2067RegExp0.0744boolean0.0108number0.0082
 Text.Whitespace
=Operator
 Text.Whitespace
reName.OtherRegExp0.5315string0.3258any0.1124string[]0.0066boolean0.0026
.Punctuation
substrName.Otherstring0.7890any0.2054number0.0019string[]0.0012complex0.0011
(Punctuation
0Literal.Number.Float
,Punctuation
 Text.Whitespace
reClassStartName.Othernumber0.4657string0.3199any0.1852boolean0.0195string[]0.0025
)Punctuation
 Text.Whitespace
+Operator
 Text.Whitespace
'\\['Literal.String.Single
 Text.Whitespace
+Operator
 Text.Whitespace
spName.Otherstring[]0.8556any[]0.0267number[]0.0229any0.0151complex0.0064
[Punctuation
0Literal.Number.Float
]Punctuation
\n      Text.Whitespace
hasMagicName.Otherboolean0.9034any0.0372number0.0243complex0.0068string0.0047
 Text.Whitespace
=Operator
 Text.Whitespace
hasMagicName.Otherboolean0.5807any0.3299number0.0274complex0.0166string0.0106
 Text.Whitespace
||Operator
 Text.Whitespace
spName.Otherstring[]0.8781any[]0.0340number[]0.0149any0.0093complex0.0091
[Punctuation
1Literal.Number.Float
]Punctuation
\n    Text.Whitespace
}Punctuation
\n\n    Text.Whitespace
// handle the case where we had a +( thing at the *end*Comment.Single
\n    Text.Whitespace
// of the pattern.Comment.Single
\n    Text.Whitespace
// each pattern list stack adds 3 chars, and we need to go throughComment.Single
\n    Text.Whitespace
// and escape any | chars that were passed through as-is for the regexp.Comment.Single
\n    Text.Whitespace
// Go through and escape them, taking care not to double-escape anyComment.Single
\n    Text.Whitespace
// | chars that were already escaped.Comment.Single
\n    Text.Whitespace
forKeyword
 Text.Whitespace
(Punctuation
plName.Otherany0.9361string0.0314complex0.0094any[]0.0091string[]0.0036
 Text.Whitespace
=Operator
 Text.Whitespace
patternListStackName.Otherany0.6127string[]0.1855any[]0.1271string0.0175complex0.0112
.Punctuation
popName.Otherany0.8583string0.0981complex0.0151number0.0056any[]0.0050
(Punctuation
)Punctuation
;Punctuation
 Text.Whitespace
plName.Otherany0.8314complex0.0587string0.0490any[]0.0089this0.0054
;Punctuation
 Text.Whitespace
plName.Otherany0.7679string0.1570complex0.0439any[]0.0078string[]0.0028
 Text.Whitespace
=Operator
 Text.Whitespace
patternListStackName.Otherany0.5660string[]0.1863any[]0.1021complex0.0777string0.0345
.Punctuation
popName.Otherany0.8489string0.0910complex0.0387number0.0040any[]0.0039
(Punctuation
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
tailName.Otherstring0.6116any0.3666any[]0.0055string[]0.0048number0.0033
\n      Text.Whitespace
tailName.Otherstring0.6241any0.3297string[]0.0154any[]0.0143number0.0064
 Text.Whitespace
=Operator
 Text.Whitespace
reName.OtherRegExp0.4388any0.2005string0.1978string[]0.0825complex0.0242
.Punctuation
sliceName.Otherstring0.6469any0.2554string[]0.0467complex0.0168any[]0.0168
(Punctuation
plName.Otherany0.6182complex0.3456string0.0070this0.0031T0.0026
.Punctuation
reStartName.Otherany0.7132string0.1913number0.0819complex0.0087boolean0.0016
 Text.Whitespace
+Operator
 Text.Whitespace
plName.Otherany0.6458complex0.2750string0.0207any[]0.0096this0.0086
.Punctuation
openName.Otherstring0.7184any0.2742string[]0.0022complex0.0012number0.0009
.Punctuation
lengthName.Otherany0.6948number0.2989string0.0045complex0.0010void0.0002
)Punctuation
\n      Text.Whitespace
thisKeyword
.Punctuation
debugName.Othercomplex0.3568void0.3119any0.2928boolean0.0052number0.0022
(Punctuation
'setting tail'Literal.String.Single
,Punctuation
 Text.Whitespace
reName.OtherRegExp0.4811string0.2903any0.1629complex0.0260boolean0.0098
,Punctuation
 Text.Whitespace
plName.Otherany0.6964string0.1361complex0.1306any[]0.0047T0.0028
)Punctuation
\n      Text.Whitespace
// maybe some even number of \, then maybe 1 \, followed by a |Comment.Single
\n      Text.Whitespace
tailName.Otherstring0.7731any0.2085number0.0130complex0.0013string[]0.0011
 Text.Whitespace
=Operator
 Text.Whitespace
tailName.Otherstring0.8309any0.1633number0.0030string[]0.0007complex0.0006
.Punctuation
replaceName.Othercomplex0.8413any0.1554string0.0013number0.0004any[]0.0003
(Punctuation
/((?:\\{2}){0,64})(\\?)\|/gLiteral.String.Regex
,Punctuation
 Text.Whitespace
(Punctuation
_Name.Otherany0.5159string0.4445complex0.0101number0.0092string[]0.0063
,Punctuation
 Text.Whitespace
$1Name.Other
,Punctuation
 Text.Whitespace
$2Name.Other
)Punctuation
 Text.Whitespace
=>Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
/* istanbul ignore else - should already be done */Comment.Multiline
\n        Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
$2Name.Other
)Punctuation
 Text.Whitespace
{Punctuation
\n          Text.Whitespace
// the | isn't already escaped, so escape it.Comment.Single
\n          Text.Whitespace
$2Name.Other
 Text.Whitespace
=Operator
 Text.Whitespace
'\\'Literal.String.Single
\n        Text.Whitespace
}Punctuation
\n\n        Text.Whitespace
// need to escape all those slashes *again*, without escaping theComment.Single
\n        Text.Whitespace
// one that we need for escaping the | character.  As it works out,Comment.Single
\n        Text.Whitespace
// escaping an even number of slashes can be done by simply repeatingComment.Single
\n        Text.Whitespace
// it exactly after itself.  That's why this trick works.Comment.Single
\n        Text.Whitespace
//Comment.Single
\n        Text.Whitespace
// I am sorry that you have to see this.Comment.Single
\n        Text.Whitespace
returnKeyword
 Text.Whitespace
$1Name.Other
 Text.Whitespace
+Operator
 Text.Whitespace
$1Name.Other
 Text.Whitespace
+Operator
 Text.Whitespace
$2Name.Other
 Text.Whitespace
+Operator
 Text.Whitespace
'|'Literal.String.Single
\n      Text.Whitespace
}Punctuation
)Punctuation
\n\n      Text.Whitespace
thisKeyword
.Punctuation
debugName.Otherany0.3436complex0.3191void0.2827boolean0.0083tConsoleFn0.0025
(Punctuation
'tail=%j\n   %s'Literal.String.Single
,Punctuation
 Text.Whitespace
tailName.Otherstring0.7624any0.1965any[]0.0108string[]0.0091number0.0083
,Punctuation
 Text.Whitespace
tailName.Otherstring0.7219any0.2314any[]0.0142string[]0.0096number0.0082
,Punctuation
 Text.Whitespace
plName.Otherany0.8004string0.1127complex0.0649any[]0.0035number0.0016
,Punctuation
 Text.Whitespace
reName.OtherRegExp0.6131any0.1695string0.1463complex0.0290boolean0.0100
)Punctuation
\n      Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
tName.Otherany0.7328string0.2163boolean0.0298complex0.0068number0.0043
 Text.Whitespace
=Operator
 Text.Whitespace
plName.Otherany0.7047complex0.2344string0.0175T0.0062this0.0039
.Punctuation
typeKeyword.Reserved
 Text.Whitespace
===Operator
 Text.Whitespace
'*'Literal.String.Single
 Text.Whitespace
?Operator
 Text.Whitespace
starName.Otherstring0.6727any0.2608boolean0.0410number0.0128RegExp0.0035
\n        Text.Whitespace
:Operator
 Text.Whitespace
pl.typeKeyword.Type
 Text.Whitespace
===Operator
 Text.Whitespace
'?'Literal.String.Single
 Text.Whitespace
?Operator
 Text.Whitespace
qmarkName.Otherstring0.9451any0.0504number0.0015RegExp0.0010boolean0.0007
\n        Text.Whitespace
:Operator
 Text.Whitespace
'\\'Literal.String.Single
 Text.Whitespace
+Operator
 Text.Whitespace
plName.Otherany0.8286complex0.1405string0.0057T0.0043Function0.0018
.Punctuation
typeKeyword.Reserved
\n\n      Text.Whitespace
hasMagicName.Otherboolean0.5050any0.4559complex0.0188string0.0066number0.0040
 Text.Whitespace
=Operator
 Text.Whitespace
trueKeyword.Constant
\n      Text.Whitespace
reName.Otherany0.4393string0.2305RegExp0.2002string[]0.0553complex0.0282
 Text.Whitespace
=Operator
 Text.Whitespace
reName.OtherRegExp0.3872any0.2826string0.2048string[]0.0549any[]0.0223
.Punctuation
sliceName.Otherstring0.4348any0.3873string[]0.0866any[]0.0401complex0.0302
(Punctuation
0Literal.Number.Float
,Punctuation
 Text.Whitespace
plName.Otherany0.7032complex0.2752string0.0043T0.0021any[]0.0014
.Punctuation
reStartName.Otherany0.7738string0.1422number0.0516complex0.0122boolean0.0084
)Punctuation
 Text.Whitespace
+Operator
 Text.Whitespace
tName.Otherany0.8427string0.1399number0.0135complex0.0011boolean0.0007
 Text.Whitespace
+Operator
 Text.Whitespace
'\\('Literal.String.Single
 Text.Whitespace
+Operator
 Text.Whitespace
tailName.Otherstring0.6464any0.3140number0.0141any[]0.0102string[]0.0048
\n    Text.Whitespace
}Punctuation
\n\n    Text.Whitespace
// handle trailing things that only matter at the very end.Comment.Single
\n    Text.Whitespace
clearStateCharName.Otherstring0.4119any0.2567boolean0.1035void0.0893complex0.0580
(Punctuation
)Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
escapingName.Otherboolean0.4338any0.3151string0.1938number0.0264complex0.0091
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
// trailing \\Comment.Single
\n      Text.Whitespace
reName.Otherstring0.5910RegExp0.2564any0.1315complex0.0061boolean0.0054
 Text.Whitespace
+=Operator
 Text.Whitespace
'\\\\'Literal.String.Single
\n    Text.Whitespace
}Punctuation
\n\n    Text.Whitespace
// only need to apply the nodot start if the re starts withComment.Single
\n    Text.Whitespace
// something that could conceivably capture a dotComment.Single
\n    Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
addPatternStartName.Otherany0.5272string0.4106boolean0.0238number0.0154complex0.0068
 Text.Whitespace
=Operator
 Text.Whitespace
addPatternStartSetName.Otherany0.4652complex0.3373{}0.0716string0.0363boolean0.0201
[Punctuation
reName.Otherstring0.6712RegExp0.1801any0.1306complex0.0054string[]0.0039
.Punctuation
charAtName.Otherstring0.8561any0.1414complex0.0008boolean0.0007number0.0005
(Punctuation
0Literal.Number.Float
)Punctuation
]Punctuation
\n\n    Text.Whitespace
// Hack to work around lack of negative lookbehind in JSComment.Single
\n    Text.Whitespace
// A pattern like: *.!(x).!(y|z) needs to ensure that a nameComment.Single
\n    Text.Whitespace
// like 'a.xyz.yz' doesn't match.  So, the first negativeComment.Single
\n    Text.Whitespace
// lookahead, has to look ALL the way ahead, to the end ofComment.Single
\n    Text.Whitespace
// the pattern.Comment.Single
\n    Text.Whitespace
forKeyword
 Text.Whitespace
(Punctuation
letKeyword.Declaration
 Text.Whitespace
nName.Othernumber0.9825any0.0132string0.0033complex0.0004boolean0.0003
 Text.Whitespace
=Operator
 Text.Whitespace
negativeListsName.Otherany0.3807string[]0.2375string0.2172any[]0.0646number0.0242
.Punctuation
lengthName.Othernumber0.8589any0.1377string0.0021complex0.0007boolean0.0002
 Text.Whitespace
-Operator
 Text.Whitespace
1Literal.Number.Float
;Punctuation
 Text.Whitespace
nName.Othernumber0.9824any0.0160string0.0011complex0.0001boolean0.0001
 Text.Whitespace
>Operator
 Text.Whitespace
-Operator
1Literal.Number.Float
;Punctuation
 Text.Whitespace
nName.Othernumber0.9901any0.0087string0.0009boolean0.0001complex0.0001
--Operator
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
nlName.Otherany0.4849string0.4222number0.0641boolean0.0079complex0.0078
 Text.Whitespace
=Operator
 Text.Whitespace
negativeListsName.Otherany0.4929string[]0.1688complex0.1574any[]0.0557string0.0327
[Punctuation
nName.Othernumber0.9188any0.0413string0.0375complex0.0011boolean0.0003
]Punctuation
\n\n      Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
nlBeforeName.Otherstring0.4782any0.3181boolean0.0749string[]0.0512number0.0267
 Text.Whitespace
=Operator
 Text.Whitespace
reName.OtherRegExp0.5538any0.2025string0.1231string[]0.0583any[]0.0163
.Punctuation
sliceName.Otherany0.4194string0.3324string[]0.1337any[]0.0512complex0.0249
(Punctuation
0Literal.Number.Float
,Punctuation
 Text.Whitespace
nlName.Otherany0.7300complex0.1360RegExp0.0540string0.0224string[]0.0076
.Punctuation
reStartName.Otherany0.4006string0.3543number0.1662boolean0.0445complex0.0137
)Punctuation
\n      Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
nlFirstName.Otherstring0.3665any0.3496string[]0.1059boolean0.0537RegExp0.0388
 Text.Whitespace
=Operator
 Text.Whitespace
reName.OtherRegExp0.5352any0.2268string0.1073string[]0.0652any[]0.0193
.Punctuation
sliceName.Otherstring0.5162any0.3448string[]0.0562complex0.0239any[]0.0234
(Punctuation
nlName.Otherany0.7472complex0.1932string0.0130RegExp0.0123number0.0025
.Punctuation
reStartName.Otherany0.4175string0.3591number0.1816complex0.0142boolean0.0100
,Punctuation
 Text.Whitespace
nlName.Otherany0.7461complex0.1557RegExp0.0242string0.0113number0.0063
.Punctuation
reEndName.Otherany0.4791number0.4480string0.0619boolean0.0046complex0.0038
 Text.Whitespace
-Operator
 Text.Whitespace
8Literal.Number.Float
)Punctuation
\n      Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
nlAfterName.Otherstring0.5441any0.3219string[]0.0344boolean0.0283number0.0207
 Text.Whitespace
=Operator
 Text.Whitespace
reName.OtherRegExp0.5276any0.2372string0.1281string[]0.0478any[]0.0175
.Punctuation
sliceName.Otherstring0.5189any0.3350string[]0.0581any[]0.0311complex0.0202
(Punctuation
nlName.Otherany0.7892complex0.1505RegExp0.0209string0.0093any[]0.0045
.Punctuation
reEndName.Otherstring0.4261any0.3958number0.1141boolean0.0335complex0.0113
)Punctuation
\n      Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
nlLastName.Otherstring0.5131any0.3221boolean0.0575string[]0.0304RegExp0.0264
 Text.Whitespace
=Operator
 Text.Whitespace
reName.OtherRegExp0.4996any0.2552string0.1477string[]0.0483any[]0.0139
.Punctuation
sliceName.Otherstring0.5484any0.3639string[]0.0334complex0.0161any[]0.0155
(Punctuation
nlName.Otherany0.8390complex0.0884RegExp0.0106string0.0067number0.0060
.Punctuation
reEndName.Othernumber0.4812any0.4456string0.0651complex0.0036boolean0.0030
 Text.Whitespace
-Operator
 Text.Whitespace
8Literal.Number.Float
,Punctuation
 Text.Whitespace
nlName.Otherany0.8222complex0.0736RegExp0.0264number0.0201string0.0155
.Punctuation
reEndName.Othernumber0.4574any0.3716string0.1348boolean0.0260complex0.0039
)Punctuation
 Text.Whitespace
+Operator
 Text.Whitespace
nlAfterName.Otherstring0.4380any0.3192number0.2269boolean0.0076string[]0.0028
\n\n      Text.Whitespace
// Handle nested stuff like *(*.js|!(*.json)), where open parensComment.Single
\n      Text.Whitespace
// mean that we should *not* include the ) in the bit that is consideredComment.Single
\n      Text.Whitespace
// "after" the negated section.Comment.Single
\n      Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
openParensBeforeName.Otherany0.5664string0.2913string[]0.0414boolean0.0366number0.0313
 Text.Whitespace
=Operator
 Text.Whitespace
nlBeforeName.Otherstring0.6886any0.2989number0.0065boolean0.0015RegExp0.0014
.Punctuation
splitName.Othercomplex0.8184any0.1770string0.0009any[]0.0008string[]0.0007
(Punctuation
'('Literal.String.Single
)Punctuation
.Punctuation
lengthName.Othernumber0.5020any0.4936string0.0024complex0.0011boolean0.0003
 Text.Whitespace
-Operator
 Text.Whitespace
1Literal.Number.Float
\n      Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
cleanAfterName.Otherany0.4715string0.2601number0.2356string[]0.0103boolean0.0075
 Text.Whitespace
=Operator
 Text.Whitespace
nlAfterName.Otherany0.5033string0.2519number0.2008string[]0.0148complex0.0078
\n      Text.Whitespace
forKeyword
 Text.Whitespace
(Punctuation
letKeyword.Declaration
 Text.Whitespace
iName.Othernumber0.9865any0.0118string0.0013boolean0.0001complex0.0001
 Text.Whitespace
=Operator
 Text.Whitespace
0Literal.Number.Float
;Punctuation
 Text.Whitespace
iName.Othernumber0.9205any0.0730string0.0047complex0.0007void0.0004
 Text.Whitespace
<Operator
 Text.Whitespace
openParensBeforeName.Othernumber0.7718any0.1398string0.0817boolean0.0031complex0.0019
;Punctuation
 Text.Whitespace
iName.Othernumber0.9420any0.0545string0.0029boolean0.0002complex0.0002
++Operator
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
cleanAfterName.Otherany0.5486string0.3801number0.0499boolean0.0170string[]0.0010
 Text.Whitespace
=Operator
 Text.Whitespace
cleanAfterName.Otherstring0.5554any0.4333number0.0077boolean0.0016complex0.0005
.Punctuation
replaceName.Othercomplex0.7470any0.2486string0.0015boolean0.0008any[]0.0005
(Punctuation
/\)[+*?]?/Literal.String.Regex
,Punctuation
 Text.Whitespace
''Literal.String.Single
)Punctuation
\n      Text.Whitespace
}Punctuation
\n      Text.Whitespace
nlAfterName.Otherboolean0.4761string0.3242any0.1413number0.0421RegExp0.0060
 Text.Whitespace
=Operator
 Text.Whitespace
cleanAfterName.Otherstring0.4848boolean0.2286any0.1987number0.0749RegExp0.0030
\n\n      Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
dollarName.Otherboolean0.6718string0.1830any0.1085number0.0223RegExp0.0053
 Text.Whitespace
=Operator
 Text.Whitespace
nlAfterName.Otherstring0.7412any0.1942boolean0.0362number0.0153RegExp0.0075
 Text.Whitespace
===Operator
 Text.Whitespace
''Literal.String.Single
 Text.Whitespace
&&Operator
 Text.Whitespace
isSubName.Otherstring0.5161boolean0.2408any0.1331number0.1003RegExp0.0034
 Text.Whitespace
!==Operator
 Text.Whitespace
SUBPARSEName.Otherboolean0.8345string0.0833any0.0467number0.0286complex0.0014
 Text.Whitespace
?Operator
 Text.Whitespace
'$'Literal.String.Single
 Text.Whitespace
:Operator
 Text.Whitespace
''Literal.String.Single
\n      Text.Whitespace
reName.Otherstring0.6865any0.1586RegExp0.1035boolean0.0155number0.0137
 Text.Whitespace
=Operator
 Text.Whitespace
nlBeforeName.Otherstring0.7319any0.1434number0.1075boolean0.0105RegExp0.0023
 Text.Whitespace
+Operator
 Text.Whitespace
nlFirstName.Otherstring0.6960any0.1756number0.1210boolean0.0040complex0.0012
 Text.Whitespace
+Operator
 Text.Whitespace
nlAfterName.Otherstring0.6588any0.1931number0.1406boolean0.0040complex0.0013
 Text.Whitespace
+Operator
 Text.Whitespace
dollarName.Otherstring0.6864any0.1910number0.1143boolean0.0045complex0.0014
 Text.Whitespace
+Operator
 Text.Whitespace
nlLastName.Otherstring0.6469any0.2146number0.1104boolean0.0161RegExp0.0034
\n    Text.Whitespace
}Punctuation
\n\n    Text.Whitespace
// if the re is not "" at this point, then we need to make sureComment.Single
\n    Text.Whitespace
// it doesn't match against an empty path part.Comment.Single
\n    Text.Whitespace
// Otherwise a/* will match a/, which it should not.Comment.Single
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
reName.OtherRegExp0.6974string0.1417any0.1209boolean0.0119complex0.0116
 Text.Whitespace
!==Operator
 Text.Whitespace
''Literal.String.Single
 Text.Whitespace
&&Operator
 Text.Whitespace
hasMagicName.Otherboolean0.8519any0.1010number0.0176string0.0112complex0.0068
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
reName.OtherRegExp0.6734string0.2274any0.0813boolean0.0072complex0.0030
 Text.Whitespace
=Operator
 Text.Whitespace
'(?=.)'Literal.String.Single
 Text.Whitespace
+Operator
 Text.Whitespace
reName.OtherRegExp0.5608string0.1956any0.1591complex0.0223boolean0.0204
\n    Text.Whitespace
}Punctuation
\n\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
addPatternStartName.Otherboolean0.4406string0.2553any0.2033RegExp0.0465number0.0262
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
reName.OtherRegExp0.3551any0.2736string0.2494boolean0.0584number0.0247
 Text.Whitespace
=Operator
 Text.Whitespace
patternStartName.Otherany0.3956string0.3325number0.1820boolean0.0573RegExp0.0178
 Text.Whitespace
+Operator
 Text.Whitespace
reName.OtherRegExp0.5068string0.2381any0.1699complex0.0232boolean0.0190
\n    Text.Whitespace
}Punctuation
\n\n    Text.Whitespace
// parsing just a piece of a larger pattern.Comment.Single
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
isSubName.Otherstring0.5118any0.3291boolean0.0488number0.0415complex0.0319
 Text.Whitespace
===Operator
 Text.Whitespace
SUBPARSEName.Otherstring0.6998any0.1925number0.0534boolean0.0291RegExp0.0097
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
[Punctuation
reName.OtherRegExp0.5683string0.2132any0.1416complex0.0214boolean0.0154
,Punctuation
 Text.Whitespace
hasMagicName.Otherboolean0.4320any0.4245string0.0575number0.0552complex0.0149
]Punctuation
\n    Text.Whitespace
}Punctuation
\n\n    Text.Whitespace
// skip the regexp for non-magical patternsComment.Single
\n    Text.Whitespace
// unescape anything in it, though, so that it'll beComment.Single
\n    Text.Whitespace
// an exact match against a file etc.Comment.Single
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
hasMagicName.Otherboolean0.7108any0.2074number0.0347complex0.0162string0.0098
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
globUnescapeName.Otherboolean0.4739string0.3017any0.1419complex0.0294number0.0273
(Punctuation
patternName.Otherstring0.7505any0.1560complex0.0466RegExp0.0168{}0.0075
)Punctuation
\n    Text.Whitespace
}Punctuation
\n\n    Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
flagsName.Otherstring0.4334any0.2604number0.1739complex0.0478string[]0.0362
 Text.Whitespace
=Operator
 Text.Whitespace
optionsName.Otherany0.4282complex0.2415Options0.0291{}0.0193RegExp0.0132
.Punctuation
nocaseName.Otherboolean0.6676any0.2580number0.0317complex0.0221string0.0068
 Text.Whitespace
?Operator
 Text.Whitespace
'i'Literal.String.Single
 Text.Whitespace
:Operator
 Text.Whitespace
''Literal.String.Single
\n    Text.Whitespace
tryKeyword
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
ObjectName.BuiltinObjectConstructor0.9997any0.0001complex0.0001Object0.0000{}0.0000
.Punctuation
assignName.Othercomplex0.8651any0.0883{}0.0100boolean0.0085any[]0.0051
(Punctuation
newOperator.Wordany0.5216RegExp0.1985string0.0941complex0.0292{}0.0202
 Text.Whitespace
RegExpName.BuiltinRegExpConstructor0.9995RegExp0.0001ErrorConstructor0.0000any0.0000BooleanConstructor0.0000
(Punctuation
'^'Literal.String.Single
 Text.Whitespace
+Operator
 Text.Whitespace
reName.Otherstring0.4314RegExp0.3484any0.1708complex0.0198number0.0121
 Text.Whitespace
+Operator
 Text.Whitespace
'$'Literal.String.Single
,Punctuation
 Text.Whitespace
flagsName.Otherstring0.6090any0.1174string[]0.1170number0.0555any[]0.0393
)Punctuation
,Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
_globName.Otherstring0.7025any0.1508RegExp0.1081complex0.0125number0.0074
:Operator
 Text.Whitespace
patternKeyword.Typestring0.7542any0.1329RegExp0.0806complex0.0125{}0.0050
,Punctuation
\n        Text.Whitespace
_srcName.OtherRegExp0.3902string0.3415any0.1859boolean0.0236number0.0174
:Operator
 Text.Whitespace
reKeyword.TypeRegExp0.9352string0.0272any0.0127boolean0.0054complex0.0048
,Punctuation
\n      Text.Whitespace
}Punctuation
)Punctuation
\n    Text.Whitespace
}Punctuation
 Text.Whitespace
catchKeyword
 Text.Whitespace
(Punctuation
erName.Otherany0.9971string0.0013boolean0.0005complex0.0005number0.0001
)Punctuation
 Text.Whitespace
/* istanbul ignore next - should be impossible */Comment.Multiline
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
// If it was an invalid regular expression, then it can't matchComment.Single
\n      Text.Whitespace
// anything.  This trick looks for a character after the end ofComment.Single
\n      Text.Whitespace
// the string, which is of course impossible, except in multi-lineComment.Single
\n      Text.Whitespace
// mode, but it's not a /m regex.Comment.Single
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
newOperator.Wordany0.7414string0.0778RegExp0.0704complex0.0107{}0.0072
 Text.Whitespace
RegExpName.BuiltinRegExpConstructor0.9996RegExp0.0001ErrorConstructor0.0000any0.0000BooleanConstructor0.0000
(Punctuation
'$.'Literal.String.Single
)Punctuation
\n    Text.Whitespace
}Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
makeReName.Otherstring0.5891boolean0.1640any0.1415number0.0324RegExp0.0221
 Text.Whitespace
(Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
thisKeyword
.Punctuation
regexpName.OtherRegExp0.8494boolean0.0571false0.0161any0.0138RegExp[]0.0071
 Text.Whitespace
||Operator
 Text.Whitespace
thisKeyword
.Punctuation
regexpName.OtherRegExp0.5875boolean0.2087false0.0327any0.0239RegExp[]0.0122
 Text.Whitespace
===Operator
 Text.Whitespace
falseKeyword.Constant
)Punctuation
 Text.Whitespace
returnKeyword
 Text.Whitespace
thisKeyword
.Punctuation
regexpName.OtherRegExp0.7641boolean0.0282any0.0264string0.0141false0.0093
\n\n    Text.Whitespace
// at this point, this.set is a 2d array of partialComment.Single
\n    Text.Whitespace
// pattern strings, or "**".Comment.Single
\n    Text.Whitespace
//Comment.Single
\n    Text.Whitespace
// It's better to use .match().  This function shouldn'tComment.Single
\n    Text.Whitespace
// be used, really, but it's pretty convenient sometimes,Comment.Single
\n    Text.Whitespace
// when you just want to work with a regex.Comment.Single
\n    Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
setName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
thisKeyword
.Punctuation
setName.Other
\n\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
setName.Other
.Punctuation
lengthName.Othernumber0.5014any0.4923string0.0031complex0.0009boolean0.0007
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
thisKeyword
.Punctuation
regexpName.OtherRegExp0.4266boolean0.3277any0.0604false0.0218number0.0124
 Text.Whitespace
=Operator
 Text.Whitespace
falseKeyword.Constant
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
thisKeyword
.Punctuation
regexpName.OtherRegExp0.7839boolean0.0576any0.0294string0.0153false0.0108
\n    Text.Whitespace
}Punctuation
\n    Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
optionsName.Otherany0.3164complex0.0779ConnectionOptions0.0267RegExp0.0203any[]0.0185
 Text.Whitespace
=Operator
 Text.Whitespace
thisKeyword
.Punctuation
optionsName.Otherany0.3470ConnectionOptions0.0580complex0.0480Options0.0194number0.0156
\n\n    Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
twoStarName.Otherany0.3881boolean0.2091number0.1642string0.1192complex0.0322
 Text.Whitespace
=Operator
 Text.Whitespace
optionsName.Otherany0.5495complex0.1583Options0.0158RegExp0.0119ConnectionOptions0.0116
.Punctuation
noglobstarName.Otherboolean0.8469any0.1174complex0.0128string0.0089number0.0056
 Text.Whitespace
?Operator
 Text.Whitespace
starName.Otherstring0.3570boolean0.3405any0.1933number0.0798complex0.0078
\n      Text.Whitespace
:Operator
 Text.Whitespace
options.dotKeyword.Type
 Text.Whitespace
?Operator
 Text.Whitespace
twoStarDotName.Otherstring0.3877any0.2613boolean0.1598number0.1461string[]0.0150
\n      Text.Whitespace
:Operator
 Text.Whitespace
twoStarNoDotKeyword.Typestring0.3508any0.2595number0.2024boolean0.1355string[]0.0189
\n    Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
flagsName.Otherstring0.3101any0.2350number0.2147string[]0.1237any[]0.0443
 Text.Whitespace
=Operator
 Text.Whitespace
optionsName.Otherany0.4169complex0.2967any[]0.0205{}0.0164Options0.0141
.Punctuation
nocaseName.Otherboolean0.7066any0.2351number0.0251complex0.0208string0.0037
 Text.Whitespace
?Operator
 Text.Whitespace
'i'Literal.String.Single
 Text.Whitespace
:Operator
 Text.Whitespace
''Literal.String.Single
\n\n    Text.Whitespace
// coalesce globstars and regexpify non-globstar patternsComment.Single
\n    Text.Whitespace
// if it's the only item, then we just do one twoStarComment.Single
\n    Text.Whitespace
// if it's the first, and there are more, prepend (\/|twoStar\/)? to nextComment.Single
\n    Text.Whitespace
// if it's the last, append (\/twoStar|) to previousComment.Single
\n    Text.Whitespace
// if it's in the middle, append (\/|\/twoStar\/) to previousComment.Single
\n    Text.Whitespace
// then filter out GLOBSTAR symbolsComment.Single
\n    Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
reName.Otherany0.2309string0.1799string[]0.1482RegExp0.1296any[]0.1102
 Text.Whitespace
=Operator
 Text.Whitespace
setName.Other
.Punctuation
mapName.OtherU[]0.7673any0.1297complex0.0932any[]0.0016U,...0.0004
(Punctuation
patternName.Otherany0.5639string0.3860complex0.0170RegExp0.0160number0.0031
 Text.Whitespace
=>Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
patternName.Otherstring0.5623any0.3506complex0.0330any[]0.0176string[]0.0150
 Text.Whitespace
=Operator
 Text.Whitespace
patternName.Otherany0.5041string0.2747complex0.0586string[]0.0558any[]0.0463
.Punctuation
mapName.OtherU[]0.7053complex0.1783any0.1044any[]0.0019string0.0007
(Punctuation
pName.Otherstring0.6021any0.3500complex0.0136number0.0079boolean0.0060
 Text.Whitespace
=>Punctuation
\n        Text.Whitespace
typeofOperator.Word
 Text.Whitespace
pName.Otherany0.6272string0.2021complex0.1367any[]0.0118number0.0038
 Text.Whitespace
===Operator
 Text.Whitespace
'string'Literal.String.Single
 Text.Whitespace
?Operator
 Text.Whitespace
regExpEscapeName.Otherstring0.6447any0.1804boolean0.0693number0.0356string[]0.0287
(Punctuation
pName.Otherstring0.7562any0.1953number0.0187complex0.0145any[]0.0037
)Punctuation
\n        Text.Whitespace
:Operator
 Text.Whitespace
pName.Otherstring0.5232any0.3713number0.0403complex0.0382any[]0.0104
 Text.Whitespace
===Operator
 Text.Whitespace
GLOBSTARName.Otherstring0.3379any0.2787number0.1654boolean0.1521complex0.0224
 Text.Whitespace
?Operator
 Text.Whitespace
GLOBSTARName.Otherstring0.3991any0.2860number0.2765boolean0.0098any[]0.0092
\n        Text.Whitespace
:Operator
 Text.Whitespace
p._srcKeyword.Type
\n      Text.Whitespace
)Punctuation
.Punctuation
reduceName.Othercomplex0.6163any0.3125any...0.0501any[]0.0043number0.0040
(Punctuation
(Punctuation
setName.Other
,Punctuation
 Text.Whitespace
pName.Otherstring0.5776any0.3457number0.0364any[]0.0112complex0.0105
)Punctuation
 Text.Whitespace
=>Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
(Punctuation
setName.Other
[Punctuation
setName.Other
.Punctuation
lengthName.Otherany0.5525number0.4405string0.0043complex0.0012boolean0.0006
 Text.Whitespace
-Operator
 Text.Whitespace
1Literal.Number.Float
]Punctuation
 Text.Whitespace
===Operator
 Text.Whitespace
GLOBSTARName.Otherstring0.5448any0.2429number0.1742boolean0.0248complex0.0048
 Text.Whitespace
&&Operator
 Text.Whitespace
pName.Otherstring0.7577any0.1948number0.0262complex0.0112any[]0.0037
 Text.Whitespace
===Operator
 Text.Whitespace
GLOBSTARName.Otherstring0.6154any0.2124number0.1481boolean0.0118complex0.0037
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n          Text.Whitespace
setName.Other
.Punctuation
pushName.Othernumber0.9125any0.0809string0.0024boolean0.0019complex0.0008
(Punctuation
pName.Otherstring0.6646any0.2663number0.0356any[]0.0077complex0.0073
)Punctuation
\n        Text.Whitespace
}Punctuation
\n        Text.Whitespace
returnKeyword
 Text.Whitespace
setName.Other
\n      Text.Whitespace
}Punctuation
,Punctuation
 Text.Whitespace
[Punctuation
]Punctuation
)Punctuation
\n      Text.Whitespace
patternName.Otherany0.3530complex0.2103any[]0.1252string[]0.1224string0.0982
.Punctuation
forEachName.Othercomplex0.3990void0.3904any0.1722v...0.0155boolean0.0039
(Punctuation
(Punctuation
pName.Otherstring0.5815any0.3351number0.0386complex0.0211any[]0.0050
,Punctuation
 Text.Whitespace
iName.Othernumber0.9506any0.0391string0.0081boolean0.0010void0.0004
)Punctuation
 Text.Whitespace
=>Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
pName.Otherstring0.6845any0.2720number0.0191complex0.0135boolean0.0032
 Text.Whitespace
!==Operator
 Text.Whitespace
GLOBSTARName.Otherstring0.6782any0.2199number0.0755boolean0.0157complex0.0047
 Text.Whitespace
||Operator
 Text.Whitespace
patternName.Otherany0.4839string0.3399complex0.0901string[]0.0205any[]0.0167
[Punctuation
iName.Othernumber0.9100any0.0816string0.0070complex0.0006boolean0.0004
-Operator
1Literal.Number.Float
]Punctuation
 Text.Whitespace
===Operator
 Text.Whitespace
GLOBSTARName.Othernumber0.3804string0.3580any0.2405boolean0.0113complex0.0040
)Punctuation
 Text.Whitespace
{Punctuation
\n          Text.Whitespace
returnKeyword
\n        Text.Whitespace
}Punctuation
\n        Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
iName.Othernumber0.9150any0.0798string0.0035boolean0.0007complex0.0006
 Text.Whitespace
===Operator
 Text.Whitespace
0Literal.Number.Float
)Punctuation
 Text.Whitespace
{Punctuation
\n          Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
patternName.Otherstring0.6773any0.2585string[]0.0184complex0.0157RegExp0.0140
.Punctuation
lengthName.Othernumber0.8131any0.1833string0.0021complex0.0008boolean0.0003
 Text.Whitespace
>Operator
 Text.Whitespace
1Literal.Number.Float
)Punctuation
 Text.Whitespace
{Punctuation
\n            Text.Whitespace
patternName.Otherany0.4314complex0.1957string0.1455any[]0.0701string[]0.0647
[Punctuation
iName.Othernumber0.8102any0.1808string0.0073complex0.0008boolean0.0003
+Operator
1Literal.Number.Float
]Punctuation
 Text.Whitespace
=Operator
 Text.Whitespace
'(?:\\\/|'Literal.String.Single
 Text.Whitespace
+Operator
 Text.Whitespace
twoStarName.Otherstring0.3888any0.3505number0.2545boolean0.0026complex0.0019
 Text.Whitespace
+Operator
 Text.Whitespace
'\\\/)?'Literal.String.Single
 Text.Whitespace
+Operator
 Text.Whitespace
patternName.Otherany0.4445string0.2845complex0.1088string[]0.0676any[]0.0433
[Punctuation
iName.Othernumber0.8069any0.1851string0.0066complex0.0005boolean0.0003
+Operator
1Literal.Number.Float
]Punctuation
\n          Text.Whitespace
}Punctuation
 Text.Whitespace
elseKeyword
 Text.Whitespace
{Punctuation
\n            Text.Whitespace
patternName.Otherany0.6176string0.1888complex0.1109any[]0.0215{}0.0215
[Punctuation
iName.Othernumber0.7378any0.1878string0.0703complex0.0015boolean0.0010
]Punctuation
 Text.Whitespace
=Operator
 Text.Whitespace
twoStarName.Otherany0.5144string0.3985number0.0573complex0.0082boolean0.0077
\n          Text.Whitespace
}Punctuation
\n        Text.Whitespace
}Punctuation
 Text.Whitespace
elseKeyword
 Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
iName.Othernumber0.6686any0.3010string0.0248complex0.0032boolean0.0010
 Text.Whitespace
===Operator
 Text.Whitespace
patternName.Otherstring0.5770any0.3194string[]0.0411RegExp0.0255complex0.0189
.Punctuation
lengthName.Othernumber0.7852any0.2108string0.0025complex0.0007boolean0.0002
 Text.Whitespace
-Operator
 Text.Whitespace
1Literal.Number.Float
)Punctuation
 Text.Whitespace
{Punctuation
\n          Text.Whitespace
patternName.Otherany0.4415complex0.1947string0.1772any[]0.0606string[]0.0471
[Punctuation
iName.Othernumber0.6875any0.2991string0.0115complex0.0010boolean0.0003
-Operator
1Literal.Number.Float
]Punctuation
 Text.Whitespace
+=Operator
 Text.Whitespace
'(?:\\\/|'Literal.String.Single
 Text.Whitespace
+Operator
 Text.Whitespace
twoStarName.Otherstring0.5913any0.2847number0.1199complex0.0014boolean0.0011
 Text.Whitespace
+Operator
 Text.Whitespace
')?'Literal.String.Single
\n        Text.Whitespace
}Punctuation
 Text.Whitespace
elseKeyword
 Text.Whitespace
{Punctuation
\n          Text.Whitespace
patternName.Otherany0.4390string0.2496complex0.1805string[]0.0379any[]0.0355
[Punctuation
iName.Othernumber0.7777any0.2058string0.0143complex0.0010boolean0.0005
-Operator
1Literal.Number.Float
]Punctuation
 Text.Whitespace
+=Operator
 Text.Whitespace
'(?:\\\/|\\\/'Literal.String.Single
 Text.Whitespace
+Operator
 Text.Whitespace
twoStarName.Otherstring0.4690any0.3138number0.2116boolean0.0022complex0.0019
 Text.Whitespace
+Operator
 Text.Whitespace
'\\\/)'Literal.String.Single
 Text.Whitespace
+Operator
 Text.Whitespace
patternName.Otherany0.4164string0.3702complex0.0957string[]0.0484any[]0.0307
[Punctuation
iName.Othernumber0.8398any0.1496string0.0093complex0.0005boolean0.0003
+Operator
1Literal.Number.Float
]Punctuation
\n          Text.Whitespace
patternName.Otherany0.4458string0.3252complex0.1141string[]0.0400any[]0.0246
[Punctuation
iName.Othernumber0.7466any0.2299string0.0214complex0.0009boolean0.0004
+Operator
1Literal.Number.Float
]Punctuation
 Text.Whitespace
=Operator
 Text.Whitespace
GLOBSTARName.Otherany0.5441string0.3597number0.0659boolean0.0161complex0.0056
\n        Text.Whitespace
}Punctuation
\n      Text.Whitespace
}Punctuation
)Punctuation
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
patternName.Otherany0.4372string0.4239RegExp0.0644string[]0.0290any[]0.0195
.Punctuation
filterName.Othercomplex0.7332any0.2570string0.0028any[]0.0010boolean0.0009
(Punctuation
pName.Otherstring0.6077any0.3594number0.0069any[]0.0052complex0.0049
 Text.Whitespace
=>Punctuation
 Text.Whitespace
pName.Otherstring0.8508any0.1332number0.0067string[]0.0026complex0.0019
 Text.Whitespace
!==Operator
 Text.Whitespace
GLOBSTARName.Otherstring0.8368any0.1246number0.0221boolean0.0092string[]0.0029
)Punctuation
.Punctuation
joinName.Otherstring0.8506any0.1412complex0.0034number0.0016string[]0.0009
(Punctuation
'/'Literal.String.Single
)Punctuation
\n    Text.Whitespace
}Punctuation
)Punctuation
.Punctuation
joinName.Otherstring0.7700any0.2142complex0.0088number0.0016boolean0.0010
(Punctuation
'|'Literal.String.Single
)Punctuation
\n\n    Text.Whitespace
// must match entire patternComment.Single
\n    Text.Whitespace
// ending in a * or ** will make it less strict.Comment.Single
\n    Text.Whitespace
reName.OtherRegExp0.6509string0.2090any0.1232string[]0.0051boolean0.0036
 Text.Whitespace
=Operator
 Text.Whitespace
'^(?:'Literal.String.Single
 Text.Whitespace
+Operator
 Text.Whitespace
reName.Otherstring0.3976any0.2885RegExp0.2659number0.0127complex0.0126
 Text.Whitespace
+Operator
 Text.Whitespace
')$'Literal.String.Single
\n\n    Text.Whitespace
// can match anything, as long as it's not this.Comment.Single
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
thisKeyword
.Punctuation
negateName.Otherboolean0.5474string0.2805any0.0994number0.0445void0.0097
)Punctuation
 Text.Whitespace
reName.OtherRegExp0.7068string0.2105any0.0629string[]0.0077boolean0.0040
 Text.Whitespace
=Operator
 Text.Whitespace
'^(?!'Literal.String.Single
 Text.Whitespace
+Operator
 Text.Whitespace
reName.Otherstring0.3838any0.2826RegExp0.2715complex0.0167number0.0154
 Text.Whitespace
+Operator
 Text.Whitespace
').*$'Literal.String.Single
\n\n    Text.Whitespace
tryKeyword
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
thisKeyword
.Punctuation
regexpName.OtherRegExp0.9749string0.0048boolean0.0042any0.0030false0.0012
 Text.Whitespace
=Operator
 Text.Whitespace
newOperator.Wordany0.5492string0.2769RegExp0.1093boolean0.0179complex0.0050
 Text.Whitespace
RegExpName.BuiltinRegExpConstructor0.9985RegExp0.0003any0.0001ErrorConstructor0.0000BooleanConstructor0.0000
(Punctuation
reName.OtherRegExp0.7056string0.1652any0.1023complex0.0072boolean0.0041
,Punctuation
 Text.Whitespace
flagsName.Otherstring0.5753any0.2106string[]0.0922number0.0292any[]0.0280
)Punctuation
\n    Text.Whitespace
}Punctuation
 Text.Whitespace
catchKeyword
 Text.Whitespace
(Punctuation
exName.Otherany0.9936string0.0053number0.0003boolean0.0003symbol0.0001
)Punctuation
 Text.Whitespace
/* istanbul ignore next - should be impossible */Comment.Multiline
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
thisKeyword
.Punctuation
regexpName.Otherboolean0.6728RegExp0.1704false0.0684any0.0285string0.0059
 Text.Whitespace
=Operator
 Text.Whitespace
falseKeyword.Constant
\n    Text.Whitespace
}Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
thisKeyword
.Punctuation
regexpName.OtherRegExp0.7599boolean0.0683any0.0471string0.0271false0.0120
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
matchName.Otherany0.9094boolean0.0341complex0.0210string0.0176void0.0045
 Text.Whitespace
(Punctuation
fName.Otherstring0.5559any0.3957boolean0.0216RegExp0.0064number0.0035
,Punctuation
 Text.Whitespace
partialName.Otherany0.8962string0.0397boolean0.0343number0.0159any[]0.0034
 Text.Whitespace
=Operator
 Text.Whitespace
thisKeyword
.Punctuation
partialName.Otherany0.4500boolean0.2201string0.1544number0.0908any[]0.0206
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
thisKeyword
.Punctuation
debugName.Otherany0.3838void0.3615complex0.1944boolean0.0258{}0.0023
(Punctuation
'match'Literal.String.Single
,Punctuation
 Text.Whitespace
fName.Otherstring0.8016any0.1733boolean0.0094string[]0.0041number0.0021
,Punctuation
 Text.Whitespace
thisKeyword
.Punctuation
patternName.Otherstring0.8345any0.1182RegExp0.0166complex0.0159boolean0.0048
)Punctuation
\n    Text.Whitespace
// short-circuit in the case of busted things.Comment.Single
\n    Text.Whitespace
// comments, etc.Comment.Single
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
thisKeyword
.Punctuation
commentName.Otherstring0.4663any0.1049boolean0.0542false0.0161complex0.0137
)Punctuation
 Text.Whitespace
returnKeyword
 Text.Whitespace
falseKeyword.Constant
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
thisKeyword
.Punctuation
emptyName.Otherboolean0.9667string0.0168any0.0066false0.0023complex0.0011
)Punctuation
 Text.Whitespace
returnKeyword
 Text.Whitespace
fName.Otherstring0.6991any0.2784boolean0.0107number0.0018String0.0012
 Text.Whitespace
===Operator
 Text.Whitespace
''Literal.String.Single
\n\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
fName.Otherstring0.7058any0.2731boolean0.0128number0.0020RegExp0.0008
 Text.Whitespace
===Operator
 Text.Whitespace
'/'Literal.String.Single
 Text.Whitespace
&&Operator
 Text.Whitespace
partialName.Otherany0.5812boolean0.2115string0.0928number0.0484any[]0.0284
)Punctuation
 Text.Whitespace
returnKeyword
 Text.Whitespace
trueKeyword.Constant
\n\n    Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
optionsName.Otherany0.4888complex0.0411any[]0.0267Options0.0176Config0.0147
 Text.Whitespace
=Operator
 Text.Whitespace
thisKeyword
.Punctuation
optionsName.Otherany0.2753ConnectionOptions0.0596Options0.0319Config0.0185complex0.0149
\n\n    Text.Whitespace
// windows: need to use /, not \Comment.Single
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
pathName.Otherany0.9984string0.0008complex0.0005boolean0.0000any[]0.0000
.Punctuation
sepName.Otherany0.9936string0.0059boolean0.0002complex0.0001number0.0001
 Text.Whitespace
!==Operator
 Text.Whitespace
'/'Literal.String.Single
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
fName.Otherstring0.5328any0.4511string[]0.0083boolean0.0035number0.0009
 Text.Whitespace
=Operator
 Text.Whitespace
fName.Otherstring0.6275any0.3680boolean0.0013string[]0.0009number0.0008
.Punctuation
splitName.Othercomplex0.6208any0.3723string0.0016string[]0.0012boolean0.0008
(Punctuation
pathName.Otherany0.9989complex0.0005string0.0004any[]0.0000Path0.0000
.Punctuation
sepName.Otherany0.9937string0.0058number0.0001complex0.0001string[]0.0001
)Punctuation
.Punctuation
joinName.Otherstring0.7952any0.1991complex0.0014string[]0.0013number0.0011
(Punctuation
'/'Literal.String.Single
)Punctuation
\n    Text.Whitespace
}Punctuation
\n\n    Text.Whitespace
// treat the test path as a set of pathparts.Comment.Single
\n    Text.Whitespace
fName.Otherstring0.5603any0.4073string[]0.0224boolean0.0023RegExp0.0015
 Text.Whitespace
=Operator
 Text.Whitespace
fName.Otherstring0.5958any0.3993string[]0.0017number0.0007complex0.0005
.Punctuation
splitName.Othercomplex0.6408any0.3519string0.0015string[]0.0014void0.0007
(Punctuation
slashSplitName.Otherstring0.4342any0.2661RegExp0.1782boolean0.0357string[]0.0337
)Punctuation
\n    Text.Whitespace
thisKeyword
.Punctuation
debugName.Othervoid0.6996any0.1445complex0.1225boolean0.0132{}0.0021
(Punctuation
thisKeyword
.Punctuation
patternName.Otherstring0.8484any0.1135RegExp0.0208complex0.0059string[]0.0031
,Punctuation
 Text.Whitespace
'split'Literal.String.Single
,Punctuation
 Text.Whitespace
fName.Otherstring0.7752any0.1899string[]0.0112boolean0.0071number0.0033
)Punctuation
\n\n    Text.Whitespace
// just ONE of the pattern sets in this.set needs to matchComment.Single
\n    Text.Whitespace
// in order for it to be valid.  If negating, then just oneComment.Single
\n    Text.Whitespace
// match means that we have failed.Comment.Single
\n    Text.Whitespace
// Either way, return on the first hit.Comment.Single
\n\n    Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
setName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
thisKeyword
.Punctuation
setName.Other
\n    Text.Whitespace
thisKeyword
.Punctuation
debugName.Otherany0.4598complex0.4114void0.0614boolean0.0179number0.0034
(Punctuation
thisKeyword
.Punctuation
patternName.Otherstring0.7798any0.1683RegExp0.0323complex0.0061number0.0031
,Punctuation
 Text.Whitespace
'set'Literal.String.Single
,Punctuation
 Text.Whitespace
setName.Other
)Punctuation
\n\n    Text.Whitespace
// Find the basename of the path by looking for the last non-empty segmentComment.Single
\n    Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
filenameName.Otherany0.5907string0.3938number0.0037string[]0.0024any[]0.0016
\n    Text.Whitespace
forKeyword
 Text.Whitespace
(Punctuation
letKeyword.Declaration
 Text.Whitespace
iName.Othernumber0.9586any0.0355string0.0045boolean0.0005complex0.0002
 Text.Whitespace
=Operator
 Text.Whitespace
fName.Otherany0.4694string0.4541string[]0.0320any[]0.0104number0.0063
.Punctuation
lengthName.Othernumber0.6203any0.3760string0.0021complex0.0007boolean0.0003
 Text.Whitespace
-Operator
 Text.Whitespace
1Literal.Number.Float
;Punctuation
 Text.Whitespace
iName.Othernumber0.9133any0.0841string0.0018boolean0.0004void0.0001
 Text.Whitespace
>=Operator
 Text.Whitespace
0Literal.Number.Float
;Punctuation
 Text.Whitespace
iName.Othernumber0.9387any0.0594string0.0011boolean0.0004void0.0002
--Operator
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
filenameName.Otherany0.4996string0.4930number0.0037boolean0.0008complex0.0007
 Text.Whitespace
=Operator
 Text.Whitespace
fName.Otherany0.6383string0.1815string[]0.1121any[]0.0275complex0.0038
[Punctuation
iName.Othernumber0.9512any0.0388string0.0087boolean0.0004complex0.0002
]Punctuation
\n      Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
filenameName.Otherany0.5896string0.4002boolean0.0030number0.0022complex0.0012
)Punctuation
 Text.Whitespace
breakKeyword
\n    Text.Whitespace
}Punctuation
\n\n    Text.Whitespace
forKeyword
 Text.Whitespace
(Punctuation
letKeyword.Declaration
 Text.Whitespace
iName.Othernumber0.9927any0.0060string0.0008boolean0.0002complex0.0001
 Text.Whitespace
=Operator
 Text.Whitespace
0Literal.Number.Float
;Punctuation
 Text.Whitespace
iName.Othernumber0.9820any0.0157string0.0014boolean0.0003void0.0002
 Text.Whitespace
<Operator
 Text.Whitespace
setName.Other
.Punctuation
lengthName.Othernumber0.5595any0.4365string0.0022complex0.0006boolean0.0004
;Punctuation
 Text.Whitespace
iName.Othernumber0.9628any0.0350string0.0015boolean0.0003void0.0001
++Operator
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
patternName.Otherstring0.7409any0.2346boolean0.0052number0.0047complex0.0038
 Text.Whitespace
=Operator
 Text.Whitespace
setName.Other
[Punctuation
iName.Othernumber0.9024any0.0639string0.0311boolean0.0012complex0.0005
]Punctuation
\n      Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
fileName.Otherany0.5416string0.4252string[]0.0041number0.0039File0.0034
 Text.Whitespace
=Operator
 Text.Whitespace
fName.Otherstring0.6029any0.3399string[]0.0108boolean0.0075number0.0041
\n      Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
optionsName.Otherany0.2830complex0.0764any[]0.0290Options0.0139{}0.0136
.Punctuation
matchBaseName.Otherany0.4758boolean0.2560string[]0.0687string0.0632complex0.0369
 Text.Whitespace
&&Operator
 Text.Whitespace
patternName.Otherstring0.4645any0.4341string[]0.0535any[]0.0168RegExp0.0085
.Punctuation
lengthName.Othernumber0.6099any0.3830string0.0044complex0.0012boolean0.0004
 Text.Whitespace
===Operator
 Text.Whitespace
1Literal.Number.Float
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
fileName.Otherany0.5513string0.2149string[]0.1400any[]0.0351complex0.0105
 Text.Whitespace
=Operator
 Text.Whitespace
[Punctuation
filenameName.Otherstring0.7225any0.2681number0.0054complex0.0012boolean0.0005
]Punctuation
\n      Text.Whitespace
}Punctuation
\n      Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
hitName.Otherany0.6956string0.0768complex0.0625boolean0.0614any[]0.0263
 Text.Whitespace
=Operator
 Text.Whitespace
thisKeyword
.Punctuation
matchOneName.Otherany0.4616string0.2133boolean0.1169complex0.0745number0.0460
(Punctuation
fileName.Otherany0.6418string0.2798number0.0068complex0.0054File0.0052
,Punctuation
 Text.Whitespace
patternName.Otherstring0.5938any0.3197complex0.0253RegExp0.0218{}0.0067
,Punctuation
 Text.Whitespace
partialName.Otherany0.7543number0.0600boolean0.0595any[]0.0432complex0.0255
)Punctuation
\n      Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
hitName.Otherany0.6320boolean0.1432string0.1140number0.0331complex0.0161
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
optionsName.Otherany0.4204complex0.0585Options0.0202Config0.0099{}0.0093
.Punctuation
flipNegateName.Otherboolean0.8028any0.1286number0.0309string0.0159complex0.0096
)Punctuation
 Text.Whitespace
returnKeyword
 Text.Whitespace
trueKeyword.Constant
\n        Text.Whitespace
returnKeyword
 Text.Whitespace
!Operator
thisKeyword
.Punctuation
negateName.Otherboolean0.8605any0.0788number0.0129string0.0119void0.0071
\n      Text.Whitespace
}Punctuation
\n    Text.Whitespace
}Punctuation
\n\n    Text.Whitespace
// didn't get any hits.  this is success if it's a negativeComment.Single
\n    Text.Whitespace
// pattern, failure otherwise.Comment.Single
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
optionsName.Otherany0.3328complex0.0574Options0.0214Config0.0122{}0.0101
.Punctuation
flipNegateName.Otherboolean0.8018any0.1084number0.0306string0.0275complex0.0119
)Punctuation
 Text.Whitespace
returnKeyword
 Text.Whitespace
falseKeyword.Constant
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
thisKeyword
.Punctuation
negateName.Otherboolean0.8310any0.0779void0.0156string0.0144number0.0125
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
staticKeyword
 Text.Whitespace
defaultsName.Otherany0.9459boolean0.0095complex0.0085T0.0033any[]0.0026
 Text.Whitespace
(Punctuation
defName.Otherany0.7619Error0.0146boolean0.0141string0.0104number0.0084
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
minimatchName.Otherany0.9881string0.0008complex0.0004number0.0002Promise<any>0.0002
.Punctuation
defaultsName.Otherany0.9835complex0.0043T0.0024boolean0.0015Promise<any>0.0012
(Punctuation
defName.Otherany0.8820string0.0190{}0.0147boolean0.0106number0.0102
)Punctuation
.Punctuation
MinimatchName.Otherany0.9950string0.0030boolean0.0006complex0.0003number0.0002
\n  Text.Whitespace
}Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
minimatchName.Otherany0.9544string0.0010Assert0.0006Promise<any>0.0005complex0.0004
.Punctuation
MinimatchName.Otherany0.9932string0.0052boolean0.0004number0.0001void0.0001
 Text.Whitespace
=Operator
 Text.Whitespace
MinimatchName.Otherany0.9498string0.0315complex0.0022any[]0.0020boolean0.0014
\nText.Whitespace
