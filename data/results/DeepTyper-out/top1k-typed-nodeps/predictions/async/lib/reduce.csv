importKeyword
 Text.Whitespace
eachOfSeriesName.Otherany0.1340void0.0553boolean0.0397complex0.0319Promise<void>0.0200
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./eachOfSeries.js'Literal.String.Single
\nText.Whitespace
importKeyword
 Text.Whitespace
onceName.Otherany0.1741void0.0846boolean0.0322T[]0.0196complex0.0188
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./internal/once.js'Literal.String.Single
\nText.Whitespace
importKeyword
 Text.Whitespace
wrapAsyncName.Othervoid0.2668any0.1195boolean0.0773string0.0253complex0.0229
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./internal/wrapAsync.js'Literal.String.Single
\nText.Whitespace
importKeyword
 Text.Whitespace
awaitifyName.Othervoid0.2363any0.1498boolean0.0979string0.0385complex0.0245
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./internal/awaitify.js'Literal.String.Single
\n\nText.Whitespace
Text
/**\n * Reduces `coll` into a single value using an async `iteratee` to return each\n * successive step. `memo` is the initial state of the reduction. This function\n * only operates in series.\n *\n * For performance reasons, it may make sense to split a call to this function\n * into a parallel map, and then use the normal `Array.prototype.reduce` on the\n * results. This function is for situations where each step in the reduction\n * needs to be async; if you can get the data before reducing it, then it's\n * probably a good idea to do so.\n *\n * @name reduce\n * @static\n * @memberOf module:Collections\n * @method\n * @alias inject\n * @alias foldl\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {*} memo - The initial state of the reduction.\n * @param {AsyncFunction} iteratee - A function applied to each item in the\n * array to produce the next step in the reduction.\n * The `iteratee` should complete with the next state of the reduction.\n * If the iteratee completes with an error, the reduction is stopped and the\n * main `callback` is immediately called with the error.\n * Invoked with (memo, item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result is the reduced value. Invoked with\n * (err, result).\n * @returns {Promise} a promise, if no callback is passed\n * @example\n *\n * // file1.txt is a file that is 1000 bytes in size\n * // file2.txt is a file that is 2000 bytes in size\n * // file3.txt is a file that is 3000 bytes in size\n * // file4.txt does not exist\n *\n * const fileList = ['file1.txt','file2.txt','file3.txt'];\n * const withMissingFileList = ['file1.txt','file2.txt','file3.txt', 'file4.txt'];\n *\n * // asynchronous function that computes the file size in bytes\n * // file size is added to the memoized value, then returned\n * function getFileSizeInBytes(memo, file, callback) {\n *     fs.stat(file, function(err, stat) {\n *         if (err) {\n *             return callback(err);\n *         }\n *         callback(null, memo + stat.size);\n *     });\n * }\n *\n * // Using callbacks\n * async.reduce(fileList, 0, getFileSizeInBytes, function(err, result) {\n *     if (err) {\n *         console.log(err);\n *     } else {\n *         console.log(result);\n *         // 6000\n *         // which is the sum of the file sizes of the three files\n *     }\n * });\n *\n * // Error Handling\n * async.reduce(withMissingFileList, 0, getFileSizeInBytes, function(err, result) {\n *     if (err) {\n *         console.log(err);\n *         // [ Error: ENOENT: no such file or directory ]\n *     } else {\n *         console.log(result);\n *     }\n * });\n *\n * // Using Promises\n * async.reduce(fileList, 0, getFileSizeInBytes)\n * .then( result => {\n *     console.log(result);\n *     // 6000\n *     // which is the sum of the file sizes of the three files\n * }).catch( err => {\n *     console.log(err);\n * });\n *\n * // Error Handling\n * async.reduce(withMissingFileList, 0, getFileSizeInBytes)\n * .then( result => {\n *     console.log(result);\n * }).catch( err => {\n *     console.log(err);\n *     // [ Error: ENOENT: no such file or directory ]\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         let result = await async.reduce(fileList, 0, getFileSizeInBytes);\n *         console.log(result);\n *         // 6000\n *         // which is the sum of the file sizes of the three files\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n * // Error Handling\n * async () => {\n *     try {\n *         let result = await async.reduce(withMissingFileList, 0, getFileSizeInBytes);\n *         console.log(result);\n *     }\n *     catch (err) {\n *         console.log(err);\n *         // [ Error: ENOENT: no such file or directory ]\n *     }\n * }\n *\n */Comment.Multiline
\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
reduceName.Otherany0.2989void0.1971number0.1256complex0.0525T[]0.0120
(Punctuation
collName.Otherany0.8008any[]0.0191T[]0.0065string0.0049{}0.0026
,Punctuation
 Text.Whitespace
memoName.Otherany0.9708any[]0.0030number0.0024boolean0.0024string0.0022
,Punctuation
 Text.Whitespace
iterateeName.Otherany0.9560number0.0118string0.0054Function0.0019any[]0.0017
,Punctuation
 Text.Whitespace
callbackName.Otherany0.8447Function0.0623number0.0160void0.0069boolean0.0048
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
callbackName.Otherany0.7897Function0.0860number0.0213void0.0132boolean0.0071
 Text.Whitespace
=Operator
 Text.Whitespace
onceName.Otherany0.6480Function0.0127boolean0.0091T0.0090any[]0.0090
(Punctuation
callbackName.Otherany0.8562Function0.0410void0.0304number0.0177boolean0.0029
)Punctuation
;Punctuation
\n    Text.Whitespace
varKeyword.Declaration
 Text.Whitespace
_iterateeName.Otherany0.5530any[]0.0882void0.0637number0.0336boolean0.0283
 Text.Whitespace
=Operator
 Text.Whitespace
wrapAsyncName.Otherany0.4783any[]0.0787complex0.0480void0.0382number0.0303
(Punctuation
iterateeName.Otherany0.9373string0.0149number0.0138void0.0042any[]0.0023
)Punctuation
;Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
eachOfSeriesName.Othervoid0.3103any0.2231complex0.0826any[]0.0622number0.0157
(Punctuation
collName.Otherany0.7890any[]0.0593T[]0.0062{}0.0039number0.0032
,Punctuation
 Text.Whitespace
(Punctuation
xName.Otherany0.8506number0.1036string0.0118{}0.0027any[]0.0023
,Punctuation
 Text.Whitespace
iName.Otherany0.5504number0.4181string0.0049Function0.0021boolean0.0019
,Punctuation
 Text.Whitespace
iterCbName.Otherany0.8063number0.0989string0.0154boolean0.0148void0.0067
)Punctuation
 Text.Whitespace
=>Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
_iterateeName.Othervoid0.4273any0.3698complex0.0745number0.0116any[]0.0111
(Punctuation
memoName.Otherany0.9750any[]0.0049void0.0031number0.0024complex0.0019
,Punctuation
 Text.Whitespace
xName.Otherany0.9376number0.0338string0.0098complex0.0017{}0.0017
,Punctuation
 Text.Whitespace
(Punctuation
errName.Otherany0.8962Error0.0805string0.0064number0.0029complex0.0009
,Punctuation
 Text.Whitespace
vName.Otherany0.9726number0.0096string0.0076boolean0.0014complex0.0013
)Punctuation
 Text.Whitespace
=>Punctuation
 Text.Whitespace
{Punctuation
\n            Text.Whitespace
memoName.Otherany0.9661number0.0072string0.0049any[]0.0030boolean0.0015
 Text.Whitespace
=Operator
 Text.Whitespace
vName.Otherany0.9759number0.0063string0.0057any[]0.0015complex0.0014
;Punctuation
\n            Text.Whitespace
iterCbName.Othervoid0.7122any0.2042complex0.0160string0.0078Function0.0065
(Punctuation
errName.Otherany0.8357Error0.1311string0.0112number0.0022{}0.0016
)Punctuation
;Punctuation
\n        Text.Whitespace
}Punctuation
)Punctuation
;Punctuation
\n    Text.Whitespace
}Punctuation
,Punctuation
 Text.Whitespace
errName.Otherany0.9482Error0.0355string0.0031void0.0026number0.0010
 Text.Whitespace
=>Punctuation
 Text.Whitespace
callbackName.Otherany0.8031void0.0814Function0.0503boolean0.0060number0.0056
(Punctuation
errName.Otherany0.8157Error0.1444string0.0134{}0.0022complex0.0017
,Punctuation
 Text.Whitespace
memoName.Otherany0.9746any[]0.0026complex0.0018void0.0017string0.0011
)Punctuation
)Punctuation
;Punctuation
\nText.Whitespace
}Punctuation
\nText.Whitespace
exportKeyword
 Text.Whitespace
defaultKeyword
 Text.Whitespace
awaitifyName.Othervoid0.2788any0.1944complex0.0515number0.0313boolean0.0142
(Punctuation
reduceName.Otherany0.4437number0.4355complex0.0081void0.0049string0.0037
,Punctuation
 Text.Whitespace
4Literal.Number.Float
)Punctuation
\nText.Whitespace
