importKeyword
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
noopName.Othervoid0.8850any0.1063complex0.0025Function0.0008string0.0004
,Punctuation
\n  Text.Whitespace
resolveName.Othervoid0.7794any0.2036complex0.0073Function0.0030number0.0008
,Punctuation
\n  Text.Whitespace
rejectName.Othervoid0.6258any0.3594complex0.0059Function0.0030number0.0009
,Punctuation
\n  Text.Whitespace
subscribeName.Otherany0.6809void0.1871complex0.0759any[]0.0140number0.0024
,Punctuation
\n  Text.Whitespace
PENDINGName.Otherany0.6515void0.1613number0.0734string0.0189Promise<{}>0.0068
\nText.Whitespace
}Punctuation
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'../-internal'Literal.String.Single
;Punctuation
\n\nText.Whitespace
/**\n  `Promise.race` returns a new promise which is settled in the same way as the\n  first passed promise to settle.\n\n  Example:\n\n  ```javascript\n  import Promise from 'rsvp';\n\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 2');\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // result === 'promise 2' because it was resolved before promise1\n    // was resolved.\n  });\n  ```\n\n  `Promise.race` is deterministic in that only the state of the first\n  settled promise matters. For example, even if other promises given to the\n  `promises` array argument are resolved, but the first settled promise has\n  become rejected before the other promises became fulfilled, the returned\n  promise will become rejected:\n\n  ```javascript\n  import Promise from 'rsvp';\n\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      reject(new Error('promise 2'));\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // Code here never runs\n  }, function(reason){\n    // reason.message === 'promise 2' because promise 2 became rejected before\n    // promise 1 became fulfilled\n  });\n  ```\n\n  An example real-world use case is implementing timeouts:\n\n  ```javascript\n  import Promise from 'rsvp';\n\n  Promise.race([ajax('foo.json'), timeout(5000)])\n  ```\n\n  @method race\n  @for Promise\n  @static\n  @param {Array} entries array of promises to observe\n  @param {String} [label] optional string for describing the promise returned.\n  Useful for tooling.\n  @return {Promise} a promise which settles in the same way as the first passed\n  promise to settle.\n*/Comment.Multiline
\nText.Whitespace
exportKeyword
 Text.Whitespace
defaultKeyword
 Text.Whitespace
functionKeyword.Declaration
 Text.Whitespace
raceName.Otherany0.8579void0.0298complex0.0162boolean0.0123any[]0.0119
(Punctuation
entriesName.Otherany0.7883any[]0.0472number0.0072string0.0052string[]0.0023
,Punctuation
 Text.Whitespace
labelName.Otherstring0.5000any0.4109number0.0076Buffer0.0042String0.0020
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
/*jshint validthis:true */Comment.Multiline
\n  Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
ConstructorName.Otherany0.9620void0.0018this0.0011any[]0.0008number0.0007
 Text.Whitespace
=Operator
 Text.Whitespace
thisKeyword
;Punctuation
\n\n  Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
promiseName.Otherany0.8655Promise0.0043void0.0037Promise<void>0.0033Promise<any>0.0024
 Text.Whitespace
=Operator
 Text.Whitespace
newOperator.Wordany0.7286string0.0196Error0.0108complex0.0082number0.0048
 Text.Whitespace
ConstructorName.Otherany0.9981void0.0011complex0.0002string0.0002number0.0001
(Punctuation
noopName.Othervoid0.9406any0.0540boolean0.0010complex0.0009number0.0005
,Punctuation
 Text.Whitespace
labelName.Otherany0.5957string0.3320void0.0254complex0.0098any[]0.0071
)Punctuation
;Punctuation
\n\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
ArrayName.BuiltinArrayConstructor0.9994any0.0001complex0.0000any[]0.0000ObjectConstructor0.0000
.Punctuation
isArrayName.Othercomplex0.9959any0.0018any[]0.0006boolean0.0005void0.0003
(Punctuation
entriesName.Otherany0.8216any[]0.0945complex0.0457number0.0020string[]0.0019
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
rejectName.Othervoid0.7590any0.1860complex0.0277Function0.0043Promise<void>0.0024
(Punctuation
promiseName.Otherany0.9359complex0.0037Promise<any>0.0035void0.0024boolean0.0021
,Punctuation
 Text.Whitespace
newOperator.Wordany0.4142boolean0.1260complex0.1020string0.0420{}0.0196
 Text.Whitespace
TypeErrorName.ExceptionTypeErrorConstructor0.9878ErrorConstructor0.0014complex0.0003any0.0002MapConstructor0.0002
(Punctuation
'Promise.race must be called with an array'Literal.String.Single
)Punctuation
)Punctuation
;Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
promiseName.Otherany0.6061Promise<any>0.0410Promise<{}>0.0201Promise<number>0.0180Promise<void>0.0152
;Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
forKeyword
 Text.Whitespace
(Punctuation
letKeyword.Declaration
 Text.Whitespace
iName.Othernumber0.9942any0.0045string0.0004boolean0.0004void0.0001
 Text.Whitespace
=Operator
 Text.Whitespace
0Literal.Number.Float
;Punctuation
 Text.Whitespace
promiseName.Otherany0.4293Promise<any>0.0202Promise0.0118Promise<void>0.0110void0.0103
.Punctuation
_stateName.Otherany0.4994number0.2444boolean0.1553string0.0152complex0.0130
 Text.Whitespace
===Operator
 Text.Whitespace
PENDINGName.Otherany0.4822number0.3381string0.1101void0.0149boolean0.0089
 Text.Whitespace
&&Operator
 Text.Whitespace
iName.Othernumber0.9471any0.0503string0.0011boolean0.0007void0.0003
 Text.Whitespace
<Operator
 Text.Whitespace
entriesName.Otherany0.4222any[]0.1956string[]0.0225complex0.0147any[][]0.0077
.Punctuation
lengthName.Othernumber0.7392any0.2569string0.0014void0.0011boolean0.0004
;Punctuation
 Text.Whitespace
iName.Othernumber0.9000any0.0981string0.0009boolean0.0004void0.0002
++Operator
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
subscribeName.Otherany0.7888complex0.0970void0.0816any[]0.0040number0.0028
(Punctuation
\n      Text.Whitespace
ConstructorName.Otherany0.9955void0.0006any[]0.0002complex0.0002string0.0002
.Punctuation
resolveName.Otherany0.7289complex0.1481void0.1040boolean0.0046number0.0038
(Punctuation
entriesName.Otherany0.5737any[]0.2286string[]0.0236complex0.0130any[][]0.0040
[Punctuation
iName.Othernumber0.9660any0.0311string0.0017boolean0.0003void0.0001
]Punctuation
)Punctuation
,Punctuation
 Text.Whitespace
undefinedKeyword.Constant
,Punctuation
\n      Text.Whitespace
valueName.Otherany0.9708number0.0052string0.0050void0.0037complex0.0030
  Text.Whitespace
=>Punctuation
 Text.Whitespace
resolveName.Othervoid0.4904any0.4473complex0.0306boolean0.0056Promise<void>0.0034
(Punctuation
promiseName.Otherany0.8704Promise<any>0.0125Promise<void>0.0045void0.0043Promise<{}>0.0035
,Punctuation
 Text.Whitespace
valueName.Otherany0.9099string0.0406number0.0180boolean0.0049void0.0024
)Punctuation
,Punctuation
\n      Text.Whitespace
reasonName.Otherany0.8939Error0.0444string0.0282number0.0049void0.0021
 Text.Whitespace
=>Punctuation
 Text.Whitespace
rejectName.Otherany0.5789void0.3508complex0.0333Promise<void>0.0050number0.0043
(Punctuation
promiseName.Otherany0.8946Promise<any>0.0054void0.0034number0.0033Promise<void>0.0033
,Punctuation
 Text.Whitespace
reasonName.Otherany0.8254Error0.0807string0.0478number0.0058never0.0027
)Punctuation
\n    Text.Whitespace
)Punctuation
;Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
returnKeyword
 Text.Whitespace
promiseName.Otherany0.6395Promise<any>0.0304Promise<void>0.0223Promise<T>0.0178Promise<{}>0.0173
;Punctuation
\nText.Whitespace
}Punctuation
\nText.Whitespace
