Text
// Partial port of python's argparse module, version 3.9.0 (only wrap and fill functions):Comment.Single
\nText.Whitespace
// https://github.com/python/cpython/blob/v3.9.0b4/Lib/textwrap.pyComment.Single
\n\nText.Whitespace
'use strict'Literal.String.Single
\n\nText.Whitespace
Text
/*\n * Text wrapping and filling.\n */Comment.Multiline
\n\nText.Whitespace
// Copyright (C) 1999-2001 Gregory P. Ward.Comment.Single
\nText.Whitespace
// Copyright (C) 2002, 2003 Python Software Foundation.Comment.Single
\nText.Whitespace
// Copyright (C) 2020 argparse.js authorsComment.Single
\nText.Whitespace
// Originally written by Greg Ward <gward@python.net>Comment.Single
\n\nText.Whitespace
// Hardcode the recognized whitespace characters to the US-ASCIIComment.Single
\nText.Whitespace
// whitespace characters.  The main reason for doing this is thatComment.Single
\nText.Whitespace
// some Unicode spaces (like \u00a0) are non-breaking whitespaces.Comment.Single
\nText.Whitespace
//Comment.Single
\nText.Whitespace
// This less funky little regex just split on recognized spaces. E.g.Comment.Single
\nText.Whitespace
//   "Hello there -- you goof-ball, use the -b option!"Comment.Single
\nText.Whitespace
// splits intoComment.Single
\nText.Whitespace
//   Hello/ /there/ /--/ /you/ /goof-ball,/ /use/ /the/ /-b/ /option!/Comment.Single
\nText.Whitespace
constKeyword.Declaration
 Text.Whitespace
wordsep_simple_reName.Otherstring0.7592RegExp0.1544any0.0492string[]0.0068number0.0051
 Text.Whitespace
=Operator
 Text.Whitespace
/([\t\n\x0b\x0c\r ]+)/Literal.String.Regex
\n\nText.Whitespace
classKeyword.Declaration
 Text.Whitespace
TextWrapperName.Otherany0.9933string0.0040number0.0010complex0.0009{}0.0001
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
/*\n     *  Object for wrapping/filling text.  The public interface consists of\n     *  the wrap() and fill() methods; the other methods are just there for\n     *  subclasses to override in order to tweak the default behaviour.\n     *  If you want to completely replace the main wrapping algorithm,\n     *  you'll probably have to override _wrap_chunks().\n     *\n     *  Several instance attributes control various aspects of wrapping:\n     *    width (default: 70)\n     *      the maximum width of wrapped lines (unless break_long_words\n     *      is false)\n     *    initial_indent (default: "")\n     *      string that will be prepended to the first line of wrapped\n     *      output.  Counts towards the line's width.\n     *    subsequent_indent (default: "")\n     *      string that will be prepended to all lines save the first\n     *      of wrapped output; also counts towards each line's width.\n     *    expand_tabs (default: true)\n     *      Expand tabs in input text to spaces before further processing.\n     *      Each tab will become 0 .. 'tabsize' spaces, depending on its position\n     *      in its line.  If false, each tab is treated as a single character.\n     *    tabsize (default: 8)\n     *      Expand tabs in input text to 0 .. 'tabsize' spaces, unless\n     *      'expand_tabs' is false.\n     *    replace_whitespace (default: true)\n     *      Replace all whitespace characters in the input text by spaces\n     *      after tab expansion.  Note that if expand_tabs is false and\n     *      replace_whitespace is true, every tab will be converted to a\n     *      single space!\n     *    fix_sentence_endings (default: false)\n     *      Ensure that sentence-ending punctuation is always followed\n     *      by two spaces.  Off by default because the algorithm is\n     *      (unavoidably) imperfect.\n     *    break_long_words (default: true)\n     *      Break words longer than 'width'.  If false, those words will not\n     *      be broken, and some lines might be longer than 'width'.\n     *    break_on_hyphens (default: true)\n     *      Allow breaking hyphenated words. If true, wrapping will occur\n     *      preferably on whitespaces and right after hyphens part of\n     *      compound words.\n     *    drop_whitespace (default: true)\n     *      Drop leading and trailing whitespace from lines.\n     *    max_lines (default: None)\n     *      Truncate wrapped lines.\n     *    placeholder (default: ' [...]')\n     *      Append to the last line of truncated text.\n     */Comment.Multiline
\n\n    Text.Whitespace
constructorKeyword.Reserved
(Punctuation
optionsName.Other{}0.3358any0.1093Options0.0424T0.0108never0.0059
 Text.Whitespace
=Operator
 Text.Whitespace
{Punctuation
}Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
{Punctuation
\n            Text.Whitespace
widthName.Othernumber0.9662any0.0277string0.0043complex0.0008boolean0.0002
 Text.Whitespace
=Operator
 Text.Whitespace
70Literal.Number.Float
,Punctuation
\n            Text.Whitespace
initial_indentName.Otherstring0.7457any0.1457RegExp0.0664number0.0189boolean0.0057
 Text.Whitespace
=Operator
 Text.Whitespace
''Literal.String.Single
,Punctuation
\n            Text.Whitespace
subsequent_indentName.Otherstring0.8071RegExp0.0927any0.0722number0.0072boolean0.0066
 Text.Whitespace
=Operator
 Text.Whitespace
''Literal.String.Single
,Punctuation
\n            Text.Whitespace
expand_tabsName.Otherboolean0.9864any0.0043string0.0035number0.0028true0.0007
 Text.Whitespace
=Operator
 Text.Whitespace
trueKeyword.Constant
,Punctuation
\n            Text.Whitespace
replace_whitespaceName.Otherboolean0.9878any0.0049number0.0022string0.0021false0.0008
 Text.Whitespace
=Operator
 Text.Whitespace
trueKeyword.Constant
,Punctuation
\n            Text.Whitespace
fix_sentence_endingsName.Otherboolean0.9858any0.0061number0.0028string0.0022false0.0011
 Text.Whitespace
=Operator
 Text.Whitespace
falseKeyword.Constant
,Punctuation
\n            Text.Whitespace
break_long_wordsName.Otherboolean0.9876any0.0046number0.0027string0.0019false0.0009
 Text.Whitespace
=Operator
 Text.Whitespace
trueKeyword.Constant
,Punctuation
\n            Text.Whitespace
drop_whitespaceName.Otherboolean0.9852any0.0060number0.0028string0.0019true0.0012
 Text.Whitespace
=Operator
 Text.Whitespace
trueKeyword.Constant
,Punctuation
\n            Text.Whitespace
break_on_hyphensName.Otherboolean0.9823any0.0083number0.0024string0.0018true0.0016
 Text.Whitespace
=Operator
 Text.Whitespace
trueKeyword.Constant
,Punctuation
\n            Text.Whitespace
tabsizeName.Othernumber0.6876any0.2236boolean0.0409string0.0373complex0.0021
 Text.Whitespace
=Operator
 Text.Whitespace
8Literal.Number.Float
,Punctuation
\n            Text.Whitespace
max_linesName.Otherany0.5269string0.1850boolean0.1269number0.1120RegExp0.0142
 Text.Whitespace
=Operator
 Text.Whitespace
undefinedKeyword.Constant
,Punctuation
\n            Text.Whitespace
placeholderName.Otherstring0.9342any0.0485RegExp0.0059number0.0039string[]0.0025
=Operator
' [...]'Literal.String.Single
\n        Text.Whitespace
}Punctuation
 Text.Whitespace
=Operator
 Text.Whitespace
optionsName.Otherany0.3627Options0.0749complex0.0505number0.0221{}0.0103
\n\n        Text.Whitespace
thisKeyword
.Punctuation
widthName.Othernumber0.9122any0.0649string0.0131complex0.0044boolean0.0013
 Text.Whitespace
=Operator
 Text.Whitespace
widthName.Othernumber0.8614any0.1083string0.0182complex0.0059number[]0.0009
\n        Text.Whitespace
thisKeyword
.Punctuation
initial_indentName.Othernumber0.5177any0.2599string0.1618string[]0.0102boolean0.0094
 Text.Whitespace
=Operator
 Text.Whitespace
initial_indentName.Otherany0.4565number0.2835string0.1872complex0.0117boolean0.0070
\n        Text.Whitespace
thisKeyword
.Punctuation
subsequent_indentName.Othernumber0.4206any0.2841string0.2066string[]0.0143boolean0.0133
 Text.Whitespace
=Operator
 Text.Whitespace
subsequent_indentName.Otherany0.4818number0.2368string0.1952complex0.0126boolean0.0091
\n        Text.Whitespace
thisKeyword
.Punctuation
expand_tabsName.Othernumber0.3894any0.3092string0.2003string[]0.0149boolean0.0147
 Text.Whitespace
=Operator
 Text.Whitespace
expand_tabsName.Otherany0.4886number0.2279string0.1919complex0.0131boolean0.0102
\n        Text.Whitespace
thisKeyword
.Punctuation
replace_whitespaceName.Othernumber0.3768any0.3164string0.1991boolean0.0157string[]0.0150
 Text.Whitespace
=Operator
 Text.Whitespace
replace_whitespaceName.Otherany0.4941number0.2226string0.1895complex0.0130boolean0.0108
\n        Text.Whitespace
thisKeyword
.Punctuation
fix_sentence_endingsName.Othernumber0.3718any0.3181string0.2010boolean0.0161string[]0.0145
 Text.Whitespace
=Operator
 Text.Whitespace
fix_sentence_endingsName.Otherany0.4967number0.2212string0.1889complex0.0127boolean0.0110
\n        Text.Whitespace
thisKeyword
.Punctuation
break_long_wordsName.Othernumber0.3730any0.3162string0.2048boolean0.0159string[]0.0133
 Text.Whitespace
=Operator
 Text.Whitespace
break_long_wordsName.Otherany0.4950number0.2245string0.1907complex0.0123boolean0.0109
\n        Text.Whitespace
thisKeyword
.Punctuation
drop_whitespaceName.Othernumber0.3815any0.3097string0.2110boolean0.0153string[]0.0113
 Text.Whitespace
=Operator
 Text.Whitespace
drop_whitespaceName.Otherany0.4863number0.2345string0.1957complex0.0115boolean0.0108
\n        Text.Whitespace
thisKeyword
.Punctuation
break_on_hyphensName.Othernumber0.4015any0.2957string0.2191boolean0.0140string[]0.0086
 Text.Whitespace
=Operator
 Text.Whitespace
break_on_hyphensName.Otherany0.4668number0.2530string0.2045boolean0.0105complex0.0104
\n        Text.Whitespace
thisKeyword
.Punctuation
tabsizeName.Othernumber0.4491any0.2662string0.2207boolean0.0123string[]0.0056
 Text.Whitespace
=Operator
 Text.Whitespace
tabsizeName.Otherany0.4180number0.2989string0.2159boolean0.0106complex0.0094
\n        Text.Whitespace
thisKeyword
.Punctuation
max_linesName.Othernumber0.4945any0.2309string0.2267boolean0.0102string[]0.0037
 Text.Whitespace
=Operator
 Text.Whitespace
max_linesName.Otherany0.3776number0.3071string0.2621boolean0.0073complex0.0043
\n        Text.Whitespace
thisKeyword
.Punctuation
placeholderName.Otherstring0.8804any0.0698number0.0359string[]0.0017complex0.0014
 Text.Whitespace
=Operator
 Text.Whitespace
placeholderName.Otherstring0.8440any0.1063number0.0251string[]0.0039boolean0.0031
\n    Text.Whitespace
}Punctuation
\n\n\n    Text.Whitespace
// -- Private methods -----------------------------------------------Comment.Single
\n    Text.Whitespace
// (possibly useful for subclasses to override)Comment.Single
\n\n    Text.Whitespace
_munge_whitespaceName.Otherstring0.7516any0.1260number0.0377boolean0.0218void0.0131
(Punctuation
textName.Otherstring0.6370any0.3566number0.0020complex0.0007boolean0.0005
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
/*\n         *  _munge_whitespace(text : string) -> string\n         *\n         *  Munge whitespace in text: expand tabs and convert all other\n         *  whitespace characters to spaces.  Eg. " foo\\tbar\\n\\nbaz"\n         *  becomes " foo    bar  baz".\n         */Comment.Multiline
\n        Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
thisKeyword
.Punctuation
expand_tabsName.Otherboolean0.6762string0.1928any0.0796number0.0327string[]0.0044
)Punctuation
 Text.Whitespace
{Punctuation
\n            Text.Whitespace
textName.Otherstring0.6010any0.3966number0.0010complex0.0005boolean0.0002
 Text.Whitespace
=Operator
 Text.Whitespace
textName.Otherstring0.6366any0.3614number0.0006complex0.0005string[]0.0002
.Punctuation
replaceName.Othercomplex0.8822any0.1122string0.0028boolean0.0008void0.0005
(Punctuation
/\t/gLiteral.String.Regex
,Punctuation
 Text.Whitespace
' 'Literal.String.Single
.Punctuation
repeatName.Otherstring0.8985any0.0343boolean0.0290complex0.0117number0.0088
(Punctuation
thisKeyword
.Punctuation
tabsizeName.Otherstring0.7912any0.0936number0.0823boolean0.0142string[]0.0041
)Punctuation
)Punctuation
 Text.Whitespace
// not strictly correct in jsComment.Single
\n        Text.Whitespace
}Punctuation
\n        Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
thisKeyword
.Punctuation
replace_whitespaceName.Otherboolean0.8336string0.0691any0.0566number0.0292string[]0.0019
)Punctuation
 Text.Whitespace
{Punctuation
\n            Text.Whitespace
textName.Otherstring0.6350any0.3627number0.0012complex0.0003boolean0.0002
 Text.Whitespace
=Operator
 Text.Whitespace
textName.Otherstring0.5927any0.4053number0.0007complex0.0004string[]0.0002
.Punctuation
replaceName.Othercomplex0.8739any0.1207string0.0028boolean0.0006number0.0004
(Punctuation
/[\t\n\x0b\x0c\r]/gLiteral.String.Regex
,Punctuation
 Text.Whitespace
' 'Literal.String.Single
)Punctuation
\n        Text.Whitespace
}Punctuation
\n        Text.Whitespace
returnKeyword
 Text.Whitespace
textName.Otherstring0.8073any0.1841number0.0015string[]0.0011any[]0.0010
\n    Text.Whitespace
}Punctuation
\n\n    Text.Whitespace
_splitName.Otherstring0.4994any0.1738boolean0.0982string[]0.0692any[]0.0290
(Punctuation
textName.Otherstring0.7179any0.2771number0.0011string[]0.0007complex0.0006
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
/*\n         *  _split(text : string) -> [string]\n         *\n         *  Split the text to wrap into indivisible chunks.  Chunks are\n         *  not quite the same as words; see _wrap_chunks() for full\n         *  details.  As an example, the text\n         *    Look, goof-ball -- use the -b option!\n         *  breaks into the following chunks:\n         *    'Look,', ' ', 'goof-', 'ball', ' ', '--', ' ',\n         *    'use', ' ', 'the', ' ', '-b', ' ', 'option!'\n         *  if break_on_hyphens is True, or in:\n         *    'Look,', ' ', 'goof-ball', ' ', '--', ' ',\n         *    'use', ' ', 'the', ' ', '-b', ' ', option!'\n         *  otherwise.\n         */Comment.Multiline
\n        Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
chunksName.Otherstring[]0.8029any[]0.0830any0.0622string0.0185complex0.0064
 Text.Whitespace
=Operator
 Text.Whitespace
textName.Otherstring0.8074any0.1890string[]0.0009number0.0008complex0.0007
.Punctuation
splitName.Othercomplex0.9166any0.0761string[]0.0019string0.0011boolean0.0007
(Punctuation
wordsep_simple_reName.Otherstring0.3533any0.2430string[]0.1479boolean0.0688number0.0610
)Punctuation
\n        Text.Whitespace
chunksName.Otherstring[]0.6174any[]0.2631any0.0425number[]0.0155complex0.0071
 Text.Whitespace
=Operator
 Text.Whitespace
chunksName.Otherstring[]0.6512any[]0.2074any0.0664complex0.0194number[]0.0108
.Punctuation
filterName.Othercomplex0.9816any0.0093boolean0.0012v...0.0009string0.0007
(Punctuation
BooleanName.BuiltinBooleanConstructor0.9200Boolean0.0091boolean0.0087any0.0036string0.0019
)Punctuation
\n        Text.Whitespace
returnKeyword
 Text.Whitespace
chunksName.Otherstring[]0.4924string0.1494any[]0.1361any0.0891number0.0423
\n    Text.Whitespace
}Punctuation
\n\n    Text.Whitespace
_handle_long_wordName.Othervoid0.4483any0.1109string0.1098boolean0.0969number0.0698
(Punctuation
reversed_chunksName.Otherstring0.5491any0.2123number0.1747boolean0.0355string[]0.0070
,Punctuation
 Text.Whitespace
cur_lineName.Otherstring0.4240number0.2736any0.2107boolean0.0731string[]0.0044
,Punctuation
 Text.Whitespace
cur_lenName.Otherstring0.3913number0.3158any0.2044boolean0.0749string[]0.0030
,Punctuation
 Text.Whitespace
widthName.Othernumber0.8090any0.1166string0.0682complex0.0026boolean0.0017
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
/*\n         *  _handle_long_word(chunks : [string],\n         *                    cur_line : [string],\n         *                    cur_len : int, width : int)\n         *\n         *  Handle a chunk of text (most likely a word, not whitespace) that\n         *  is too long to fit in any line.\n         */Comment.Multiline
\n        Text.Whitespace
// Figure out when indent is larger than the specified width, and makeComment.Single
\n        Text.Whitespace
// sure at least one character is stripped off on every passComment.Single
\n        Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
space_leftName.Othernumber0.3267any0.3224string0.2252boolean0.0862void0.0060
\n        Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
widthName.Othernumber0.9317any0.0599string0.0057boolean0.0012complex0.0010
 Text.Whitespace
<Operator
 Text.Whitespace
1Literal.Number.Float
)Punctuation
 Text.Whitespace
{Punctuation
\n            Text.Whitespace
space_leftName.Othernumber0.9756any0.0158string0.0058boolean0.0016void0.0004
 Text.Whitespace
=Operator
 Text.Whitespace
1Literal.Number.Float
\n        Text.Whitespace
}Punctuation
 Text.Whitespace
elseKeyword
 Text.Whitespace
{Punctuation
\n            Text.Whitespace
space_leftName.Othernumber0.8864any0.0737string0.0329boolean0.0049complex0.0008
 Text.Whitespace
=Operator
 Text.Whitespace
widthName.Othernumber0.8239any0.1591string0.0137complex0.0022boolean0.0004
 Text.Whitespace
-Operator
 Text.Whitespace
cur_lenName.Othernumber0.8234any0.1102string0.0549boolean0.0064complex0.0015
\n        Text.Whitespace
}Punctuation
\n\n        Text.Whitespace
// If we're allowed to break long words, then do so: put as muchComment.Single
\n        Text.Whitespace
// of the next chunk onto the current line as will fit.Comment.Single
\n        Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
thisKeyword
.Punctuation
break_long_wordsName.Otherboolean0.4927number0.2633any0.1078string0.1059string[]0.0046
)Punctuation
 Text.Whitespace
{Punctuation
\n            Text.Whitespace
cur_lineName.Otherstring[]0.6458any[]0.0968number[]0.0931any0.0780string0.0067
.Punctuation
pushName.Othernumber0.9886any0.0084string0.0008boolean0.0008void0.0007
(Punctuation
reversed_chunksName.Otherany0.5787string[]0.2076string0.0656complex0.0288number[]0.0165
[Punctuation
reversed_chunksName.Otherstring[]0.4498string0.2598any0.2296number[]0.0081any[]0.0076
.Punctuation
lengthName.Othernumber0.8322any0.1632string0.0032complex0.0006boolean0.0002
 Text.Whitespace
-Operator
 Text.Whitespace
1Literal.Number.Float
]Punctuation
.Punctuation
sliceName.Otherstring0.4394any0.4301string[]0.0429number0.0146complex0.0113
(Punctuation
0Literal.Number.Float
,Punctuation
 Text.Whitespace
space_leftName.Othernumber0.5959string0.2014any0.1608boolean0.0112complex0.0101
)Punctuation
)Punctuation
\n            Text.Whitespace
reversed_chunksName.Otherany0.5091string[]0.1967number[]0.1127complex0.0305string0.0254
[Punctuation
reversed_chunksName.Otherstring[]0.5487string0.2052any0.1773number[]0.0180any[]0.0127
.Punctuation
lengthName.Othernumber0.9117any0.0847string0.0024complex0.0004boolean0.0002
 Text.Whitespace
-Operator
 Text.Whitespace
1Literal.Number.Float
]Punctuation
 Text.Whitespace
=Operator
 Text.Whitespace
reversed_chunksName.Otherany0.4998string[]0.2317number[]0.0709string0.0516complex0.0325
[Punctuation
reversed_chunksName.Otherstring[]0.5579string0.2098any0.1577number[]0.0178any[]0.0113
.Punctuation
lengthName.Othernumber0.8967any0.0988string0.0031complex0.0006boolean0.0002
 Text.Whitespace
-Operator
 Text.Whitespace
1Literal.Number.Float
]Punctuation
.Punctuation
sliceName.Otherstring0.4528any0.4317string[]0.0264number0.0189void0.0136
(Punctuation
space_leftName.Othernumber0.5167string0.2848any0.1536boolean0.0152string[]0.0085
)Punctuation
\n\n        Text.Whitespace
// Otherwise, we have to preserve the long word intact.  Only addComment.Single
\n        Text.Whitespace
// it to the current line if there's nothing already there --Comment.Single
\n        Text.Whitespace
// that minimizes how much we violate the width constraint.Comment.Single
\n        Text.Whitespace
}Punctuation
 Text.Whitespace
elseKeyword
 Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
cur_lineName.Otherboolean0.4462any0.2612string0.1533number0.0936complex0.0095
)Punctuation
 Text.Whitespace
{Punctuation
\n            Text.Whitespace
cur_lineName.Otherstring[]0.6389any[]0.1517any0.1010number[]0.0488string0.0051
.Punctuation
pushName.Othernumber0.9861any0.0109string0.0012boolean0.0007void0.0006
(Punctuation
...Punctuation
reversed_chunksName.Otherstring[]0.6609any[]0.1700any0.0881number[]0.0272complex0.0077
.Punctuation
popName.Otherany0.4790string0.2915number0.0871complex0.0673boolean0.0144
(Punctuation
)Punctuation
)Punctuation
\n        Text.Whitespace
}Punctuation
\n\n        Text.Whitespace
// If we're not allowed to break long words, and there's alreadyComment.Single
\n        Text.Whitespace
// text on the current line, do nothing.  Next time through theComment.Single
\n        Text.Whitespace
// main loop of _wrap_chunks(), we'll wind up here again, butComment.Single
\n        Text.Whitespace
// cur_len will be zero, so the next line will be entirelyComment.Single
\n        Text.Whitespace
// devoted to the long word that we can't handle right now.Comment.Single
\n    Text.Whitespace
}Punctuation
\n\n    Text.Whitespace
_wrap_chunksName.Othervoid0.2457boolean0.1862any0.1068string[]0.0911string0.0574
(Punctuation
chunksName.Otherstring[]0.3617any0.2494string0.2036any[]0.0608number0.0568
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
/*\n         *  _wrap_chunks(chunks : [string]) -> [string]\n         *\n         *  Wrap a sequence of text chunks and return a list of lines of\n         *  length 'self.width' or less.  (If 'break_long_words' is false,\n         *  some lines may be longer than this.)  Chunks correspond roughly\n         *  to words and the whitespace between them: each chunk is\n         *  indivisible (modulo 'break_long_words'), but a line break can\n         *  come between any two chunks.  Chunks should not have internal\n         *  whitespace; ie. a chunk is either all whitespace or a "word".\n         *  Whitespace chunks will be removed from the beginning and end of\n         *  lines, but apart from that whitespace is preserved.\n         */Comment.Multiline
\n        Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
linesName.Otherstring[]0.6687any[]0.1616number[]0.0583any0.0483T[]0.0050
 Text.Whitespace
=Operator
 Text.Whitespace
[Punctuation
]Punctuation
\n        Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
indentName.Otherstring0.4971number0.3453any0.1501complex0.0025boolean0.0010
\n        Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
thisKeyword
.Punctuation
widthName.Othernumber0.9683any0.0273string0.0027complex0.0008boolean0.0003
 Text.Whitespace
<=Operator
 Text.Whitespace
0Literal.Number.Float
)Punctuation
 Text.Whitespace
{Punctuation
\n            Text.Whitespace
throwKeywordany0.8417Error0.0702number0.0293string0.0267complex0.0157
 Text.Whitespace
ErrorName.ExceptionErrorConstructor0.9998any0.0000Error0.0000complex0.0000void0.0000
(Punctuation
`Literal.String.Backtick
invalid width Literal.String.Backtick
${Literal.String.Interpol
thisKeyword
.Punctuation
widthName.Othernumber0.8785string0.0615any0.0522complex0.0051boolean0.0008
}Literal.String.Interpol
 (must be > 0)Literal.String.Backtick
`Literal.String.Backtick
)Punctuation
\n        Text.Whitespace
}Punctuation
\n        Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
thisKeyword
.Punctuation
max_linesName.Othernumber0.4007any0.2397string0.2321boolean0.0803complex0.0087
 Text.Whitespace
!==Operator
 Text.Whitespace
undefinedKeyword.Constant
)Punctuation
 Text.Whitespace
{Punctuation
\n            Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
thisKeyword
.Punctuation
max_linesName.Othernumber0.9636any0.0221boolean0.0089string0.0039number[]0.0003
 Text.Whitespace
>Operator
 Text.Whitespace
1Literal.Number.Float
)Punctuation
 Text.Whitespace
{Punctuation
\n                Text.Whitespace
indentName.Othernumber0.7781string0.1512any0.0568complex0.0066void0.0014
 Text.Whitespace
=Operator
 Text.Whitespace
thisKeyword
.Punctuation
subsequent_indentName.Othernumber0.7028string0.2056any0.0578boolean0.0075number[]0.0038
\n            Text.Whitespace
}Punctuation
 Text.Whitespace
elseKeyword
 Text.Whitespace
{Punctuation
\n                Text.Whitespace
indentName.Othernumber0.6129string0.3062any0.0690complex0.0044void0.0019
 Text.Whitespace
=Operator
 Text.Whitespace
thisKeyword
.Punctuation
initial_indentName.Othernumber0.5805string0.3027any0.0710boolean0.0122number[]0.0050
\n            Text.Whitespace
}Punctuation
\n            Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
indentName.Otherstring0.8597any0.0989number0.0145string[]0.0107any[]0.0054
.Punctuation
lengthName.Othernumber0.9332any0.0638string0.0019complex0.0005boolean0.0002
 Text.Whitespace
+Operator
 Text.Whitespace
thisKeyword
.Punctuation
placeholderName.Otherstring0.4876any0.3185number0.0363RegExp0.0103complex0.0100
.Punctuation
trimStartName.Otherany0.6494string0.1234complex0.0950string[]0.0086any[]0.0062
(Punctuation
)Punctuation
.Punctuation
lengthName.Othernumber0.8634any0.1336string0.0019complex0.0004boolean0.0002
 Text.Whitespace
>Operator
 Text.Whitespace
thisKeyword
.Punctuation
widthName.Othernumber0.9549any0.0309string0.0100complex0.0024boolean0.0002
)Punctuation
 Text.Whitespace
{Punctuation
\n                Text.Whitespace
throwKeywordany0.8867Error0.0587string0.0115complex0.0112number0.0111
 Text.Whitespace
ErrorName.ExceptionErrorConstructor0.9999Error0.0000any0.0000complex0.0000any[]0.0000
(Punctuation
'placeholder too large for max width'Literal.String.Single
)Punctuation
\n            Text.Whitespace
}Punctuation
\n        Text.Whitespace
}Punctuation
\n\n        Text.Whitespace
// Arrange in reverse order so items can be efficiently poppedComment.Single
\n        Text.Whitespace
// from a stack of chucks.Comment.Single
\n        Text.Whitespace
chunksName.Otherany[]0.6222string[]0.2393any0.0530number[]0.0224string0.0136
 Text.Whitespace
=Operator
 Text.Whitespace
chunksName.Otherany[]0.6538string[]0.2209any0.0528number[]0.0188complex0.0058
.Punctuation
reverseName.Otherany0.3348string[]0.2757any[]0.2711number[]0.0287string0.0138
(Punctuation
)Punctuation
\n\n        Text.Whitespace
whileKeyword
 Text.Whitespace
(Punctuation
chunksName.Otherany[]0.5558string[]0.2724any0.0836number[]0.0335complex0.0062
.Punctuation
lengthName.Othernumber0.9774any0.0212string0.0007complex0.0002boolean0.0002
 Text.Whitespace
>Operator
 Text.Whitespace
0Literal.Number.Float
)Punctuation
 Text.Whitespace
{Punctuation
\n\n            Text.Whitespace
// Start the list of chunks that will make up the current line.Comment.Single
\n            Text.Whitespace
// cur_len is just the length of all the chunks in cur_line.Comment.Single
\n            Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
cur_lineName.Otherany[]0.9315string[]0.0280number[]0.0116any0.0074any[][]0.0018
 Text.Whitespace
=Operator
 Text.Whitespace
[Punctuation
]Punctuation
\n            Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
cur_lenName.Othernumber0.9070any0.0520string0.0290boolean0.0095complex0.0006
 Text.Whitespace
=Operator
 Text.Whitespace
0Literal.Number.Float
\n\n            Text.Whitespace
// Figure out which static string will prefix this line.Comment.Single
\n            Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
indentName.Otherstring0.5668number0.2844any0.1346complex0.0038boolean0.0026
\n            Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
linesName.Otherstring[]0.8425any[]0.0382any0.0362number[]0.0159string0.0076
)Punctuation
 Text.Whitespace
{Punctuation
\n                Text.Whitespace
indentName.Othernumber0.7628string0.1654any0.0616complex0.0051any[]0.0013
 Text.Whitespace
=Operator
 Text.Whitespace
thisKeyword
.Punctuation
subsequent_indentName.Othernumber0.6940string0.2016any0.0777boolean0.0103complex0.0037
\n            Text.Whitespace
}Punctuation
 Text.Whitespace
elseKeyword
 Text.Whitespace
{Punctuation
\n                Text.Whitespace
indentName.Othernumber0.7357string0.1934any0.0626complex0.0032boolean0.0015
 Text.Whitespace
=Operator
 Text.Whitespace
thisKeyword
.Punctuation
initial_indentName.Othernumber0.7807string0.1245any0.0641boolean0.0163complex0.0039
\n            Text.Whitespace
}Punctuation
\n\n            Text.Whitespace
// Maximum width for this line.Comment.Single
\n            Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
widthName.Othernumber0.8833any0.0861string0.0254complex0.0033boolean0.0010
 Text.Whitespace
=Operator
 Text.Whitespace
thisKeyword
.Punctuation
widthName.Othernumber0.9525any0.0403string0.0049complex0.0013boolean0.0003
 Text.Whitespace
-Operator
 Text.Whitespace
indentName.Otherstring0.6244number0.1749any0.1575any[]0.0129string[]0.0095
.Punctuation
lengthName.Othernumber0.9486any0.0477string0.0021boolean0.0005complex0.0005
\n\n            Text.Whitespace
// First chunk on line is whitespace -- drop it, unless thisComment.Single
\n            Text.Whitespace
// is the very beginning of the text (ie. no lines started yet).Comment.Single
\n            Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
thisKeyword
.Punctuation
drop_whitespaceName.Otherboolean0.5805number0.2517string0.0780any0.0598any[]0.0035
 Text.Whitespace
&&Operator
 Text.Whitespace
chunksName.Otherany[]0.6773string[]0.1344any0.0721number[]0.0324complex0.0064
[Punctuation
chunksName.Otherany[]0.4948string[]0.3743any0.0360number[]0.0319string0.0143
.Punctuation
lengthName.Othernumber0.9814any0.0170string0.0010boolean0.0002complex0.0002
 Text.Whitespace
-Operator
 Text.Whitespace
1Literal.Number.Float
]Punctuation
.Punctuation
trimName.Otherstring0.7925any0.1727number0.0154void0.0076boolean0.0051
(Punctuation
)Punctuation
 Text.Whitespace
===Operator
 Text.Whitespace
''Literal.String.Single
 Text.Whitespace
&&Operator
 Text.Whitespace
linesName.Otherstring[]0.8644any0.0440any[]0.0433number[]0.0152string0.0020
.Punctuation
lengthName.Othernumber0.9648any0.0335string0.0011boolean0.0002complex0.0002
 Text.Whitespace
>Operator
 Text.Whitespace
0Literal.Number.Float
)Punctuation
 Text.Whitespace
{Punctuation
\n                Text.Whitespace
chunksName.Otherany[]0.8177string[]0.1074any0.0229number[]0.0223complex0.0042
.Punctuation
popName.Othernumber0.3666string0.2738any0.2353complex0.0527boolean0.0256
(Punctuation
)Punctuation
\n            Text.Whitespace
}Punctuation
\n\n            Text.Whitespace
whileKeyword
 Text.Whitespace
(Punctuation
chunksName.Otherany[]0.4921string[]0.2759any0.1015number[]0.0440string0.0175
.Punctuation
lengthName.Othernumber0.9721any0.0265string0.0007complex0.0002boolean0.0002
 Text.Whitespace
>Operator
 Text.Whitespace
0Literal.Number.Float
)Punctuation
 Text.Whitespace
{Punctuation
\n                Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
lName.Othernumber0.6045any0.2527string0.1314boolean0.0036void0.0011
 Text.Whitespace
=Operator
 Text.Whitespace
chunksName.Otherany[]0.7259string[]0.0946number[]0.0478any0.0388complex0.0099
[Punctuation
chunksName.Otherany[]0.4902string[]0.3849any0.0375number[]0.0344string0.0145
.Punctuation
lengthName.Othernumber0.9779any0.0205string0.0010complex0.0002boolean0.0001
 Text.Whitespace
-Operator
 Text.Whitespace
1Literal.Number.Float
]Punctuation
.Punctuation
lengthName.Othernumber0.7635any0.2328string0.0021boolean0.0006complex0.0004
\n\n                Text.Whitespace
// Can at least squeeze this chunk onto the current line.Comment.Single
\n                Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
cur_lenName.Othernumber0.8809any0.0764string0.0236boolean0.0174complex0.0007
 Text.Whitespace
+Operator
 Text.Whitespace
lName.Othernumber0.9188any0.0523string0.0279boolean0.0003complex0.0002
 Text.Whitespace
<=Operator
 Text.Whitespace
widthName.Othernumber0.9457any0.0409string0.0107complex0.0011boolean0.0007
)Punctuation
 Text.Whitespace
{Punctuation
\n                    Text.Whitespace
cur_lineName.Otherany[]0.5734string[]0.2801number[]0.0680any0.0328number0.0077
.Punctuation
pushName.Othernumber0.9942any0.0041string0.0006boolean0.0004void0.0003
(Punctuation
chunksName.Otherany[]0.5587string[]0.3428any0.0415number[]0.0252complex0.0065
.Punctuation
popName.Otherstring0.4251number0.2685any0.2553complex0.0236any[]0.0067
(Punctuation
)Punctuation
)Punctuation
\n                    Text.Whitespace
cur_lenName.Othernumber0.6854string0.2276any0.0757boolean0.0064complex0.0011
 Text.Whitespace
+=Operator
 Text.Whitespace
lName.Otherstring0.5158number0.3886any0.0878boolean0.0023void0.0006
\n\n                Text.Whitespace
// Nope, this line is full.Comment.Single
\n                Text.Whitespace
}Punctuation
 Text.Whitespace
elseKeyword
 Text.Whitespace
{Punctuation
\n                    Text.Whitespace
breakKeyword
\n                Text.Whitespace
}Punctuation
\n            Text.Whitespace
}Punctuation
\n\n            Text.Whitespace
// The current line is full, and the next chunk is too big toComment.Single
\n            Text.Whitespace
// fit on *any* line (not just this one).Comment.Single
\n            Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
chunksName.Otherany[]0.7555string[]0.1654number[]0.0207any0.0143complex0.0098
.Punctuation
lengthName.Othernumber0.9779any0.0192string0.0014boolean0.0006complex0.0004
 Text.Whitespace
&&Operator
 Text.Whitespace
chunksName.Otherany[]0.8036string[]0.0857any0.0273number[]0.0240complex0.0147
[Punctuation
chunksName.Otherany[]0.6099string[]0.2931any0.0312number[]0.0194complex0.0096
.Punctuation
lengthName.Othernumber0.9760any0.0222string0.0011complex0.0003boolean0.0002
 Text.Whitespace
-Operator
 Text.Whitespace
1Literal.Number.Float
]Punctuation
.Punctuation
lengthName.Othernumber0.8143any0.1832string0.0014complex0.0003boolean0.0003
 Text.Whitespace
>Operator
 Text.Whitespace
widthName.Othernumber0.9339any0.0497string0.0123complex0.0027boolean0.0004
)Punctuation
 Text.Whitespace
{Punctuation
\n                Text.Whitespace
thisKeyword
.Punctuation
_handle_long_wordName.Othervoid0.5686any0.0955number0.0848complex0.0642boolean0.0621
(Punctuation
chunksName.Otherany[]0.4211string[]0.2265any0.1506number0.0606string0.0492
,Punctuation
 Text.Whitespace
cur_lineName.Othernumber0.5350string0.2507any0.1407boolean0.0523any[]0.0066
,Punctuation
 Text.Whitespace
cur_lenName.Othernumber0.5393string0.2176any0.1784boolean0.0489any[]0.0044
,Punctuation
 Text.Whitespace
widthName.Othernumber0.7930any0.1441string0.0523complex0.0073boolean0.0008
)Punctuation
\n                Text.Whitespace
cur_lenName.Otherany0.4326number0.3435string0.1081string[]0.0347boolean0.0260
 Text.Whitespace
=Operator
 Text.Whitespace
cur_lineName.Otherany0.4096string[]0.2290any[]0.1738number[]0.0793number0.0366
.Punctuation
mapName.OtherU[]0.8438any0.0868complex0.0454number0.0055any[]0.0014
(Punctuation
lName.Otherstring0.4831number0.2802any0.2287boolean0.0019complex0.0009
 Text.Whitespace
=>Punctuation
 Text.Whitespace
lName.Otherstring0.7268any0.1973number0.0512any[]0.0068string[]0.0041
.Punctuation
lengthName.Othernumber0.9298any0.0667string0.0026complex0.0003boolean0.0002
)Punctuation
.Punctuation
reduceName.Otherany0.5205complex0.3715number0.0842any...0.0092string0.0020
(Punctuation
(Punctuation
aName.Othernumber0.5892string0.3177any0.0879boolean0.0015complex0.0007
,Punctuation
 Text.Whitespace
bName.Othernumber0.4977string0.3044any0.1827boolean0.0045complex0.0008
)Punctuation
 Text.Whitespace
=>Punctuation
 Text.Whitespace
aName.Othernumber0.6604string0.2387any0.0967boolean0.0015complex0.0007
 Text.Whitespace
+Operator
 Text.Whitespace
bName.Othernumber0.5920string0.2473any0.1530boolean0.0016complex0.0008
,Punctuation
 Text.Whitespace
0Literal.Number.Float
)Punctuation
\n            Text.Whitespace
}Punctuation
\n\n            Text.Whitespace
// If the last chunk on this line is all whitespace, drop it.Comment.Single
\n            Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
thisKeyword
.Punctuation
drop_whitespaceName.Otherboolean0.5378string0.2155any0.1056number0.0652string[]0.0292
 Text.Whitespace
&&Operator
 Text.Whitespace
cur_lineName.Otherstring[]0.3206any0.3178string0.1556any[]0.1177number[]0.0268
.Punctuation
lengthName.Othernumber0.9438any0.0538string0.0013boolean0.0004complex0.0004
 Text.Whitespace
>Operator
 Text.Whitespace
0Literal.Number.Float
 Text.Whitespace
&&Operator
 Text.Whitespace
cur_lineName.Otherany0.3522string[]0.1573any[]0.1487number[]0.0732boolean0.0543
[Punctuation
cur_lineName.Otherstring[]0.5180string0.1534any[]0.1133any0.1099number[]0.0306
.Punctuation
lengthName.Othernumber0.9320any0.0648string0.0021complex0.0004boolean0.0003
 Text.Whitespace
-Operator
 Text.Whitespace
1Literal.Number.Float
]Punctuation
.Punctuation
trimName.Otherstring0.7991any0.1680number0.0184complex0.0045boolean0.0039
(Punctuation
)Punctuation
 Text.Whitespace
===Operator
 Text.Whitespace
''Literal.String.Single
)Punctuation
 Text.Whitespace
{Punctuation
\n                Text.Whitespace
cur_lenName.Othernumber0.6994any0.2567string0.0383boolean0.0025complex0.0007
 Text.Whitespace
-=Operator
 Text.Whitespace
cur_lineName.Otherany0.5342number0.1518number[]0.1250any[]0.0365complex0.0266
[Punctuation
cur_lineName.Otherstring[]0.3333any0.2139string0.2082any[]0.1089number[]0.0606
.Punctuation
lengthName.Othernumber0.9354any0.0621string0.0016complex0.0003boolean0.0002
 Text.Whitespace
-Operator
 Text.Whitespace
1Literal.Number.Float
]Punctuation
.Punctuation
lengthName.Othernumber0.6813any0.3129string0.0035boolean0.0006complex0.0006
\n                Text.Whitespace
cur_lineName.Otherany0.2426number[]0.2194string[]0.1942any[]0.1778number0.0894
.Punctuation
popName.Otherany0.4617number0.3176string0.1619complex0.0265boolean0.0112
(Punctuation
)Punctuation
\n            Text.Whitespace
}Punctuation
\n\n            Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
cur_lineName.Otherboolean0.5859any0.1986number0.1083string0.0730complex0.0073
)Punctuation
 Text.Whitespace
{Punctuation
\n                Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
thisKeyword
.Punctuation
max_linesName.Otherboolean0.4656number0.2557any0.1577string0.0954complex0.0046
 Text.Whitespace
===Operator
 Text.Whitespace
undefinedKeyword.Constant
 Text.Whitespace
||Operator
\n                    Text.Whitespace
linesName.Otherstring[]0.8112any0.0864any[]0.0424number[]0.0149string0.0036
.Punctuation
lengthName.Othernumber0.9182any0.0794string0.0011boolean0.0004complex0.0003
 Text.Whitespace
+Operator
 Text.Whitespace
1Literal.Number.Float
 Text.Whitespace
<Operator
 Text.Whitespace
thisKeyword
.Punctuation
max_linesName.Othernumber0.6096any0.1457string0.1392boolean0.0751string[]0.0069
 Text.Whitespace
||Operator
\n                    Text.Whitespace
(Punctuation
chunksName.Otherany[]0.4952string[]0.3177any0.1271number[]0.0191string0.0116
.Punctuation
lengthName.Othernumber0.9351any0.0622string0.0013boolean0.0005complex0.0005
 Text.Whitespace
===Operator
 Text.Whitespace
0Literal.Number.Float
 Text.Whitespace
||Operator
\n                     Text.Whitespace
thisKeyword
.Punctuation
drop_whitespaceName.Otherboolean0.4645number0.1836string0.1644any0.1471string[]0.0114
 Text.Whitespace
&&Operator
\n                     Text.Whitespace
chunksName.Otherany[]0.4602string[]0.4005any0.0714number[]0.0233string0.0121
.Punctuation
lengthName.Othernumber0.9599any0.0376string0.0010boolean0.0006complex0.0004
 Text.Whitespace
===Operator
 Text.Whitespace
1Literal.Number.Float
 Text.Whitespace
&&Operator
\n                     Text.Whitespace
!Operator
chunksName.Otherany[]0.5317string[]0.2554any0.1049number[]0.0367string0.0180
[Punctuation
0Literal.Number.Float
]Punctuation
.Punctuation
trimName.Otherstring0.8098any0.1676number0.0105boolean0.0066complex0.0023
(Punctuation
)Punctuation
)Punctuation
 Text.Whitespace
&&Operator
 Text.Whitespace
cur_lenName.Othernumber0.8429any0.1160string0.0303boolean0.0094complex0.0005
 Text.Whitespace
<=Operator
 Text.Whitespace
widthName.Othernumber0.8772any0.0929string0.0246complex0.0032boolean0.0012
)Punctuation
 Text.Whitespace
{Punctuation
\n                    Text.Whitespace
// Convert current line back to a string and store it inComment.Single
\n                    Text.Whitespace
// list of all lines (return value).Comment.Single
\n                    Text.Whitespace
linesName.Otherstring[]0.8964any[]0.0562any0.0236number[]0.0129string0.0024
.Punctuation
pushName.Othernumber0.9882any0.0102string0.0008boolean0.0003void0.0002
(Punctuation
indentName.Otherstring0.4505number0.3782any0.1685complex0.0012any[]0.0003
 Text.Whitespace
+Operator
 Text.Whitespace
cur_lineName.Otherstring[]0.5798any[]0.2337any0.0984string0.0273number[]0.0269
.Punctuation
joinName.Otherstring0.9242any0.0592number0.0116complex0.0015string[]0.0011
(Punctuation
''Literal.String.Single
)Punctuation
)Punctuation
\n                Text.Whitespace
}Punctuation
 Text.Whitespace
elseKeyword
 Text.Whitespace
{Punctuation
\n                    Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
had_breakName.Otherboolean0.9696any0.0151number0.0082string0.0053false0.0005
 Text.Whitespace
=Operator
 Text.Whitespace
falseKeyword.Constant
\n                    Text.Whitespace
whileKeyword
 Text.Whitespace
(Punctuation
cur_lineName.Otherboolean0.4371any0.3382string0.1288number0.0707complex0.0058
)Punctuation
 Text.Whitespace
{Punctuation
\n                        Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
cur_lineName.Otherany0.5309boolean0.1130any[]0.1002string[]0.0687string0.0307
[Punctuation
cur_lineName.Otherstring0.2925any0.2567string[]0.2404any[]0.1190number[]0.0159
.Punctuation
lengthName.Othernumber0.9238any0.0734string0.0017boolean0.0004complex0.0004
 Text.Whitespace
-Operator
 Text.Whitespace
1Literal.Number.Float
]Punctuation
.Punctuation
trimName.Otherstring0.7384any0.2089number0.0290boolean0.0116void0.0061
(Punctuation
)Punctuation
 Text.Whitespace
&&Operator
\n                            Text.Whitespace
cur_lenName.Othernumber0.7717any0.1073string0.0745boolean0.0437void0.0009
 Text.Whitespace
+Operator
 Text.Whitespace
thisKeyword
.Punctuation
placeholderName.Otherstring0.9233any0.0498string[]0.0077number0.0050any[]0.0029
.Punctuation
lengthName.Othernumber0.9533any0.0445string0.0013boolean0.0004complex0.0003
 Text.Whitespace
<=Operator
 Text.Whitespace
widthName.Othernumber0.9338any0.0511string0.0125complex0.0012boolean0.0007
)Punctuation
 Text.Whitespace
{Punctuation
\n                            Text.Whitespace
cur_lineName.Otherstring[]0.5301any[]0.3122number[]0.0730any0.0390string0.0145
.Punctuation
pushName.Othernumber0.9929any0.0053boolean0.0006string0.0005void0.0003
(Punctuation
thisKeyword
.Punctuation
placeholderName.Otherstring0.9572any0.0181number0.0177boolean0.0029string[]0.0010
)Punctuation
\n                            Text.Whitespace
linesName.Otherstring[]0.9306any[]0.0312any0.0156number[]0.0102string0.0014
.Punctuation
pushName.Othernumber0.9903any0.0081string0.0008boolean0.0004void0.0002
(Punctuation
indentName.Otherstring0.6866number0.2187any0.0922complex0.0007any[]0.0004
 Text.Whitespace
+Operator
 Text.Whitespace
cur_lineName.Otherstring[]0.6999any[]0.1509any0.0655string0.0271number[]0.0242
.Punctuation
joinName.Otherstring0.9279any0.0534number0.0116boolean0.0019complex0.0015
(Punctuation
''Literal.String.Single
)Punctuation
)Punctuation
\n                            Text.Whitespace
had_breakName.Otherboolean0.9224number0.0297any0.0268string0.0140false0.0012
 Text.Whitespace
=Operator
 Text.Whitespace
trueKeyword.Constant
\n                            Text.Whitespace
breakKeyword
\n                        Text.Whitespace
}Punctuation
\n                        Text.Whitespace
cur_lenName.Othernumber0.6559any0.2162string0.1140boolean0.0052void0.0023
 Text.Whitespace
-=Operator
 Text.Whitespace
cur_lineName.Otherany0.4183any[]0.1629string[]0.1075number[]0.0866number0.0755
[Punctuation
-Operator
1Literal.Number.Float
]Punctuation
.Punctuation
lengthName.Othernumber0.5887any0.4047string0.0040complex0.0008boolean0.0005
\n                        Text.Whitespace
cur_lineName.Otherany0.2989string[]0.2562any[]0.1632number[]0.1126number0.0633
.Punctuation
popName.Otherany0.5416number0.2181string0.1874complex0.0241boolean0.0063
(Punctuation
)Punctuation
\n                    Text.Whitespace
}Punctuation
\n                    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
had_breakName.Otherboolean0.7053any0.1030string0.0953number0.0547complex0.0090
)Punctuation
 Text.Whitespace
{Punctuation
\n                        Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
linesName.Otherstring[]0.8221any0.0769any[]0.0382number[]0.0152string0.0090
)Punctuation
 Text.Whitespace
{Punctuation
\n                            Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
prev_lineName.Otherstring0.4284any0.2988number0.2525boolean0.0101string[]0.0041
 Text.Whitespace
=Operator
 Text.Whitespace
linesName.Otherstring[]0.8614any[]0.0365any0.0272number[]0.0144T[]0.0018
[Punctuation
linesName.Otherstring[]0.9414any[]0.0161any0.0144number[]0.0084string0.0024
.Punctuation
lengthName.Othernumber0.9739any0.0241string0.0016boolean0.0001complex0.0001
 Text.Whitespace
-Operator
 Text.Whitespace
1Literal.Number.Float
]Punctuation
.Punctuation
trimEndName.Otherstring0.8069any0.1527number0.0180void0.0051complex0.0024
(Punctuation
)Punctuation
\n                            Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
prev_lineName.Otherstring0.5226string[]0.2196any0.1383any[]0.0476number[]0.0109
.Punctuation
lengthName.Othernumber0.9462any0.0508string0.0019complex0.0005boolean0.0003
 Text.Whitespace
+Operator
 Text.Whitespace
thisKeyword
.Punctuation
placeholderName.Otherstring0.9560any0.0216string[]0.0075number0.0034any[]0.0019
.Punctuation
lengthName.Othernumber0.9690any0.0285string0.0017complex0.0003boolean0.0002
 Text.Whitespace
<=Operator
\n                                    Text.Whitespace
thisKeyword
.Punctuation
widthName.Othernumber0.9558string0.0212any0.0206complex0.0011boolean0.0005
)Punctuation
 Text.Whitespace
{Punctuation
\n                                Text.Whitespace
linesName.Otherstring[]0.9228any[]0.0250any0.0170number[]0.0126string0.0012
[Punctuation
linesName.Otherstring[]0.9524any0.0138any[]0.0115number[]0.0094string0.0026
.Punctuation
lengthName.Othernumber0.9725any0.0255string0.0016complex0.0001boolean0.0001
 Text.Whitespace
-Operator
 Text.Whitespace
1Literal.Number.Float
]Punctuation
 Text.Whitespace
=Operator
 Text.Whitespace
prev_lineName.Othernumber0.8457string0.1104any0.0381boolean0.0035complex0.0005
 Text.Whitespace
+Operator
 Text.Whitespace
thisKeyword
.Punctuation
placeholderName.Otherstring0.8723any0.0569number0.0557boolean0.0057string[]0.0019
\n                                Text.Whitespace
breakKeyword
\n                            Text.Whitespace
}Punctuation
\n                        Text.Whitespace
}Punctuation
\n                        Text.Whitespace
linesName.Otherstring[]0.8579any[]0.0671number[]0.0259any0.0172string0.0023
.Punctuation
pushName.Othernumber0.9959any0.0029string0.0006boolean0.0003void0.0001
(Punctuation
indentName.Otherstring0.6043number0.3264any0.0669complex0.0010any[]0.0003
 Text.Whitespace
+Operator
 Text.Whitespace
thisKeyword
.Punctuation
placeholderName.Otherstring0.3201any0.1679number0.0318RegExp0.0140complex0.0121
.Punctuation
lstripName.Otherstring0.7369number0.1392any0.0752boolean0.0264string[]0.0056
(Punctuation
)Punctuation
)Punctuation
\n                    Text.Whitespace
}Punctuation
\n                    Text.Whitespace
breakKeyword
\n                Text.Whitespace
}Punctuation
\n            Text.Whitespace
}Punctuation
\n        Text.Whitespace
}Punctuation
\n\n        Text.Whitespace
returnKeyword
 Text.Whitespace
linesName.Otherstring[]0.8886any[]0.0420number[]0.0133any0.0045string0.0019
\n    Text.Whitespace
}Punctuation
\n\n    Text.Whitespace
_split_chunksName.Otherstring0.2620string[]0.1585boolean0.0949any[]0.0757any0.0754
(Punctuation
textName.Otherstring0.8146any0.1778number0.0025complex0.0012string[]0.0008
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
textName.Otherstring0.8742any0.1194number0.0022complex0.0016string[]0.0006
 Text.Whitespace
=Operator
 Text.Whitespace
thisKeyword
.Punctuation
_munge_whitespaceName.Otherstring0.8384any0.0657boolean0.0302number0.0195string[]0.0114
(Punctuation
textName.Otherstring0.8760any0.1172number0.0021complex0.0018any[]0.0004
)Punctuation
\n        Text.Whitespace
returnKeyword
 Text.Whitespace
thisKeyword
.Punctuation
_splitName.Otherstring0.6231any0.1389number0.0636boolean0.0522complex0.0200
(Punctuation
textName.Otherstring0.6135any0.3748complex0.0031number0.0020any[]0.0013
)Punctuation
\n    Text.Whitespace
}Punctuation
\n\n    Text.Whitespace
// -- Public interface ----------------------------------------------Comment.Single
\n\n    Text.Whitespace
wrapName.Otherstring0.7164any0.1226boolean0.0320void0.0197number0.0174
(Punctuation
textName.Otherstring0.7601any0.2341number0.0023complex0.0007string[]0.0005
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
/*\n         *  wrap(text : string) -> [string]\n         *\n         *  Reformat the single paragraph in 'text' so it fits in lines of\n         *  no more than 'self.width' columns, and return a list of wrapped\n         *  lines.  Tabs in 'text' are expanded with string.expandtabs(),\n         *  and all other whitespace characters (including newline) are\n         *  converted to space.\n         */Comment.Multiline
\n        Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
chunksName.Otherstring[]0.4615any[]0.2208string0.0946any0.0653number[]0.0220
 Text.Whitespace
=Operator
 Text.Whitespace
thisKeyword
.Punctuation
_split_chunksName.Otherstring0.6194any0.1056string[]0.0564boolean0.0444complex0.0442
(Punctuation
textName.Otherstring0.8322any0.1587complex0.0027number0.0025any[]0.0008
)Punctuation
\n        Text.Whitespace
// not implemented in jsComment.Single
\n        Text.Whitespace
//if (this.fix_sentence_endings) {Comment.Single
\n        Text.Whitespace
//    this._fix_sentence_endings(chunks)Comment.Single
\n        Text.Whitespace
//}Comment.Single
\n        Text.Whitespace
returnKeyword
 Text.Whitespace
thisKeyword
.Punctuation
_wrap_chunksName.Otherstring0.7257any0.0875number0.0653boolean0.0463any[]0.0145
(Punctuation
chunksName.Otherstring[]0.3022any[]0.2504string0.1841any0.1708number0.0293
)Punctuation
\n    Text.Whitespace
}Punctuation
\n\n    Text.Whitespace
fillName.Otherany0.2668any[]0.1973string0.1314this0.0908string[]0.0345
(Punctuation
textName.Otherstring0.6807any0.3109number0.0025complex0.0011string[]0.0010
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
/*\n         *  fill(text : string) -> string\n         *\n         *  Reformat the single paragraph in 'text' to fit in lines of no\n         *  more than 'self.width' columns, and return a new string\n         *  containing the entire wrapped paragraph.\n         */Comment.Multiline
\n        Text.Whitespace
returnKeyword
 Text.Whitespace
thisKeyword
.Punctuation
wrapName.Otherstring0.8498any0.0680any[]0.0168string[]0.0155number0.0102
(Punctuation
textName.Otherstring0.7151any0.2773number0.0016string[]0.0016any[]0.0013
)Punctuation
.Punctuation
joinName.Otherstring0.9723any0.0213number0.0024string[]0.0009complex0.0007
(Punctuation
'\n'Literal.String.Single
)Punctuation
\n    Text.Whitespace
}Punctuation
\nText.Whitespace
}Punctuation
\n\n\nText.Whitespace
Text
// -- Convenience interface ---------------------------------------------Comment.Single
\n\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
wrapName.Otherstring0.6585any0.1679number0.0204void0.0115string[]0.0076
(Punctuation
textName.Otherstring0.9384any0.0570number0.0028string[]0.0002complex0.0002
,Punctuation
 Text.Whitespace
optionsName.Other{}0.1715any0.1150Options0.0278string0.0093RequestOptions0.0069
 Text.Whitespace
=Operator
 Text.Whitespace
{Punctuation
}Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
/*\n     *  Wrap a single paragraph of text, returning a list of wrapped lines.\n     *\n     *  Reformat the single paragraph in 'text' so it fits in lines of no\n     *  more than 'width' columns, and return a list of wrapped lines.  By\n     *  default, tabs in 'text' are expanded with string.expandtabs(), and\n     *  all other whitespace characters (including newline) are converted to\n     *  space.  See TextWrapper class for available keyword args to customize\n     *  wrapping behaviour.\n     */Comment.Multiline
\n    Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
{Punctuation
 Text.Whitespace
widthName.Othernumber0.8450any0.1264string0.0251complex0.0016boolean0.0004
 Text.Whitespace
=Operator
 Text.Whitespace
70Literal.Number.Float
,Punctuation
 Text.Whitespace
...Punctuation
kwargsName.Otherany0.7134complex0.1694any[]0.0548{}0.0151string[]0.0114
 Text.Whitespace
}Punctuation
 Text.Whitespace
=Operator
 Text.Whitespace
optionsName.Otherany0.2072Options0.0478complex0.0169{}0.0145number0.0064
\n    Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
wName.Otherany0.1844number0.0051SymbolicTensor0.0045Options0.0032Change0.0028
 Text.Whitespace
=Operator
 Text.Whitespace
newOperator.Wordany0.6144string0.1220number0.0206complex0.0109boolean0.0047
 Text.Whitespace
TextWrapperName.Otherany0.9370number0.0240string0.0163complex0.0099boolean0.0045
(Punctuation
ObjectName.BuiltinObjectConstructor0.9995any0.0001Object0.0001complex0.0000number0.0000
.Punctuation
assignName.Othercomplex0.7166any0.0832number0.0284void0.0266boolean0.0189
(Punctuation
{Punctuation
 Text.Whitespace
widthName.Othernumber0.5408any0.3904string0.0341complex0.0266{}0.0008
 Text.Whitespace
}Punctuation
,Punctuation
 Text.Whitespace
kwargsName.Otherany0.8158complex0.1215any[]0.0322string[]0.0054{}0.0036
)Punctuation
)Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
wName.Otherany0.7514number0.0022SymbolicTensor0.0012void0.0012this0.0012
.Punctuation
wrapName.Otherany0.8066string0.0502void0.0238complex0.0114number0.0076
(Punctuation
textName.Otherstring0.5208any0.4689complex0.0027number0.0018any[]0.0013
)Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
fillName.Otherany0.2335this0.0906string0.0837any[]0.0597void0.0278
(Punctuation
textName.Otherstring0.6995any0.2945number0.0028complex0.0004string[]0.0003
,Punctuation
 Text.Whitespace
optionsName.Otherany0.1988{}0.1269Options0.0231object0.0056string0.0049
 Text.Whitespace
=Operator
 Text.Whitespace
{Punctuation
}Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
/*\n     *  Fill a single paragraph of text, returning a new string.\n     *\n     *  Reformat the single paragraph in 'text' to fit in lines of no more\n     *  than 'width' columns, and return a new string containing the entire\n     *  wrapped paragraph.  As with wrap(), tabs are expanded and other\n     *  whitespace characters converted to space.  See TextWrapper class for\n     *  available keyword args to customize wrapping behaviour.\n     */Comment.Multiline
\n    Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
{Punctuation
 Text.Whitespace
widthName.Othernumber0.8563any0.1252string0.0160complex0.0010boolean0.0003
 Text.Whitespace
=Operator
 Text.Whitespace
70Literal.Number.Float
,Punctuation
 Text.Whitespace
...Punctuation
kwargsName.Otherany0.8240complex0.0882any[]0.0427{}0.0093string[]0.0074
 Text.Whitespace
}Punctuation
 Text.Whitespace
=Operator
 Text.Whitespace
optionsName.Otherany0.2566Options0.0406{}0.0134complex0.0131number0.0075
\n    Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
wName.Otherany0.2009SymbolicTensor0.0063number0.0059Tests0.0030Options0.0029
 Text.Whitespace
=Operator
 Text.Whitespace
newOperator.Wordany0.6524string0.0991number0.0203complex0.0078Error0.0048
 Text.Whitespace
TextWrapperName.Otherany0.9401number0.0271string0.0129complex0.0079boolean0.0042
(Punctuation
ObjectName.BuiltinObjectConstructor0.9994any0.0002Object0.0001complex0.0000number0.0000
.Punctuation
assignName.Othercomplex0.6864any0.1134number0.0385void0.0303boolean0.0226
(Punctuation
{Punctuation
 Text.Whitespace
widthName.Otherany0.5296number0.4366string0.0171complex0.0117any[]0.0008
 Text.Whitespace
}Punctuation
,Punctuation
 Text.Whitespace
kwargsName.Otherany0.8580complex0.0574any[]0.0572string[]0.0054{}0.0043
)Punctuation
)Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
wName.Otherany0.8915number0.0019any[]0.0018this0.0016void0.0014
.Punctuation
fillName.Otherany0.8407any[]0.0588void0.0198complex0.0081string0.0046
(Punctuation
textName.Otherany0.5568string0.4349number0.0020complex0.0018any[]0.0014
)Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
Text
// -- Loosely related functionality -------------------------------------Comment.Single
\n\nText.Whitespace
letKeyword.Declaration
 Text.Whitespace
_whitespace_only_reName.OtherRegExp0.5221string0.4242any0.0407string[]0.0047number0.0020
 Text.Whitespace
=Operator
 Text.Whitespace
/^[ \t]+$/mgLiteral.String.Regex
\nText.Whitespace
letKeyword.Declaration
 Text.Whitespace
_leading_whitespace_reName.Otherstring0.7828RegExp0.1478any0.0495string[]0.0084number0.0034
 Text.Whitespace
=Operator
 Text.Whitespace
/(^[ \t]*)(?:[^ \t\n])/mgLiteral.String.Regex
\n\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
dedentName.Otherany0.5059string0.3565any[]0.0289boolean0.0197number0.0110
(Punctuation
textName.Otherstring0.7475any0.2485number0.0020complex0.0005string[]0.0003
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
/*\n     *  Remove any common leading whitespace from every line in `text`.\n     *\n     *  This can be used to make triple-quoted strings line up with the left\n     *  edge of the display, while still presenting them in the source code\n     *  in indented form.\n     *\n     *  Note that tabs and spaces are both treated as whitespace, but they\n     *  are not equal: the lines "  hello" and "\\thello" are\n     *  considered to have no common leading whitespace.\n     *\n     *  Entirely blank lines are normalized to a newline character.\n     */Comment.Multiline
\n    Text.Whitespace
// Look for the longest leading string of spaces and tabs common toComment.Single
\n    Text.Whitespace
// all lines.Comment.Single
\n    Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
marginName.Otherany0.8396string0.0534any[]0.0233number0.0206complex0.0152
 Text.Whitespace
=Operator
 Text.Whitespace
undefinedKeyword.Constant
\n    Text.Whitespace
textName.Otherany0.7788string0.2166number0.0025complex0.0007any[]0.0005
 Text.Whitespace
=Operator
 Text.Whitespace
textName.Otherany0.6394string0.3584number0.0011complex0.0003string[]0.0001
.Punctuation
replaceName.Othercomplex0.7332any0.2580string0.0034boolean0.0018number0.0011
(Punctuation
_whitespace_only_reName.OtherRegExp0.6621any0.1624string0.1027boolean0.0138string[]0.0137
,Punctuation
 Text.Whitespace
''Literal.String.Single
)Punctuation
\n    Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
indentsName.Otherany0.7182string0.1006RegExpMatchArray0.0627string[]0.0292boolean0.0287
 Text.Whitespace
=Operator
 Text.Whitespace
textName.Otherany0.6631string0.3341number0.0009complex0.0006RegExp0.0002
.Punctuation
matchName.Otherany0.5343complex0.4526string0.0030any[]0.0021boolean0.0018
(Punctuation
_leading_whitespace_reName.Otherstring0.3788any0.2347RegExp0.1984RegExpMatchArray0.0474string[]0.0348
)Punctuation
 Text.Whitespace
||Operator
 Text.Whitespace
[Punctuation
]Punctuation
\n    Text.Whitespace
forKeyword
 Text.Whitespace
(Punctuation
letKeyword.Declaration
 Text.Whitespace
indentName.Otherstring0.4716number0.2719any0.2476complex0.0039number[]0.0007
 Text.Whitespace
ofKeyword
 Text.Whitespace
indentsName.Otherany0.3899number0.1381string[]0.1209any[]0.0959string0.0811
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
indentName.Otherstring0.6206any0.1998number0.1717complex0.0025any[]0.0013
 Text.Whitespace
=Operator
 Text.Whitespace
indentName.Otherstring0.8614any0.0932number0.0355string[]0.0039any[]0.0015
.Punctuation
sliceName.Otherstring0.7344any0.1856string[]0.0240number0.0230any[]0.0100
(Punctuation
0Literal.Number.Float
,Punctuation
 Text.Whitespace
-Operator
1Literal.Number.Float
)Punctuation
\n\n        Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
marginName.Otherany0.7234number0.1647string0.0773complex0.0146any[]0.0045
 Text.Whitespace
===Operator
 Text.Whitespace
undefinedKeyword.Constant
)Punctuation
 Text.Whitespace
{Punctuation
\n            Text.Whitespace
marginName.Otherany0.6362string0.2561number0.0604complex0.0108number[]0.0081
 Text.Whitespace
=Operator
 Text.Whitespace
indentName.Otherstring0.4495number0.3686any0.1750complex0.0020number[]0.0010
\n\n        Text.Whitespace
// Current line more deeply indented than previous winner:Comment.Single
\n        Text.Whitespace
// no change (previous winner is still on top).Comment.Single
\n        Text.Whitespace
}Punctuation
 Text.Whitespace
elseKeyword
 Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
indentName.Otherstring0.6977any0.2640number0.0327boolean0.0019complex0.0009
.Punctuation
startsWithName.Otherboolean0.8851any0.0940number0.0083string0.0073complex0.0032
(Punctuation
marginName.Otherany0.6488number0.1737string0.1534complex0.0084any[]0.0031
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n            Text.Whitespace
// passComment.Single
\n\n        Text.Whitespace
// Current line consistent with and no deeper than previous winner:Comment.Single
\n        Text.Whitespace
// it's the new winner.Comment.Single
\n        Text.Whitespace
}Punctuation
 Text.Whitespace
elseKeyword
 Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
marginName.Otherany0.7341string0.1906number0.0287complex0.0148any[]0.0049
.Punctuation
startsWithName.Otherboolean0.6768any0.2848number0.0166string0.0114complex0.0077
(Punctuation
indentName.Otherstring0.4879any0.2890number0.2155complex0.0036boolean0.0011
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n            Text.Whitespace
marginName.Otherany0.6232string0.2271number0.1059complex0.0099number[]0.0073
 Text.Whitespace
=Operator
 Text.Whitespace
indentName.Othernumber0.5145string0.3432any0.1356complex0.0022number[]0.0009
\n\n        Text.Whitespace
// Find the largest common whitespace between current line and previousComment.Single
\n        Text.Whitespace
// winner.Comment.Single
\n        Text.Whitespace
}Punctuation
 Text.Whitespace
elseKeyword
 Text.Whitespace
{Punctuation
\n            Text.Whitespace
forKeyword
 Text.Whitespace
(Punctuation
letKeyword.Declaration
 Text.Whitespace
iName.Othernumber0.9897any0.0093string0.0006boolean0.0001complex0.0000
 Text.Whitespace
=Operator
 Text.Whitespace
0Literal.Number.Float
;Punctuation
 Text.Whitespace
iName.Othernumber0.9807any0.0183string0.0006boolean0.0002void0.0001
 Text.Whitespace
<Operator
 Text.Whitespace
marginName.Otherany0.3708any[]0.1125number[]0.1087string[]0.0637string0.0424
.Punctuation
lengthName.Othernumber0.8797any0.1175string0.0017complex0.0003boolean0.0003
 Text.Whitespace
&&Operator
 Text.Whitespace
iName.Othernumber0.9545any0.0436string0.0012boolean0.0004void0.0001
 Text.Whitespace
<Operator
 Text.Whitespace
indentName.Otherstring0.5500any0.3317number0.0909string[]0.0094any[]0.0072
.Punctuation
lengthName.Othernumber0.9232any0.0748string0.0012boolean0.0002complex0.0002
;Punctuation
 Text.Whitespace
iName.Othernumber0.9617any0.0370string0.0008boolean0.0002void0.0001
++Operator
)Punctuation
 Text.Whitespace
{Punctuation
\n                Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
marginName.Otherany0.6067number[]0.0828complex0.0767any[]0.0593string[]0.0401
[Punctuation
iName.Othernumber0.9734any0.0234string0.0027boolean0.0003void0.0001
]Punctuation
 Text.Whitespace
!==Operator
 Text.Whitespace
indentName.Otherstring0.3884any0.3259number0.1930string[]0.0297any[]0.0215
[Punctuation
iName.Othernumber0.9709any0.0250string0.0036boolean0.0002void0.0001
]Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n                    Text.Whitespace
marginName.Otherany0.6776string0.0971number0.0701any[]0.0440number[]0.0396
 Text.Whitespace
=Operator
 Text.Whitespace
marginName.Otherany0.6105string0.1207number[]0.0533any[]0.0525number0.0401
.Punctuation
sliceName.Otherany0.4451string0.3056any[]0.0644string[]0.0447number[]0.0425
(Punctuation
0Literal.Number.Float
,Punctuation
 Text.Whitespace
iName.Othernumber0.9531any0.0442string0.0021boolean0.0003void0.0001
)Punctuation
\n                    Text.Whitespace
breakKeyword
\n                Text.Whitespace
}Punctuation
\n            Text.Whitespace
}Punctuation
\n        Text.Whitespace
}Punctuation
\n    Text.Whitespace
}Punctuation
\n\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
marginName.Otherany0.5987number0.1875string0.1451complex0.0181any[]0.0128
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
textName.Otherany0.5725string0.4238number0.0024complex0.0004boolean0.0003
 Text.Whitespace
=Operator
 Text.Whitespace
textName.Otherany0.5837string0.4139number0.0013complex0.0002boolean0.0001
.Punctuation
replaceName.Othercomplex0.6966any0.2924string0.0035boolean0.0021number0.0016
(Punctuation
newOperator.Wordany0.4116string0.2829RegExp0.2212boolean0.0206complex0.0058
 Text.Whitespace
RegExpName.BuiltinRegExpConstructor0.9968RegExp0.0005any0.0002BooleanConstructor0.0000ErrorConstructor0.0000
(Punctuation
'^'Literal.String.Single
 Text.Whitespace
+Operator
 Text.Whitespace
marginName.Othernumber0.3779any0.3100string0.2383any[]0.0136complex0.0121
,Punctuation
 Text.Whitespace
'mg'Literal.String.Single
)Punctuation
,Punctuation
 Text.Whitespace
''Literal.String.Single
)Punctuation
\n    Text.Whitespace
}Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
textName.Otherstring0.5668any0.4227number0.0023any[]0.0019complex0.0012
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
exportKeyword
 Text.Whitespace
defaultKeyword
 Text.Whitespace
{Punctuation
 Text.Whitespace
wrapName.Otherany0.5885string0.2529void0.0465any[]0.0282boolean0.0275
,Punctuation
 Text.Whitespace
fillName.Otherany0.6740any[]0.1766string0.0376void0.0139complex0.0088
,Punctuation
 Text.Whitespace
dedentName.Otherany0.9212string0.0378boolean0.0270number0.0060any[]0.0026
 Text.Whitespace
}Punctuation
;Punctuation
\nText.Whitespace
