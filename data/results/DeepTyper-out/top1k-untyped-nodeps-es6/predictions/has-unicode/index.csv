"use strict"Literal.String.Double
\nText.Whitespace
importKeyword
 Text.Whitespace
osName.Otherany0.9885complex0.0047string0.0043number0.0002void0.0002
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'os'Literal.String.Single
;Punctuation
\n\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
hasUnicodeName.Otherboolean0.7690any0.1090string0.1036complex0.0066number0.0019
 Text.Whitespace
=Operator
 Text.Whitespace
functionKeyword.Declaration
 Text.Whitespace
(Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
// Recent Win32 platforms (>XP) CAN support unicode in the console butComment.Single
\n  Text.Whitespace
// don't have to, and in non-english locales often use traditional localComment.Single
\n  Text.Whitespace
// code pages. There's no way, short of windows system calls or execingComment.Single
\n  Text.Whitespace
// the chcp command line program to figure this out. As such, we defaultComment.Single
\n  Text.Whitespace
// this to false and encourage your users to override it via config ifComment.Single
\n  Text.Whitespace
// appropriate.Comment.Single
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
osName.Otherany0.9871complex0.0061string0.0017{}0.0002boolean0.0002
.Punctuation
typeKeyword.Reserved
(Punctuation
)Punctuation
 Text.Whitespace
==Operator
 Text.Whitespace
"Windows_NT"Literal.String.Double
)Punctuation
 Text.Whitespace
{Punctuation
 Text.Whitespace
returnKeyword
 Text.Whitespace
falseKeyword.Constant
 Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
varKeyword.Declaration
 Text.Whitespace
isUTF8Name.Otherstring0.7201any0.1103RegExp0.1096boolean0.0457string[]0.0024
 Text.Whitespace
=Operator
 Text.Whitespace
/UTF-?8$/iLiteral.String.Regex
\n  Text.Whitespace
varKeyword.Declaration
 Text.Whitespace
ctypeName.Otherany0.5153string0.2370boolean0.2325complex0.0040number0.0035
 Text.Whitespace
=Operator
 Text.Whitespace
processName.Otherany0.9888complex0.0052string0.0013Process0.0008boolean0.0005
.Punctuation
envName.Otherany0.9918complex0.0066string0.0006boolean0.0004void0.0001
.Punctuation
LC_ALLName.Otherany0.9616string0.0246boolean0.0102complex0.0012number0.0006
 Text.Whitespace
||Operator
 Text.Whitespace
processName.Otherany0.9821complex0.0047Process0.0034string0.0015boolean0.0006
.Punctuation
envName.Otherany0.9922complex0.0061string0.0005boolean0.0005void0.0001
.Punctuation
LC_CTYPEName.Otherany0.9327string0.0326boolean0.0299complex0.0012number0.0012
 Text.Whitespace
||Operator
 Text.Whitespace
processName.Otherany0.9865complex0.0043Process0.0024string0.0011boolean0.0005
.Punctuation
envName.Otherany0.9910complex0.0067boolean0.0008string0.0006void0.0002
.Punctuation
LANGName.Otherany0.9467boolean0.0250string0.0237complex0.0013void0.0011
\n  Text.Whitespace
returnKeyword
 Text.Whitespace
isUTF8Name.OtherRegExp0.8181any0.1310string0.0207boolean0.0059complex0.0025
.Punctuation
testName.Otherboolean0.9599any0.0222complex0.0089string0.0037void0.0018
(Punctuation
ctypeName.Otherany0.7157string0.2560boolean0.0174number0.0038void0.0012
)Punctuation
\nText.Whitespace
}Punctuation
\nText.Whitespace
exportKeyword
 Text.Whitespace
defaultKeyword
 Text.Whitespace
hasUnicodeName.Otherany0.7777string0.1243void0.0280boolean0.0274number0.0202
;Punctuation
\nText.Whitespace
