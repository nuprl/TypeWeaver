implementation.ts(14,15): error TS2314: Generic type 'Array<T>' requires 1 type argument(s).
implementation.ts(23,9): error TS2314: Generic type 'Array<T>' requires 1 type argument(s).
implementation.ts(28,55): error TS2365: Operator '+' cannot be applied to types 'Number' and 'Number'.
implementation.ts(33,3): error TS2365: Operator '+=' cannot be applied to types 'Number' and 'number'.
index.ts(16,52): error TS2314: Generic type 'Array<T>' requires 1 type argument(s).
index.ts(16,84): error TS2314: Generic type 'Promise<T>' requires 1 type argument(s).
polyfill.ts(10,3): error TS2322: Type '(searchElement: any, fromIndex?: number | undefined) => boolean' is not assignable to type 'Number'.
polyfill.ts(12,2): error TS2739: Type 'String' is missing the following properties from type 'Number': toFixed, toExponential, toPrecision
shim.ts(11,36): error TS2367: This condition will always return 'true' since the types '(searchElement: any, fromIndex?: number | undefined) => boolean' and 'Boolean' have no overlap.
../../../../node_modules/@types/get-intrinsic/internal/intrinsics.d.ts(11,25): error TS2304: Cannot find name 'AggregateErrorConstructor'.
../../../../node_modules/@types/get-intrinsic/internal/intrinsics.d.ts(126,42): error TS2304: Cannot find name 'AggregateError'.
../../../../node_modules/@types/get-intrinsic/internal/intrinsics.d.ts(127,47): error TS2304: Cannot find name 'AggregateError'.
../../../../node_modules/@types/get-intrinsic/internal/intrinsics.d.ts(128,50): error TS2304: Cannot find name 'AggregateError'.
../../../../node_modules/@types/get-intrinsic/internal/intrinsics.d.ts(418,37): error TS2550: Property 'any' does not exist on type 'PromiseConstructor'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2021' or later.
../../../../node_modules/@types/get-intrinsic/internal/intrinsics.d.ts(514,62): error TS2550: Property 'replaceAll' does not exist on type 'String'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2021' or later.

