Text
/*!\n * is-primitive <https://github.com/jonschlinkert/is-primitive>\n *\n * Copyright (c) 2014-present, Jon Schlinkert.\n * Released under the MIT License.\n */Comment.Multiline
\n\nText.Whitespace
'use strict'Literal.String.Single
;Punctuation
\n\nText.Whitespace
moduleKeyword.Reserved
.exportsName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
functionKeyword.Declaration
 Text.Whitespace
isPrimitiveName.Otherboolean0.7697any0.1358complex0.0672string0.0054number0.0030
(Punctuation
valName.Otherany0.9035string0.0369boolean0.0349number0.0092complex0.0044
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
typeofOperator.Word
 Text.Whitespace
valName.Otherany0.9317complex0.0301boolean0.0145string0.0089number0.0075
 Text.Whitespace
===Operator
 Text.Whitespace
'object'Literal.String.Single
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
valName.Otherany0.8019string0.0937boolean0.0542number0.0398complex0.0044
 Text.Whitespace
===Operator
 Text.Whitespace
nullKeyword.Constant
;Punctuation
\n  Text.Whitespace
}Punctuation
\n  Text.Whitespace
returnKeyword
 Text.Whitespace
typeofOperator.Word
 Text.Whitespace
valName.Otherany0.9011complex0.0253boolean0.0234string0.0204number0.0201
 Text.Whitespace
!==Operator
 Text.Whitespace
'function'Literal.String.Single
;Punctuation
\nText.Whitespace
}Punctuation
;Punctuation
\nText.Whitespace
