declare const SUPPRESS: string;
declare const OPTIONAL: string;
declare const ZERO_OR_MORE: string;
declare const ONE_OR_MORE: string;
declare const PARSER: string;
declare const REMAINDER: string;
declare const _UNRECOGNIZED_ARGS_ATTR: string;
declare const assert: string;
declare const util: string;
declare const fs: string;
declare const sub: object;
declare const path: string;
declare const repr: any[];
declare function get_argv(): any[];
declare function get_terminal_size(): object;
declare function hasattr(object: object, name: string): string;
declare function getattr(object: object, name: string, value: string): string;
declare function setattr(object: object, name: string, value: string): TextWrapper;
declare function setdefault(object: object, name: string, value: string): TextWrapper;
declare function delattr(object: object, name: string): void;
declare function range(from: string, to: number, step?: number): any[];
declare function splitlines(str: string, keepends?: boolean): any[];
declare function _string_lstrip(string: any[], prefix_chars: string): string;
declare function _string_split(string: string, sep: string, maxsplit: number): any[];
declare function _array_equal(array1: any[], array2: any[]): boolean;
declare function _array_remove(array: any[], item: string): void;
declare function _choices_to_array(choices: object): any[];
declare function _callable(cls: object): string;
declare function _alias(object: object, from: string, to: string): void;
declare function _camelcase_alias(_class: object): TextWrapper;
declare function _to_legacy_name(key: string): string;
declare function _to_new_name(key: string): string;
declare let no_default: number;
declare function _parse_opts(args: any[], descriptor: object): any[];
declare let _deprecations: object;
declare function deprecate(id: string, string: string): void;
declare function _AttributeHolder(cls?: string): object;
declare function _copy_items(items: string): any[];
declare const HelpFormatter: object;
declare const RawDescriptionHelpFormatter: boolean;
declare const RawTextHelpFormatter: string;
declare const ArgumentDefaultsHelpFormatter: number;
declare const MetavarTypeHelpFormatter: boolean;
declare function _get_action_name(argument: TextWrapper): Promise;
declare const ArgumentError: number;
declare const ArgumentTypeError: string;
declare const Action: string;
declare const BooleanOptionalAction: number;
declare const _StoreAction: Function;
declare const _StoreConstAction: Function;
declare const _StoreTrueAction: Function;
declare const _StoreFalseAction: Function;
declare const _AppendAction: Function;
declare const _AppendConstAction: Function;
declare const _CountAction: Function;
declare const _HelpAction: Function;
declare const _VersionAction: Function;
declare const _SubParsersAction: object;
declare const _ExtendAction: Function;
declare const FileType: string;
declare const Namespace: object;
declare const _ActionsContainer: Function;
declare const _ArgumentGroup: Function;
declare const _MutuallyExclusiveGroup: Function;
declare const ArgumentParser: number;
