name: Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 16.x
      - id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-
      - run: yarn --frozen-lockfile
      - uses: actions/cache@v1
        with:
          path: .eslintcache
          key: lint-${{ env.GITHUB_SHA }}
          restore-keys: lint-
      - run: yarn lint
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [10.x, 12.x, 14.x, 16.x, 17.x]
        polling: ["false", "200"]
        exclude:
          - os: macos-latest
            node-version: 10.x
            polling: "200"
          - os: macos-latest
            node-version: 12.x
            polling: "200"
          - os: macos-latest
            node-version: 14.x
            polling: "200"
          - os: macos-latest
            node-version: 16.x
            polling: "200"
          - os: macos-latest
            node-version: 17.x
            polling: "200"
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-
      - run: yarn --frozen-lockfile
      - run: yarn cover --report lcovonly
        env:
          WATCHPACK_POLLING: ${{ matrix.polling }}
      - uses: codecov/codecov-action@v1
        with:
          flags: integration
          functionalities: gcov
