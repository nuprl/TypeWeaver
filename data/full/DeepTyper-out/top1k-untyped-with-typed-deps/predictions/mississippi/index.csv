moduleKeyword.Reserved
.exports.pipeName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
requireName.Other
(Punctuation
'pump'Literal.String.Single
)Punctuation
\nText.Whitespace
moduleKeyword.Reserved
.exports.eachName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
requireName.Other
(Punctuation
'stream-each'Literal.String.Single
)Punctuation
\nText.Whitespace
moduleKeyword.Reserved
.exports.pipelineName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
requireName.Other
(Punctuation
'pumpify'Literal.String.Single
)Punctuation
\nText.Whitespace
moduleKeyword.Reserved
.exports.duplexName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
requireName.Other
(Punctuation
'duplexify'Literal.String.Single
)Punctuation
\nText.Whitespace
moduleKeyword.Reserved
.exports.throughName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
requireName.Other
(Punctuation
'through2'Literal.String.Single
)Punctuation
\nText.Whitespace
moduleKeyword.Reserved
.exports.concatName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
requireName.Other
(Punctuation
'concat-stream'Literal.String.Single
)Punctuation
\nText.Whitespace
moduleKeyword.Reserved
.exports.finishedName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
requireName.Other
(Punctuation
'end-of-stream'Literal.String.Single
)Punctuation
\nText.Whitespace
moduleKeyword.Reserved
.exports.fromName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
requireName.Other
(Punctuation
'from2'Literal.String.Single
)Punctuation
\nText.Whitespace
moduleKeyword.Reserved
.exports.toName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
requireName.Other
(Punctuation
'flush-write-stream'Literal.String.Single
)Punctuation
\nText.Whitespace
moduleKeyword.Reserved
.exports.parallelName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
requireName.Other
(Punctuation
'parallel-transform'Literal.String.Single
)Punctuation
\nText.Whitespace
