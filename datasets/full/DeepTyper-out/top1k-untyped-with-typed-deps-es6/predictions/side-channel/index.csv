'use strict'Literal.String.Single
;Punctuation
\n\nText.Whitespace
importKeyword
 Text.Whitespace
GetIntrinsicName.Othervoid0.2968any0.1933boolean0.1243complex0.0734string0.0460
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'get-intrinsic'Literal.String.Single
;Punctuation
\nText.Whitespace
importKeyword
 Text.Whitespace
callBoundName.Othervoid0.2675any0.1921boolean0.1544complex0.0699string0.0498
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'call-bind/callBound'Literal.String.Single
;Punctuation
\nText.Whitespace
importKeyword
 Text.Whitespace
inspectName.Othercomplex0.3892any0.3516string0.2062void0.0218Promise<string>0.0034
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'object-inspect'Literal.String.Single
;Punctuation
\n\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
$TypeErrorName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
GetIntrinsicName.Otherany0.4346string0.2378boolean0.0756complex0.0598string[]0.0124
(Punctuation
'%TypeError%'Literal.String.Single
)Punctuation
;Punctuation
\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
$WeakMapName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
GetIntrinsicName.Otherany0.5317string0.0910complex0.0809boolean0.0733void0.0179
(Punctuation
'%WeakMap%'Literal.String.Single
,Punctuation
 Text.Whitespace
trueKeyword.Constant
)Punctuation
;Punctuation
\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
$MapName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
GetIntrinsicName.Otherany0.5836boolean0.0979complex0.0776string0.0672void0.0151
(Punctuation
'%Map%'Literal.String.Single
,Punctuation
 Text.Whitespace
trueKeyword.Constant
)Punctuation
;Punctuation
\n\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
$weakMapGetName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
callBoundName.Otherany0.5847boolean0.1041complex0.0761string0.0606void0.0169
(Punctuation
'WeakMap.prototype.get'Literal.String.Single
,Punctuation
 Text.Whitespace
trueKeyword.Constant
)Punctuation
;Punctuation
\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
$weakMapSetName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
callBoundName.Otherany0.5874boolean0.1058complex0.0736string0.0577void0.0181
(Punctuation
'WeakMap.prototype.set'Literal.String.Single
,Punctuation
 Text.Whitespace
trueKeyword.Constant
)Punctuation
;Punctuation
\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
$weakMapHasName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
callBoundName.Otherany0.5919boolean0.1037complex0.0711string0.0563void0.0189
(Punctuation
'WeakMap.prototype.has'Literal.String.Single
,Punctuation
 Text.Whitespace
trueKeyword.Constant
)Punctuation
;Punctuation
\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
$mapGetName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
callBoundName.Otherany0.5977boolean0.0983complex0.0686string0.0556void0.0198
(Punctuation
'Map.prototype.get'Literal.String.Single
,Punctuation
 Text.Whitespace
trueKeyword.Constant
)Punctuation
;Punctuation
\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
$mapSetName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
callBoundName.Otherany0.6044boolean0.0893complex0.0661string0.0542void0.0214
(Punctuation
'Map.prototype.set'Literal.String.Single
,Punctuation
 Text.Whitespace
trueKeyword.Constant
)Punctuation
;Punctuation
\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
$mapHasName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
callBoundName.Otherany0.5978boolean0.0776complex0.0608string0.0483void0.0281
(Punctuation
'Map.prototype.has'Literal.String.Single
,Punctuation
 Text.Whitespace
trueKeyword.Constant
)Punctuation
;Punctuation
\n\nText.Whitespace
/*\n* This function traverses the list returning the node corresponding to the given key.\n*\n* That node is also moved to the head of the list, so that if it's accessed again we don't need to traverse the whole list. By doing so, all the recently used nodes can be accessed relatively quickly.\n*/Comment.Multiline
\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
listGetNodeName.Otherany0.3228void0.2966boolean0.2585Function0.0367string0.0209
 Text.Whitespace
=Operator
 Text.Whitespace
functionKeyword.Declaration
 Text.Whitespace
(Punctuation
listName.Otherany0.7689Function0.0073List0.0059string0.0059void0.0047
,Punctuation
 Text.Whitespace
keyName.Otherany0.6416string0.3385complex0.0041number0.0028boolean0.0013
)Punctuation
 Text.Whitespace
{Punctuation
 Text.Whitespace
// eslint-disable-line consistent-returnComment.Single
\n\tText.Whitespace
forKeyword
 Text.Whitespace
(Punctuation
varKeyword.Declaration
 Text.Whitespace
prevName.Otherany0.8192string0.0281boolean0.0094Function0.0087number0.0038
 Text.Whitespace
=Operator
 Text.Whitespace
listName.Otherany0.8510complex0.0072string0.0049any[]0.0046Function0.0042
,Punctuation
 Text.Whitespace
currName.Otherany0.8633string0.0339void0.0148number0.0132boolean0.0105
;Punctuation
 Text.Whitespace
(Punctuation
currName.Otherany0.8507string0.0196Function0.0143T0.0069complex0.0067
 Text.Whitespace
=Operator
 Text.Whitespace
prevName.Otherany0.8961string0.0095Function0.0074complex0.0038Node0.0028
.Punctuation
nextName.Otherany0.8711string0.0455Function0.0297number0.0106void0.0056
)Punctuation
 Text.Whitespace
!==Operator
 Text.Whitespace
nullKeyword.Constant
;Punctuation
 Text.Whitespace
prevName.Otherany0.8128string0.0208Function0.0127boolean0.0126void0.0073
 Text.Whitespace
=Operator
 Text.Whitespace
currName.Otherany0.7607string0.0288Function0.0114Node0.0057boolean0.0056
)Punctuation
 Text.Whitespace
{Punctuation
\n\t\tText.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
currName.Otherany0.5125T0.0247Node0.0196complex0.0155never0.0122
.Punctuation
keyName.Otherany0.7802string0.2070complex0.0050number0.0025boolean0.0009
 Text.Whitespace
===Operator
 Text.Whitespace
keyName.Otherany0.6101string0.3688complex0.0065number0.0058void0.0011
)Punctuation
 Text.Whitespace
{Punctuation
\n\t\t\tText.Whitespace
prevName.Otherany0.8903Function0.0092string0.0046complex0.0038Node0.0032
.Punctuation
nextName.Otherany0.8414Function0.0369string0.0324void0.0225number0.0097
 Text.Whitespace
=Operator
 Text.Whitespace
currName.Otherany0.7561Function0.0206T0.0158complex0.0140string0.0085
.Punctuation
nextName.Otherany0.8097string0.0404Function0.0269void0.0232number0.0154
;Punctuation
\n\t\t\tText.Whitespace
currName.Otherany0.4944T0.0326Function0.0263complex0.0191never0.0144
.Punctuation
nextName.Otherany0.7095string0.0574Function0.0445void0.0443complex0.0228
 Text.Whitespace
=Operator
 Text.Whitespace
listName.Otherany0.7965complex0.0285void0.0074Function0.0050T0.0027
.Punctuation
nextName.Otherany0.7904void0.0556Function0.0236string0.0230number0.0162
;Punctuation
\n\t\t\tText.Whitespace
listName.Otherany0.7458complex0.0162void0.0083number0.0050Function0.0045
.Punctuation
nextName.Otherany0.7804void0.0633number0.0410Function0.0249string0.0236
 Text.Whitespace
=Operator
 Text.Whitespace
currName.Otherany0.6731number0.0380void0.0294string0.0279Function0.0226
;Punctuation
 Text.Whitespace
// eslint-disable-line no-param-reassignComment.Single
\n\t\t\tText.Whitespace
returnKeyword
 Text.Whitespace
currName.Otherany0.7373string0.0488{}0.0370number0.0189boolean0.0119
;Punctuation
\n\t\tText.Whitespace
}Punctuation
\n\tText.Whitespace
}Punctuation
\nText.Whitespace
}Punctuation
;Punctuation
\n\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
listGetName.Otherboolean0.5959any0.2624void0.0400string0.0236Function0.0090
 Text.Whitespace
=Operator
 Text.Whitespace
functionKeyword.Declaration
 Text.Whitespace
(Punctuation
objectsName.Otherany0.8293string0.0159any[]0.0096complex0.0056number0.0033
,Punctuation
 Text.Whitespace
keyName.Otherany0.7609string0.2245number0.0028complex0.0025boolean0.0005
)Punctuation
 Text.Whitespace
{Punctuation
\n\tText.Whitespace
varKeyword.Declaration
 Text.Whitespace
nodeName.Otherany0.7689Node0.0113complex0.0099string0.0068boolean0.0058
 Text.Whitespace
=Operator
 Text.Whitespace
listGetNodeName.Otherany0.8462complex0.0304string0.0193boolean0.0189number0.0096
(Punctuation
objectsName.Otherany0.7918any[]0.0262string0.0205complex0.0088number0.0082
,Punctuation
 Text.Whitespace
keyName.Otherany0.7929string0.1917complex0.0038number0.0031any[]0.0006
)Punctuation
;Punctuation
\n\tText.Whitespace
returnKeyword
 Text.Whitespace
nodeName.Otherany0.9191Node0.0080boolean0.0029string0.0029complex0.0024
 Text.Whitespace
&&Operator
 Text.Whitespace
nodeName.Otherany0.9547Node0.0037complex0.0026boolean0.0016string0.0013
.Punctuation
valueName.Otherany0.9229string0.0505boolean0.0133number0.0032Object0.0011
;Punctuation
\nText.Whitespace
}Punctuation
;Punctuation
\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
listSetName.Othervoid0.5170any0.3248boolean0.0952string0.0144Function0.0092
 Text.Whitespace
=Operator
 Text.Whitespace
functionKeyword.Declaration
 Text.Whitespace
(Punctuation
objectsName.Otherany0.8805string0.0210any[]0.0080number0.0075complex0.0060
,Punctuation
 Text.Whitespace
keyName.Otherany0.7459string0.2436number0.0027complex0.0017void0.0008
,Punctuation
 Text.Whitespace
valueName.Otherany0.8568string0.1163number0.0091boolean0.0069void0.0009
)Punctuation
 Text.Whitespace
{Punctuation
\n\tText.Whitespace
varKeyword.Declaration
 Text.Whitespace
nodeName.Otherany0.7796complex0.0125string0.0117Node0.0074Object0.0054
 Text.Whitespace
=Operator
 Text.Whitespace
listGetNodeName.Otherany0.8231complex0.0377string0.0318void0.0170number0.0155
(Punctuation
objectsName.Otherany0.8302string0.0243any[]0.0242number0.0154complex0.0100
,Punctuation
 Text.Whitespace
keyName.Otherany0.7316string0.2552number0.0039complex0.0033any[]0.0006
)Punctuation
;Punctuation
\n\tText.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
nodeName.Otherany0.8248Node0.0174never0.0078boolean0.0064string0.0062
)Punctuation
 Text.Whitespace
{Punctuation
\n\t\tText.Whitespace
nodeName.Otherany0.8530Node0.0090complex0.0064never0.0052string0.0031
.Punctuation
valueName.Otherany0.8997string0.0714number0.0082boolean0.0058complex0.0019
 Text.Whitespace
=Operator
 Text.Whitespace
valueName.Otherany0.8265string0.1253number0.0193boolean0.0109complex0.0031
;Punctuation
\n\tText.Whitespace
}Punctuation
 Text.Whitespace
elseKeyword
 Text.Whitespace
{Punctuation
\n\t\tText.Whitespace
// Prepend the new node to the beginning of the listComment.Single
\n\t\tText.Whitespace
objectsName.Otherany0.8029complex0.0746any[]0.0045number0.0023void0.0019
.Punctuation
nextName.Otherany0.8161complex0.0807number0.0121void0.0100string0.0090
 Text.Whitespace
=Operator
 Text.Whitespace
{Punctuation
 Text.Whitespace
// eslint-disable-line no-param-reassignComment.Single
\n\t\t\tText.Whitespace
keyName.Otherany0.5544string0.4256complex0.0084number0.0040void0.0020
:Operator
 Text.Whitespace
keyKeyword.Typeany0.6646string0.3227number0.0044complex0.0036void0.0010
,Punctuation
\n\t\t\tText.Whitespace
nextName.Otherany0.8003string0.0639number0.0598boolean0.0129Function0.0121
:Operator
 Text.Whitespace
objects.nextKeyword.Type
,Punctuation
\n\t\t\tText.Whitespace
valueName.Otherany0.8569string0.0701boolean0.0203number0.0143{}0.0072
:Operator
 Text.Whitespace
valueKeyword.Typeany0.8845string0.0625boolean0.0128number0.0120{}0.0058
\n\t\tText.Whitespace
}Punctuation
;Punctuation
\n\tText.Whitespace
}Punctuation
\nText.Whitespace
}Punctuation
;Punctuation
\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
listHasName.Otherboolean0.9449any0.0333void0.0049string0.0040complex0.0014
 Text.Whitespace
=Operator
 Text.Whitespace
functionKeyword.Declaration
 Text.Whitespace
(Punctuation
objectsName.Otherany0.8437string0.0208any[]0.0143number0.0055boolean0.0045
,Punctuation
 Text.Whitespace
keyName.Otherany0.7507string0.2368number0.0038complex0.0018boolean0.0010
)Punctuation
 Text.Whitespace
{Punctuation
\n\tText.Whitespace
returnKeyword
 Text.Whitespace
!Operator
!Operator
listGetNodeName.Otherany0.6325boolean0.2910string0.0304void0.0104complex0.0101
(Punctuation
objectsName.Otherany0.8771any[]0.0250string0.0130complex0.0096number0.0062
,Punctuation
 Text.Whitespace
keyName.Otherany0.8313string0.1588complex0.0017number0.0016{}0.0013
)Punctuation
;Punctuation
\nText.Whitespace
}Punctuation
;Punctuation
\n\nText.Whitespace
exportKeyword
 Text.Whitespace
defaultKeyword
 Text.Whitespace
functionKeyword.Declaration
 Text.Whitespace
getSideChannelName.Othervoid0.4635any0.3192complex0.0461Function0.0279boolean0.0233
(Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n\tText.Whitespace
varKeyword.Declaration
 Text.Whitespace
$wmName.Other
;Punctuation
\n\tText.Whitespace
varKeyword.Declaration
 Text.Whitespace
$mName.Other
;Punctuation
\n\tText.Whitespace
varKeyword.Declaration
 Text.Whitespace
$oName.Other
;Punctuation
\n\tText.Whitespace
varKeyword.Declaration
 Text.Whitespace
channelName.Othercomplex0.2710any0.1227string0.0115Message0.0072{}0.0067
 Text.Whitespace
=Operator
 Text.Whitespace
{Punctuation
\n\t\tText.Whitespace
assertName.Othervoid0.7141any0.1139boolean0.0670string0.0405complex0.0151
:Operator
 Text.Whitespace
functionKeyword.Type
 Text.Whitespace
(Punctuation
keyName.Otherany0.6969string0.2858complex0.0073number0.0018never0.0007
)Punctuation
 Text.Whitespace
{Punctuation
\n\t\t\tText.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
channelName.Otherany0.7327complex0.0676{}0.0049string0.0033BooleanConstructor0.0014
.Punctuation
hasName.Otherboolean0.7476any0.2118string0.0233complex0.0073{}0.0022
(Punctuation
keyName.Otherany0.6471string0.3359complex0.0104number0.0021never0.0006
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n\t\t\t\tText.Whitespace
throwKeywordany0.9024string0.0486Error0.0215complex0.0100number0.0021
 Text.Whitespace
newOperator.Wordany0.8935string0.0801Error0.0062complex0.0049number0.0015
 Text.Whitespace
$TypeErrorName.Other
(Punctuation
'Side channel does not contain 'Literal.String.Single
 Text.Whitespace
+Operator
 Text.Whitespace
inspectName.Otherany0.7276string0.1572complex0.1066void0.0022boolean0.0009
(Punctuation
keyName.Otherany0.6045string0.3733complex0.0145number0.0012never0.0010
)Punctuation
)Punctuation
;Punctuation
\n\t\t\tText.Whitespace
}Punctuation
\n\t\tText.Whitespace
}Punctuation
,Punctuation
\n\t\tText.Whitespace
getName.Other
:Operator
 Text.Whitespace
functionKeyword.Type
 Text.Whitespace
(Punctuation
keyName.Otherany0.7028string0.2853complex0.0047number0.0011never0.0006
)Punctuation
 Text.Whitespace
{Punctuation
 Text.Whitespace
// eslint-disable-line consistent-returnComment.Single
\n\t\t\tText.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
$WeakMapName.Other
 Text.Whitespace
&&Operator
 Text.Whitespace
keyName.Otherany0.7321string0.2527complex0.0102boolean0.0014number0.0010
 Text.Whitespace
&&Operator
 Text.Whitespace
(Punctuation
typeofOperator.Word
 Text.Whitespace
keyName.Otherany0.8877string0.0964complex0.0119number0.0008boolean0.0004
 Text.Whitespace
===Operator
 Text.Whitespace
'object'Literal.String.Single
 Text.Whitespace
||Operator
 Text.Whitespace
typeofOperator.Word
 Text.Whitespace
keyName.Otherany0.7701string0.2037complex0.0214number0.0011boolean0.0005
 Text.Whitespace
===Operator
 Text.Whitespace
'function'Literal.String.Single
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n\t\t\t\tText.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
$wmName.Other
)Punctuation
 Text.Whitespace
{Punctuation
\n\t\t\t\t\tText.Whitespace
returnKeyword
 Text.Whitespace
$weakMapGetName.Other
(Punctuation
$wmName.Other
,Punctuation
 Text.Whitespace
keyName.Otherstring0.5303any0.4583complex0.0036number0.0023boolean0.0008
)Punctuation
;Punctuation
\n\t\t\t\tText.Whitespace
}Punctuation
\n\t\t\tText.Whitespace
}Punctuation
 Text.Whitespace
elseKeyword
 Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
$MapName.Other
)Punctuation
 Text.Whitespace
{Punctuation
\n\t\t\t\tText.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
$mName.Other
)Punctuation
 Text.Whitespace
{Punctuation
\n\t\t\t\t\tText.Whitespace
returnKeyword
 Text.Whitespace
$mapGetName.Other
(Punctuation
$mName.Other
,Punctuation
 Text.Whitespace
keyName.Otherany0.5853string0.4010complex0.0056number0.0019any[]0.0006
)Punctuation
;Punctuation
\n\t\t\t\tText.Whitespace
}Punctuation
\n\t\t\tText.Whitespace
}Punctuation
 Text.Whitespace
elseKeyword
 Text.Whitespace
{Punctuation
\n\t\t\t\tText.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
$oName.Other
)Punctuation
 Text.Whitespace
{Punctuation
 Text.Whitespace
// eslint-disable-line no-lonely-ifComment.Single
\n\t\t\t\t\tText.Whitespace
returnKeyword
 Text.Whitespace
listGetName.Otherany0.6217boolean0.1188string0.0828void0.0589complex0.0514
(Punctuation
$oName.Other
,Punctuation
 Text.Whitespace
keyName.Otherany0.6782string0.3048complex0.0078number0.0020void0.0009
)Punctuation
;Punctuation
\n\t\t\t\tText.Whitespace
}Punctuation
\n\t\t\tText.Whitespace
}Punctuation
\n\t\tText.Whitespace
}Punctuation
,Punctuation
\n\t\tText.Whitespace
hasName.Otherboolean0.8854any0.0747string0.0151void0.0082{}0.0033
:Operator
 Text.Whitespace
functionKeyword.Type
 Text.Whitespace
(Punctuation
keyName.Otherany0.6671string0.3190complex0.0060number0.0011never0.0006
)Punctuation
 Text.Whitespace
{Punctuation
\n\t\t\tText.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
$WeakMapName.Other
 Text.Whitespace
&&Operator
 Text.Whitespace
keyName.Otherany0.7332string0.2501complex0.0112boolean0.0016number0.0010
 Text.Whitespace
&&Operator
 Text.Whitespace
(Punctuation
typeofOperator.Word
 Text.Whitespace
keyName.Otherany0.8692string0.1117complex0.0143number0.0009boolean0.0006
 Text.Whitespace
===Operator
 Text.Whitespace
'object'Literal.String.Single
 Text.Whitespace
||Operator
 Text.Whitespace
typeofOperator.Word
 Text.Whitespace
keyName.Otherany0.7858string0.1848complex0.0242number0.0012boolean0.0006
 Text.Whitespace
===Operator
 Text.Whitespace
'function'Literal.String.Single
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n\t\t\t\tText.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
$wmName.Other
)Punctuation
 Text.Whitespace
{Punctuation
\n\t\t\t\t\tText.Whitespace
returnKeyword
 Text.Whitespace
$weakMapHasName.Other
(Punctuation
$wmName.Other
,Punctuation
 Text.Whitespace
keyName.Otherstring0.5329any0.4547complex0.0044number0.0023boolean0.0009
)Punctuation
;Punctuation
\n\t\t\t\tText.Whitespace
}Punctuation
\n\t\t\tText.Whitespace
}Punctuation
 Text.Whitespace
elseKeyword
 Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
$MapName.Other
)Punctuation
 Text.Whitespace
{Punctuation
\n\t\t\t\tText.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
$mName.Other
)Punctuation
 Text.Whitespace
{Punctuation
\n\t\t\t\t\tText.Whitespace
returnKeyword
 Text.Whitespace
$mapHasName.Other
(Punctuation
$mName.Other
,Punctuation
 Text.Whitespace
keyName.Otherany0.5681string0.4166complex0.0072number0.0018any[]0.0006
)Punctuation
;Punctuation
\n\t\t\t\tText.Whitespace
}Punctuation
\n\t\t\tText.Whitespace
}Punctuation
 Text.Whitespace
elseKeyword
 Text.Whitespace
{Punctuation
\n\t\t\t\tText.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
$oName.Other
)Punctuation
 Text.Whitespace
{Punctuation
 Text.Whitespace
// eslint-disable-line no-lonely-ifComment.Single
\n\t\t\t\t\tText.Whitespace
returnKeyword
 Text.Whitespace
listHasName.Otherany0.5676boolean0.1913void0.0652string0.0581complex0.0492
(Punctuation
$oName.Other
,Punctuation
 Text.Whitespace
keyName.Otherany0.6197string0.3630complex0.0090number0.0020void0.0010
)Punctuation
;Punctuation
\n\t\t\t\tText.Whitespace
}Punctuation
\n\t\t\tText.Whitespace
}Punctuation
\n\t\t\tText.Whitespace
returnKeyword
 Text.Whitespace
falseKeyword.Constant
;Punctuation
\n\t\tText.Whitespace
}Punctuation
,Punctuation
\n\t\tText.Whitespace
setName.Other
:Operator
 Text.Whitespace
functionKeyword.Type
 Text.Whitespace
(Punctuation
keyName.Otherany0.6530string0.3342complex0.0052any[]0.0008number0.0007
,Punctuation
 Text.Whitespace
valueName.Otherany0.8517string0.1278boolean0.0069complex0.0026number0.0025
)Punctuation
 Text.Whitespace
{Punctuation
\n\t\t\tText.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
$WeakMapName.Other
 Text.Whitespace
&&Operator
 Text.Whitespace
keyName.Otherany0.7825string0.1966complex0.0132boolean0.0030number0.0011
 Text.Whitespace
&&Operator
 Text.Whitespace
(Punctuation
typeofOperator.Word
 Text.Whitespace
keyName.Otherany0.8644string0.1127complex0.0170number0.0010boolean0.0009
 Text.Whitespace
===Operator
 Text.Whitespace
'object'Literal.String.Single
 Text.Whitespace
||Operator
 Text.Whitespace
typeofOperator.Word
 Text.Whitespace
keyName.Otherany0.8209string0.1455complex0.0270number0.0012boolean0.0008
 Text.Whitespace
===Operator
 Text.Whitespace
'function'Literal.String.Single
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n\t\t\t\tText.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
$wmName.Other
)Punctuation
 Text.Whitespace
{Punctuation
\n\t\t\t\t\tText.Whitespace
$wmName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
newOperator.Wordany0.9005string0.0427complex0.0154boolean0.0076void0.0046
 Text.Whitespace
$WeakMapName.Other
(Punctuation
)Punctuation
;Punctuation
\n\t\t\t\tText.Whitespace
}Punctuation
\n\t\t\t\tText.Whitespace
$weakMapSetName.Other
(Punctuation
$wmName.Other
,Punctuation
 Text.Whitespace
keyName.Otherstring0.6173any0.3674complex0.0069number0.0019void0.0010
,Punctuation
 Text.Whitespace
valueName.Otherany0.7251string0.2417number0.0080boolean0.0056complex0.0038
)Punctuation
;Punctuation
\n\t\t\tText.Whitespace
}Punctuation
 Text.Whitespace
elseKeyword
 Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
$MapName.Other
)Punctuation
 Text.Whitespace
{Punctuation
\n\t\t\t\tText.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
$mName.Other
)Punctuation
 Text.Whitespace
{Punctuation
\n\t\t\t\t\tText.Whitespace
$mName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
newOperator.Wordany0.9100string0.0380complex0.0176boolean0.0040void0.0037
 Text.Whitespace
$MapName.Other
(Punctuation
)Punctuation
;Punctuation
\n\t\t\t\tText.Whitespace
}Punctuation
\n\t\t\t\tText.Whitespace
$mapSetName.Other
(Punctuation
$mName.Other
,Punctuation
 Text.Whitespace
keyName.Otherstring0.5560any0.4275complex0.0080number0.0025void0.0009
,Punctuation
 Text.Whitespace
valueName.Otherany0.7229string0.2430number0.0094complex0.0050boolean0.0049
)Punctuation
;Punctuation
\n\t\t\tText.Whitespace
}Punctuation
 Text.Whitespace
elseKeyword
 Text.Whitespace
{Punctuation
\n\t\t\t\tText.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
$oName.Other
)Punctuation
 Text.Whitespace
{Punctuation
\n\t\t\t\t\tText.Whitespace
// Initialize the linked list as an empty node, so that we don't have to special-case handling of the first node: we can always refer to it as (previous node).next, instead of something like (list).headComment.Single
\n\t\t\t\t\tText.Whitespace
$oName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
{Punctuation
 Text.Whitespace
keyName.Other{}0.6370any0.2449string0.0536complex0.0268Object0.0048
:Operator
 Text.Whitespace
{Punctuation
}Punctuation
,Punctuation
 Text.Whitespace
nextName.Othernull0.8467any0.0632Function0.0139complex0.0079string0.0076
:Operator
 Text.Whitespace
nullKeyword.Type
 Text.Whitespace
}Punctuation
;Punctuation
\n\t\t\t\tText.Whitespace
}Punctuation
\n\t\t\t\tText.Whitespace
listSetName.Othervoid0.5310any0.2822complex0.0459string0.0305boolean0.0258
(Punctuation
$oName.Other
,Punctuation
 Text.Whitespace
keyName.Otherstring0.5292any0.4524complex0.0082number0.0024never0.0009
,Punctuation
 Text.Whitespace
valueName.Otherany0.8658string0.1031number0.0058complex0.0039boolean0.0033
)Punctuation
;Punctuation
\n\t\t\tText.Whitespace
}Punctuation
\n\t\tText.Whitespace
}Punctuation
\n\tText.Whitespace
}Punctuation
;Punctuation
\n\tText.Whitespace
returnKeyword
 Text.Whitespace
channelName.Otherany0.2708complex0.0924string0.0517{}0.0079boolean0.0051
;Punctuation
\nText.Whitespace
}Punctuation
;Punctuation
\nText.Whitespace
