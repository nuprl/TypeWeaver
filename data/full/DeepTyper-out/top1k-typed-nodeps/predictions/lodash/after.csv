Text
/**\n * The opposite of `before`. This method creates a function that invokes\n * `func` once it's called `n` or more times.\n *\n * @since 0.1.0\n * @category Function\n * @param {number} n The number of calls before `func` is invoked.\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new restricted function.\n * @example\n *\n * const saves = ['profile', 'settings']\n * const done = after(saves.length, () => console.log('done saving!'))\n *\n * forEach(saves, type => asyncSave({ 'type': type, 'complete': done }))\n * // => Logs 'done saving!' after the two async saves have completed.\n */Comment.Multiline
\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
afterName.Othervoid0.4608any0.2417string0.0181complex0.0156boolean0.0149
(Punctuation
nName.Othernumber0.6730any0.2560string0.0463Function0.0035void0.0020
,Punctuation
 Text.Whitespace
funcName.Otherany0.5442Function0.3235boolean0.0512string0.0230number0.0087
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
typeofOperator.Word
 Text.Whitespace
funcName.Otherany0.6521Function0.1262string0.0751boolean0.0656number0.0089
 Text.Whitespace
!==Operator
 Text.Whitespace
'function'Literal.String.Single
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
throwKeywordany0.6863complex0.1696Error0.0484boolean0.0220{}0.0191
 Text.Whitespace
newOperator.Wordany0.5237complex0.1034boolean0.0962string0.0541Error0.0348
 Text.Whitespace
TypeErrorName.ExceptionTypeErrorConstructor0.9918ErrorConstructor0.0013complex0.0002BooleanConstructor0.0001MapConstructor0.0001
(Punctuation
'Expected a function'Literal.String.Single
)Punctuation
\n  Text.Whitespace
}Punctuation
\n  Text.Whitespace
nName.Othernumber0.8131any0.1662string0.0059void0.0045never0.0013
 Text.Whitespace
=Operator
 Text.Whitespace
nName.Othernumber0.8816any0.1059string0.0062void0.0010boolean0.0008
 Text.Whitespace
||Operator
 Text.Whitespace
0Literal.Number.Float
\n  Text.Whitespace
returnKeyword
 Text.Whitespace
functionKeyword.Declaration
(Punctuation
...Punctuation
argsName.Otherany[]0.8619any0.0553IArguments0.0057string[]0.0030number[]0.0011
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
--Operator
nName.Othernumber0.9465any0.0517string0.0008boolean0.0002void0.0001
 Text.Whitespace
<Operator
 Text.Whitespace
1Literal.Number.Float
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
funcName.OtherFunction0.6137any0.2966void0.0308boolean0.0151number0.0048
.Punctuation
applyName.Otherany0.9706Function0.0124void0.0074T0.0017number0.0016
(Punctuation
thisKeyword
,Punctuation
 Text.Whitespace
argsName.Otherany[]0.6365any0.2080IArguments0.0590string[]0.0147number[]0.0020
)Punctuation
\n    Text.Whitespace
}Punctuation
\n  Text.Whitespace
}Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
exportKeyword
 Text.Whitespace
defaultKeyword
 Text.Whitespace
afterName.Otherany0.4103void0.0162any[]0.0100complex0.0077Config0.0058
\nText.Whitespace
