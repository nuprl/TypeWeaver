importKeyword
 Text.Whitespace
isIEName.Otherboolean0.7778any0.0807complex0.0785void0.0080string0.0077
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
"../var/isIE.js"Literal.String.Double
;Punctuation
\nText.Whitespace
importKeyword
 Text.Whitespace
whitespaceName.Otherstring0.4284complex0.1086any0.1039number0.0397string[]0.0242
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
"../var/whitespace.js"Literal.String.Double
;Punctuation
\nText.Whitespace
importKeyword
 Text.Whitespace
supportName.Otherany0.4754complex0.1827void0.0589string0.0497RegExp0.0065
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
"./support.js"Literal.String.Double
;Punctuation
\n\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
rbuggyQSAName.Otherany[]0.9516string[]0.0136any[][]0.0035any0.0031number[]0.0025
 Text.Whitespace
=Operator
 Text.Whitespace
[Punctuation
]Punctuation
;Punctuation
\n\nText.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
 Text.Whitespace
isIEName.Otherboolean0.9089any0.0734complex0.0080string0.0036any[]0.0015
 Text.Whitespace
)Punctuation
 Text.Whitespace
{Punctuation
\n\tText.Whitespace
rbuggyQSAName.Otherany[]0.7923string[]0.1155any0.0154number[]0.0084T[]0.0074
.Punctuation
pushName.Othernumber0.9729any0.0206void0.0023boolean0.0013string0.0009
(Punctuation
\n\n\t\tText.Whitespace
// Support: IE 9 - 11+Comment.Single
\n\t\tText.Whitespace
// IE's :disabled selector does not pick up the children of disabled fieldsetsComment.Single
\n\t\tText.Whitespace
":enabled"Literal.String.Double
,Punctuation
\n\t\tText.Whitespace
":disabled"Literal.String.Double
,Punctuation
\n\n\t\tText.Whitespace
// Support: IE 11+Comment.Single
\n\t\tText.Whitespace
// IE 11 doesn't find elements on a `[name='']` query in some cases.Comment.Single
\n\t\tText.Whitespace
// Adding a temporary attribute to the document before the selection worksComment.Single
\n\t\tText.Whitespace
// around the issue.Comment.Single
\n\t\tText.Whitespace
"\\["Literal.String.Double
 Text.Whitespace
+Operator
 Text.Whitespace
whitespaceName.Otherstring0.4999any0.3449number0.1150complex0.0118{}0.0056
 Text.Whitespace
+Operator
 Text.Whitespace
"*name"Literal.String.Double
 Text.Whitespace
+Operator
 Text.Whitespace
whitespaceName.Otherstring0.5297any0.2855number0.1385complex0.0124{}0.0078
 Text.Whitespace
+Operator
 Text.Whitespace
"*="Literal.String.Double
 Text.Whitespace
+Operator
\n\t\t\tText.Whitespace
whitespaceName.Otherstring0.5004any0.3136number0.1447complex0.0134{}0.0069
 Text.Whitespace
+Operator
 Text.Whitespace
"*(?:''|\"\")"Literal.String.Double
\n\tText.Whitespace
)Punctuation
;Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
 Text.Whitespace
!Operator
supportName.Otherany0.2447complex0.0412any[]0.0073Component0.0044ExchangeService0.0036
.Punctuation
cssSupportsSelectorName.Otherany0.4156string0.2283boolean0.1657any[]0.0766string[]0.0440
 Text.Whitespace
)Punctuation
 Text.Whitespace
{Punctuation
\n\n\tText.Whitespace
// Support: Chrome 105+, Safari 15.4+Comment.Single
\n\tText.Whitespace
// `:has()` uses a forgiving selector list as an argument so our regularComment.Single
\n\tText.Whitespace
// `try-catch` mechanism fails to catch `:has()` with arguments not supportedComment.Single
\n\tText.Whitespace
// natively like `:has(:contains("Foo"))`. Where supported & spec-compliant,Comment.Single
\n\tText.Whitespace
// we now use `CSS.supports("selector(SELECTOR_TO_BE_TESTED)")` but outsideComment.Single
\n\tText.Whitespace
// that, let's mark `:has` as buggy to always use jQuery traversal forComment.Single
\n\tText.Whitespace
// `:has()`.Comment.Single
\n\tText.Whitespace
rbuggyQSAName.Otherany[]0.8278string[]0.0886any0.0173number[]0.0098Function[]0.0098
.Punctuation
pushName.Othernumber0.9754any0.0194void0.0018string0.0012boolean0.0007
(Punctuation
 Text.Whitespace
":has"Literal.String.Double
 Text.Whitespace
)Punctuation
;Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
rbuggyQSAName.Otherany[]0.7524string[]0.1221any0.0471number[]0.0097string0.0079
 Text.Whitespace
=Operator
 Text.Whitespace
rbuggyQSAName.Otherany[]0.6905string[]0.1920any0.0310number[]0.0058Function[]0.0056
.Punctuation
lengthName.Otherany0.7864number0.1790string0.0221complex0.0062any[]0.0011
 Text.Whitespace
&&Operator
 Text.Whitespace
newOperator.Wordany0.5035string0.2093RegExp0.0612boolean0.0223complex0.0221
 Text.Whitespace
RegExpName.BuiltinRegExpConstructor0.9980any0.0002RegExp0.0002ErrorConstructor0.0001BooleanConstructor0.0000
(Punctuation
 Text.Whitespace
rbuggyQSAName.Otherany[]0.6661string[]0.2729any0.0346number[]0.0042string0.0026
.Punctuation
joinName.Otherstring0.8520any0.1274complex0.0096number0.0046string[]0.0019
(Punctuation
 Text.Whitespace
"|"Literal.String.Double
 Text.Whitespace
)Punctuation
 Text.Whitespace
)Punctuation
;Punctuation
\n\nText.Whitespace
exportKeyword
 Text.Whitespace
defaultKeyword
 Text.Whitespace
rbuggyQSAName.Otherany0.5600any[]0.2188complex0.0240string0.0240number0.0173
;Punctuation
\nText.Whitespace
