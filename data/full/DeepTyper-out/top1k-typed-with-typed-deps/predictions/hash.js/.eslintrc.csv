moduleKeyword.Reserved
.exportsName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
'env'Literal.String.Single
:Operator
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
'browser'Literal.String.Single
:Operator
 Text.Whitespace
trueKeyword.Constant
,Punctuation
\n    Text.Whitespace
'commonjs'Literal.String.Single
:Operator
 Text.Whitespace
trueKeyword.Constant
,Punctuation
\n    Text.Whitespace
'node'Literal.String.Single
:Operator
 Text.Whitespace
trueKeyword.Constant
,Punctuation
\n    Text.Whitespace
'es6'Literal.String.Single
:Operator
 Text.Whitespace
trueKeyword.Constant
\n  Text.Whitespace
}Punctuation
,Punctuation
\n  Text.Whitespace
'parserOptions'Literal.String.Single
:Operator
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
'ecmaVersion'Literal.String.Single
:Operator
 Text.Whitespace
8Literal.Number.Float
\n  Text.Whitespace
}Punctuation
,Punctuation
\n  Text.Whitespace
'extends'Literal.String.Single
:Operator
 Text.Whitespace
'eslint:recommended'Literal.String.Single
,Punctuation
\n  Text.Whitespace
'rules'Literal.String.Single
:Operator
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
'indent'Literal.String.Single
:Operator
 Text.Whitespace
[Punctuation
\n      Text.Whitespace
'error'Literal.String.Single
,Punctuation
\n      Text.Whitespace
2Literal.Number.Float
,Punctuation
\n      Text.Whitespace
{Punctuation
\n        Text.Whitespace
'FunctionDeclaration'Literal.String.Single
:Operator
 Text.Whitespace
{Punctuation
\n          Text.Whitespace
'parameters'Literal.String.Single
:Operator
 Text.Whitespace
'first'Literal.String.Single
\n        Text.Whitespace
}Punctuation
,Punctuation
\n        Text.Whitespace
'FunctionExpression'Literal.String.Single
:Operator
 Text.Whitespace
{Punctuation
\n          Text.Whitespace
'parameters'Literal.String.Single
:Operator
 Text.Whitespace
'first'Literal.String.Single
\n        Text.Whitespace
}Punctuation
,Punctuation
\n        Text.Whitespace
'CallExpression'Literal.String.Single
:Operator
 Text.Whitespace
{Punctuation
\n          Text.Whitespace
'arguments'Literal.String.Single
:Operator
 Text.Whitespace
'first'Literal.String.Single
\n        Text.Whitespace
}Punctuation
\n      Text.Whitespace
}Punctuation
\n    Text.Whitespace
]Punctuation
,Punctuation
\n    Text.Whitespace
'linebreak-style'Literal.String.Single
:Operator
 Text.Whitespace
[Punctuation
\n      Text.Whitespace
'error'Literal.String.Single
,Punctuation
\n      Text.Whitespace
'unix'Literal.String.Single
\n    Text.Whitespace
]Punctuation
,Punctuation
\n    Text.Whitespace
'quotes'Literal.String.Single
:Operator
 Text.Whitespace
[Punctuation
\n      Text.Whitespace
'error'Literal.String.Single
,Punctuation
\n      Text.Whitespace
'single'Literal.String.Single
\n    Text.Whitespace
]Punctuation
,Punctuation
\n    Text.Whitespace
'semi'Literal.String.Single
:Operator
 Text.Whitespace
[Punctuation
\n      Text.Whitespace
'error'Literal.String.Single
,Punctuation
\n      Text.Whitespace
'always'Literal.String.Single
\n    Text.Whitespace
]Punctuation
\n  Text.Whitespace
}Punctuation
\nText.Whitespace
}Punctuation
;Punctuation
\nText.Whitespace
