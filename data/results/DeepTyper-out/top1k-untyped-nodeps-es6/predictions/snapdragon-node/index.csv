'use strict'Literal.String.Single
;Punctuation
\n\nText.Whitespace
/**\n * Create a new AST `Node` with the given `type` and `value`, or an\n * object to initialize with.\n *\n * ```js\n * console.log(new Node({ type: 'star', value: '*' }));\n * console.log(new Node('star', '*'));\n * // both result in => Node { type: 'star', value: '*' }\n * ```\n * @name Node\n * @param {object|string} `type` Either an object to initialize with, or a string to be used as the `node.type`.\n * @param {string|boolean} `value` If the first argument is a string, the second argument may be a string value to set on `node.value`.\n * @param {boolean} `clone` When an object is passed as the first argument, pass true as the last argument to deep clone values before assigning them to the new node.\n * @return {Object} node instance\n * @api public\n */Comment.Multiline
\n\nText.Whitespace
classKeyword.Declaration
 Text.Whitespace
NodeName.Otherany0.9924complex0.0065string0.0005Object0.0001void0.0001
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
constructorKeyword.Reserved
(Punctuation
typeKeyword.Reserved
,Punctuation
 Text.Whitespace
valueName.Otherany0.7555string0.1914boolean0.0172number0.0153Object0.0014
,Punctuation
 Text.Whitespace
cloneName.Otherany0.5750string0.1716number0.0922boolean0.0278Date0.0163
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
defineName.Othervoid0.8848any0.1051complex0.0022Function0.0016this0.0015
(Punctuation
thisKeyword
,Punctuation
 Text.Whitespace
'isNode'Literal.String.Single
,Punctuation
 Text.Whitespace
trueKeyword.Constant
)Punctuation
;Punctuation
\n    Text.Whitespace
defineName.Othervoid0.9724any0.0223complex0.0011Function0.0010this0.0006
(Punctuation
thisKeyword
,Punctuation
 Text.Whitespace
'parent'Literal.String.Single
,Punctuation
 Text.Whitespace
nullKeyword.Constant
)Punctuation
;Punctuation
\n    Text.Whitespace
defineName.Othervoid0.9313any0.0624complex0.0015Function0.0012this0.0005
(Punctuation
thisKeyword
,Punctuation
 Text.Whitespace
'size'Literal.String.Single
,Punctuation
 Text.Whitespace
0Literal.Number.Float
)Punctuation
;Punctuation
\n\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
isObjectName.Otherboolean0.9512complex0.0195any0.0111void0.0060string0.0016
(Punctuation
typeKeyword.Reserved
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
assignName.Othervoid0.8330any0.1027Function0.0182this0.0148complex0.0059
(Punctuation
thisKeyword
,Punctuation
 Text.Whitespace
typeKeyword.Reserved
,Punctuation
 Text.Whitespace
cloneName.Otherany0.6276string0.1684number0.0616void0.0131T0.0131
)Punctuation
;Punctuation
\n    Text.Whitespace
}Punctuation
 Text.Whitespace
elseKeyword
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
thisKeyword
.Punctuation
typeKeyword.Reserved
 Text.Whitespace
=Operator
 Text.Whitespace
typeKeyword.Reserved
;Punctuation
\n      Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
valueName.Otherany0.8587string0.0882number0.0215boolean0.0061complex0.0050
 Text.Whitespace
!=Operator
 Text.Whitespace
nullKeyword.Constant
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
thisKeyword
.Punctuation
valueName.Otherany0.5341string0.2504number0.0503boolean0.0180never0.0139
 Text.Whitespace
=Operator
 Text.Whitespace
valueName.Otherany0.6268string0.2096number0.0493boolean0.0263never0.0088
;Punctuation
\n      Text.Whitespace
}Punctuation
\n    Text.Whitespace
}Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
/**\n   * Return a clone of the node. Values that are arrays or plain objects\n   * are deeply cloned.\n   *\n   * ```js\n   * const node = new Node({type: 'star', value: '*'});\n   * consle.log(node.clone() !== node);\n   * //=> true\n   * ```\n   * @name .clone\n   * @return {Object} returns a clone of the node\n   * @api public\n   */Comment.Multiline
\n\n  Text.Whitespace
cloneName.Otherany0.3007number0.0540Node0.0373T0.0253string0.0251
(Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
newOperator.Wordany0.6665string0.0679this0.0100Error0.0095Node0.0082
 Text.Whitespace
thisKeyword
.Punctuation
constructorKeyword.Reserved
(Punctuation
thisKeyword
,Punctuation
 Text.Whitespace
nullKeyword.Constant
,Punctuation
 Text.Whitespace
trueKeyword.Constant
)Punctuation
;Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
/**\n   * Return a string created from `node.value` and/or recursively\n   * visiting over `node.nodes`.\n   *\n   * ```js\n   * const node = new Node({type: 'star', value: '*'});\n   * consle.log(node.stringify());\n   * //=> '*'\n   * ```\n   * @name .stringify\n   * @return {String}\n   * @api public\n   */Comment.Multiline
\n\n  Text.Whitespace
stringifyName.Othercomplex0.4895string0.2730any0.1263boolean0.0196void0.0187
(Punctuation
fnName.Otherany0.7440Function0.1078string0.0278number0.0177boolean0.0116
 Text.Whitespace
=Operator
 Text.Whitespace
nName.Otherany0.8009number0.0818string0.0267Function0.0136complex0.0111
 Text.Whitespace
=>Punctuation
 Text.Whitespace
nName.Otherany0.7583complex0.0162number0.0102Node0.0087Function0.0041
.Punctuation
valueName.Otherany0.9086string0.0686number0.0110boolean0.0063complex0.0019
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
strName.Otherstring0.9625any0.0271RegExp0.0055number0.0014complex0.0011
 Text.Whitespace
=Operator
 Text.Whitespace
''Literal.String.Single
;Punctuation
\n    Text.Whitespace
visitName.Othervoid0.9888any0.0031string0.0020complex0.0016boolean0.0015
(Punctuation
thisKeyword
,Punctuation
 Text.Whitespace
nName.Othernumber0.4918any0.3634string0.1167complex0.0057boolean0.0033
 Text.Whitespace
=>Punctuation
 Text.Whitespace
(Punctuation
strName.Otherstring0.9702any0.0216number0.0055complex0.0012boolean0.0004
 Text.Whitespace
+=Operator
 Text.Whitespace
fnName.Otherany0.6826Function0.1018string0.0940number0.0446complex0.0104
(Punctuation
nName.Othernumber0.6269any0.2234string0.1350complex0.0017Function0.0011
)Punctuation
)Punctuation
)Punctuation
;Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
strName.Otherstring0.8374any0.1471number0.0085complex0.0020boolean0.0014
;Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
/**\n   * Push a child node onto the `node.nodes` array.\n   *\n   * ```js\n   * const foo = new Node({type: 'foo'});\n   * const bar = new Node({type: 'bar'});\n   * foo.push(bar);\n   * ```\n   * @name .push\n   * @param {Object} `node`\n   * @return {Number} Returns the length of `node.nodes`, like `Array.push`\n   * @api public\n   */Comment.Multiline
\n\n  Text.Whitespace
pushName.Othernumber0.9212any0.0451void0.0160boolean0.0083string0.0032
(Punctuation
nodeName.Otherany0.2915Node0.1761Tree0.0184RowNode0.0154Element0.0137
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
nodeName.Otherany0.4699Node0.1476RowNode0.0159boolean0.0151complex0.0129
)Punctuation
 Text.Whitespace
returnKeyword
;Punctuation
\n    Text.Whitespace
assertName.Otherany0.7144void0.1851complex0.0164boolean0.0122this0.0106
(Punctuation
isObjectName.Otherboolean0.7688complex0.1053any0.0824void0.0127number0.0058
(Punctuation
nodeName.Otherany0.8450Node0.0332never0.0054Element0.0045string0.0043
)Punctuation
,Punctuation
 Text.Whitespace
'expected node to be an object'Literal.String.Single
)Punctuation
;Punctuation
\n    Text.Whitespace
assertName.Otherany0.6375void0.2188this0.0314complex0.0195IAssertFunctions0.0097
(Punctuation
nodeName.Otherany0.7786Node0.0428Element0.0079string0.0066RowNode0.0062
 Text.Whitespace
!==Operator
 Text.Whitespace
thisKeyword
,Punctuation
 Text.Whitespace
'node should not be the same as node.parent'Literal.String.Single
)Punctuation
;Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
thisKeyword
.Punctuation
constructorKeyword.Reserved
.Punctuation
isNodeName.Otherboolean0.8479any0.1107complex0.0282void0.0037string0.0024
(Punctuation
nodeName.Otherany0.5223Node0.0994Tree0.0105RowNode0.0104TreeModel0.0091
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
nodeName.Otherany0.6977Node0.0495Node<Node>0.0082TreeModel0.0067RowNode0.0058
 Text.Whitespace
=Operator
 Text.Whitespace
newOperator.Wordany0.7885string0.0235Node0.0190number0.0060Error0.0056
 Text.Whitespace
thisKeyword
.Punctuation
constructorKeyword.Reserved
(Punctuation
nodeName.Otherany0.6153Node0.0767never0.0181Tree0.0134string0.0103
)Punctuation
;Punctuation
\n    Text.Whitespace
}Punctuation
\n    Text.Whitespace
thisKeyword
.Punctuation
nodesName.Otherany[]0.2093any0.0976Node[]0.0355string[]0.0208User[]0.0161
 Text.Whitespace
=Operator
 Text.Whitespace
thisKeyword
.Punctuation
nodesName.Otherany[]0.1551any0.1333Node[]0.0242string[]0.0138User[]0.0098
 Text.Whitespace
||Operator
 Text.Whitespace
[Punctuation
]Punctuation
;Punctuation
\n    Text.Whitespace
nodeName.Otherany0.6806Node0.0295complex0.0136RowNode0.0083TreeModel0.0074
.Punctuation
parentName.Otherany0.6942Node0.0270this0.0079T0.0074Function0.0073
 Text.Whitespace
=Operator
 Text.Whitespace
thisKeyword
;Punctuation
\n    Text.Whitespace
ensureNodesName.Othervoid0.5598any0.2701complex0.0206number0.0182boolean0.0125
(Punctuation
nodeName.Otherany0.6435Node0.0670RowNode0.0145TreeNode0.0078never0.0078
)Punctuation
;Punctuation
\n    Text.Whitespace
thisKeyword
.Punctuation
sizeName.Othernumber0.9941any0.0050string0.0003void0.0002boolean0.0002
++Operator
;Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
thisKeyword
.Punctuation
nodesName.Otherany[]0.1467any0.0368Node[]0.0347Function[]0.0077string[]0.0068
.Punctuation
pushName.Othernumber0.9815any0.0151boolean0.0015void0.0005complex0.0004
(Punctuation
nodeName.Otherany0.8037Node0.0547Element0.0057RowNode0.0055string0.0045
)Punctuation
;Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
/**\n   * Unshift a child node onto `node.nodes`, and set `node` as\n   * the parent on `child.parent`.\n   *\n   * ```js\n   * const foo = new Node({type: 'foo'});\n   * const bar = new Node({type: 'bar'});\n   * foo.unshift(bar);\n   * ```\n   * @name .unshift\n   * @param {Object} `node`\n   * @return {Number} Returns the length of `node.nodes`\n   * @api public\n   */Comment.Multiline
\n\n  Text.Whitespace
unshiftName.Othernumber0.8397any0.1266void0.0190boolean0.0043complex0.0019
(Punctuation
nodeName.Otherany0.5252Node0.1043RowNode0.0118Element0.0088Tree0.0076
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
nodeName.Otherany0.7054Node0.0758boolean0.0127complex0.0101RowNode0.0075
)Punctuation
 Text.Whitespace
returnKeyword
;Punctuation
\n    Text.Whitespace
assertName.Otherany0.7829void0.1539complex0.0107boolean0.0097this0.0056
(Punctuation
isObjectName.Otherboolean0.7580any0.1006complex0.0998void0.0157number0.0062
(Punctuation
nodeName.Otherany0.8850Node0.0262never0.0037Element0.0033string0.0032
)Punctuation
,Punctuation
 Text.Whitespace
'expected node to be an object'Literal.String.Single
)Punctuation
;Punctuation
\n    Text.Whitespace
assertName.Otherany0.6932void0.2041this0.0180complex0.0146boolean0.0078
(Punctuation
nodeName.Otherany0.8706Node0.0266Element0.0043complex0.0034string0.0034
 Text.Whitespace
!==Operator
 Text.Whitespace
thisKeyword
,Punctuation
 Text.Whitespace
'node should not be the same as node.parent'Literal.String.Single
)Punctuation
;Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
thisKeyword
.Punctuation
constructorKeyword.Reserved
.Punctuation
isNodeName.Otherboolean0.8637any0.1026complex0.0207void0.0045string0.0019
(Punctuation
nodeName.Otherany0.5997Node0.0917Tree0.0092TreeModel0.0076RowNode0.0073
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
nodeName.Otherany0.7536Node0.0431Node<Node>0.0061TreeModel0.0056Function0.0048
 Text.Whitespace
=Operator
 Text.Whitespace
newOperator.Wordany0.8468string0.0179Node0.0143number0.0059Error0.0050
 Text.Whitespace
thisKeyword
.Punctuation
constructorKeyword.Reserved
(Punctuation
nodeName.Otherany0.6074Node0.0821never0.0163Tree0.0158string0.0090
)Punctuation
;Punctuation
\n    Text.Whitespace
}Punctuation
\n    Text.Whitespace
thisKeyword
.Punctuation
nodesName.Otherany[]0.2354any0.1055Node[]0.0377string[]0.0190User[]0.0163
 Text.Whitespace
=Operator
 Text.Whitespace
thisKeyword
.Punctuation
nodesName.Otherany[]0.1645any0.1285Node[]0.0269string[]0.0125User[]0.0109
 Text.Whitespace
||Operator
 Text.Whitespace
[Punctuation
]Punctuation
;Punctuation
\n    Text.Whitespace
nodeName.Otherany0.7345Node0.0241complex0.0099TreeModel0.0067TreeNode0.0064
.Punctuation
parentName.Otherany0.7668Node0.0188void0.0069this0.0066Function0.0064
 Text.Whitespace
=Operator
 Text.Whitespace
thisKeyword
;Punctuation
\n    Text.Whitespace
ensureNodesName.Othervoid0.6034any0.2440number0.0206complex0.0142boolean0.0127
(Punctuation
nodeName.Otherany0.6559Node0.0572RowNode0.0130TreeNode0.0089never0.0069
)Punctuation
;Punctuation
\n    Text.Whitespace
thisKeyword
.Punctuation
sizeName.Othernumber0.9936any0.0055string0.0002void0.0002boolean0.0002
++Operator
;Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
thisKeyword
.Punctuation
nodesName.Otherany[]0.1850Node[]0.0361any0.0359string[]0.0113Function[]0.0106
.Punctuation
unshiftName.Othernumber0.9649any0.0311boolean0.0014void0.0010complex0.0006
(Punctuation
nodeName.Otherany0.7390Node0.0475never0.0074Element0.0072RowNode0.0054
)Punctuation
;Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
/**\n   * Pop a node from `node.nodes`.\n   *\n   * ```js\n   * const node = new Node({type: 'foo'});\n   * node.push(new Node({type: 'a'}));\n   * node.push(new Node({type: 'b'}));\n   * node.push(new Node({type: 'c'}));\n   * node.push(new Node({type: 'd'}));\n   * console.log(node.nodes.length);\n   * //=> 4\n   * node.pop();\n   * console.log(node.nodes.length);\n   * //=> 3\n   * ```\n   * @name .pop\n   * @return {Number} Returns the popped `node`\n   * @api public\n   */Comment.Multiline
\n\n  Text.Whitespace
popName.Otherany0.6953string0.0693void0.0574boolean0.0405number0.0243
(Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
thisKeyword
.Punctuation
nodesName.Otherany[]0.1307any0.0995Node[]0.0207string[]0.0117HTMLCollection0.0071
 Text.Whitespace
&&Operator
 Text.Whitespace
thisKeyword
.Punctuation
nodesName.Otherany[]0.0942any0.0413Node[]0.0274string[]0.0135User[]0.0093
.Punctuation
lengthName.Othernumber0.9121any0.0860string0.0005boolean0.0004complex0.0003
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
thisKeyword
.Punctuation
sizeName.Othernumber0.9917any0.0076void0.0002string0.0002boolean0.0001
--Operator
;Punctuation
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
thisKeyword
.Punctuation
nodesName.Otherany[]0.2626any0.0983string[]0.0752Node[]0.0311complex0.0111
.Punctuation
popName.Otherany0.6962string0.0761number0.0615boolean0.0514complex0.0460
(Punctuation
)Punctuation
;Punctuation
\n    Text.Whitespace
}Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
/**\n   * Shift a node from `node.nodes`.\n   *\n   * ```js\n   * const node = new Node({type: 'foo'});\n   * node.push(new Node({type: 'a'}));\n   * node.push(new Node({type: 'b'}));\n   * node.push(new Node({type: 'c'}));\n   * node.push(new Node({type: 'd'}));\n   * console.log(node.nodes.length);\n   * //=> 4\n   * node.shift();\n   * console.log(node.nodes.length);\n   * //=> 3\n   * ```\n   * @name .shift\n   * @return {Object} Returns the shifted `node`\n   * @api public\n   */Comment.Multiline
\n\n  Text.Whitespace
shiftName.Otherany0.6842void0.0864number0.0565string0.0258boolean0.0127
(Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
thisKeyword
.Punctuation
nodesName.Otherany[]0.1061any0.0918Node[]0.0232string[]0.0106HTMLCollection0.0076
 Text.Whitespace
&&Operator
 Text.Whitespace
thisKeyword
.Punctuation
nodesName.Otherany[]0.0780any0.0406Node[]0.0319string[]0.0114User[]0.0098
.Punctuation
lengthName.Othernumber0.9158any0.0823string0.0005boolean0.0004complex0.0003
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
thisKeyword
.Punctuation
sizeName.Othernumber0.9903any0.0090void0.0002string0.0002boolean0.0001
--Operator
;Punctuation
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
thisKeyword
.Punctuation
nodesName.Otherany[]0.1761any0.1417string[]0.0348Node[]0.0271T[]0.0091
.Punctuation
shiftName.Otherany0.7636number0.0781string0.0586complex0.0133boolean0.0067
(Punctuation
)Punctuation
;Punctuation
\n    Text.Whitespace
}Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
/**\n   * Remove `node` from `node.nodes`.\n   *\n   * ```js\n   * node.remove(childNode);\n   * ```\n   * @name .remove\n   * @param {Object} `node`\n   * @return {Object} Returns the removed node.\n   * @api public\n   */Comment.Multiline
\n\n  Text.Whitespace
removeName.Othervoid0.5655any0.1715boolean0.0941complex0.0287number0.0136
(Punctuation
nodeName.Otherany0.4204Node0.0893TreeModel0.0152TreeNode0.0117RowNode0.0104
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
thisKeyword
.Punctuation
nodesName.Otherany[]0.1807any0.1226Node[]0.0297string[]0.0092HTMLCollection0.0066
)Punctuation
 Text.Whitespace
returnKeyword
 Text.Whitespace
[Punctuation
]Punctuation
;Punctuation
\n    Text.Whitespace
assertName.Otherany0.9061void0.0599Assert0.0064this0.0036complex0.0028
(Punctuation
thisKeyword
.Punctuation
constructorKeyword.Reserved
.Punctuation
isNodeName.Otherboolean0.6544any0.2531complex0.0603void0.0099string0.0080
(Punctuation
nodeName.Otherany0.7382Node0.0663Element0.0075never0.0042RowNode0.0042
)Punctuation
,Punctuation
 Text.Whitespace
'expected an instance of Node'Literal.String.Single
)Punctuation
;Punctuation
\n    Text.Whitespace
assertName.Otherany0.7045void0.2099this0.0174complex0.0098boolean0.0079
(Punctuation
nodeName.Otherany0.7927Node0.0532Element0.0068number0.0066string0.0047
 Text.Whitespace
!==Operator
 Text.Whitespace
thisKeyword
,Punctuation
 Text.Whitespace
'cannot remove a node from itself'Literal.String.Single
)Punctuation
;Punctuation
\n\n    Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
idxName.Othernumber0.9914any0.0074boolean0.0004string0.0003void0.0001
 Text.Whitespace
=Operator
 Text.Whitespace
thisKeyword
.Punctuation
nodesName.Otherany[]0.1076any0.0697Node[]0.0485string[]0.0405NodeList0.0065
.Punctuation
indexOfName.Othernumber0.9720any0.0258string0.0006boolean0.0005complex0.0005
(Punctuation
nodeName.Otherany0.8376Node0.0282string0.0071RowNode0.0040number0.0035
)Punctuation
;Punctuation
\n    Text.Whitespace
nodeName.Otherany0.7480Node0.0470complex0.0083RowNode0.0047TreeNode0.0042
.Punctuation
indexName.Othernumber0.7711any0.2251string0.0015boolean0.0009complex0.0002
 Text.Whitespace
=Operator
 Text.Whitespace
-Operator
1Literal.Number.Float
;Punctuation
\n\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
idxName.Othernumber0.8946any0.1026boolean0.0012string0.0009complex0.0001
 Text.Whitespace
!==Operator
 Text.Whitespace
-Operator
1Literal.Number.Float
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
thisKeyword
.Punctuation
sizeName.Othernumber0.9941any0.0053string0.0002void0.0002boolean0.0001
--Operator
;Punctuation
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
thisKeyword
.Punctuation
nodesName.Otherany[]0.1763any0.1065Node[]0.0387string[]0.0174complex0.0116
.Punctuation
spliceName.Othercomplex0.8661any0.1196number0.0026any[]0.0025boolean0.0014
(Punctuation
idxName.Othernumber0.9766any0.0219string0.0005boolean0.0005void0.0001
,Punctuation
 Text.Whitespace
1Literal.Number.Float
)Punctuation
;Punctuation
\n    Text.Whitespace
}Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
[Punctuation
]Punctuation
;Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
/**\n   * Get the first child node from `node.nodes` that matches the given `type`.\n   * If `type` is a number, the child node at that index is returned.\n   *\n   * ```js\n   * const child = node.find(1); //<= index of the node to get\n   * const child = node.find('foo'); //<= node.type of a child node\n   * const child = node.find(/^(foo|bar)$/); //<= regex to match node.type\n   * const child = node.find(['foo', 'bar']); //<= array of node.type(s)\n   * ```\n   * @name .find\n   * @param {String} `type`\n   * @return {Object} Returns a child node or undefined.\n   * @api public\n   */Comment.Multiline
\n\n  Text.Whitespace
findName.Otherany0.5089complex0.0779boolean0.0756number0.0184void0.0172
(Punctuation
typeKeyword.Reserved
,Punctuation
 Text.Whitespace
nName.Othernumber0.9394any0.0503string0.0044boolean0.0013complex0.0005
 Text.Whitespace
=Operator
 Text.Whitespace
0Literal.Number.Float
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
ArrayName.BuiltinArrayConstructor0.9995Math0.0000ObjectConstructor0.0000any0.0000complex0.0000
.Punctuation
isArrayName.Othercomplex0.9972any0.0011boolean0.0004any[]0.0003void0.0002
(Punctuation
thisKeyword
.Punctuation
nodesName.Otherany[]0.2531any0.1292Node[]0.0243complex0.0148string[]0.0105
)Punctuation
 Text.Whitespace
||Operator
 Text.Whitespace
thisKeyword
.Punctuation
nodesName.Otherany[]0.2869any0.0927Node[]0.0207string[]0.0130User[]0.0062
.Punctuation
lengthName.Othernumber0.8818any0.1158complex0.0007string0.0006boolean0.0003
 Text.Whitespace
===Operator
 Text.Whitespace
0Literal.Number.Float
)Punctuation
 Text.Whitespace
returnKeyword
 Text.Whitespace
nullKeyword.Constant
;Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
typeofOperator.Word
 Text.Whitespace
typeKeyword.Reserved
 Text.Whitespace
===Operator
 Text.Whitespace
'number'Literal.String.Single
)Punctuation
 Text.Whitespace
returnKeyword
 Text.Whitespace
thisKeyword
.Punctuation
nodesName.Otherany0.2835complex0.1104any[]0.0969Node[]0.0104any[][]0.0068
[Punctuation
typeKeyword.Reserved
]Punctuation
;Punctuation
\n    Text.Whitespace
forKeyword
 Text.Whitespace
(Punctuation
letKeyword.Declaration
 Text.Whitespace
iName.Othernumber0.9842any0.0130string0.0016boolean0.0004void0.0001
 Text.Whitespace
=Operator
 Text.Whitespace
nName.Othernumber0.9567any0.0365string0.0023T0.0005complex0.0003
;Punctuation
 Text.Whitespace
iName.Othernumber0.9932any0.0056string0.0004void0.0002boolean0.0001
 Text.Whitespace
<Operator
 Text.Whitespace
thisKeyword
.Punctuation
nodesName.Otherany0.0550any[]0.0510Node[]0.0390NodeList0.0139string[]0.0090
.Punctuation
lengthName.Othernumber0.9248any0.0732string0.0006complex0.0004boolean0.0003
;Punctuation
 Text.Whitespace
iName.Othernumber0.9868any0.0125string0.0002boolean0.0002void0.0001
++Operator
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
nodeName.Otherany0.6138Node0.1103RowNode0.0084Element0.0082TreeNode0.0080
 Text.Whitespace
=Operator
 Text.Whitespace
thisKeyword
.Punctuation
nodesName.Otherany0.2248any[]0.1494string[]0.0229Node[]0.0227complex0.0140
[Punctuation
iName.Othernumber0.9813any0.0137string0.0032boolean0.0005void0.0001
]Punctuation
;Punctuation
\n      Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
isTypeName.Otherboolean0.4279complex0.3295any0.2039void0.0132number0.0058
(Punctuation
nodeName.Otherany0.8230Node0.0537never0.0118Element0.0116complex0.0041
,Punctuation
 Text.Whitespace
typeKeyword.Reserved
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
returnKeyword
 Text.Whitespace
nodeName.Otherany0.8393Node0.0227never0.0094Element0.0079any[]0.0060
;Punctuation
\n      Text.Whitespace
}Punctuation
\n    Text.Whitespace
}Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
visitName.Othervoid0.8976any0.0516boolean0.0152Promise<void>0.0052Function0.0042
(Punctuation
fnName.Otherany0.7062Function0.1462number0.0155boolean0.0147string0.0067
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
visitName.Othervoid0.9410any0.0343Promise<void>0.0057boolean0.0038complex0.0029
(Punctuation
thisKeyword
,Punctuation
 Text.Whitespace
fnName.Otherany0.8749Function0.0526boolean0.0196complex0.0100number0.0075
)Punctuation
;Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
/**\n   * Returns true if `node.nodes` array contains the given `node`.\n   *\n   * ```js\n   * const foo = new Node({type: 'foo'});\n   * const bar = new Node({type: 'bar'});\n   * cosole.log(foo.has(bar)); // false\n   * foo.push(bar);\n   * cosole.log(foo.has(bar)); // true\n   * ```\n   * @name .has\n   * @param {String} `type`\n   * @return {Boolean}\n   * @api public\n   */Comment.Multiline
\n\n  Text.Whitespace
hasName.Otherboolean0.9164any0.0526void0.0056number0.0028string0.0027
(Punctuation
nodeName.Otherany0.5039Node0.0861Element0.0127ITreeNode0.0097Tree0.0096
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
thisKeyword
.Punctuation
constructorKeyword.Reserved
.Punctuation
isNodeName.Otherboolean0.8831any0.0826complex0.0264string0.0020void0.0013
(Punctuation
nodeName.Otherany0.6297Node0.1317Element0.0223complex0.0074TreeModel0.0067
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
ArrayName.BuiltinArrayConstructor0.9998Math0.0000ObjectConstructor0.0000any0.0000Array0.0000
.Punctuation
isArrayName.Othercomplex0.9972any0.0016boolean0.0004any[]0.0003void0.0001
(Punctuation
thisKeyword
.Punctuation
nodesName.Otherany[]0.3984any0.1867complex0.0301Node[]0.0249string[]0.0081
)Punctuation
 Text.Whitespace
&&Operator
 Text.Whitespace
thisKeyword
.Punctuation
nodesName.Otherany[]0.5751string[]0.0602any0.0580Node[]0.0290Node<Node>[]0.0032
.Punctuation
includesName.Otherboolean0.7921any0.1010complex0.0596string[]0.0132any[]0.0123
(Punctuation
nodeName.Otherany0.7955Node0.0255Element0.0118never0.0099string0.0090
)Punctuation
;Punctuation
\n    Text.Whitespace
}Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
thisKeyword
.Punctuation
hasTypeName.Otherboolean0.9891any0.0025complex0.0019false0.0015void0.0008
(Punctuation
nodeName.Otherany0.8703Node0.0190string0.0092Element0.0080never0.0067
)Punctuation
;Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
/**\n   * Return true if the `node.nodes` has the given `type`.\n   *\n   * ```js\n   * const foo = new Node({type: 'foo'});\n   * const bar = new Node({type: 'bar'});\n   * foo.push(bar);\n   *\n   * cosole.log(foo.hasType('qux'));          // false\n   * cosole.log(foo.hasType(/^(qux|bar)$/));  // true\n   * cosole.log(foo.hasType(['qux', 'bar'])); // true\n   * ```\n   * @name .hasType\n   * @param {String} `type`\n   * @return {Boolean}\n   * @api public\n   */Comment.Multiline
\n\n  Text.Whitespace
hasTypeName.Otherboolean0.9921any0.0020string0.0013complex0.0010false0.0005
(Punctuation
typeKeyword.Reserved
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
ArrayName.BuiltinArrayConstructor0.9998Math0.0000ObjectConstructor0.0000any0.0000Array0.0000
.Punctuation
isArrayName.Othercomplex0.9973any0.0012boolean0.0003any[]0.0003void0.0002
(Punctuation
thisKeyword
.Punctuation
nodesName.Otherany[]0.2485any0.2144Node[]0.0384complex0.0229string[]0.0082
)Punctuation
 Text.Whitespace
&&Operator
 Text.Whitespace
thisKeyword
.Punctuation
nodesName.Otherany[]0.3168any0.1915complex0.0370Node[]0.0226Set<any>0.0091
.Punctuation
findName.Othercomplex0.8738any0.1042T0.0024...0.0023boolean0.0021
(Punctuation
nodeName.Otherany0.8408Node0.0272Element0.0096complex0.0081never0.0055
 Text.Whitespace
=>Punctuation
 Text.Whitespace
isTypeName.Othercomplex0.4554any0.3208boolean0.1520void0.0196number0.0058
(Punctuation
nodeName.Otherany0.6957Node0.0489never0.0179Element0.0120complex0.0081
,Punctuation
 Text.Whitespace
typeKeyword.Reserved
)Punctuation
)Punctuation
;Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
/**\n   * Return true if the node is the given `type`.\n   *\n   * ```js\n   * const node = new Node({type: 'bar'});\n   * cosole.log(node.isType('foo'));          // false\n   * cosole.log(node.isType(/^(foo|bar)$/));  // true\n   * cosole.log(node.isType(['foo', 'bar'])); // true\n   * ```\n   * @name .isType\n   * @param {String} `type`\n   * @return {Boolean}\n   * @api public\n   */Comment.Multiline
\n\n  Text.Whitespace
isTypeName.Otherboolean0.4644complex0.2047any0.1677void0.0200this0.0131
(Punctuation
typeKeyword.Reserved
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
isTypeName.Othercomplex0.5450any0.2575boolean0.1266void0.0373any[]0.0037
(Punctuation
thisKeyword
,Punctuation
 Text.Whitespace
typeKeyword.Reserved
)Punctuation
;Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
/**\n   * Returns true if `node.value` is an empty string, or `node.nodes` does\n   * not contain any non-empty text nodes.\n   *\n   * ```js\n   * const node = new Node({type: 'text'});\n   * node.isEmpty(); //=> true\n   * node.value = 'foo';\n   * node.isEmpty(); //=> false\n   * ```\n   * @name .isEmpty\n   * @param {Function} `fn` (optional) Filter function that is called on `node` and/or child nodes. `isEmpty` will return false immediately when the filter function returns false on any nodes.\n   * @return {Boolean}\n   * @api public\n   */Comment.Multiline
\n\n  Text.Whitespace
isEmptyName.Otherboolean0.9684any0.0200complex0.0014string0.0013false0.0013
(Punctuation
fnName.Otherany0.7320Function0.1107string0.0206boolean0.0201number0.0087
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
isEmptyName.Otherboolean0.8816any0.0904complex0.0100void0.0064string0.0027
(Punctuation
thisKeyword
,Punctuation
 Text.Whitespace
fnName.Otherany0.7563Function0.1671boolean0.0143string0.0076void0.0058
)Punctuation
;Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
/**\n   * Returns true if the node has an ancestor node of the given `type`\n   *\n   * ```js\n   * const box = new Node({type: 'box'});\n   * const marble = new Node({type: 'marble'});\n   * box.push(marble);\n   * marble.isInside('box'); //=> true\n   * ```\n   * @name .isInside\n   * @param {String} `type`\n   * @return {Boolean}\n   * @api public\n   */Comment.Multiline
\n\n  Text.Whitespace
isInsideName.Otherboolean0.5399any0.1524string0.0597number0.0133void0.0107
(Punctuation
typeKeyword.Reserved
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
thisKeyword
.Punctuation
parentName.Otherany0.2756Node0.0276Element0.0138ViewBase0.0107Function0.0088
 Text.Whitespace
&&Operator
 Text.Whitespace
(Punctuation
thisKeyword
.Punctuation
parentName.Otherany0.1699Node0.0199View0.0122ViewBase0.0107NodePatcher0.0074
.Punctuation
typeKeyword.Reserved
 Text.Whitespace
===Operator
 Text.Whitespace
typeKeyword.Reserved
 Text.Whitespace
||Operator
 Text.Whitespace
thisKeyword
.Punctuation
parentName.Otherany0.2444Node0.0127ViewBase0.0098SymbolicTensor0.0074View0.0073
.Punctuation
isInsideName.Otherany0.4441string0.2531boolean0.0679complex0.0467number0.0254
(Punctuation
typeKeyword.Reserved
)Punctuation
)Punctuation
;Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
/**\n   * Get the siblings array, or `null` if it doesn't exist.\n   *\n   * ```js\n   * const foo = new Node({type: 'foo'});\n   * const bar = new Node({type: 'bar'});\n   * const baz = new Node({type: 'baz'});\n   * foo.push(bar);\n   * foo.push(baz);\n   *\n   * console.log(bar.siblings.length) // 2\n   * console.log(baz.siblings.length) // 2\n   * ```\n   * @getter\n   * @name .siblings\n   * @return {Array}\n   * @api public\n   */Comment.Multiline
\n\n  Text.Whitespace
getName.Other
 Text.Whitespace
siblingsName.Otherany0.7159number0.0270string0.0211boolean0.0151any[]0.0110
(Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
thisKeyword
.Punctuation
parentName.Otherany0.2672Node0.0399View0.0123ViewBase0.0120Scope0.0119
 Text.Whitespace
?Operator
 Text.Whitespace
this.parent.nodesName.Other
 Text.Whitespace
:Operator
 Text.Whitespace
nullKeyword.Type
;Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
/**\n   * Calculate the node's current index on `node.parent.nodes`, or `-1` if the\n   * node does not have a parent, or is not on `node.parent.nodes`.\n   *\n   * ```js\n   * const foo = new Node({type: 'foo'});\n   * const bar = new Node({type: 'bar'});\n   * const baz = new Node({type: 'baz'});\n   * const qux = new Node({type: 'qux'});\n   * foo.push(bar);\n   * foo.push(baz);\n   * foo.unshift(qux);\n   *\n   * console.log(bar.index) // 1\n   * console.log(baz.index) // 2\n   * console.log(qux.index) // 0\n   * ```\n   * @setter\n   * @getter\n   * @name .index\n   * @return {Number}\n   * @api public\n   */Comment.Multiline
\n\n  Text.Whitespace
setName.Other
 Text.Whitespace
indexName.Othernumber0.7953any0.1618string0.0089void0.0072boolean0.0030
(Punctuation
indexName.Othernumber0.8386any0.1502string0.0041void0.0007complex0.0005
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
defineName.Othervoid0.7977any0.1731this0.0041Function0.0039complex0.0023
(Punctuation
thisKeyword
,Punctuation
 Text.Whitespace
'_index'Literal.String.Single
,Punctuation
 Text.Whitespace
indexName.Othernumber0.8633any0.1279string0.0043void0.0007complex0.0005
)Punctuation
;Punctuation
\n  Text.Whitespace
}Punctuation
\n  Text.Whitespace
getName.Other
 Text.Whitespace
indexName.Othernumber0.9398any0.0487string0.0046boolean0.0017void0.0014
(Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
ArrayName.BuiltinArrayConstructor0.9995Math0.0001ObjectConstructor0.0000any0.0000complex0.0000
.Punctuation
isArrayName.Othercomplex0.9950any0.0016number0.0008boolean0.0008any[]0.0006
(Punctuation
thisKeyword
.Punctuation
siblingsName.Otherany0.0834number0.0271any[]0.0255complex0.0083SymbolicTensor0.0063
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
-Operator
1Literal.Number.Float
;Punctuation
\n    Text.Whitespace
}Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
thisKeyword
.Punctuation
_indexName.Othernumber0.8947any0.0787complex0.0042string0.0019never0.0010
 Text.Whitespace
===Operator
 Text.Whitespace
-Operator
1Literal.Number.Float
 Text.Whitespace
||Operator
 Text.Whitespace
thisKeyword
.Punctuation
siblingsName.Otherany0.0680any[]0.0628complex0.0127SymbolicTensor0.0073User[]0.0067
[Punctuation
thisKeyword
.Punctuation
_indexName.Othernumber0.8830any0.0508string0.0132complex0.0058never0.0031
]Punctuation
 Text.Whitespace
!==Operator
 Text.Whitespace
thisKeyword
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
defineName.Othervoid0.7568any0.2083this0.0065complex0.0043Function0.0037
(Punctuation
thisKeyword
,Punctuation
 Text.Whitespace
'_index'Literal.String.Single
,Punctuation
 Text.Whitespace
thisKeyword
.Punctuation
siblingsName.Otherany[]0.1094any0.0752SymbolicTensor0.0141T[]0.0098string[]0.0093
.Punctuation
indexOfName.Othernumber0.9538any0.0422string0.0010complex0.0010boolean0.0007
(Punctuation
thisKeyword
)Punctuation
)Punctuation
;Punctuation
\n    Text.Whitespace
}Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
thisKeyword
.Punctuation
_indexName.Othernumber0.4032any0.1415complex0.0416never0.0122string0.0070
;Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
/**\n   * Get the previous node from the [siblings](#siblings) array or `null`.\n   *\n   * ```js\n   * const foo = new Node({type: 'foo'});\n   * const bar = new Node({type: 'bar'});\n   * const baz = new Node({type: 'baz'});\n   * foo.push(bar);\n   * foo.push(baz);\n   *\n   * console.log(baz.prev.type) // 'bar'\n   * ```\n   * @getter\n   * @name .prev\n   * @return {Object}\n   * @api public\n   */Comment.Multiline
\n\n  Text.Whitespace
getName.Other
 Text.Whitespace
prevName.Otherany0.7550number0.0385boolean0.0186string0.0114complex0.0077
(Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
ArrayName.BuiltinArrayConstructor0.9998Math0.0000ObjectConstructor0.0000any0.0000complex0.0000
.Punctuation
isArrayName.Othercomplex0.9967any0.0013any[]0.0005boolean0.0003number0.0002
(Punctuation
thisKeyword
.Punctuation
siblingsName.Otherany0.0773any[]0.0424complex0.0069number0.0057SymbolicTensor0.0048
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
thisKeyword
.Punctuation
siblingsName.Otherany[]0.0962any0.0438T[]0.0088SymbolicTensor0.0084complex0.0073
[Punctuation
thisKeyword
.Punctuation
indexName.Othernumber0.9668any0.0306string0.0009complex0.0003boolean0.0002
 Text.Whitespace
-Operator
 Text.Whitespace
1Literal.Number.Float
]Punctuation
 Text.Whitespace
||Operator
 Text.Whitespace
thisKeyword
.Punctuation
parentName.Otherany0.2880Node0.0270View0.0108Element0.0094complex0.0089
.Punctuation
prevName.Otherany0.5352number0.1507boolean0.0311string0.0268void0.0200
;Punctuation
\n    Text.Whitespace
}Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
nullKeyword.Constant
;Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
/**\n   * Get the next element from the [siblings](#siblings) array, or `null` if\n   * a next node does not exist.\n   *\n   * ```js\n   * const parent = new Node({type: 'root'});\n   * const foo = new Node({type: 'foo'});\n   * const bar = new Node({type: 'bar'});\n   * const baz = new Node({type: 'baz'});\n   * parent.push(foo);\n   * parent.push(bar);\n   * parent.push(baz);\n   *\n   * console.log(foo.next.type) // 'bar'\n   * console.log(bar.next.type) // 'baz'\n   * ```\n   * @getter\n   * @name .next\n   * @return {Object}\n   * @api public\n   */Comment.Multiline
\n\n  Text.Whitespace
getName.Other
 Text.Whitespace
nextName.Otherany0.9424string0.0143number0.0109boolean0.0048void0.0023
(Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
ArrayName.BuiltinArrayConstructor0.9998Math0.0000ObjectConstructor0.0000any0.0000complex0.0000
.Punctuation
isArrayName.Othercomplex0.9973any0.0012any[]0.0004boolean0.0002number0.0002
(Punctuation
thisKeyword
.Punctuation
siblingsName.Otherany0.0818any[]0.0460complex0.0082number0.0058SymbolicTensor0.0049
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
thisKeyword
.Punctuation
siblingsName.Otherany[]0.0924any0.0334T[]0.0104complex0.0079Promise<any>[]0.0071
[Punctuation
thisKeyword
.Punctuation
indexName.Othernumber0.9713any0.0268string0.0006complex0.0003boolean0.0002
 Text.Whitespace
+Operator
 Text.Whitespace
1Literal.Number.Float
]Punctuation
 Text.Whitespace
||Operator
 Text.Whitespace
thisKeyword
.Punctuation
parentName.Otherany0.3622Node0.0165never0.0119T0.0105NodePatcher0.0090
.Punctuation
nextName.Otherany0.8260string0.0380void0.0272number0.0224Function0.0148
;Punctuation
\n    Text.Whitespace
}Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
nullKeyword.Constant
;Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
/**\n   * Get the first child node from `node.nodes`.\n   *\n   * ```js\n   * const foo = new Node({type: 'foo'});\n   * const bar = new Node({type: 'bar'});\n   * const baz = new Node({type: 'baz'});\n   * const qux = new Node({type: 'qux'});\n   * foo.push(bar);\n   * foo.push(baz);\n   * foo.push(qux);\n   *\n   * console.log(foo.first.type) // 'bar'\n   * ```\n   * @getter\n   * @name .first\n   * @return {Object} The first node, or undefiend\n   * @api public\n   */Comment.Multiline
\n\n  Text.Whitespace
getName.Other
 Text.Whitespace
firstName.Otherany0.8721string0.0392number0.0222complex0.0184boolean0.0104
(Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
ArrayName.BuiltinArrayConstructor0.9998Math0.0000ObjectConstructor0.0000Array0.0000JSON0.0000
.Punctuation
isArrayName.Othercomplex0.9975any0.0009any[]0.0003boolean0.0002void0.0002
(Punctuation
thisKeyword
.Punctuation
nodesName.Otherany[]0.2288any0.1721Node[]0.0247complex0.0197string[]0.0114
)Punctuation
 Text.Whitespace
?Operator
 Text.Whitespace
thisKeyword
.Punctuation
nodesName.Otherany[]0.4235any0.2018string[]0.0258complex0.0247Node[]0.0123
[Punctuation
0Literal.Number.Float
]Punctuation
 Text.Whitespace
:Operator
 Text.Whitespace
nullKeyword.Constant
;Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
/**\n   * Get the last child node from `node.nodes`.\n   *\n   * ```js\n   * const foo = new Node({type: 'foo'});\n   * const bar = new Node({type: 'bar'});\n   * const baz = new Node({type: 'baz'});\n   * const qux = new Node({type: 'qux'});\n   * foo.push(bar);\n   * foo.push(baz);\n   * foo.push(qux);\n   *\n   * console.log(foo.last.type) // 'qux'\n   * ```\n   * @getter\n   * @name .last\n   * @return {Object} The last node, or undefiend\n   * @api public\n   */Comment.Multiline
\n\n  Text.Whitespace
getName.Other
 Text.Whitespace
lastName.Otherany0.8458string0.0779number0.0324boolean0.0085complex0.0056
(Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
ArrayName.BuiltinArrayConstructor0.9998Math0.0000ObjectConstructor0.0000Array0.0000JSON0.0000
.Punctuation
isArrayName.Othercomplex0.9974any0.0010any[]0.0003boolean0.0003void0.0002
(Punctuation
thisKeyword
.Punctuation
nodesName.Otherany[]0.2339any0.1785Node[]0.0268complex0.0196string[]0.0124
)Punctuation
 Text.Whitespace
?Operator
 Text.Whitespace
thisKeyword
.Punctuation
nodesName.Otherany[]0.4001any0.1034string[]0.0314Node[]0.0201complex0.0196
[Punctuation
thisKeyword
.Punctuation
nodesName.Otherany[]0.1943any0.0394Node[]0.0274string[]0.0182HTMLCollection0.0089
.Punctuation
lengthName.Othernumber0.8439any0.1538string0.0007complex0.0005boolean0.0003
 Text.Whitespace
-Operator
 Text.Whitespace
1Literal.Number.Float
]Punctuation
 Text.Whitespace
:Operator
 Text.Whitespace
nullKeyword.Constant
;Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
/**\n   * Get the `node.depth`. The root node has a depth of 0. Add 1 to child nodes\n   * for each level of nesting.\n   *\n   * ```js\n   * const foo = new Node({type: 'foo'});\n   * foo.push(bar);\n   *\n   * console.log(foo.depth) // 1\n   * console.log(bar.depth) // 2\n   * ```\n   * @getter\n   * @name .depth\n   * @return {Object} The last node, or undefiend\n   * @api public\n   */Comment.Multiline
\n\n  Text.Whitespace
getName.Other
 Text.Whitespace
depthName.Othernumber0.9281any0.0630string0.0037boolean0.0025complex0.0005
(Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
thisKeyword
.Punctuation
parentName.Otherany0.3457Node0.0752View0.0083Element0.0076Scope0.0074
 Text.Whitespace
?Operator
 Text.Whitespace
thisKeyword
.Punctuation
parentName.Otherany0.3026Node0.0361never0.0119Suite0.0074Tree0.0073
.Punctuation
depthName.Othernumber0.7113any0.2819string0.0028void0.0013boolean0.0009
 Text.Whitespace
+Operator
 Text.Whitespace
1Name.Other
 Text.Whitespace
:Operator
 Text.Whitespace
0Keyword.Type
;Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
/**\n   * Static method that returns true if the given value is a node.\n   *\n   * ```js\n   * const Node = require('snapdragon-node');\n   * const node = new Node({type: 'foo'});\n   * console.log(Node.isNode(node)); //=> true\n   * console.log(Node.isNode({})); //=> false\n   * ```\n   * @name Node#isNode\n   * @param {Object} `node`\n   * @returns {Boolean}\n   * @api public\n   * @static\n   */Comment.Multiline
\n\n  Text.Whitespace
staticKeyword
 Text.Whitespace
isNodeName.Otherboolean0.9792any0.0125complex0.0028void0.0013Boolean0.0006
(Punctuation
nodeName.Otherany0.3993Node0.2075TreeModel0.0203Tree0.0158never0.0136
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
isObjectName.Otherboolean0.9573any0.0147complex0.0143void0.0040false0.0023
(Punctuation
nodeName.Otherany0.7539Node0.0938never0.0152Tree0.0073string0.0051
)Punctuation
 Text.Whitespace
&&Operator
 Text.Whitespace
(Punctuation
nodeName.Otherany0.8371Node0.0506complex0.0152never0.0102TreeModel0.0037
 Text.Whitespace
instanceofOperator.Word
 Text.Whitespace
thisKeyword
 Text.Whitespace
||Operator
 Text.Whitespace
nodeName.Otherany0.8335Node0.0235complex0.0093TreeModel0.0084never0.0042
.Punctuation
isNodeName.Otherboolean0.7533any0.2374complex0.0035void0.0029string0.0008
 Text.Whitespace
===Operator
 Text.Whitespace
trueKeyword.Constant
)Punctuation
;Punctuation
\n  Text.Whitespace
}Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
Text
/**\n * Simplified assertion. Throws an error is `value` is not true.\n */Comment.Multiline
\n\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
assertName.Othervoid0.8847any0.0750boolean0.0076complex0.0043Function0.0042
(Punctuation
valueName.Otherany0.9041string0.0599number0.0141boolean0.0130void0.0011
,Punctuation
 Text.Whitespace
messageName.Otherstring0.8892any0.1018number0.0025boolean0.0009complex0.0008
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
valueName.Otherany0.6834boolean0.2602string0.0365number0.0063complex0.0027
 Text.Whitespace
!==Operator
 Text.Whitespace
trueKeyword.Constant
)Punctuation
 Text.Whitespace
throwKeywordany0.5283Error0.3814complex0.0178string0.0137boolean0.0092
 Text.Whitespace
newOperator.Wordany0.5395Error0.2159ErrorConstructor0.1552string0.0383complex0.0052
 Text.Whitespace
ErrorName.ExceptionErrorConstructor1.0000Error0.0000any0.0000never0.0000complex0.0000
(Punctuation
messageName.Otherstring0.8599any0.1260Error0.0037complex0.0018number0.0011
)Punctuation
;Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
expectName.Otherany0.9201complex0.0351void0.0159ExpectStatic0.0017string0.0011
(Punctuation
valueName.Otherany0.8563string0.0884number0.0381boolean0.0061never0.0012
,Punctuation
 Text.Whitespace
nameName.Otherstring0.7849any0.2104number0.0013boolean0.0006void0.0006
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
assertName.Otherany0.6098void0.3220complex0.0171Function0.0049IAssertFunctions0.0049
(Punctuation
valueName.Otherany0.8633string0.1028number0.0152boolean0.0088complex0.0024
,Punctuation
 Text.Whitespace
'expected 'Literal.String.Single
 Text.Whitespace
+Operator
 Text.Whitespace
nameName.Otherstring0.6188any0.3724number0.0035complex0.0022void0.0007
 Text.Whitespace
+Operator
 Text.Whitespace
' to be an instance of Node'Literal.String.Single
)Punctuation
;Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
hasOwnName.Otherboolean0.9823any0.0078number0.0020complex0.0019string0.0017
(Punctuation
objName.Otherany0.8596Object0.0488object0.0370string0.0170{}0.0056
,Punctuation
 Text.Whitespace
propName.Otherstring0.8662any0.1026number0.0154boolean0.0030Object0.0022
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
returnKeyword
 Text.Whitespace
ObjectName.BuiltinObjectConstructor0.9999Object0.0000any0.0000complex0.0000{}0.0000
.Punctuation
hasOwnPropertyName.Othercomplex0.9839any0.0090Object0.0033boolean0.0009string0.0009
.Punctuation
callName.Otherany0.8662complex0.0881string0.0197number0.0059void0.0049
(Punctuation
objName.Otherany0.8095Object0.0712object0.0441{}0.0267complex0.0125
,Punctuation
 Text.Whitespace
propName.Otherstring0.6944any0.2754number0.0069complex0.0050boolean0.0046
)Punctuation
;Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
isEmptyName.Otherboolean0.9321any0.0417void0.0080complex0.0062string0.0033
(Punctuation
nodeName.Otherany0.8298Node0.0424string0.0041never0.0041Element0.0041
,Punctuation
 Text.Whitespace
fnName.Otherany0.7052Function0.1995boolean0.0230string0.0219number0.0058
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
expectName.Otherany0.9926complex0.0058number0.0001void0.0001string0.0001
(Punctuation
NodeName.Otherany0.9043complex0.0799Node0.0013Object0.0012Error0.0009
.Punctuation
isNodeName.Otherboolean0.5267any0.2965complex0.1337string0.0149void0.0068
(Punctuation
nodeName.Otherany0.8666Node0.0349never0.0091complex0.0064string0.0052
)Punctuation
,Punctuation
 Text.Whitespace
'node'Literal.String.Single
)Punctuation
;Punctuation
\n\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
ArrayName.BuiltinArrayConstructor0.9996Math0.0001any0.0000ObjectConstructor0.0000complex0.0000
.Punctuation
isArrayName.Othercomplex0.9977any0.0012boolean0.0004any[]0.0002void0.0001
(Punctuation
nodeName.Otherany0.8582complex0.0249never0.0096Node0.0095TreeModel0.0021
.Punctuation
nodesName.Otherany0.7585any[]0.0746complex0.0271Node[]0.0071string0.0037
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
typeofOperator.Word
 Text.Whitespace
fnName.Otherany0.8069complex0.0801Function0.0410boolean0.0141never0.0083
 Text.Whitespace
===Operator
 Text.Whitespace
'function'Literal.String.Single
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
fnName.Otherany0.7038Function0.1633boolean0.0355complex0.0206void0.0167
(Punctuation
nodeName.Otherany0.8878Node0.0200never0.0122string0.0047Element0.0034
)Punctuation
;Punctuation
\n    Text.Whitespace
}Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
!Operator
nodeName.Otherany0.9470complex0.0096Node0.0047never0.0029boolean0.0021
.Punctuation
valueName.Otherany0.9580string0.0239boolean0.0088complex0.0029number0.0021
;Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
nodeName.Otherany0.8364Node0.0260complex0.0108never0.0097any[]0.0022
.Punctuation
nodesName.Otherany0.6356any[]0.1006complex0.0133Node[]0.0133string[]0.0090
.Punctuation
lengthName.Otherany0.7924number0.2043complex0.0011string0.0008boolean0.0005
 Text.Whitespace
===Operator
 Text.Whitespace
0Literal.Number.Float
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
trueKeyword.Constant
;Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
forKeyword
 Text.Whitespace
(Punctuation
constKeyword.Declaration
 Text.Whitespace
childName.Otherany0.6630Node0.1034complex0.0141never0.0081Element0.0065
 Text.Whitespace
ofKeyword
 Text.Whitespace
nodeName.Otherany0.8189Node0.0288complex0.0110never0.0037Node<Node>0.0028
.Punctuation
nodesName.Otherany0.8643any[]0.0361complex0.0110Node[]0.0058string0.0027
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
isEmptyName.Otherboolean0.9390any0.0520complex0.0037false0.0010string0.0010
(Punctuation
childName.Otherany0.8804Node0.0403never0.0072complex0.0052string0.0034
,Punctuation
 Text.Whitespace
fnName.Otherany0.9004Function0.0198boolean0.0175string0.0120number0.0075
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
falseKeyword.Constant
;Punctuation
\n    Text.Whitespace
}Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
returnKeyword
 Text.Whitespace
trueKeyword.Constant
;Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
isTypeName.Otherboolean0.4119complex0.3635any0.1583void0.0248number0.0102
(Punctuation
nodeName.Otherany0.6508Node0.0916never0.0128TreeModel0.0083Element0.0071
,Punctuation
 Text.Whitespace
typeKeyword.Reserved
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
expectName.Otherany0.9929complex0.0057string0.0003number0.0001ExpectStatic0.0001
(Punctuation
NodeName.Otherany0.8836complex0.0965Node0.0017Error0.0012Object0.0010
.Punctuation
isNodeName.Otherboolean0.7110any0.1745complex0.0834string0.0122void0.0039
(Punctuation
nodeName.Otherany0.8475Node0.0378never0.0117string0.0057complex0.0053
)Punctuation
,Punctuation
 Text.Whitespace
'node'Literal.String.Single
)Punctuation
;Punctuation
\n\n  Text.Whitespace
switchKeyword
 Text.Whitespace
(Punctuation
typeOfName.Otherboolean0.7323string0.1701any0.0657complex0.0111number0.0040
(Punctuation
typeKeyword.Reserved
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
caseKeyword
 Text.Whitespace
'string'Literal.String.Single
:Operator
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
nodeName.Otherany0.7701Node0.0405complex0.0269never0.0122TreeModel0.0048
.Punctuation
typeKeyword.Reserved
 Text.Whitespace
===Operator
 Text.Whitespace
typeKeyword.Reserved
;Punctuation
\n    Text.Whitespace
caseKeyword
 Text.Whitespace
'regexp'Literal.String.Single
:Operator
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
typeKeyword.Reserved
.Punctuation
testName.Otherboolean0.9672any0.0188complex0.0030void0.0030string0.0025
(Punctuation
nodeName.Otherany0.9106Node0.0122complex0.0105never0.0053string0.0031
.Punctuation
typeKeyword.Reserved
)Punctuation
;Punctuation
\n    Text.Whitespace
caseKeyword
 Text.Whitespace
'array'Literal.String.Single
:Operator
\n      Text.Whitespace
forKeyword
 Text.Whitespace
(Punctuation
constKeyword.Declaration
 Text.Whitespace
keyName.Otherstring0.7574any0.2226complex0.0130number0.0023never0.0007
 Text.Whitespace
ofKeyword
 Text.Whitespace
typeKeyword.Reserved
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
nodeName.Otherany0.7765complex0.0864Node0.0202never0.0065boolean0.0052
.Punctuation
isTypeName.Otherany0.4615boolean0.3150complex0.2126number0.0022void0.0021
(Punctuation
nodeName.Otherany0.8730Node0.0289complex0.0135never0.0129string0.0072
,Punctuation
 Text.Whitespace
keyName.Otherstring0.6592any0.3050complex0.0206number0.0052boolean0.0015
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n          Text.Whitespace
returnKeyword
 Text.Whitespace
trueKeyword.Constant
;Punctuation
\n        Text.Whitespace
}Punctuation
\n      Text.Whitespace
}Punctuation
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
falseKeyword.Constant
;Punctuation
\n    Text.Whitespace
defaultKeyword
:Operator
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
throwKeywordany0.6187complex0.1304Error0.1263boolean0.0247{}0.0217
 Text.Whitespace
newOperator.Wordany0.5907complex0.0457Error0.0389string0.0308boolean0.0225
 Text.Whitespace
TypeErrorName.ExceptionTypeErrorConstructor0.9893ErrorConstructor0.0024complex0.0003BooleanConstructor0.0002MapConstructor0.0002
(Punctuation
'expected "type" to be an array, string or regexp'Literal.String.Single
)Punctuation
;Punctuation
\n    Text.Whitespace
}Punctuation
\n  Text.Whitespace
}Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
isObjectName.Otherboolean0.9751any0.0129complex0.0059string0.0016number0.0008
(Punctuation
valName.Otherany0.9028boolean0.0392string0.0213number0.0182complex0.0023
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
returnKeyword
 Text.Whitespace
typeOfName.Otherboolean0.6723any0.1703string0.1075complex0.0149number0.0088
(Punctuation
valName.Otherany0.9285string0.0368number0.0080boolean0.0070complex0.0029
)Punctuation
 Text.Whitespace
===Operator
 Text.Whitespace
'object'Literal.String.Single
;Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
typeOfName.Otherstring0.4751any0.3953boolean0.0593complex0.0190number0.0155
(Punctuation
valName.Otherany0.8974string0.0646number0.0140boolean0.0041never0.0033
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
typeofOperator.Word
 Text.Whitespace
valName.Otherany0.9631string0.0103complex0.0098number0.0050boolean0.0039
 Text.Whitespace
===Operator
 Text.Whitespace
'string'Literal.String.Single
)Punctuation
 Text.Whitespace
returnKeyword
 Text.Whitespace
'string'Literal.String.Single
;Punctuation
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
ArrayName.BuiltinArrayConstructor0.9995Math0.0001any0.0000ObjectConstructor0.0000complex0.0000
.Punctuation
isArrayName.Othercomplex0.9969any0.0015any[]0.0005boolean0.0004number0.0002
(Punctuation
valName.Otherany0.9360complex0.0238number0.0140string0.0134never0.0035
)Punctuation
)Punctuation
 Text.Whitespace
returnKeyword
 Text.Whitespace
'array'Literal.String.Single
;Punctuation
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
valName.Otherany0.9381string0.0187complex0.0172boolean0.0062{}0.0040
 Text.Whitespace
instanceofOperator.Word
 Text.Whitespace
RegExpName.BuiltinRegExpConstructor0.9960RegExp0.0006RegExpExecArray0.0001RegExp[]0.0001ErrorConstructor0.0000
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
'regexp'Literal.String.Single
;Punctuation
\n  Text.Whitespace
}Punctuation
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
valName.Otherany0.9474string0.0201number0.0160boolean0.0081complex0.0029
 Text.Whitespace
===Operator
 Text.Whitespace
voidOperator.Word
 Text.Whitespace
0Literal.Number.Float
)Punctuation
 Text.Whitespace
returnKeyword
 Text.Whitespace
'undefiend'Literal.String.Single
;Punctuation
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
valName.Otherany0.9553string0.0268boolean0.0057number0.0055complex0.0027
 Text.Whitespace
===Operator
 Text.Whitespace
nullKeyword.Constant
)Punctuation
 Text.Whitespace
returnKeyword
 Text.Whitespace
'null'Literal.String.Single
;Punctuation
\n  Text.Whitespace
returnKeyword
 Text.Whitespace
typeofOperator.Word
 Text.Whitespace
valName.Otherany0.9428complex0.0175number0.0072boolean0.0068any[]0.0053
;Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
Text
/**\n * assign `token` properties to `node`\n */Comment.Multiline
\n\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
assignName.Othervoid0.8234any0.1293Function0.0133boolean0.0068complex0.0062
(Punctuation
nodeName.Otherany0.5968Node0.0889never0.0387Element0.0116Tree0.0053
,Punctuation
 Text.Whitespace
tokenName.Otherany0.7527string0.1083Token0.0408never0.0050Node0.0039
,Punctuation
 Text.Whitespace
cloneName.Otherany0.8640number0.0277string0.0209boolean0.0075void0.0063
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
copyName.Otherany0.4620void0.4260T0.0174complex0.0125Function0.0076
(Punctuation
nodeName.Otherany0.8156Node0.0438never0.0181Element0.0048string0.0036
,Punctuation
 Text.Whitespace
tokenName.Otherany0.8333string0.0718Token0.0280complex0.0049never0.0036
,Punctuation
 Text.Whitespace
cloneName.Otherany0.8859string0.0251number0.0172T0.0065Node0.0052
)Punctuation
;Punctuation
\n  Text.Whitespace
ensureNodesName.Othervoid0.8781any0.0888boolean0.0082complex0.0061Function0.0058
(Punctuation
nodeName.Otherany0.7467Node0.0699never0.0245Element0.0076string0.0063
,Punctuation
 Text.Whitespace
cloneName.Otherany0.8089string0.0467number0.0190T0.0128Node0.0114
)Punctuation
;Punctuation
\n\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
tokenName.Otherany0.8526Token0.0545string0.0127Node0.0055complex0.0039
.Punctuation
constructorKeyword.Reserved
 Text.Whitespace
&&Operator
 Text.Whitespace
tokenName.Otherany0.8666Token0.0270string0.0082Node0.0046Function0.0041
.Punctuation
constructorKeyword.Reserved
.Punctuation
nameName.Otherany0.8590string0.1378complex0.0017boolean0.0003number0.0003
 Text.Whitespace
===Operator
 Text.Whitespace
'Token'Literal.String.Single
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
copyName.Otherany0.5540void0.3321T0.0230complex0.0226Function0.0115
(Punctuation
nodeName.Otherany0.8820Node0.0437never0.0098Element0.0041complex0.0030
,Punctuation
 Text.Whitespace
tokenName.Otherany0.9347Token0.0167string0.0050Node0.0039complex0.0023
.Punctuation
constructorKeyword.Reserved
.Punctuation
prototypeName.Otherany0.9714Function0.0058Object0.0015string0.0014T0.0012
,Punctuation
 Text.Whitespace
cloneName.Otherany0.8306string0.0719number0.0274T0.0147{}0.0053
)Punctuation
;Punctuation
\n  Text.Whitespace
}Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
copyName.Otherany0.5125void0.3543string0.0220complex0.0116boolean0.0088
(Punctuation
receiverName.Otherany0.6236string0.1477Object0.0095{}0.0075object0.0058
,Punctuation
 Text.Whitespace
providerName.Otherany0.6080string0.2327number0.0177boolean0.0140object0.0044
,Punctuation
 Text.Whitespace
cloneName.Otherany0.9372string0.0187number0.0184boolean0.0024Function0.0024
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
descriptorsName.Other{}0.1172Object0.0783any0.0371any[]0.0354void0.0217
 Text.Whitespace
=Operator
 Text.Whitespace
ObjectName.BuiltinObjectConstructor0.9999Object0.0000any0.0000complex0.0000ArrayConstructor0.0000
.Punctuation
getOwnPropertyDescriptorsName.Othercomplex0.4658boolean0.1669string0.1143any0.0854void0.0510
(Punctuation
providerName.Otherany0.7850string0.0807complex0.0176void0.0098number0.0053
)Punctuation
;Punctuation
\n  Text.Whitespace
forKeyword
 Text.Whitespace
(Punctuation
constKeyword.Declaration
 Text.Whitespace
keyName.Otherstring0.9709any0.0236complex0.0027string[]0.0008number0.0005
 Text.Whitespace
inOperator.Word
 Text.Whitespace
descriptorsName.Other{}0.0661Object0.0336any0.0170complex0.0142object0.0103
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
keyName.Otherstring0.8460any0.1245complex0.0187number0.0015boolean0.0015
 Text.Whitespace
===Operator
 Text.Whitespace
'constructor'Literal.String.Single
 Text.Whitespace
||Operator
 Text.Whitespace
keyName.Otherstring0.9384any0.0528complex0.0055number0.0010boolean0.0006
 Text.Whitespace
inOperator.Word
 Text.Whitespace
receiverName.Otherany0.5250complex0.1218string0.0426{}0.0295Object0.0226
)Punctuation
 Text.Whitespace
continueKeyword
;Punctuation
\n    Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
descName.Otherany0.4085PropertyDescriptor0.1794complex0.0606{}0.0281string0.0169
 Text.Whitespace
=Operator
 Text.Whitespace
descriptorsName.Other{}0.1977any0.0461Object0.0315complex0.0135boolean0.0090
[Punctuation
keyName.Otherstring0.9046any0.0571complex0.0264number0.0071void0.0008
]Punctuation
;Punctuation
\n\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
hasOwnName.Otherboolean0.9137complex0.0570any0.0213void0.0015number0.0012
(Punctuation
descName.Otherany0.5101PropertyDescriptor0.1668complex0.1119string0.0361boolean0.0066
,Punctuation
 Text.Whitespace
'value'Literal.String.Single
)Punctuation
 Text.Whitespace
&&Operator
 Text.Whitespace
cloneName.Otherany0.4400boolean0.4293string0.0149void0.0144T0.0131
 Text.Whitespace
===Operator
 Text.Whitespace
trueKeyword.Constant
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
descName.OtherPropertyDescriptor0.4559any0.3064complex0.0158Node0.0035object0.0033
.Punctuation
valueName.Otherany0.8884string0.0572number0.0126complex0.0121void0.0080
 Text.Whitespace
=Operator
 Text.Whitespace
cloneDeepName.Otherany0.3823T0.3667complex0.1336void0.0178{}0.0127
(Punctuation
descName.Otherany0.4914PropertyDescriptor0.1818complex0.1118Object0.0089Node0.0054
.Punctuation
valueName.Otherany0.5958string0.3288number0.0200complex0.0199boolean0.0099
)Punctuation
;Punctuation
\n    Text.Whitespace
}Punctuation
\n    Text.Whitespace
ObjectName.BuiltinObjectConstructor0.9999Object0.0000any0.0000complex0.0000PropertyDescriptor0.0000
.Punctuation
definePropertyName.Othercomplex0.9941void0.0020any0.0019boolean0.0005string0.0004
(Punctuation
receiverName.Otherany0.6948string0.0696complex0.0580Object0.0119{}0.0088
,Punctuation
 Text.Whitespace
keyName.Otherstring0.7960any0.1637complex0.0287number0.0036string[]0.0014
,Punctuation
 Text.Whitespace
descName.Otherany0.4036PropertyDescriptor0.3450complex0.0409string0.0319Object0.0190
)Punctuation
;Punctuation
\n  Text.Whitespace
}Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
ensureNodesName.Othervoid0.9059any0.0527boolean0.0083string0.0066number0.0061
(Punctuation
nodeName.Otherany0.5096Node0.1714TreeModel0.0131Element0.0100never0.0080
,Punctuation
 Text.Whitespace
cloneName.Otherany0.8403number0.0429string0.0287Node0.0156void0.0052
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
nodeName.Otherany0.7219Node0.0651complex0.0111TreeModel0.0082Element0.0052
.Punctuation
nodesName.Otherany0.7470any[]0.0358complex0.0123Node[]0.0104boolean0.0064
)Punctuation
 Text.Whitespace
returnKeyword
;Punctuation
\n\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
ArrayName.BuiltinArrayConstructor0.9995Math0.0001ObjectConstructor0.0000any0.0000complex0.0000
.Punctuation
isArrayName.Othercomplex0.9985any0.0007void0.0003boolean0.0002number0.0001
(Punctuation
nodeName.Otherany0.7442complex0.0328Node0.0140TreeNode0.0059TreeModel0.0058
.Punctuation
nodesName.Otherany0.6901any[]0.0615complex0.0273Node[]0.0086string[]0.0071
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
lenName.Othernumber0.8760any0.1189string0.0010boolean0.0007complex0.0007
 Text.Whitespace
=Operator
 Text.Whitespace
nodeName.Otherany0.6752Node0.0517complex0.0204TreeNode0.0097TreeModel0.0087
.Punctuation
nodesName.Otherany0.3450any[]0.1168Node[]0.0389string[]0.0165complex0.0137
.Punctuation
lengthName.Otherany0.6089number0.3874complex0.0016string0.0006boolean0.0004
;Punctuation
\n    Text.Whitespace
forKeyword
 Text.Whitespace
(Punctuation
letKeyword.Declaration
 Text.Whitespace
iName.Othernumber0.9917any0.0077string0.0003boolean0.0001void0.0000
 Text.Whitespace
=Operator
 Text.Whitespace
0Literal.Number.Float
;Punctuation
 Text.Whitespace
iName.Othernumber0.9777any0.0213void0.0003string0.0003boolean0.0001
 Text.Whitespace
<Operator
 Text.Whitespace
lenName.Othernumber0.9253any0.0733boolean0.0003string0.0003complex0.0002
;Punctuation
 Text.Whitespace
iName.Othernumber0.9827any0.0166string0.0002boolean0.0002void0.0001
++Operator
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
childName.Otherany0.4225Node0.2123Node<Node>0.0203TreeNode0.0060Element0.0058
 Text.Whitespace
=Operator
 Text.Whitespace
nodeName.Otherany0.7839Node0.0794complex0.0104TreeModel0.0060Node<Node>0.0056
.Punctuation
nodesName.Otherany0.6113any[]0.0617Node[]0.0258complex0.0177string[]0.0096
[Punctuation
iName.Othernumber0.9658any0.0259string0.0067boolean0.0003complex0.0002
]Punctuation
;Punctuation
\n      Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
NodeName.Otherany0.6948complex0.2860Node0.0029Object0.0020boolean0.0017
.Punctuation
isNodeName.Otherboolean0.7836complex0.0962any0.0933void0.0150string0.0040
(Punctuation
childName.Otherany0.6038Node0.2306never0.0250Node<Node>0.0098View0.0061
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
childName.Otherany0.4635Node0.2143Node<Node>0.0273never0.0140Element0.0064
 Text.Whitespace
=Operator
 Text.Whitespace
nodeName.Otherany0.7970Node0.0901complex0.0125never0.0074Node<Node>0.0058
.Punctuation
nodesName.Otherany0.6265any[]0.0596complex0.0304Node[]0.0210NodeList0.0089
[Punctuation
iName.Othernumber0.9500any0.0380string0.0094boolean0.0008Node0.0003
]Punctuation
 Text.Whitespace
=Operator
 Text.Whitespace
newOperator.Wordany0.9073Node0.0263string0.0114Error0.0047complex0.0046
 Text.Whitespace
NodeName.Otherany0.9354complex0.0590Node0.0013Object0.0005string0.0004
(Punctuation
nodeName.Otherany0.9304Node0.0169complex0.0141TreeModel0.0023never0.0017
.Punctuation
nodesName.Otherany0.5308any[]0.0708complex0.0400Node[]0.0344string[]0.0228
[Punctuation
iName.Othernumber0.9586any0.0353string0.0046boolean0.0005complex0.0002
]Punctuation
,Punctuation
 Text.Whitespace
nullKeyword.Constant
,Punctuation
 Text.Whitespace
trueKeyword.Constant
)Punctuation
;Punctuation
\n        Text.Whitespace
childName.Otherany0.6416Node0.1215never0.0194Node<Node>0.0112complex0.0078
.Punctuation
parentName.Otherany0.8788Node0.0376never0.0088string0.0060Function0.0050
 Text.Whitespace
=Operator
 Text.Whitespace
nodeName.Otherany0.7545Node0.1046never0.0148complex0.0069Function0.0044
;Punctuation
\n        Text.Whitespace
childName.Otherany0.6521Node0.1089never0.0188complex0.0079Node<Node>0.0069
.Punctuation
indexName.Othernumber0.5066any0.4866string0.0026void0.0009complex0.0009
 Text.Whitespace
=Operator
 Text.Whitespace
iName.Othernumber0.9412any0.0541string0.0026boolean0.0005void0.0003
;Punctuation
\n      Text.Whitespace
}Punctuation
\n      Text.Whitespace
ensureNodesName.Othervoid0.8408any0.0908string0.0142complex0.0116number0.0104
(Punctuation
childName.Otherany0.3914Node0.2647never0.0459Node<Node>0.0081complex0.0072
)Punctuation
;Punctuation
\n    Text.Whitespace
}Punctuation
\n    Text.Whitespace
nodeName.Otherany0.6551Node0.0699complex0.0510never0.0121TreeNode0.0062
.Punctuation
sizeName.Othernumber0.7838any0.2110string0.0030void0.0005complex0.0004
 Text.Whitespace
=Operator
 Text.Whitespace
lenName.Othernumber0.8741any0.1205string0.0019complex0.0007boolean0.0007
;Punctuation
\n  Text.Whitespace
}Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
Text
/**\n * Deeply clone plain objects and arrays.\n */Comment.Multiline
\n\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
cloneDeepName.Otherany0.5363T0.1027complex0.0394string0.0375void0.0317
(Punctuation
valueName.Otherany0.6624string0.2697number0.0297boolean0.0050Object0.0048
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
objName.Other{}0.6673any0.1941object0.0352Object0.0309complex0.0077
 Text.Whitespace
=Operator
 Text.Whitespace
{Punctuation
}Punctuation
;Punctuation
\n  Text.Whitespace
switchKeyword
 Text.Whitespace
(Punctuation
typeOfName.Otherany0.5036string0.3596boolean0.0401complex0.0293any[]0.0109
(Punctuation
valueName.Otherany0.6670string0.3022{}0.0039number0.0032complex0.0029
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
caseKeyword
 Text.Whitespace
'array'Literal.String.Single
:Operator
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
valueName.Otherany0.6904any[]0.2204string[]0.0228string0.0178complex0.0122
.Punctuation
mapName.OtherU[]0.4846any0.3882complex0.1172void0.0022any[]0.0017
(Punctuation
eleName.Otherany0.9450string0.0191complex0.0149number0.0049void0.0036
 Text.Whitespace
=>Punctuation
 Text.Whitespace
cloneDeepName.Otherany0.4190T0.2852complex0.1007{}0.0490void0.0318
(Punctuation
eleName.Otherany0.9307string0.0399complex0.0108number0.0044T0.0024
)Punctuation
)Punctuation
;Punctuation
\n    Text.Whitespace
caseKeyword
 Text.Whitespace
'object'Literal.String.Single
:Operator
\n      Text.Whitespace
forKeyword
 Text.Whitespace
(Punctuation
constKeyword.Declaration
 Text.Whitespace
keyName.Otherstring0.9254any0.0599complex0.0107number0.0021{}0.0003
 Text.Whitespace
ofKeyword
 Text.Whitespace
ObjectName.BuiltinObjectConstructor0.9999Object0.0000complex0.0000any0.0000{}0.0000
.Punctuation
keysName.Otherstring[]0.9348complex0.0371any[]0.0132string0.0058number[]0.0014
(Punctuation
valueName.Otherany0.9197complex0.0229{}0.0206string0.0153any[]0.0055
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
objName.Other{}0.4836any0.3738Object0.0548complex0.0284T0.0191
[Punctuation
keyName.Otherstring0.9550any0.0347number0.0048complex0.0028{}0.0007
]Punctuation
 Text.Whitespace
=Operator
 Text.Whitespace
cloneDeepName.OtherT0.4756any0.3137{}0.0706void0.0286complex0.0278
(Punctuation
valueName.Otherany0.9315{}0.0263complex0.0099T0.0079string0.0043
[Punctuation
keyName.Otherstring0.9600any0.0277complex0.0057number0.0031{}0.0007
]Punctuation
)Punctuation
;Punctuation
\n      Text.Whitespace
}Punctuation
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
objName.Otherany0.5900{}0.2117Object0.0670object0.0428T0.0273
;Punctuation
\n    Text.Whitespace
defaultKeyword
:Operator
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
valueName.Otherany0.7953string0.1153boolean0.0327{}0.0126number0.0116
;Punctuation
\n    Text.Whitespace
}Punctuation
\n  Text.Whitespace
}Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
visitName.Othervoid0.9521any0.0241string0.0045complex0.0032boolean0.0025
(Punctuation
nodeName.Otherany0.7689Node0.0677Function0.0065never0.0060Element0.0041
,Punctuation
 Text.Whitespace
fnName.Otherany0.6708Function0.2211string0.0103number0.0099boolean0.0086
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
fnName.Otherany0.6458Function0.2869void0.0252complex0.0089boolean0.0032
(Punctuation
nodeName.Otherany0.7611Node0.0499never0.0086Function0.0062TreeNode0.0049
)Punctuation
;Punctuation
\n  Text.Whitespace
returnKeyword
 Text.Whitespace
nodeName.Otherany0.7543Node0.0403complex0.0103Node<Node>0.0077TreeModel0.0054
.Punctuation
nodesName.Otherany0.6865any[]0.0571Node[]0.0116complex0.0098boolean0.0082
 Text.Whitespace
?Operator
 Text.Whitespace
mapVisitName.Otherany0.7762string0.0372boolean0.0294any[]0.0271complex0.0166
(Punctuation
nodeName.Otherany0.8745Node0.0358string0.0082never0.0053Function0.0048
,Punctuation
 Text.Whitespace
fnName.Otherany0.5028Function0.2730number0.0387string0.0322boolean0.0182
)Punctuation
 Text.Whitespace
:Operator
 Text.Whitespace
nodeName.Otherany0.8970Node0.0228Function0.0057string0.0051never0.0045
;Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
mapVisitName.Othervoid0.3269any0.2826boolean0.1401string0.1139complex0.0426
(Punctuation
nodeName.Otherany0.7139Node0.0916Function0.0073string0.0062never0.0048
,Punctuation
 Text.Whitespace
fnName.Otherany0.7211Function0.1795string0.0152boolean0.0129number0.0091
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
nodeName.Otherany0.8308Node0.0179complex0.0137TreeModel0.0051any[]0.0045
.Punctuation
nodesName.Otherany0.6057any[]0.1534complex0.0232Node[]0.0136string[]0.0136
.Punctuation
forEachName.Otherany0.7099void0.1662complex0.1092v...0.0048number0.0019
(Punctuation
nName.Otherany0.7076number0.1764string0.0725void0.0121complex0.0109
 Text.Whitespace
=>Punctuation
 Text.Whitespace
visitName.Othervoid0.9670any0.0188Promise<void>0.0044complex0.0023boolean0.0012
(Punctuation
nName.Otherany0.7191number0.2314string0.0206void0.0049complex0.0047
,Punctuation
 Text.Whitespace
fnName.Otherany0.6125Function0.2697void0.0229number0.0182string0.0106
)Punctuation
)Punctuation
;Punctuation
\n  Text.Whitespace
returnKeyword
 Text.Whitespace
nodeName.Otherany0.9090Node0.0140complex0.0045never0.0043any[]0.0029
;Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
defineName.Othervoid0.9603any0.0251Function0.0023complex0.0008{}0.0007
(Punctuation
objName.Otherany0.8002Object0.0723{}0.0448object0.0359string0.0121
,Punctuation
 Text.Whitespace
keyName.Otherstring0.8354any0.1596number0.0014complex0.0012boolean0.0006
,Punctuation
 Text.Whitespace
valueName.Otherany0.8711string0.0885boolean0.0128number0.0120Object0.0067
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
ObjectName.BuiltinObjectConstructor0.9999Object0.0000any0.0000PropertyDescriptor0.0000complex0.0000
.Punctuation
definePropertyName.Othercomplex0.9950any0.0018void0.0012boolean0.0003Object0.0003
(Punctuation
objName.Otherany0.5976{}0.1429Object0.1096object0.0577complex0.0359
,Punctuation
 Text.Whitespace
keyName.Otherstring0.8737any0.1101complex0.0089number0.0030any[]0.0007
,Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
configurableName.Otherboolean0.9971true0.0010false0.0005any0.0004void0.0002
:Operator
 Text.Whitespace
trueKeyword.Type
,Punctuation
\n    Text.Whitespace
enumerableName.Otherboolean0.9982false0.0005true0.0003any0.0002number0.0002
:Operator
 Text.Whitespace
falseKeyword.Type
,Punctuation
\n    Text.Whitespace
writableName.Otherboolean0.9990any0.0002true0.0002number0.0002false0.0002
:Operator
 Text.Whitespace
trueKeyword.Type
,Punctuation
\n    Text.Whitespace
valueName.Otherany0.6731boolean0.1170string0.1056number0.0379{}0.0114
:Operator
 Text.Whitespace
valueKeyword.Typeany0.6944string0.1233number0.0742boolean0.0735void0.0082
\n  Text.Whitespace
}Punctuation
)Punctuation
;Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
Text
/**\n * Expose `Node`\n */Comment.Multiline
\n\nText.Whitespace
exportKeyword
 Text.Whitespace
defaultKeyword
 Text.Whitespace
NodeName.Otherany0.8777complex0.0939Node0.0043U[]0.0021Object0.0015
;Punctuation
\nText.Whitespace
