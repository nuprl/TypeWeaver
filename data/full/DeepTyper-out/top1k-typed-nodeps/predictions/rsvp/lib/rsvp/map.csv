importKeyword
 Text.Whitespace
PromiseName.BuiltinPromiseConstructor0.9484any0.0359complex0.0059Promise<any>0.0022string0.0010
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./promise'Literal.String.Single
;Punctuation
\nText.Whitespace
importKeyword
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
defaultKeyword
 Text.Whitespace
asKeyword.Reserved
 Text.Whitespace
EnumeratorName.Otherany0.9991complex0.0006string0.0001void0.0001number0.0000
\nText.Whitespace
}Punctuation
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./enumerator'Literal.String.Single
;Punctuation
\nText.Whitespace
importKeyword
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
REJECTEDName.Otherfalse0.2980boolean0.0315true0.0280Date0.0073void0.0052
\nText.Whitespace
}Punctuation
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./-internal'Literal.String.Single
;Punctuation
\n\nText.Whitespace
exportKeyword
 Text.Whitespace
classKeyword.Declaration
 Text.Whitespace
MapEnumeratorName.Otherany0.9983complex0.0009number0.0002void0.0001string0.0001
 Text.Whitespace
extendsKeyword
 Text.Whitespace
EnumeratorName.Otherany0.9991complex0.0007string0.0001void0.0000number0.0000
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
constructorKeyword.Reserved
(Punctuation
ConstructorName.Otherany0.4454string0.1084boolean0.0820number0.0456void0.0179
,Punctuation
 Text.Whitespace
entriesName.Otherany0.0558boolean0.0388number0.0352Object0.0125string0.0084
,Punctuation
 Text.Whitespace
mapFnName.Otherany0.7721boolean0.0953string0.0551number0.0369Function0.0030
,Punctuation
 Text.Whitespace
labelName.Otherstring0.8805any0.0637number0.0064complex0.0018boolean0.0017
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
superKeyword
(Punctuation
ConstructorName.Otherany0.8520string0.0927number0.0284boolean0.0139void0.0045
,Punctuation
 Text.Whitespace
entriesName.Otherany0.0637boolean0.0159number0.0114complex0.0112Object0.0067
,Punctuation
 Text.Whitespace
trueKeyword.Constant
,Punctuation
 Text.Whitespace
labelName.Otherstring0.6630any0.2689complex0.0248number0.0077void0.0036
,Punctuation
 Text.Whitespace
mapFnName.Otherany0.7133string0.1235boolean0.0847number0.0274void0.0062
)Punctuation
;Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
_initName.Othervoid0.9869boolean0.0047complex0.0018Promise<void>0.0012any0.0010
(Punctuation
ConstructorName.Otherany0.7085string0.1360number0.1074boolean0.0224void0.0064
,Punctuation
 Text.Whitespace
inputName.Otherstring0.5857any0.2090number0.1637boolean0.0045complex0.0038
,Punctuation
 Text.Whitespace
boolName.Otherboolean0.3567any0.3501number0.1830string0.0208Date0.0040
,Punctuation
 Text.Whitespace
labelName.Otherstring0.7338any0.2071number0.0290boolean0.0027Buffer0.0023
,Punctuation
 Text.Whitespace
mapFnName.Otherany0.5640boolean0.1896string0.1339number0.0762void0.0027
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
lenName.Othernumber0.9663any0.0287boolean0.0024string0.0009complex0.0004
 Text.Whitespace
=Operator
 Text.Whitespace
inputName.Otherstring0.3886any0.2173number[]0.0597number0.0538string[]0.0478
.Punctuation
lengthName.Othernumber0.9780any0.0197string0.0009complex0.0004boolean0.0002
 Text.Whitespace
||Operator
 Text.Whitespace
0Literal.Number.Float
;Punctuation
\n    Text.Whitespace
thisKeyword
.Punctuation
lengthName.Othernumber0.9911any0.0064string0.0005boolean0.0005void0.0003
     Text.Whitespace
=Operator
 Text.Whitespace
lenName.Othernumber0.9381any0.0559boolean0.0014string0.0008complex0.0005
;Punctuation
\n    Text.Whitespace
thisKeyword
.Punctuation
_remainingName.Othernumber0.7627any0.1399boolean0.0287void0.0207Function0.0049
 Text.Whitespace
=Operator
 Text.Whitespace
lenName.Othernumber0.8494any0.1338boolean0.0024complex0.0017void0.0016
;Punctuation
\n    Text.Whitespace
thisKeyword
.Punctuation
_resultName.Otherany0.1370complex0.0949any[]0.0503void0.0307boolean0.0219
 Text.Whitespace
=Operator
 Text.Whitespace
newOperator.Wordany0.5419complex0.0587string0.0366string[]0.0231any[]0.0161
 Text.Whitespace
ArrayName.BuiltinArrayConstructor0.9995Math0.0000ObjectConstructor0.0000T[]0.0000GlobalContext0.0000
(Punctuation
lenName.Othernumber0.9548any0.0242complex0.0056boolean0.0018void0.0016
)Punctuation
;Punctuation
\n    Text.Whitespace
thisKeyword
.Punctuation
_mapFnName.Otherany0.2518boolean0.1464number0.0642void0.0280string0.0201
 Text.Whitespace
=Operator
 Text.Whitespace
mapFnName.Otherany0.8444boolean0.0587number0.0337string0.0218complex0.0035
;Punctuation
\n\n    Text.Whitespace
thisKeyword
.Punctuation
_enumerateName.Othervoid0.9574Promise<void>0.0125any0.0072number0.0031boolean0.0029
(Punctuation
inputName.Otherany0.3313string0.1562any[]0.0818number0.0680number[]0.0169
)Punctuation
;Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
_setResultAtName.Othervoid0.9890boolean0.0027Promise<void>0.0024any0.0016number0.0007
(Punctuation
stateName.Otherany0.3427number0.1605boolean0.1113string0.0524IState0.0122
,Punctuation
 Text.Whitespace
iName.Othernumber0.8032any0.1513boolean0.0178void0.0085string0.0070
,Punctuation
 Text.Whitespace
valueName.Otherany0.7138number0.0811boolean0.0653string0.0430Object0.0058
,Punctuation
 Text.Whitespace
firstPassName.Otherboolean0.5294any0.2362number0.1041void0.0362string0.0105
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
firstPassName.Otherboolean0.9081any0.0515number0.0148false0.0032void0.0028
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
tryKeyword
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
thisKeyword
.Punctuation
_eachEntryName.Othervoid0.9254any0.0185Promise<void>0.0150boolean0.0105number0.0043
(Punctuation
thisKeyword
.Punctuation
_mapFnName.Othervoid0.2474any0.1779boolean0.1705complex0.0800number0.0489
(Punctuation
valueName.Otherany0.7202number0.0651string0.0541boolean0.0261T0.0179
,Punctuation
 Text.Whitespace
iName.Othernumber0.9527any0.0322boolean0.0077string0.0026void0.0013
)Punctuation
,Punctuation
 Text.Whitespace
iName.Othernumber0.8648any0.0869boolean0.0269void0.0067string0.0046
,Punctuation
 Text.Whitespace
falseKeyword.Constant
)Punctuation
;Punctuation
\n      Text.Whitespace
}Punctuation
 Text.Whitespace
catchKeyword
 Text.Whitespace
(Punctuation
errorName.Otherany0.9968Error0.0007number0.0006string0.0006void0.0004
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
thisKeyword
.Punctuation
_settledAtName.Othervoid0.9873Promise<void>0.0058complex0.0014any0.0012boolean0.0007
(Punctuation
REJECTEDName.Otherfalse0.3422true0.0174boolean0.0050{}0.0048Date0.0023
,Punctuation
 Text.Whitespace
iName.Othernumber0.9385any0.0361boolean0.0087string0.0037void0.0030
,Punctuation
 Text.Whitespace
errorName.Otherany0.8306Error0.0946string0.0169number0.0138boolean0.0102
,Punctuation
 Text.Whitespace
falseKeyword.Constant
)Punctuation
;Punctuation
\n      Text.Whitespace
}Punctuation
\n    Text.Whitespace
}Punctuation
 Text.Whitespace
elseKeyword
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
thisKeyword
.Punctuation
_remainingName.Othernumber0.9607any0.0201void0.0109boolean0.0022string0.0012
--Operator
;Punctuation
\n      Text.Whitespace
thisKeyword
.Punctuation
_resultName.Otherany0.1014complex0.0325any[]0.0201boolean0.0199void0.0166
[Punctuation
iName.Othernumber0.9525any0.0250string0.0147boolean0.0022void0.0006
]Punctuation
 Text.Whitespace
=Operator
 Text.Whitespace
valueName.Otherany0.6631string0.0448number0.0410boolean0.0156T0.0114
;Punctuation
\n    Text.Whitespace
}Punctuation
\n  Text.Whitespace
}Punctuation
\nText.Whitespace
}Punctuation
\n\n\nText.Whitespace
Text
/**\n `map` is similar to JavaScript's native `map` method. `mapFn` is eagerly called\n  meaning that as soon as any promise resolves its value will be passed to `mapFn`.\n  `map` returns a promise that will become fulfilled with the result of running\n  `mapFn` on the values the promises become fulfilled with.\n\n  For example:\n\n  ```javascript\n  import { map, resolve } from 'rsvp';\n\n  let promise1 = resolve(1);\n  let promise2 = resolve(2);\n  let promise3 = resolve(3);\n  let promises = [ promise1, promise2, promise3 ];\n\n  let mapFn = function(item){\n    return item + 1;\n  };\n\n  map(promises, mapFn).then(function(result){\n    // result is [ 2, 3, 4 ]\n  });\n  ```\n\n  If any of the `promises` given to `map` are rejected, the first promise\n  that is rejected will be given as an argument to the returned promise's\n  rejection handler. For example:\n\n  ```javascript\n  import { map, reject, resolve } from 'rsvp';\n\n  let promise1 = resolve(1);\n  let promise2 = reject(new Error('2'));\n  let promise3 = reject(new Error('3'));\n  let promises = [ promise1, promise2, promise3 ];\n\n  let mapFn = function(item){\n    return item + 1;\n  };\n\n  map(promises, mapFn).then(function(array){\n    // Code here never runs because there are rejected promises!\n  }, function(reason) {\n    // reason.message === '2'\n  });\n  ```\n\n  `map` will also wait if a promise is returned from `mapFn`. For example,\n  say you want to get all comments from a set of blog posts, but you need\n  the blog posts first because they contain a url to those comments.\n\n  ```javscript\n  import { map } from 'rsvp';\n\n  let mapFn = function(blogPost){\n    // getComments does some ajax and returns an Promise that is fulfilled\n    // with some comments data\n    return getComments(blogPost.comments_url);\n  };\n\n  // getBlogPosts does some ajax and returns an Promise that is fulfilled\n  // with some blog post data\n  map(getBlogPosts(), mapFn).then(function(comments){\n    // comments is the result of asking the server for the comments\n    // of all blog posts returned from getBlogPosts()\n  });\n  ```\n\n  @method map\n  @public\n  @static\n  @for rsvp\n  @param {Array} promises\n  @param {Function} mapFn function to be called on each fulfilled promise.\n  @param {String} [label] optional string for labeling the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled with the result of calling\n  `mapFn` on each fulfilled promise or value when they become fulfilled.\n   The promise will be rejected if any of the given `promises` become rejected.\n*/Comment.Multiline
\nText.Whitespace
exportKeyword
 Text.Whitespace
defaultKeyword
 Text.Whitespace
functionKeyword.Declaration
 Text.Whitespace
mapName.Otherany0.2155complex0.1010Promise<void>0.0477Promise<{}>0.0358void0.0298
(Punctuation
promisesName.Otherany0.4813Promise<void>[]0.0669Promise<any>[]0.0363string0.0295number0.0234
,Punctuation
 Text.Whitespace
mapFnName.Otherany0.7663string0.0989number0.0457boolean0.0308Promise<any>0.0119
,Punctuation
 Text.Whitespace
labelName.Otherstring0.4991any0.3582Promise<string>0.0110number0.0102complex0.0079
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
typeofOperator.Word
 Text.Whitespace
mapFnName.Otherany0.7321string0.0541boolean0.0539complex0.0294number0.0290
 Text.Whitespace
!==Operator
 Text.Whitespace
'function'Literal.String.Single
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
PromiseName.BuiltinPromiseConstructor0.9947any0.0037complex0.0002Promise<any>0.0002string0.0001
.Punctuation
rejectName.Othercomplex0.9964any0.0014void0.0003Promise<any>0.0002Promise<{}>0.0001
(Punctuation
newOperator.Wordcomplex0.1584any0.1074boolean0.0386TypeErrorConstructor0.0277string0.0168
 Text.Whitespace
TypeErrorName.ExceptionTypeErrorConstructor0.9897ErrorConstructor0.0016BooleanConstructor0.0002MapConstructor0.0002Promise<any>0.0001
(Punctuation
"map expects a function as a second argument"Literal.String.Double
)Punctuation
,Punctuation
 Text.Whitespace
labelName.Otherstring0.7617any0.2070complex0.0050number0.0031Promise<string>0.0024
)Punctuation
;Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
returnKeyword
 Text.Whitespace
PromiseName.BuiltinPromiseConstructor0.9971any0.0020Promise<any>0.0004complex0.0001Promise<{}>0.0000
.Punctuation
resolveName.Othercomplex0.9834any0.0095Promise<any>0.0024string0.0006Promise<{}>0.0005
(Punctuation
promisesName.Otherany0.3124Promise<void>[]0.1789string0.0634Promise<any>[]0.0619Promise<any>0.0313
,Punctuation
 Text.Whitespace
labelName.Otherstring0.6669any0.2414Promise<string>0.0092complex0.0083number0.0036
)Punctuation
\n    Text.Whitespace
.Punctuation
thenName.Otherany0.9624complex0.0207Promise<any>0.0042void0.0037Promise<void>0.0013
(Punctuation
functionKeyword.Declaration
(Punctuation
promisesName.Otherany0.7013Promise<void>[]0.0367string0.0259any[]0.0232Promise<any>0.0121
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
ArrayName.BuiltinArrayConstructor0.9994Math0.0000ObjectConstructor0.0000any0.0000PromiseConstructor0.0000
.Punctuation
isArrayName.Othercomplex0.9957any0.0007boolean0.0005any[]0.0003{}0.0002
(Punctuation
promisesName.Otherany0.7625any[]0.0471string0.0202Promise<void>[]0.0148complex0.0143
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
throwKeywordcomplex0.3948any0.1898Error0.0531any[]0.0464{}0.0453
 Text.Whitespace
newOperator.Wordany0.1508complex0.1027TypeErrorConstructor0.0429boolean0.0405string[]0.0375
 Text.Whitespace
TypeErrorName.ExceptionTypeErrorConstructor0.9926ErrorConstructor0.0014BooleanConstructor0.0001SymbolConstructor0.0001MapConstructor0.0001
(Punctuation
"map must be called with an array"Literal.String.Double
)Punctuation
;Punctuation
\n      Text.Whitespace
}Punctuation
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
newOperator.Wordany0.6764Promise<any>0.0223complex0.0195string0.0093Promise<void>0.0066
 Text.Whitespace
MapEnumeratorName.Otherany0.9811complex0.0061Promise<any>0.0029Promise<void>0.0020void0.0012
(Punctuation
PromiseName.BuiltinPromiseConstructor0.9974any0.0012Promise<any>0.0003string0.0001complex0.0001
,Punctuation
 Text.Whitespace
promisesName.Otherany0.2829Promise<void>[]0.1967Promise<any>[]0.0446PromiseConstructor0.0329Promise<any>0.0260
,Punctuation
 Text.Whitespace
mapFnName.Otherany0.8397string0.0620boolean0.0363number0.0241Promise<any>0.0114
,Punctuation
 Text.Whitespace
labelName.Otherany0.4773string0.3658complex0.0119Promise<string>0.0095number0.0056
)Punctuation
.Punctuation
promiseName.OtherPromise<any>0.3933any0.1722Promise<void>0.1263Promise<number>0.0592Promise<string>0.0491
;Punctuation
\n    Text.Whitespace
}Punctuation
)Punctuation
;Punctuation
\nText.Whitespace
}Punctuation
\nText.Whitespace
