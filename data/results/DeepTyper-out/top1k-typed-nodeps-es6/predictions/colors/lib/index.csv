importKeyword
 Text.Whitespace
colorsName.Othercomplex0.5772any0.2034string[]0.0377string0.0336void0.0113
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./colors'Literal.String.Single
;Punctuation
\nText.Whitespace
moduleName.Other
[Punctuation
'exports'Literal.String.Single
]Punctuation
 Text.Whitespace
=Operator
 Text.Whitespace
colorsName.Otherany0.5092complex0.2757string0.0740string[]0.0580boolean0.0078
;Punctuation
\n\nText.Whitespace
// Remark: By default, colors will add style properties to String.prototype.Comment.Single
\nText.Whitespace
//Comment.Single
\nText.Whitespace
// If you don't wish to extend String.prototype, you can do this instead andComment.Single
\nText.Whitespace
// native String will not be touched:Comment.Single
\nText.Whitespace
//Comment.Single
\nText.Whitespace
//   var colors = require('colors/safe);Comment.Single
\nText.Whitespace
//   colors.red("foo")Comment.Single
\nText.Whitespace
//Comment.Single
\nText.Whitespace
//Comment.Single
\nText.Whitespace
requireName.Other
(Punctuation
'./extendStringPrototype'Literal.String.Single
)Punctuation
(Punctuation
)Punctuation
;Punctuation
\n\nText.Whitespace
/* remove this line after testing */Comment.Multiline
\nText.Whitespace
importKeyword
 Text.Whitespace
amName.Othervoid0.3117string0.1401any0.0720boolean0.0692Promise<void>0.0645
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'../lib/custom/american'Literal.String.Single
;Punctuation
\n\nText.Whitespace
amName.Othervoid0.8757boolean0.0255string0.0169number0.0158Promise<void>0.0138
(Punctuation
)Punctuation
;Punctuation
\nText.Whitespace
forKeyword
 Text.Whitespace
(Punctuation
letKeyword.Declaration
 Text.Whitespace
iName.Othernumber0.9991any0.0005string0.0003boolean0.0001void0.0000
 Text.Whitespace
=Operator
 Text.Whitespace
666Literal.Number.Float
;Punctuation
 Text.Whitespace
iName.Othernumber0.9963any0.0029string0.0003void0.0002boolean0.0001
 Text.Whitespace
<Operator
 Text.Whitespace
InfinityKeyword.Constantnumber0.9982any0.0009boolean0.0003string0.0003void0.0001
;Punctuation
 Text.Whitespace
iName.Othernumber0.9971any0.0023string0.0002boolean0.0002void0.0001
++Operator
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
iName.Othernumber0.9942any0.0050string0.0003boolean0.0003void0.0001
 Text.Whitespace
%Operator
 Text.Whitespace
333Literal.Number.Float
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
// console.log('testing'.zalgo.rainbow)Comment.Single
\n  Text.Whitespace
}Punctuation
\n  Text.Whitespace
consoleName.OtherConsole0.9999void0.0000any0.0000ToolRunner0.0000Assert0.0000
.Punctuation
logName.Othervoid0.9972complex0.0009any0.0005Promise<void>0.0002boolean0.0001
(Punctuation
'testing testing testing testing testing testing testing'Literal.String.Single
.Punctuation
zalgoName.Otherstring0.7865number0.1165any0.0550string[]0.0094void0.0041
)Punctuation
\nText.Whitespace
}Punctuation
\nText.Whitespace
