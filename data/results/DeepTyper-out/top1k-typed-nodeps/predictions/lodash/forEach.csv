importKeyword
 Text.Whitespace
arrayEachName.Otherany0.2161boolean0.0868complex0.0550string0.0383void0.0322
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./.internal/arrayEach.js'Literal.String.Single
\nText.Whitespace
importKeyword
 Text.Whitespace
baseEachName.Otherany0.2914boolean0.1507complex0.0844string0.0774void0.0374
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./.internal/baseEach.js'Literal.String.Single
\n\nText.Whitespace
Text
/**\n * Iterates over elements of `collection` and invokes `iteratee` for each element.\n * The iteratee is invoked with three arguments: (value, index|key, collection).\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * **Note:** As with other "Collections" methods, objects with a "length"\n * property are iterated like arrays. To avoid this behavior use `forIn`\n * or `forOwn` for object iteration.\n *\n * @since 0.1.0\n * @alias each\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n * @see forEachRight, forIn, forInRight, forOwn, forOwnRight\n * @example\n *\n * forEach([1, 2], value => console.log(value))\n * // => Logs `1` then `2`.\n *\n * forEach({ 'a': 1, 'b': 2 }, (value, key) => console.log(key))\n * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n */Comment.Multiline
\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
forEachName.Otherany0.3121void0.2432complex0.1540v...0.0244boolean0.0105
(Punctuation
collectionName.Otherany0.2336string0.1062complex0.0442any[]0.0205TranslationCollection0.0157
,Punctuation
 Text.Whitespace
iterateeName.Otherany0.5216string0.1584number0.0439boolean0.0277any[]0.0102
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
funcName.Otherany0.8770string0.0270number0.0243boolean0.0194Function0.0165
 Text.Whitespace
=Operator
 Text.Whitespace
ArrayName.BuiltinArrayConstructor0.9994Math0.0001ObjectConstructor0.0000any0.0000Array0.0000
.Punctuation
isArrayName.Othercomplex0.9872any0.0032any[]0.0025boolean0.0020Object0.0004
(Punctuation
collectionName.Otherany0.3619complex0.1897any[]0.1418string0.0292boolean0.0135
)Punctuation
 Text.Whitespace
?Operator
 Text.Whitespace
arrayEachName.Otherany0.6373string0.1220boolean0.0613any[]0.0573number0.0313
 Text.Whitespace
:Operator
 Text.Whitespace
baseEachKeyword.Typeany0.6897string0.0748any[]0.0724boolean0.0480number0.0206
\n  Text.Whitespace
returnKeyword
 Text.Whitespace
funcName.Otherany0.7040void0.0518any[]0.0321Function0.0312boolean0.0303
(Punctuation
collectionName.Otherany[]0.4618any0.1590complex0.0558string0.0250void0.0066
,Punctuation
 Text.Whitespace
iterateeName.Otherany0.5102any[]0.1330number0.0560string0.0463{}0.0208
)Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
exportKeyword
 Text.Whitespace
defaultKeyword
 Text.Whitespace
forEachName.Othervoid0.1969any0.1807complex0.0644any[]0.0547v...0.0155
\nText.Whitespace
