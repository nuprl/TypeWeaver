importKeyword
 Text.Whitespace
createTesterName.Otherany0.1309boolean0.1069complex0.0598string0.0296string[]0.0190
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./internal/createTester.js'Literal.String.Single
\nText.Whitespace
importKeyword
 Text.Whitespace
eachOfName.Otherboolean0.2896any0.1560string0.0630complex0.0528string[]0.0342
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./eachOf.js'Literal.String.Single
\nText.Whitespace
importKeyword
 Text.Whitespace
awaitifyName.Otherboolean0.5175any0.1040complex0.0446string0.0440string[]0.0325
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./internal/awaitify.js'Literal.String.Single
\n\nText.Whitespace
Text
/**\n * Returns `true` if at least one element in the `coll` satisfies an async test.\n * If any iteratee call returns `true`, the main `callback` is immediately\n * called.\n *\n * @name some\n * @static\n * @memberOf module:Collections\n * @method\n * @alias any\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collections in parallel.\n * The iteratee should complete with a boolean `result` value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the iteratee functions have finished.\n * Result will be either `true` or `false` depending on the values of the async\n * tests. Invoked with (err, result).\n * @returns {Promise} a promise, if no callback provided\n * @example\n *\n * // dir1 is a directory that contains file1.txt, file2.txt\n * // dir2 is a directory that contains file3.txt, file4.txt\n * // dir3 is a directory that contains file5.txt\n * // dir4 does not exist\n *\n * // asynchronous function that checks if a file exists\n * function fileExists(file, callback) {\n *    fs.access(file, fs.constants.F_OK, (err) => {\n *        callback(null, !err);\n *    });\n * }\n *\n * // Using callbacks\n * async.some(['dir1/missing.txt','dir2/missing.txt','dir3/file5.txt'], fileExists,\n *    function(err, result) {\n *        console.log(result);\n *        // true\n *        // result is true since some file in the list exists\n *    }\n *);\n *\n * async.some(['dir1/missing.txt','dir2/missing.txt','dir4/missing.txt'], fileExists,\n *    function(err, result) {\n *        console.log(result);\n *        // false\n *        // result is false since none of the files exists\n *    }\n *);\n *\n * // Using Promises\n * async.some(['dir1/missing.txt','dir2/missing.txt','dir3/file5.txt'], fileExists)\n * .then( result => {\n *     console.log(result);\n *     // true\n *     // result is true since some file in the list exists\n * }).catch( err => {\n *     console.log(err);\n * });\n *\n * async.some(['dir1/missing.txt','dir2/missing.txt','dir4/missing.txt'], fileExists)\n * .then( result => {\n *     console.log(result);\n *     // false\n *     // result is false since none of the files exists\n * }).catch( err => {\n *     console.log(err);\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         let result = await async.some(['dir1/missing.txt','dir2/missing.txt','dir3/file5.txt'], fileExists);\n *         console.log(result);\n *         // true\n *         // result is true since some file in the list exists\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n * async () => {\n *     try {\n *         let result = await async.some(['dir1/missing.txt','dir2/missing.txt','dir4/missing.txt'], fileExists);\n *         console.log(result);\n *         // false\n *         // result is false since none of the files exists\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n */Comment.Multiline
\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
someName.Otherboolean0.5629any0.1912complex0.0290number0.0123Promise<any>0.0071
(Punctuation
collName.Otherany0.7306string0.0238any[]0.0142boolean0.0107{}0.0037
,Punctuation
 Text.Whitespace
iterateeName.Otherany0.7271string0.0885number0.0238boolean0.0059Buffer0.0044
,Punctuation
 Text.Whitespace
callbackName.Otherany0.4212Function0.1097number0.0448string0.0231boolean0.0187
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
createTesterName.Otherany0.4633complex0.1389boolean0.0873void0.0227string0.0203
(Punctuation
BooleanName.BuiltinBooleanConstructor0.9851Boolean0.0011any0.0009boolean0.0003false0.0002
,Punctuation
 Text.Whitespace
resName.Otherany0.5125Response0.1288void0.0620boolean0.0374complex0.0170
 Text.Whitespace
=>Punctuation
 Text.Whitespace
resName.Otherany0.4474void0.1438boolean0.0857Response0.0509complex0.0252
)Punctuation
(Punctuation
eachOfName.Otherany0.3472string0.2095boolean0.1106any[]0.0276string[]0.0170
,Punctuation
 Text.Whitespace
collName.Otherany0.6703any[]0.0774{}0.0175string0.0112boolean0.0090
,Punctuation
 Text.Whitespace
iterateeName.Otherany0.5882string0.0317number0.0134any[]0.0126Object0.0075
,Punctuation
 Text.Whitespace
callbackName.Otherany0.5436Function0.0948number0.0225void0.0181boolean0.0147
)Punctuation
\nText.Whitespace
}Punctuation
\nText.Whitespace
exportKeyword
 Text.Whitespace
defaultKeyword
 Text.Whitespace
awaitifyName.Otherany0.4483complex0.0886void0.0797boolean0.0330number0.0197
(Punctuation
someName.Otherboolean0.5111any0.3213number0.0222string0.0196complex0.0074
,Punctuation
 Text.Whitespace
3Literal.Number.Float
)Punctuation
;Punctuation
\nText.Whitespace
