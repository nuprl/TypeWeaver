importKeyword
 Text.Whitespace
createTesterName.Otherany0.0961boolean0.0530complex0.0496string0.0270void0.0206
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./internal/createTester.js'Literal.String.Single
\nText.Whitespace
importKeyword
 Text.Whitespace
eachOfName.Otherboolean0.1207any0.1174string0.0684complex0.0419void0.0273
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./eachOf.js'Literal.String.Single
\nText.Whitespace
importKeyword
 Text.Whitespace
awaitifyName.Otherboolean0.1590any0.1223string0.0822complex0.0474void0.0333
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./internal/awaitify.js'Literal.String.Single
\n\nText.Whitespace
Text
/**\n * Returns the first value in `coll` that passes an async truth test. The\n * `iteratee` is applied in parallel, meaning the first iteratee to return\n * `true` will fire the detect `callback` with that result. That means the\n * result might not be the first item in the original `coll` (in terms of order)\n * that passes the test.\n\n * If order within the original `coll` is important, then look at\n * [`detectSeries`]{@link module:Collections.detectSeries}.\n *\n * @name detect\n * @static\n * @memberOf module:Collections\n * @method\n * @alias find\n * @category Collections\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A truth test to apply to each item in `coll`.\n * The iteratee must complete with a boolean value as its result.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the `iteratee` functions have finished.\n * Result will be the first item in the array that passes the truth test\n * (iteratee) or the value `undefined` if none passed. Invoked with\n * (err, result).\n * @returns {Promise} a promise, if a callback is omitted\n * @example\n *\n * // dir1 is a directory that contains file1.txt, file2.txt\n * // dir2 is a directory that contains file3.txt, file4.txt\n * // dir3 is a directory that contains file5.txt\n *\n * // asynchronous function that checks if a file exists\n * function fileExists(file, callback) {\n *    fs.access(file, fs.constants.F_OK, (err) => {\n *        callback(null, !err);\n *    });\n * }\n *\n * async.detect(['file3.txt','file2.txt','dir1/file1.txt'], fileExists,\n *    function(err, result) {\n *        console.log(result);\n *        // dir1/file1.txt\n *        // result now equals the first file in the list that exists\n *    }\n *);\n *\n * // Using Promises\n * async.detect(['file3.txt','file2.txt','dir1/file1.txt'], fileExists)\n * .then(result => {\n *     console.log(result);\n *     // dir1/file1.txt\n *     // result now equals the first file in the list that exists\n * }).catch(err => {\n *     console.log(err);\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         let result = await async.detect(['file3.txt','file2.txt','dir1/file1.txt'], fileExists);\n *         console.log(result);\n *         // dir1/file1.txt\n *         // result now equals the file in the list that exists\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n */Comment.Multiline
\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
detectName.Otherboolean0.5404string0.3454number0.0150Promise<string>0.0121any0.0082
(Punctuation
collName.Otherany0.3492string0.0641any[]0.0180Buffer0.0109boolean0.0081
,Punctuation
 Text.Whitespace
iterateeName.Otherany0.5579string0.1794number0.0692boolean0.0066Buffer0.0062
,Punctuation
 Text.Whitespace
callbackName.Otherany0.1542Function0.1065number0.0632string0.0362boolean0.0114
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
createTesterName.Otherany0.4477string0.1108complex0.0794number0.0338void0.0233
(Punctuation
boolName.Otherany0.9256string0.0122complex0.0066boolean0.0057{}0.0044
 Text.Whitespace
=>Punctuation
 Text.Whitespace
boolName.Otherany0.8761string0.0215boolean0.0181{}0.0105complex0.0089
,Punctuation
 Text.Whitespace
(Punctuation
resName.Otherany0.6890string0.1660number0.0464boolean0.0228Response0.0079
,Punctuation
 Text.Whitespace
itemName.Otherany0.6520string0.2046number0.0305object0.0074void0.0057
)Punctuation
 Text.Whitespace
=>Punctuation
 Text.Whitespace
itemName.Otherany0.6227string0.1750void0.0159number0.0144object0.0092
)Punctuation
(Punctuation
eachOfName.Otherany0.3956string0.3529boolean0.0306number0.0187string[]0.0111
,Punctuation
 Text.Whitespace
collName.Otherany0.4839any[]0.0535{}0.0345string0.0166object0.0128
,Punctuation
 Text.Whitespace
iterateeName.Otherany0.7289string0.0848number0.0271Error0.0052boolean0.0040
,Punctuation
 Text.Whitespace
callbackName.Otherany0.4408Function0.1598number0.0412void0.0324string0.0155
)Punctuation
\nText.Whitespace
}Punctuation
\nText.Whitespace
exportKeyword
 Text.Whitespace
defaultKeyword
 Text.Whitespace
awaitifyName.Otherany0.2092string0.0924complex0.0913void0.0471Promise<any>0.0245
(Punctuation
detectName.Otherstring0.4468boolean0.2128number0.0594Promise<string>0.0273any0.0162
,Punctuation
 Text.Whitespace
3Literal.Number.Float
)Punctuation
\nText.Whitespace
