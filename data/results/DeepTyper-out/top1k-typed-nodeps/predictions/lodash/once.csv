importKeyword
 Text.Whitespace
beforeName.Otherany0.7190void0.1885complex0.0442Promise<void>0.0107boolean0.0075
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./before.js'Literal.String.Single
\n\nText.Whitespace
Text
/**\n * Creates a function that is restricted to invoking `func` once. Repeat calls\n * to the function return the value of the first invocation. The `func` is\n * invoked with the `this` binding and arguments of the created function.\n *\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new restricted function.\n * @example\n *\n * const initialize = once(createApplication)\n * initialize()\n * initialize()\n * // => `createApplication` is invoked once\n */Comment.Multiline
\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
onceName.Otherany0.3865boolean0.2186number0.0558Function0.0380void0.0356
(Punctuation
funcName.Otherany0.6118Function0.1394boolean0.1194number0.0574string0.0259
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
returnKeyword
 Text.Whitespace
beforeName.Otherany0.8313void0.1261complex0.0129boolean0.0087Promise<void>0.0064
(Punctuation
2Literal.Number.Float
,Punctuation
 Text.Whitespace
funcName.Otherany0.5511Function0.1896void0.1654boolean0.0439number0.0203
)Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
exportKeyword
 Text.Whitespace
defaultKeyword
 Text.Whitespace
onceName.Otherany0.7512void0.0187boolean0.0136number0.0111complex0.0076
\nText.Whitespace
