example.ts(3,22): error TS2345: Argument of type 'string' is not assignable to parameter of type 'any[]'.
example.ts(4,22): error TS2345: Argument of type 'string' is not assignable to parameter of type 'any[]'.
index.ts(9,28): error TS2322: Type 'string' is not assignable to type 'any[]'.
index.ts(9,46): error TS2345: Argument of type 'any[]' is not assignable to parameter of type 'string'.
index.ts(10,7): error TS2358: The left-hand side of an 'instanceof' expression must be of type 'any', an object type or a type parameter.
index.ts(10,46): error TS2345: Argument of type 'any[]' is not assignable to parameter of type 'string'.
index.ts(12,27): error TS2345: Argument of type 'any[]' is not assignable to parameter of type 'string'.
index.ts(14,3): error TS2322: Type '{ start: any; end: any; pre: any[]; body: any[]; post: any[]; }' is not assignable to type 'boolean'.
index.ts(30,31): error TS2769: No overload matches this call.
  Overload 1 of 2, '(matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray', gave the following error.
    Argument of type 'object' is not assignable to parameter of type '{ [Symbol.match](string: string): RegExpMatchArray; }'.
      Property '[Symbol.match]' is missing in type '{}' but required in type '{ [Symbol.match](string: string): RegExpMatchArray; }'.
  Overload 2 of 2, '(regexp: string | RegExp): RegExpMatchArray', gave the following error.
    Argument of type 'object' is not assignable to parameter of type 'string | RegExp'.
index.ts(62,13): error TS2365: Operator '<' cannot be applied to types 'boolean' and 'number'.
index.ts(63,11): error TS2322: Type 'boolean' is not assignable to type 'number'.

