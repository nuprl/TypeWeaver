importKeyword
 Text.Whitespace
baseInRangeName.Otherany0.4140boolean0.1418string0.1390complex0.0536number0.0398
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./.internal/baseInRange.js'Literal.String.Single
\n\nText.Whitespace
Text
/**\n * Checks if `number` is between `start` and up to, but not including, `end`. If\n * `end` is not specified, it's set to `start` with `start` then set to `0`.\n * If `start` is greater than `end` the params are swapped to support\n * negative ranges.\n *\n * @since 3.3.0\n * @category Number\n * @param {number} number The number to check.\n * @param {number} [start=0] The start of the range.\n * @param {number} end The end of the range.\n * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n * @see range, rangeRight\n * @example\n *\n * inRange(3, 2, 4)\n * // => true\n *\n * inRange(4, 8)\n * // => true\n *\n * inRange(4, 2)\n * // => false\n *\n * inRange(2, 2)\n * // => false\n *\n * inRange(1.2, 2)\n * // => true\n *\n * inRange(5.2, 4)\n * // => false\n *\n * inRange(-3, -2, -6)\n * // => true\n */Comment.Multiline
\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
inRangeName.Otherboolean0.8553any0.0740number0.0217void0.0143string0.0096
(Punctuation
numberKeyword.Type
,Punctuation
 Text.Whitespace
startName.Othernumber0.9909any0.0049string0.0028boolean0.0005Date0.0003
,Punctuation
 Text.Whitespace
endName.Othernumber0.9834any0.0080string0.0038boolean0.0025Date0.0007
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
endName.Othernumber0.9451any0.0381string0.0074boolean0.0060complex0.0012
 Text.Whitespace
===Operator
 Text.Whitespace
undefinedKeyword.Constant
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
endName.Othernumber0.9663any0.0238string0.0057boolean0.0022complex0.0006
 Text.Whitespace
=Operator
 Text.Whitespace
startName.Othernumber0.9854any0.0111string0.0024boolean0.0003complex0.0003
\n    Text.Whitespace
startName.Othernumber0.9921any0.0059string0.0013boolean0.0002complex0.0001
 Text.Whitespace
=Operator
 Text.Whitespace
0Literal.Number.Float
\n  Text.Whitespace
}Punctuation
\n  Text.Whitespace
returnKeyword
 Text.Whitespace
baseInRangeName.Othernumber0.5270string0.3400any0.0848complex0.0165boolean0.0135
(Punctuation
+Operator
numberKeyword.Type
,Punctuation
 Text.Whitespace
+Operator
startName.Othernumber0.9890any0.0059string0.0042boolean0.0002complex0.0001
,Punctuation
 Text.Whitespace
+Operator
endName.Othernumber0.9626any0.0158string0.0150boolean0.0027complex0.0010
)Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
exportKeyword
 Text.Whitespace
defaultKeyword
 Text.Whitespace
inRangeName.Otherboolean0.6442any0.2589number0.0202void0.0158complex0.0152
\nText.Whitespace
