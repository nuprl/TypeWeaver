======================================== @xtuc_long/dist/long.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 223, in <module>
    run_seq(content)
  File "readout.py", line 189, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fe54aa8ca29]                                                       + 0x7c5a29
[0x7fe54ac4d289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fe5cf07e741]                                                       + 0x2d7741
[0x7fe5d39879e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fe5d3a0d084]                                                       + 0x153084
[0x7fe5d3a1250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe5d3a0cb9a]                                                       + 0x152b9a
[0x7fe5d3a0d1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fe5d395ff1e]                                                       + 0xa5f1e
[0x7fe5d3930f2b]    PyObject_Call                                      + 0x4b
[0x7fe5d3a12770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fe5d3a0cb9a]                                                       + 0x152b9a
[0x7fe5d3a0cf94]                                                       + 0x152f94
[0x7fe5d3a1250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe5d3a0cb9a]                                                       + 0x152b9a
[0x7fe5d3a0cf94]                                                       + 0x152f94
[0x7fe5d3a1250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe5d3a0c193]                                                       + 0x152193
[0x7fe5d3a0d15c]                                                       + 0x15315c
[0x7fe5d3a1250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe5d3a0cb9a]                                                       + 0x152b9a
[0x7fe5d3a0cf94]                                                       + 0x152f94
[0x7fe5d3a1250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe5d3a0cb9a]                                                       + 0x152b9a
[0x7fe5d3a0d1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fe5d3a0d1df]    PyEval_EvalCode                                    + 0x1f
[0x7fe5d3a423d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fe5d3a4256f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fe5d3a5c8e8]    Py_Main                                            + 0xff8
[0x55b9d27b92b8]    main                                               + 0x178
[0x7fe5d36d20b3]    __libc_start_main                                  + 0xf3
[0x55b9d27b936e]    _start                                             + 0x2e


======================================== @xtuc_long/src/long.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 223, in <module>
    run_seq(content)
  File "readout.py", line 189, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fbae7c95a29]                                                       + 0x7c5a29
[0x7fbae7e56289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fbb6c287741]                                                       + 0x2d7741
[0x7fbb70b909e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fbb70c16084]                                                       + 0x153084
[0x7fbb70c1b50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fbb70c15b9a]                                                       + 0x152b9a
[0x7fbb70c161b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fbb70b68f1e]                                                       + 0xa5f1e
[0x7fbb70b39f2b]    PyObject_Call                                      + 0x4b
[0x7fbb70c1b770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fbb70c15b9a]                                                       + 0x152b9a
[0x7fbb70c15f94]                                                       + 0x152f94
[0x7fbb70c1b50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fbb70c15b9a]                                                       + 0x152b9a
[0x7fbb70c15f94]                                                       + 0x152f94
[0x7fbb70c1b50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fbb70c15193]                                                       + 0x152193
[0x7fbb70c1615c]                                                       + 0x15315c
[0x7fbb70c1b50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fbb70c15b9a]                                                       + 0x152b9a
[0x7fbb70c15f94]                                                       + 0x152f94
[0x7fbb70c1b50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fbb70c15b9a]                                                       + 0x152b9a
[0x7fbb70c161b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fbb70c161df]    PyEval_EvalCode                                    + 0x1f
[0x7fbb70c4b3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fbb70c4b56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fbb70c658e8]    Py_Main                                            + 0xff8
[0x559ac7a4c2b8]    main                                               + 0x178
[0x7fbb708db0b3]    __libc_start_main                                  + 0xf3
[0x559ac7a4c36e]    _start                                             + 0x2e


======================================== async/dist/async.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 223, in <module>
    run_seq(content)
  File "readout.py", line 189, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fdfff141a29]                                                       + 0x7c5a29
[0x7fdfff302289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fe083733741]                                                       + 0x2d7741
[0x7fe08803c9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fe0880c2084]                                                       + 0x153084
[0x7fe0880c750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe0880c1b9a]                                                       + 0x152b9a
[0x7fe0880c21b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fe088014f1e]                                                       + 0xa5f1e
[0x7fe087fe5f2b]    PyObject_Call                                      + 0x4b
[0x7fe0880c7770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fe0880c1b9a]                                                       + 0x152b9a
[0x7fe0880c1f94]                                                       + 0x152f94
[0x7fe0880c750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe0880c1b9a]                                                       + 0x152b9a
[0x7fe0880c1f94]                                                       + 0x152f94
[0x7fe0880c750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe0880c1193]                                                       + 0x152193
[0x7fe0880c215c]                                                       + 0x15315c
[0x7fe0880c750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe0880c1b9a]                                                       + 0x152b9a
[0x7fe0880c1f94]                                                       + 0x152f94
[0x7fe0880c750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe0880c1b9a]                                                       + 0x152b9a
[0x7fe0880c21b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fe0880c21df]    PyEval_EvalCode                                    + 0x1f
[0x7fe0880f73d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fe0880f756f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fe0881118e8]    Py_Main                                            + 0xff8
[0x561e8834f2b8]    main                                               + 0x178
[0x7fe087d870b3]    __libc_start_main                                  + 0xf3
[0x561e8834f36e]    _start                                             + 0x2e


======================================== async/dist/async.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 223, in <module>
    run_seq(content)
  File "readout.py", line 189, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fd971435a29]                                                       + 0x7c5a29
[0x7fd9715f6289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fd9f5a27741]                                                       + 0x2d7741
[0x7fd9fa3309e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fd9fa3b6084]                                                       + 0x153084
[0x7fd9fa3bb50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fd9fa3b5b9a]                                                       + 0x152b9a
[0x7fd9fa3b61b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fd9fa308f1e]                                                       + 0xa5f1e
[0x7fd9fa2d9f2b]    PyObject_Call                                      + 0x4b
[0x7fd9fa3bb770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fd9fa3b5b9a]                                                       + 0x152b9a
[0x7fd9fa3b5f94]                                                       + 0x152f94
[0x7fd9fa3bb50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fd9fa3b5b9a]                                                       + 0x152b9a
[0x7fd9fa3b5f94]                                                       + 0x152f94
[0x7fd9fa3bb50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fd9fa3b5193]                                                       + 0x152193
[0x7fd9fa3b615c]                                                       + 0x15315c
[0x7fd9fa3bb50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fd9fa3b5b9a]                                                       + 0x152b9a
[0x7fd9fa3b5f94]                                                       + 0x152f94
[0x7fd9fa3bb50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fd9fa3b5b9a]                                                       + 0x152b9a
[0x7fd9fa3b61b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fd9fa3b61df]    PyEval_EvalCode                                    + 0x1f
[0x7fd9fa3eb3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fd9fa3eb56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fd9fa4058e8]    Py_Main                                            + 0xff8
[0x55e8ab9ac2b8]    main                                               + 0x178
[0x7fd9fa07b0b3]    __libc_start_main                                  + 0xf3
[0x55e8ab9ac36e]    _start                                             + 0x2e


======================================== commander/lib/command.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 223, in <module>
    run_seq(content)
  File "readout.py", line 189, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f85b82a8a29]                                                       + 0x7c5a29
[0x7f85b8469289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f85ec4ae741]                                                       + 0x2d7741
[0x7f85f0db79e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f85f0e3d084]                                                       + 0x153084
[0x7f85f0e4250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f85f0e3cb9a]                                                       + 0x152b9a
[0x7f85f0e3d1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f85f0d8ff1e]                                                       + 0xa5f1e
[0x7f85f0d60f2b]    PyObject_Call                                      + 0x4b
[0x7f85f0e42770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f85f0e3cb9a]                                                       + 0x152b9a
[0x7f85f0e3cf94]                                                       + 0x152f94
[0x7f85f0e4250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f85f0e3cb9a]                                                       + 0x152b9a
[0x7f85f0e3cf94]                                                       + 0x152f94
[0x7f85f0e4250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f85f0e3c193]                                                       + 0x152193
[0x7f85f0e3d15c]                                                       + 0x15315c
[0x7f85f0e4250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f85f0e3cb9a]                                                       + 0x152b9a
[0x7f85f0e3cf94]                                                       + 0x152f94
[0x7f85f0e4250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f85f0e3cb9a]                                                       + 0x152b9a
[0x7f85f0e3d1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f85f0e3d1df]    PyEval_EvalCode                                    + 0x1f
[0x7f85f0e723d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f85f0e7256f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f85f0e8c8e8]    Py_Main                                            + 0xff8
[0x564227cd72b8]    main                                               + 0x178
[0x7f85f0b020b3]    __libc_start_main                                  + 0xf3
[0x564227cd736e]    _start                                             + 0x2e


======================================== date-fns/esm/locale/types.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 223, in <module>
    run_seq(content)
  File "readout.py", line 186, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f7a6e755a29]                                                       + 0x7c5a29
[0x7f7a6e8dbd45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f7a6f6973a8]                                                       + 0x13b3a8
[0x7f7a6f699065]                                                       + 0x13d065
[0x7f7a7413cbd9]    PyCFunction_Call                                   + 0xc9
[0x7f7a741c96e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f7a741c1b9a]                                                       + 0x152b9a
[0x7f7a741caaa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f7a740e6151]    _PyObject_FastCallDict                             + 0x131
[0x7f7a740e62a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f7a740e5f2b]    PyObject_Call                                      + 0x4b
[0x7f7a74157d7f]                                                       + 0xe8d7f
[0x7f7a74153149]                                                       + 0xe4149
[0x7f7a740e60ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f7a741c1d78]                                                       + 0x152d78
[0x7f7a741c750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7a741c1b9a]                                                       + 0x152b9a
[0x7f7a741c21b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f7a74114f1e]                                                       + 0xa5f1e
[0x7f7a740e5f2b]    PyObject_Call                                      + 0x4b
[0x7f7a741c7770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f7a741c1b9a]                                                       + 0x152b9a
[0x7f7a741c1f94]                                                       + 0x152f94
[0x7f7a741c7867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f7a741c1b9a]                                                       + 0x152b9a
[0x7f7a741c21b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f7a74114f1e]                                                       + 0xa5f1e
[0x7f7a740e5f2b]    PyObject_Call                                      + 0x4b
[0x7f7a741c7770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f7a741c1b9a]                                                       + 0x152b9a
[0x7f7a741c1f94]                                                       + 0x152f94
[0x7f7a741c7867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f7a741c1b9a]                                                       + 0x152b9a
[0x7f7a741c1f94]                                                       + 0x152f94
[0x7f7a741c750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7a741c1b9a]                                                       + 0x152b9a
[0x7f7a741c21b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f7a74114f1e]                                                       + 0xa5f1e
[0x7f7a740e5f2b]    PyObject_Call                                      + 0x4b
[0x7f7a741c7770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f7a741c1b9a]                                                       + 0x152b9a
[0x7f7a741c1f94]                                                       + 0x152f94
[0x7f7a741c750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7a741c1b9a]                                                       + 0x152b9a
[0x7f7a741c1f94]                                                       + 0x152f94
[0x7f7a741c750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7a741c1b9a]                                                       + 0x152b9a
[0x7f7a741c1f94]                                                       + 0x152f94
[0x7f7a741c750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7a741c1b9a]                                                       + 0x152b9a
[0x7f7a741c21b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f7a741c21df]    PyEval_EvalCode                                    + 0x1f
[0x7f7a741f73d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f7a741f756f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f7a742118e8]    Py_Main                                            + 0xff8
[0x563f498ed2b8]    main                                               + 0x178
[0x7f7a73e870b3]    __libc_start_main                                  + 0xf3
[0x563f498ed36e]    _start                                             + 0x2e


======================================== date-fns/esm/parse/_lib/parsers/index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 223, in <module>
    run_seq(content)
  File "readout.py", line 189, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f6596178a29]                                                       + 0x7c5a29
[0x7f6596339289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f661a76a741]                                                       + 0x2d7741
[0x7f661f0739e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f661f0f9084]                                                       + 0x153084
[0x7f661f0fe50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f661f0f8b9a]                                                       + 0x152b9a
[0x7f661f0f91b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f661f04bf1e]                                                       + 0xa5f1e
[0x7f661f01cf2b]    PyObject_Call                                      + 0x4b
[0x7f661f0fe770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f661f0f8b9a]                                                       + 0x152b9a
[0x7f661f0f8f94]                                                       + 0x152f94
[0x7f661f0fe50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f661f0f8b9a]                                                       + 0x152b9a
[0x7f661f0f8f94]                                                       + 0x152f94
[0x7f661f0fe50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f661f0f8193]                                                       + 0x152193
[0x7f661f0f915c]                                                       + 0x15315c
[0x7f661f0fe50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f661f0f8b9a]                                                       + 0x152b9a
[0x7f661f0f8f94]                                                       + 0x152f94
[0x7f661f0fe50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f661f0f8b9a]                                                       + 0x152b9a
[0x7f661f0f91b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f661f0f91df]    PyEval_EvalCode                                    + 0x1f
[0x7f661f12e3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f661f12e56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f661f1488e8]    Py_Main                                            + 0xff8
[0x556bb24d22b8]    main                                               + 0x178
[0x7f661edbe0b3]    __libc_start_main                                  + 0xf3
[0x556bb24d236e]    _start                                             + 0x2e


======================================== date-fns/esm/types.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 223, in <module>
    run_seq(content)
  File "readout.py", line 186, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f31ca516a29]                                                       + 0x7c5a29
[0x7f31ca69cd45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f324e96c3a8]                                                       + 0x13b3a8
[0x7f324e96e065]                                                       + 0x13d065
[0x7f3253411bd9]    PyCFunction_Call                                   + 0xc9
[0x7f325349e6e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f3253496b9a]                                                       + 0x152b9a
[0x7f325349faa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f32533bb151]    _PyObject_FastCallDict                             + 0x131
[0x7f32533bb2a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f32533baf2b]    PyObject_Call                                      + 0x4b
[0x7f325342cd7f]                                                       + 0xe8d7f
[0x7f3253428149]                                                       + 0xe4149
[0x7f32533bb0ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f3253496d78]                                                       + 0x152d78
[0x7f325349c50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f3253496b9a]                                                       + 0x152b9a
[0x7f32534971b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f32533e9f1e]                                                       + 0xa5f1e
[0x7f32533baf2b]    PyObject_Call                                      + 0x4b
[0x7f325349c770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f3253496b9a]                                                       + 0x152b9a
[0x7f3253496f94]                                                       + 0x152f94
[0x7f325349c867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f3253496b9a]                                                       + 0x152b9a
[0x7f32534971b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f32533e9f1e]                                                       + 0xa5f1e
[0x7f32533baf2b]    PyObject_Call                                      + 0x4b
[0x7f325349c770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f3253496b9a]                                                       + 0x152b9a
[0x7f3253496f94]                                                       + 0x152f94
[0x7f325349c867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f3253496b9a]                                                       + 0x152b9a
[0x7f3253496f94]                                                       + 0x152f94
[0x7f325349c50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f3253496b9a]                                                       + 0x152b9a
[0x7f32534971b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f32533e9f1e]                                                       + 0xa5f1e
[0x7f32533baf2b]    PyObject_Call                                      + 0x4b
[0x7f325349c770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f3253496b9a]                                                       + 0x152b9a
[0x7f3253496f94]                                                       + 0x152f94
[0x7f325349c50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f3253496b9a]                                                       + 0x152b9a
[0x7f3253496f94]                                                       + 0x152f94
[0x7f325349c50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f3253496b9a]                                                       + 0x152b9a
[0x7f3253496f94]                                                       + 0x152f94
[0x7f325349c50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f3253496b9a]                                                       + 0x152b9a
[0x7f32534971b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f32534971df]    PyEval_EvalCode                                    + 0x1f
[0x7f32534cc3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f32534cc56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f32534e68e8]    Py_Main                                            + 0xff8
[0x560dba8de2b8]    main                                               + 0x178
[0x7f325315c0b3]    __libc_start_main                                  + 0xf3
[0x560dba8de36e]    _start                                             + 0x2e


======================================== date-fns/fp/index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 223, in <module>
    run_seq(content)
  File "readout.py", line 189, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f59030a3a29]                                                       + 0x7c5a29
[0x7f5903264289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f5987695741]                                                       + 0x2d7741
[0x7f598bf9e9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f598c024084]                                                       + 0x153084
[0x7f598c02950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f598c023b9a]                                                       + 0x152b9a
[0x7f598c0241b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f598bf76f1e]                                                       + 0xa5f1e
[0x7f598bf47f2b]    PyObject_Call                                      + 0x4b
[0x7f598c029770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f598c023b9a]                                                       + 0x152b9a
[0x7f598c023f94]                                                       + 0x152f94
[0x7f598c02950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f598c023b9a]                                                       + 0x152b9a
[0x7f598c023f94]                                                       + 0x152f94
[0x7f598c02950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f598c023193]                                                       + 0x152193
[0x7f598c02415c]                                                       + 0x15315c
[0x7f598c02950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f598c023b9a]                                                       + 0x152b9a
[0x7f598c023f94]                                                       + 0x152f94
[0x7f598c02950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f598c023b9a]                                                       + 0x152b9a
[0x7f598c0241b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f598c0241df]    PyEval_EvalCode                                    + 0x1f
[0x7f598c0593d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f598c05956f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f598c0738e8]    Py_Main                                            + 0xff8
[0x55aa5379b2b8]    main                                               + 0x178
[0x7f598bce90b3]    __libc_start_main                                  + 0xf3
[0x55aa5379b36e]    _start                                             + 0x2e


======================================== date-fns/index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 223, in <module>
    run_seq(content)
  File "readout.py", line 189, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f6284fcfa29]                                                       + 0x7c5a29
[0x7f6285190289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f63095c1741]                                                       + 0x2d7741
[0x7f630deca9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f630df50084]                                                       + 0x153084
[0x7f630df5550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f630df4fb9a]                                                       + 0x152b9a
[0x7f630df501b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f630dea2f1e]                                                       + 0xa5f1e
[0x7f630de73f2b]    PyObject_Call                                      + 0x4b
[0x7f630df55770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f630df4fb9a]                                                       + 0x152b9a
[0x7f630df4ff94]                                                       + 0x152f94
[0x7f630df5550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f630df4fb9a]                                                       + 0x152b9a
[0x7f630df4ff94]                                                       + 0x152f94
[0x7f630df5550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f630df4f193]                                                       + 0x152193
[0x7f630df5015c]                                                       + 0x15315c
[0x7f630df5550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f630df4fb9a]                                                       + 0x152b9a
[0x7f630df4ff94]                                                       + 0x152f94
[0x7f630df5550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f630df4fb9a]                                                       + 0x152b9a
[0x7f630df501b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f630df501df]    PyEval_EvalCode                                    + 0x1f
[0x7f630df853d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f630df8556f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f630df9f8e8]    Py_Main                                            + 0xff8
[0x561f1acd12b8]    main                                               + 0x178
[0x7f630dc150b3]    __libc_start_main                                  + 0xf3
[0x561f1acd136e]    _start                                             + 0x2e


======================================== date-fns/parse/_lib/parsers/index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 223, in <module>
    run_seq(content)
  File "readout.py", line 189, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f9b4d878a29]                                                       + 0x7c5a29
[0x7f9b4da39289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f9bd1e6a741]                                                       + 0x2d7741
[0x7f9bd67739e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f9bd67f9084]                                                       + 0x153084
[0x7f9bd67fe50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f9bd67f8b9a]                                                       + 0x152b9a
[0x7f9bd67f91b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f9bd674bf1e]                                                       + 0xa5f1e
[0x7f9bd671cf2b]    PyObject_Call                                      + 0x4b
[0x7f9bd67fe770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f9bd67f8b9a]                                                       + 0x152b9a
[0x7f9bd67f8f94]                                                       + 0x152f94
[0x7f9bd67fe50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f9bd67f8b9a]                                                       + 0x152b9a
[0x7f9bd67f8f94]                                                       + 0x152f94
[0x7f9bd67fe50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f9bd67f8193]                                                       + 0x152193
[0x7f9bd67f915c]                                                       + 0x15315c
[0x7f9bd67fe50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f9bd67f8b9a]                                                       + 0x152b9a
[0x7f9bd67f8f94]                                                       + 0x152f94
[0x7f9bd67fe50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f9bd67f8b9a]                                                       + 0x152b9a
[0x7f9bd67f91b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f9bd67f91df]    PyEval_EvalCode                                    + 0x1f
[0x7f9bd682e3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f9bd682e56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f9bd68488e8]    Py_Main                                            + 0xff8
[0x56306dd8e2b8]    main                                               + 0x178
[0x7f9bd64be0b3]    __libc_start_main                                  + 0xf3
[0x56306dd8e36e]    _start                                             + 0x2e


======================================== functional-red-black-tree/rbtree.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 223, in <module>
    run_seq(content)
  File "readout.py", line 189, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f9f6425ea29]                                                       + 0x7c5a29
[0x7f9f6441f289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f9fe8850741]                                                       + 0x2d7741
[0x7f9fed1599e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f9fed1df084]                                                       + 0x153084
[0x7f9fed1e450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f9fed1deb9a]                                                       + 0x152b9a
[0x7f9fed1df1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f9fed131f1e]                                                       + 0xa5f1e
[0x7f9fed102f2b]    PyObject_Call                                      + 0x4b
[0x7f9fed1e4770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f9fed1deb9a]                                                       + 0x152b9a
[0x7f9fed1def94]                                                       + 0x152f94
[0x7f9fed1e450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f9fed1deb9a]                                                       + 0x152b9a
[0x7f9fed1def94]                                                       + 0x152f94
[0x7f9fed1e450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f9fed1de193]                                                       + 0x152193
[0x7f9fed1df15c]                                                       + 0x15315c
[0x7f9fed1e450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f9fed1deb9a]                                                       + 0x152b9a
[0x7f9fed1def94]                                                       + 0x152f94
[0x7f9fed1e450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f9fed1deb9a]                                                       + 0x152b9a
[0x7f9fed1df1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f9fed1df1df]    PyEval_EvalCode                                    + 0x1f
[0x7f9fed2143d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f9fed21456f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f9fed22e8e8]    Py_Main                                            + 0xff8
[0x55f9b833e2b8]    main                                               + 0x178
[0x7f9fecea40b3]    __libc_start_main                                  + 0xf3
[0x55f9b833e36e]    _start                                             + 0x2e


======================================== html-entities/lib/named-references.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 223, in <module>
    run_seq(content)
  File "readout.py", line 189, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f1595f1aa29]                                                       + 0x7c5a29
[0x7f15960db289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f161a50c741]                                                       + 0x2d7741
[0x7f161ee159e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f161ee9b084]                                                       + 0x153084
[0x7f161eea050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f161ee9ab9a]                                                       + 0x152b9a
[0x7f161ee9b1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f161ededf1e]                                                       + 0xa5f1e
[0x7f161edbef2b]    PyObject_Call                                      + 0x4b
[0x7f161eea0770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f161ee9ab9a]                                                       + 0x152b9a
[0x7f161ee9af94]                                                       + 0x152f94
[0x7f161eea050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f161ee9ab9a]                                                       + 0x152b9a
[0x7f161ee9af94]                                                       + 0x152f94
[0x7f161eea050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f161ee9a193]                                                       + 0x152193
[0x7f161ee9b15c]                                                       + 0x15315c
[0x7f161eea050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f161ee9ab9a]                                                       + 0x152b9a
[0x7f161ee9af94]                                                       + 0x152f94
[0x7f161eea050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f161ee9ab9a]                                                       + 0x152b9a
[0x7f161ee9b1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f161ee9b1df]    PyEval_EvalCode                                    + 0x1f
[0x7f161eed03d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f161eed056f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f161eeea8e8]    Py_Main                                            + 0xff8
[0x56167596c2b8]    main                                               + 0x178
[0x7f161eb600b3]    __libc_start_main                                  + 0xf3
[0x56167596c36e]    _start                                             + 0x2e


======================================== ipaddr.js/ipaddr.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 223, in <module>
    run_seq(content)
  File "readout.py", line 189, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f0e36959a29]                                                       + 0x7c5a29
[0x7f0e36b1a289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f0ebaf4b741]                                                       + 0x2d7741
[0x7f0ebf8549e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f0ebf8da084]                                                       + 0x153084
[0x7f0ebf8df50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f0ebf8d9b9a]                                                       + 0x152b9a
[0x7f0ebf8da1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f0ebf82cf1e]                                                       + 0xa5f1e
[0x7f0ebf7fdf2b]    PyObject_Call                                      + 0x4b
[0x7f0ebf8df770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f0ebf8d9b9a]                                                       + 0x152b9a
[0x7f0ebf8d9f94]                                                       + 0x152f94
[0x7f0ebf8df50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f0ebf8d9b9a]                                                       + 0x152b9a
[0x7f0ebf8d9f94]                                                       + 0x152f94
[0x7f0ebf8df50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f0ebf8d9193]                                                       + 0x152193
[0x7f0ebf8da15c]                                                       + 0x15315c
[0x7f0ebf8df50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f0ebf8d9b9a]                                                       + 0x152b9a
[0x7f0ebf8d9f94]                                                       + 0x152f94
[0x7f0ebf8df50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f0ebf8d9b9a]                                                       + 0x152b9a
[0x7f0ebf8da1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f0ebf8da1df]    PyEval_EvalCode                                    + 0x1f
[0x7f0ebf90f3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f0ebf90f56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f0ebf9298e8]    Py_Main                                            + 0xff8
[0x5620dfce72b8]    main                                               + 0x178
[0x7f0ebf59f0b3]    __libc_start_main                                  + 0xf3
[0x5620dfce736e]    _start                                             + 0x2e


======================================== ipaddr.js/lib/ipaddr.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 223, in <module>
    run_seq(content)
  File "readout.py", line 189, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f36e5155a29]                                                       + 0x7c5a29
[0x7f36e5316289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f36ff357741]                                                       + 0x2d7741
[0x7f3703c609e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f3703ce6084]                                                       + 0x153084
[0x7f3703ceb50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f3703ce5b9a]                                                       + 0x152b9a
[0x7f3703ce61b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f3703c38f1e]                                                       + 0xa5f1e
[0x7f3703c09f2b]    PyObject_Call                                      + 0x4b
[0x7f3703ceb770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f3703ce5b9a]                                                       + 0x152b9a
[0x7f3703ce5f94]                                                       + 0x152f94
[0x7f3703ceb50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f3703ce5b9a]                                                       + 0x152b9a
[0x7f3703ce5f94]                                                       + 0x152f94
[0x7f3703ceb50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f3703ce5193]                                                       + 0x152193
[0x7f3703ce615c]                                                       + 0x15315c
[0x7f3703ceb50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f3703ce5b9a]                                                       + 0x152b9a
[0x7f3703ce5f94]                                                       + 0x152f94
[0x7f3703ceb50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f3703ce5b9a]                                                       + 0x152b9a
[0x7f3703ce61b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f3703ce61df]    PyEval_EvalCode                                    + 0x1f
[0x7f3703d1b3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f3703d1b56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f3703d358e8]    Py_Main                                            + 0xff8
[0x55ffbc0b52b8]    main                                               + 0x178
[0x7f37039ab0b3]    __libc_start_main                                  + 0xf3
[0x55ffbc0b536e]    _start                                             + 0x2e


======================================== async.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large


======================================== async.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large


======================================== pako.es5.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large


======================================== pako.es5.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large


======================================== pako.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large


======================================== pako.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large


======================================== pako/dist/pako_deflate.es5.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 223, in <module>
    run_seq(content)
  File "readout.py", line 189, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f4caee51a29]                                                       + 0x7c5a29
[0x7f4caf012289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f4d33443741]                                                       + 0x2d7741
[0x7f4d37d4c9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f4d37dd2084]                                                       + 0x153084
[0x7f4d37dd750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4d37dd1b9a]                                                       + 0x152b9a
[0x7f4d37dd21b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f4d37d24f1e]                                                       + 0xa5f1e
[0x7f4d37cf5f2b]    PyObject_Call                                      + 0x4b
[0x7f4d37dd7770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f4d37dd1b9a]                                                       + 0x152b9a
[0x7f4d37dd1f94]                                                       + 0x152f94
[0x7f4d37dd750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4d37dd1b9a]                                                       + 0x152b9a
[0x7f4d37dd1f94]                                                       + 0x152f94
[0x7f4d37dd750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4d37dd1193]                                                       + 0x152193
[0x7f4d37dd215c]                                                       + 0x15315c
[0x7f4d37dd750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4d37dd1b9a]                                                       + 0x152b9a
[0x7f4d37dd1f94]                                                       + 0x152f94
[0x7f4d37dd750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4d37dd1b9a]                                                       + 0x152b9a
[0x7f4d37dd21b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f4d37dd21df]    PyEval_EvalCode                                    + 0x1f
[0x7f4d37e073d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f4d37e0756f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f4d37e218e8]    Py_Main                                            + 0xff8
[0x55cd138c22b8]    main                                               + 0x178
[0x7f4d37a970b3]    __libc_start_main                                  + 0xf3
[0x55cd138c236e]    _start                                             + 0x2e


======================================== pako/dist/pako_deflate.es5.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 223, in <module>
    run_seq(content)
  File "readout.py", line 189, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f25ee1d5a29]                                                       + 0x7c5a29
[0x7f25ee396289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f25ffbd6741]                                                       + 0x2d7741
[0x7f26044df9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f2604565084]                                                       + 0x153084
[0x7f260456a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f2604564b9a]                                                       + 0x152b9a
[0x7f26045651b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f26044b7f1e]                                                       + 0xa5f1e
[0x7f2604488f2b]    PyObject_Call                                      + 0x4b
[0x7f260456a770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f2604564b9a]                                                       + 0x152b9a
[0x7f2604564f94]                                                       + 0x152f94
[0x7f260456a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f2604564b9a]                                                       + 0x152b9a
[0x7f2604564f94]                                                       + 0x152f94
[0x7f260456a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f2604564193]                                                       + 0x152193
[0x7f260456515c]                                                       + 0x15315c
[0x7f260456a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f2604564b9a]                                                       + 0x152b9a
[0x7f2604564f94]                                                       + 0x152f94
[0x7f260456a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f2604564b9a]                                                       + 0x152b9a
[0x7f26045651b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f26045651df]    PyEval_EvalCode                                    + 0x1f
[0x7f260459a3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f260459a56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f26045b48e8]    Py_Main                                            + 0xff8
[0x556c9da582b8]    main                                               + 0x178
[0x7f260422a0b3]    __libc_start_main                                  + 0xf3
[0x556c9da5836e]    _start                                             + 0x2e


======================================== pako/dist/pako_deflate.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 223, in <module>
    run_seq(content)
  File "readout.py", line 189, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f75ae799a29]                                                       + 0x7c5a29
[0x7f75ae95a289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f7632d8b741]                                                       + 0x2d7741
[0x7f76376949e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f763771a084]                                                       + 0x153084
[0x7f763771f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7637719b9a]                                                       + 0x152b9a
[0x7f763771a1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f763766cf1e]                                                       + 0xa5f1e
[0x7f763763df2b]    PyObject_Call                                      + 0x4b
[0x7f763771f770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f7637719b9a]                                                       + 0x152b9a
[0x7f7637719f94]                                                       + 0x152f94
[0x7f763771f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7637719b9a]                                                       + 0x152b9a
[0x7f7637719f94]                                                       + 0x152f94
[0x7f763771f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7637719193]                                                       + 0x152193
[0x7f763771a15c]                                                       + 0x15315c
[0x7f763771f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7637719b9a]                                                       + 0x152b9a
[0x7f7637719f94]                                                       + 0x152f94
[0x7f763771f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7637719b9a]                                                       + 0x152b9a
[0x7f763771a1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f763771a1df]    PyEval_EvalCode                                    + 0x1f
[0x7f763774f3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f763774f56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f76377698e8]    Py_Main                                            + 0xff8
[0x5646639b02b8]    main                                               + 0x178
[0x7f76373df0b3]    __libc_start_main                                  + 0xf3
[0x5646639b036e]    _start                                             + 0x2e


======================================== pako/dist/pako_deflate.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 223, in <module>
    run_seq(content)
  File "readout.py", line 189, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fc4ef7eca29]                                                       + 0x7c5a29
[0x7fc4ef9ad289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fc573dde741]                                                       + 0x2d7741
[0x7fc5786e79e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fc57876d084]                                                       + 0x153084
[0x7fc57877250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc57876cb9a]                                                       + 0x152b9a
[0x7fc57876d1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fc5786bff1e]                                                       + 0xa5f1e
[0x7fc578690f2b]    PyObject_Call                                      + 0x4b
[0x7fc578772770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fc57876cb9a]                                                       + 0x152b9a
[0x7fc57876cf94]                                                       + 0x152f94
[0x7fc57877250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc57876cb9a]                                                       + 0x152b9a
[0x7fc57876cf94]                                                       + 0x152f94
[0x7fc57877250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc57876c193]                                                       + 0x152193
[0x7fc57876d15c]                                                       + 0x15315c
[0x7fc57877250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc57876cb9a]                                                       + 0x152b9a
[0x7fc57876cf94]                                                       + 0x152f94
[0x7fc57877250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc57876cb9a]                                                       + 0x152b9a
[0x7fc57876d1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fc57876d1df]    PyEval_EvalCode                                    + 0x1f
[0x7fc5787a23d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fc5787a256f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fc5787bc8e8]    Py_Main                                            + 0xff8
[0x5637660e32b8]    main                                               + 0x178
[0x7fc5784320b3]    __libc_start_main                                  + 0xf3
[0x5637660e336e]    _start                                             + 0x2e


======================================== pako/dist/pako_inflate.es5.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 223, in <module>
    run_seq(content)
  File "readout.py", line 189, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f27a4d75a29]                                                       + 0x7c5a29
[0x7f27a4f36289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f2829367741]                                                       + 0x2d7741
[0x7f282dc709e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f282dcf6084]                                                       + 0x153084
[0x7f282dcfb50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f282dcf5b9a]                                                       + 0x152b9a
[0x7f282dcf61b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f282dc48f1e]                                                       + 0xa5f1e
[0x7f282dc19f2b]    PyObject_Call                                      + 0x4b
[0x7f282dcfb770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f282dcf5b9a]                                                       + 0x152b9a
[0x7f282dcf5f94]                                                       + 0x152f94
[0x7f282dcfb50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f282dcf5b9a]                                                       + 0x152b9a
[0x7f282dcf5f94]                                                       + 0x152f94
[0x7f282dcfb50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f282dcf5193]                                                       + 0x152193
[0x7f282dcf615c]                                                       + 0x15315c
[0x7f282dcfb50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f282dcf5b9a]                                                       + 0x152b9a
[0x7f282dcf5f94]                                                       + 0x152f94
[0x7f282dcfb50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f282dcf5b9a]                                                       + 0x152b9a
[0x7f282dcf61b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f282dcf61df]    PyEval_EvalCode                                    + 0x1f
[0x7f282dd2b3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f282dd2b56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f282dd458e8]    Py_Main                                            + 0xff8
[0x55ab2d3be2b8]    main                                               + 0x178
[0x7f282d9bb0b3]    __libc_start_main                                  + 0xf3
[0x55ab2d3be36e]    _start                                             + 0x2e


======================================== pako/dist/pako_inflate.es5.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 223, in <module>
    run_seq(content)
  File "readout.py", line 189, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f4f50303a29]                                                       + 0x7c5a29
[0x7f4f504c4289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f4fd48f5741]                                                       + 0x2d7741
[0x7f4fd91fe9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f4fd9284084]                                                       + 0x153084
[0x7f4fd928950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4fd9283b9a]                                                       + 0x152b9a
[0x7f4fd92841b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f4fd91d6f1e]                                                       + 0xa5f1e
[0x7f4fd91a7f2b]    PyObject_Call                                      + 0x4b
[0x7f4fd9289770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f4fd9283b9a]                                                       + 0x152b9a
[0x7f4fd9283f94]                                                       + 0x152f94
[0x7f4fd928950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4fd9283b9a]                                                       + 0x152b9a
[0x7f4fd9283f94]                                                       + 0x152f94
[0x7f4fd928950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4fd9283193]                                                       + 0x152193
[0x7f4fd928415c]                                                       + 0x15315c
[0x7f4fd928950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4fd9283b9a]                                                       + 0x152b9a
[0x7f4fd9283f94]                                                       + 0x152f94
[0x7f4fd928950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4fd9283b9a]                                                       + 0x152b9a
[0x7f4fd92841b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f4fd92841df]    PyEval_EvalCode                                    + 0x1f
[0x7f4fd92b93d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f4fd92b956f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f4fd92d38e8]    Py_Main                                            + 0xff8
[0x55980d5962b8]    main                                               + 0x178
[0x7f4fd8f490b3]    __libc_start_main                                  + 0xf3
[0x55980d59636e]    _start                                             + 0x2e


======================================== pako/dist/pako_inflate.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 223, in <module>
    run_seq(content)
  File "readout.py", line 189, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fd1a2c14a29]                                                       + 0x7c5a29
[0x7fd1a2dd5289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fd1a3cf2741]                                                       + 0x2d7741
[0x7fd1a85fb9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fd1a8681084]                                                       + 0x153084
[0x7fd1a868650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fd1a8680b9a]                                                       + 0x152b9a
[0x7fd1a86811b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fd1a85d3f1e]                                                       + 0xa5f1e
[0x7fd1a85a4f2b]    PyObject_Call                                      + 0x4b
[0x7fd1a8686770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fd1a8680b9a]                                                       + 0x152b9a
[0x7fd1a8680f94]                                                       + 0x152f94
[0x7fd1a868650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fd1a8680b9a]                                                       + 0x152b9a
[0x7fd1a8680f94]                                                       + 0x152f94
[0x7fd1a868650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fd1a8680193]                                                       + 0x152193
[0x7fd1a868115c]                                                       + 0x15315c
[0x7fd1a868650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fd1a8680b9a]                                                       + 0x152b9a
[0x7fd1a8680f94]                                                       + 0x152f94
[0x7fd1a868650d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fd1a8680b9a]                                                       + 0x152b9a
[0x7fd1a86811b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fd1a86811df]    PyEval_EvalCode                                    + 0x1f
[0x7fd1a86b63d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fd1a86b656f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fd1a86d08e8]    Py_Main                                            + 0xff8
[0x5646fd5a72b8]    main                                               + 0x178
[0x7fd1a83460b3]    __libc_start_main                                  + 0xf3
[0x5646fd5a736e]    _start                                             + 0x2e


======================================== pako/dist/pako_inflate.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 223, in <module>
    run_seq(content)
  File "readout.py", line 189, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f3da715ba29]                                                       + 0x7c5a29
[0x7f3da731c289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f3e2b74d741]                                                       + 0x2d7741
[0x7f3e300569e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f3e300dc084]                                                       + 0x153084
[0x7f3e300e150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f3e300dbb9a]                                                       + 0x152b9a
[0x7f3e300dc1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f3e3002ef1e]                                                       + 0xa5f1e
[0x7f3e2fffff2b]    PyObject_Call                                      + 0x4b
[0x7f3e300e1770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f3e300dbb9a]                                                       + 0x152b9a
[0x7f3e300dbf94]                                                       + 0x152f94
[0x7f3e300e150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f3e300dbb9a]                                                       + 0x152b9a
[0x7f3e300dbf94]                                                       + 0x152f94
[0x7f3e300e150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f3e300db193]                                                       + 0x152193
[0x7f3e300dc15c]                                                       + 0x15315c
[0x7f3e300e150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f3e300dbb9a]                                                       + 0x152b9a
[0x7f3e300dbf94]                                                       + 0x152f94
[0x7f3e300e150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f3e300dbb9a]                                                       + 0x152b9a
[0x7f3e300dc1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f3e300dc1df]    PyEval_EvalCode                                    + 0x1f
[0x7f3e301113d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f3e3011156f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f3e3012b8e8]    Py_Main                                            + 0xff8
[0x56318710e2b8]    main                                               + 0x178
[0x7f3e2fda10b3]    __libc_start_main                                  + 0xf3
[0x56318710e36e]    _start                                             + 0x2e


======================================== pako/lib/zlib/deflate.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 223, in <module>
    run_seq(content)
  File "readout.py", line 189, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fef6cc3ea29]                                                       + 0x7c5a29
[0x7fef6cdff289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7feff1230741]                                                       + 0x2d7741
[0x7feff5b399e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7feff5bbf084]                                                       + 0x153084
[0x7feff5bc450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7feff5bbeb9a]                                                       + 0x152b9a
[0x7feff5bbf1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7feff5b11f1e]                                                       + 0xa5f1e
[0x7feff5ae2f2b]    PyObject_Call                                      + 0x4b
[0x7feff5bc4770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7feff5bbeb9a]                                                       + 0x152b9a
[0x7feff5bbef94]                                                       + 0x152f94
[0x7feff5bc450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7feff5bbeb9a]                                                       + 0x152b9a
[0x7feff5bbef94]                                                       + 0x152f94
[0x7feff5bc450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7feff5bbe193]                                                       + 0x152193
[0x7feff5bbf15c]                                                       + 0x15315c
[0x7feff5bc450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7feff5bbeb9a]                                                       + 0x152b9a
[0x7feff5bbef94]                                                       + 0x152f94
[0x7feff5bc450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7feff5bbeb9a]                                                       + 0x152b9a
[0x7feff5bbf1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7feff5bbf1df]    PyEval_EvalCode                                    + 0x1f
[0x7feff5bf43d5]    PyRun_FileExFlags                                  + 0xb5
[0x7feff5bf456f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7feff5c0e8e8]    Py_Main                                            + 0xff8
[0x559f4993d2b8]    main                                               + 0x178
[0x7feff58840b3]    __libc_start_main                                  + 0xf3
[0x559f4993d36e]    _start                                             + 0x2e


======================================== pako/lib/zlib/inflate.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 223, in <module>
    run_seq(content)
  File "readout.py", line 189, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7faeb6d56a29]                                                       + 0x7c5a29
[0x7faeb6f17289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7faf3b348741]                                                       + 0x2d7741
[0x7faf3fc519e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7faf3fcd7084]                                                       + 0x153084
[0x7faf3fcdc50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7faf3fcd6b9a]                                                       + 0x152b9a
[0x7faf3fcd71b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7faf3fc29f1e]                                                       + 0xa5f1e
[0x7faf3fbfaf2b]    PyObject_Call                                      + 0x4b
[0x7faf3fcdc770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7faf3fcd6b9a]                                                       + 0x152b9a
[0x7faf3fcd6f94]                                                       + 0x152f94
[0x7faf3fcdc50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7faf3fcd6b9a]                                                       + 0x152b9a
[0x7faf3fcd6f94]                                                       + 0x152f94
[0x7faf3fcdc50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7faf3fcd6193]                                                       + 0x152193
[0x7faf3fcd715c]                                                       + 0x15315c
[0x7faf3fcdc50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7faf3fcd6b9a]                                                       + 0x152b9a
[0x7faf3fcd6f94]                                                       + 0x152f94
[0x7faf3fcdc50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7faf3fcd6b9a]                                                       + 0x152b9a
[0x7faf3fcd71b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7faf3fcd71df]    PyEval_EvalCode                                    + 0x1f
[0x7faf3fd0c3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7faf3fd0c56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7faf3fd268e8]    Py_Main                                            + 0xff8
[0x559e20b712b8]    main                                               + 0x178
[0x7faf3f99c0b3]    __libc_start_main                                  + 0xf3
[0x559e20b7136e]    _start                                             + 0x2e


======================================== regexpp/index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 223, in <module>
    run_seq(content)
  File "readout.py", line 189, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f7ea4a53a29]                                                       + 0x7c5a29
[0x7f7ea4c14289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f7f29045741]                                                       + 0x2d7741
[0x7f7f2d94e9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f7f2d9d4084]                                                       + 0x153084
[0x7f7f2d9d950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7f2d9d3b9a]                                                       + 0x152b9a
[0x7f7f2d9d41b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f7f2d926f1e]                                                       + 0xa5f1e
[0x7f7f2d8f7f2b]    PyObject_Call                                      + 0x4b
[0x7f7f2d9d9770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f7f2d9d3b9a]                                                       + 0x152b9a
[0x7f7f2d9d3f94]                                                       + 0x152f94
[0x7f7f2d9d950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7f2d9d3b9a]                                                       + 0x152b9a
[0x7f7f2d9d3f94]                                                       + 0x152f94
[0x7f7f2d9d950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7f2d9d3193]                                                       + 0x152193
[0x7f7f2d9d415c]                                                       + 0x15315c
[0x7f7f2d9d950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7f2d9d3b9a]                                                       + 0x152b9a
[0x7f7f2d9d3f94]                                                       + 0x152f94
[0x7f7f2d9d950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7f2d9d3b9a]                                                       + 0x152b9a
[0x7f7f2d9d41b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f7f2d9d41df]    PyEval_EvalCode                                    + 0x1f
[0x7f7f2da093d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f7f2da0956f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f7f2da238e8]    Py_Main                                            + 0xff8
[0x5607424e62b8]    main                                               + 0x178
[0x7f7f2d6990b3]    __libc_start_main                                  + 0xf3
[0x5607424e636e]    _start                                             + 0x2e


======================================== ret/dist/tokenizer.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 223, in <module>
    run_seq(content)
  File "readout.py", line 201, in run_seq
    pr = pred[ix]
IndexError: index 1398 is out of bounds for axis 0 with size 1398

