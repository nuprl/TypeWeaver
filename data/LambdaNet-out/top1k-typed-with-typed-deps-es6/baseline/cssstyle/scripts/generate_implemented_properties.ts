'use strict';

import fs from 'fs';
import path from 'path';
import t from 'babel-types';
import generate from 'babel-generator';
import { camelToDashed } from '../lib/parsers';

const dashedProperties: Array = fs
  .readdirSync(path.resolve(__dirname, '../lib/properties'))
  .filter((propertyFile: String) => propertyFile.substr(-3) === '.js')
  .map((propertyFile: String) => camelToDashed(propertyFile.replace('.js', '')));

const out_file: String = fs.createWriteStream(path.resolve(__dirname, '../lib/implementedProperties.js'), {
  encoding: 'utf-8',
});
var date_today: HTMLInputElement = new Date();
out_file.write(
  "'use strict';\n\n// autogenerated - " +
    (date_today.getMonth() + 1 + '/' + date_today.getDate() + '/' + date_today.getFullYear()) +
    '\n\n'
);
out_file.write('/*\n *\n * https://www.w3.org/Style/CSS/all-properties.en.html\n */\n\n');

const statements: Array = [];
statements.push(
  t.variableDeclaration('var', [
    t.variableDeclarator(
      t.identifier('implementedProperties'),
      t.newExpression(t.identifier('Set'), [])
    ),
  ])
);

dashedProperties.forEach((property: String) => {
  statements.push(
    t.expressionStatement(
      t.callExpression(
        t.memberExpression(t.identifier('implementedProperties'), t.identifier('add')),
        [t.stringLiteral(property)]
      )
    )
  );
});

statements.push(
  t.expressionStatement(
    t.assignmentExpression(
      '=',
      t.memberExpression(t.identifier('module'), t.identifier('exports')),
      t.identifier('implementedProperties')
    )
  )
);

out_file.write(generate(t.program(statements)).code + '\n');
out_file.end(function(err: Boolean) {
  if (err) {
    throw err;
  }
});
