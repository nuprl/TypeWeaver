'use strict'Literal.String.Single
;Punctuation
\n\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
$WeakMapName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
typeofOperator.Word
 Text.Whitespace
WeakMapName.Builtinany0.2072complex0.1582WeakMapConstructor0.1377boolean0.0580string0.0228
 Text.Whitespace
===Operator
 Text.Whitespace
'function'Literal.String.Single
 Text.Whitespace
&&Operator
 Text.Whitespace
WeakMapName.Builtinany0.2656WeakMapConstructor0.2237complex0.0686boolean0.0431number0.0079
.Punctuation
prototypeName.Otherboolean0.6538any0.1543Object0.0360string0.0353Function0.0152
 Text.Whitespace
?Operator
 Text.Whitespace
WeakMapName.OtherWeakMapConstructor0.2676any0.0952boolean0.0553complex0.0380null0.0141
 Text.Whitespace
:Operator
 Text.Whitespace
nullKeyword.Type
;Punctuation
\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
$WeakSetName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
typeofOperator.Word
 Text.Whitespace
WeakSetName.Builtinany0.7421complex0.1706boolean0.0347string0.0164number0.0038
 Text.Whitespace
===Operator
 Text.Whitespace
'function'Literal.String.Single
 Text.Whitespace
&&Operator
 Text.Whitespace
WeakSetName.Builtinany0.7705boolean0.0994complex0.0485Function0.0141string0.0098
.Punctuation
prototypeName.Otherboolean0.5228any0.3492Function0.0329string0.0193Object0.0190
 Text.Whitespace
?Operator
 Text.Whitespace
WeakSetName.Otherany0.5043boolean0.2462string0.1338Function0.0162Error0.0125
 Text.Whitespace
:Operator
 Text.Whitespace
nullKeyword.Type
;Punctuation
\n\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
exportedName.Otherany0.9667string0.0094boolean0.0086complex0.0022void0.0016
;Punctuation
\n\nText.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
$WeakMapName.Other
)Punctuation
 Text.Whitespace
{Punctuation
\n\tText.Whitespace
// eslint-disable-next-line no-unused-varsComment.Single
\n\tText.Whitespace
exportedName.Otherany0.7525boolean0.1933string0.0203complex0.0056number0.0029
 Text.Whitespace
=Operator
 Text.Whitespace
functionKeyword.Declaration
 Text.Whitespace
isWeakMapName.Otherboolean0.9414any0.0381string0.0045complex0.0035number0.0022
(Punctuation
xName.Otherany0.9249string0.0126number0.0107never0.0056Date0.0041
)Punctuation
 Text.Whitespace
{Punctuation
\n\t\tText.Whitespace
// `WeakMap` is not present in this environment.Comment.Single
\n\t\tText.Whitespace
returnKeyword
 Text.Whitespace
falseKeyword.Constant
;Punctuation
\n\tText.Whitespace
}Punctuation
;Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
$mapHasName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
$WeakMapName.Other
 Text.Whitespace
?Operator
 Text.Whitespace
$WeakMap.prototype.hasName.Other
 Text.Whitespace
:Operator
 Text.Whitespace
nullKeyword.Type
;Punctuation
\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
$setHasName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
$WeakSetName.Other
 Text.Whitespace
?Operator
 Text.Whitespace
$WeakSet.prototype.hasName.Other
 Text.Whitespace
:Operator
 Text.Whitespace
nullKeyword.Type
;Punctuation
\nText.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
exportedName.Otherany0.9143boolean0.0344string0.0218number0.0024any[]0.0017
 Text.Whitespace
&&Operator
 Text.Whitespace
!Operator
$mapHasName.Other
)Punctuation
 Text.Whitespace
{Punctuation
\n\tText.Whitespace
// eslint-disable-next-line no-unused-varsComment.Single
\n\tText.Whitespace
exportedName.Otherany0.7197boolean0.2094string0.0272number0.0043complex0.0035
 Text.Whitespace
=Operator
 Text.Whitespace
functionKeyword.Declaration
 Text.Whitespace
isWeakMapName.Otherboolean0.9212any0.0490string0.0076number0.0036complex0.0025
(Punctuation
xName.Otherany0.9196string0.0122number0.0097never0.0038boolean0.0036
)Punctuation
 Text.Whitespace
{Punctuation
\n\t\tText.Whitespace
// `WeakMap` does not have a `has` methodComment.Single
\n\t\tText.Whitespace
returnKeyword
 Text.Whitespace
falseKeyword.Constant
;Punctuation
\n\tText.Whitespace
}Punctuation
;Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
moduleKeyword.Reserved
.exportsName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
exportedName.Otherany0.9702string0.0056boolean0.0049never0.0017any[]0.0010
 Text.Whitespace
||Operator
 Text.Whitespace
functionKeyword.Declaration
 Text.Whitespace
isWeakMapName.Otherboolean0.8051any0.1375string0.0082complex0.0079Boolean0.0029
(Punctuation
xName.Otherany0.9205string0.0103never0.0041boolean0.0028complex0.0027
)Punctuation
 Text.Whitespace
{Punctuation
\n\tText.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
xName.Otherany0.9600boolean0.0112string0.0077complex0.0027number0.0020
 Text.Whitespace
||Operator
 Text.Whitespace
typeofOperator.Word
 Text.Whitespace
xName.Otherany0.9702complex0.0047string0.0039never0.0022number0.0021
 Text.Whitespace
!==Operator
 Text.Whitespace
'object'Literal.String.Single
)Punctuation
 Text.Whitespace
{Punctuation
\n\t\tText.Whitespace
returnKeyword
 Text.Whitespace
falseKeyword.Constant
;Punctuation
\n\tText.Whitespace
}Punctuation
\n\tText.Whitespace
tryKeyword
 Text.Whitespace
{Punctuation
\n\t\tText.Whitespace
$mapHasName.Other
.Punctuation
callName.Otherany0.9600void0.0121string0.0031boolean0.0031complex0.0029
(Punctuation
xName.Otherany0.9299string0.0225number0.0052boolean0.0043never0.0021
,Punctuation
 Text.Whitespace
$mapHasName.Other
)Punctuation
;Punctuation
\n\t\tText.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
$setHasName.Other
)Punctuation
 Text.Whitespace
{Punctuation
\n\t\t\tText.Whitespace
tryKeyword
 Text.Whitespace
{Punctuation
\n\t\t\t\tText.Whitespace
$setHasName.Other
.Punctuation
callName.Otherany0.9694void0.0090boolean0.0035complex0.0029number0.0021
(Punctuation
xName.Otherany0.9021string0.0115boolean0.0067number0.0049T0.0037
,Punctuation
 Text.Whitespace
$setHasName.Other
)Punctuation
;Punctuation
\n\t\t\tText.Whitespace
}Punctuation
 Text.Whitespace
catchKeyword
 Text.Whitespace
(Punctuation
eName.Otherany0.9980string0.0004number0.0003complex0.0002Error0.0001
)Punctuation
 Text.Whitespace
{Punctuation
\n\t\t\t\tText.Whitespace
returnKeyword
 Text.Whitespace
trueKeyword.Constant
;Punctuation
\n\t\t\tText.Whitespace
}Punctuation
\n\t\tText.Whitespace
}Punctuation
\n\t\tText.Whitespace
returnKeyword
 Text.Whitespace
xName.Otherany0.9442boolean0.0074string0.0047complex0.0046number0.0044
 Text.Whitespace
instanceofOperator.Word
 Text.Whitespace
$WeakMapName.Other
;Punctuation
 Text.Whitespace
// core-js workaround, pre-v3Comment.Single
\n\tText.Whitespace
}Punctuation
 Text.Whitespace
catchKeyword
 Text.Whitespace
(Punctuation
eName.Otherany0.9978string0.0005number0.0003Error0.0002complex0.0002
)Punctuation
 Text.Whitespace
{Punctuation
}Punctuation
\n\tText.Whitespace
returnKeyword
 Text.Whitespace
falseKeyword.Constant
;Punctuation
\nText.Whitespace
}Punctuation
;Punctuation
\nText.Whitespace
