importKeyword
 Text.Whitespace
PromiseName.BuiltinPromiseConstructor0.9416any0.0462complex0.0038Promise<any>0.0021string0.0008
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./promise'Literal.String.Single
;Punctuation
\nText.Whitespace
importKeyword
 Text.Whitespace
{Punctuation
 Text.Whitespace
MapEnumeratorName.Otherany0.7319void0.0854complex0.0582boolean0.0366Promise<void>0.0195
 Text.Whitespace
}Punctuation
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./map'Literal.String.Single
;Punctuation
\nText.Whitespace
importKeyword
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
fulfillName.Otherboolean0.6240void0.1661Function0.1105any0.0390Promise<void>0.0131
,Punctuation
\n  Text.Whitespace
REJECTEDName.Otherfalse0.3235boolean0.0909true0.0243Promise<boolean>0.0135Date0.0100
\nText.Whitespace
}Punctuation
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./-internal'Literal.String.Single
;Punctuation
\n\nText.Whitespace
constKeyword.Declaration
 Text.Whitespace
EMPTY_OBJECTName.Other{}0.8827any0.0461complex0.0140boolean0.0035symbol0.0021
 Text.Whitespace
=Operator
 Text.Whitespace
{Punctuation
}Punctuation
;Punctuation
\n\nText.Whitespace
classKeyword.Declaration
 Text.Whitespace
FilterEnumeratorName.Otherany0.9970{}0.0007complex0.0005void0.0004string0.0003
 Text.Whitespace
extendsKeyword
 Text.Whitespace
MapEnumeratorName.Otherany0.9866complex0.0038void0.0027{}0.0016symbol0.0006
 Text.Whitespace
{Punctuation
\n\n  Text.Whitespace
_checkFullfillmentName.Othervoid0.9817boolean0.0057any0.0038Function0.0022Promise<void>0.0015
(Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
thisKeyword
.Punctuation
_remainingName.Othernumber0.6066boolean0.2047any0.1108Date0.0089complex0.0078
 Text.Whitespace
===Operator
 Text.Whitespace
0Literal.Number.Float
 Text.Whitespace
&&Operator
 Text.Whitespace
thisKeyword
.Punctuation
_resultName.Otherany0.5287boolean0.1118void0.0292complex0.0188string0.0095
 Text.Whitespace
!==Operator
 Text.Whitespace
nullKeyword.Constant
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
resultName.Otherany0.4781boolean0.0871any[]0.0210string0.0119number0.0097
 Text.Whitespace
=Operator
 Text.Whitespace
thisKeyword
.Punctuation
_resultName.Otherany0.6353any[]0.0456boolean0.0122complex0.0098string0.0073
.Punctuation
filterName.Othercomplex0.6717any0.2682boolean0.0087valu...0.0043v...0.0032
(Punctuation
(Punctuation
valName.Otherboolean0.3871any0.2731string0.1531number0.0710{}0.0055
)Punctuation
 Text.Whitespace
=>Punctuation
 Text.Whitespace
valName.Otherstring0.3828any0.2847boolean0.1662number0.0908Date0.0070
 Text.Whitespace
!==Operator
 Text.Whitespace
EMPTY_OBJECTName.Otherstring0.2901boolean0.2347any0.1917number0.1399void0.0154
)Punctuation
;Punctuation
\n      Text.Whitespace
fulfillName.Otherboolean0.5185void0.2030any0.1464Function0.0539string0.0091
(Punctuation
thisKeyword
.Punctuation
promiseName.Otherany0.3778Promise<void>0.1448Promise<any>0.0640void0.0432Promise<{}>0.0263
,Punctuation
 Text.Whitespace
resultName.Otherany0.5657boolean0.0801number0.0388string0.0333any[]0.0125
)Punctuation
;Punctuation
\n      Text.Whitespace
thisKeyword
.Punctuation
_resultName.Otherany0.4446boolean0.0826void0.0743complex0.0186any[]0.0119
 Text.Whitespace
=Operator
 Text.Whitespace
nullKeyword.Constant
;Punctuation
\n    Text.Whitespace
}Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
_setResultAtName.Othervoid0.9622boolean0.0097any0.0091Promise<void>0.0029complex0.0017
(Punctuation
stateName.Otherany0.4455boolean0.1090number0.0736string0.0373IState0.0094
,Punctuation
 Text.Whitespace
iName.Othernumber0.7542any0.2034boolean0.0191string0.0074void0.0035
,Punctuation
 Text.Whitespace
valueName.Otherany0.6532boolean0.1348number0.0844string0.0334{}0.0054
,Punctuation
 Text.Whitespace
firstPassName.Otherboolean0.6886any0.1930number0.0476void0.0140string0.0051
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
firstPassName.Otherboolean0.8404any0.1169number0.0065false0.0056string0.0034
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
thisKeyword
.Punctuation
_resultName.Otherany0.6018boolean0.0641{}0.0153any[]0.0146complex0.0085
[Punctuation
iName.Othernumber0.6909any0.2408string0.0471boolean0.0120complex0.0008
]Punctuation
 Text.Whitespace
=Operator
 Text.Whitespace
valueName.Otherany0.7163string0.0843number0.0744boolean0.0593{}0.0075
;Punctuation
\n      Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
valName.Otherany0.3478boolean0.3255number0.0888string0.0773Date0.0336
,Punctuation
 Text.Whitespace
succeededName.Otherboolean0.9969false0.0010true0.0007any0.0005number0.0002
 Text.Whitespace
=Operator
 Text.Whitespace
trueKeyword.Constant
;Punctuation
\n      Text.Whitespace
tryKeyword
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
valName.Otherboolean0.4708any0.2415number0.1294string0.0220complex0.0210
 Text.Whitespace
=Operator
 Text.Whitespace
thisKeyword
.Punctuation
_mapFnName.Otherboolean0.4165any0.1460complex0.1162number0.0720string0.0140
(Punctuation
valueName.Otherany0.6927boolean0.0945number0.0735string0.0655{}0.0109
,Punctuation
 Text.Whitespace
iName.Othernumber0.8997any0.0792boolean0.0121string0.0040void0.0007
)Punctuation
;Punctuation
\n      Text.Whitespace
}Punctuation
 Text.Whitespace
catchKeyword
 Text.Whitespace
(Punctuation
errorName.Otherany0.9963boolean0.0012Error0.0008number0.0005string0.0004
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
succeededName.Otherboolean0.9939false0.0029true0.0016any0.0005number0.0003
 Text.Whitespace
=Operator
 Text.Whitespace
falseKeyword.Constant
;Punctuation
\n        Text.Whitespace
thisKeyword
.Punctuation
_settledAtName.Othervoid0.9651boolean0.0109complex0.0066Promise<void>0.0044any0.0033
(Punctuation
REJECTEDName.Otherfalse0.5666true0.0163boolean0.0083boolean[]0.0024Date0.0020
,Punctuation
 Text.Whitespace
iName.Othernumber0.9346any0.0320boolean0.0179string0.0042void0.0020
,Punctuation
 Text.Whitespace
errorName.Otherany0.5149Error0.2131boolean0.0558{}0.0310number0.0251
,Punctuation
 Text.Whitespace
falseKeyword.Constant
)Punctuation
;Punctuation
\n      Text.Whitespace
}Punctuation
\n      Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
succeededName.Otherboolean0.9962false0.0017any0.0006number0.0003true0.0002
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
thisKeyword
.Punctuation
_eachEntryName.Othervoid0.8427boolean0.0387complex0.0343any0.0284Promise<void>0.0152
(Punctuation
valName.Otherboolean0.4239any0.2016number0.1361string0.1137{}0.0192
,Punctuation
 Text.Whitespace
iName.Othernumber0.9169any0.0482boolean0.0207string0.0072void0.0012
,Punctuation
 Text.Whitespace
falseKeyword.Constant
)Punctuation
;Punctuation
\n      Text.Whitespace
}Punctuation
\n    Text.Whitespace
}Punctuation
 Text.Whitespace
elseKeyword
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
thisKeyword
.Punctuation
_remainingName.Othernumber0.9662any0.0190void0.0053boolean0.0045string0.0009
--Operator
;Punctuation
\n      Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
valueName.Otherboolean0.5993any0.2383string0.0835number0.0428{}0.0052
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
thisKeyword
.Punctuation
_resultName.Otherany0.4104any[]0.0541boolean0.0306complex0.0278{}0.0216
[Punctuation
iName.Othernumber0.8964any0.0612string0.0334boolean0.0029void0.0007
]Punctuation
 Text.Whitespace
=Operator
 Text.Whitespace
EMPTY_OBJECTName.Otherany0.3644boolean0.1276number0.1096void0.0502{}0.0394
;Punctuation
\n      Text.Whitespace
}Punctuation
\n    Text.Whitespace
}Punctuation
\n  Text.Whitespace
}Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
Text
/**\n `filter` is similar to JavaScript's native `filter` method.\n `filterFn` is eagerly called meaning that as soon as any promise\n  resolves its value will be passed to `filterFn`. `filter` returns\n  a promise that will become fulfilled with the result of running\n  `filterFn` on the values the promises become fulfilled with.\n\n  For example:\n\n  ```javascript\n  import { filter, resolve } from 'rsvp';\n\n  let promise1 = resolve(1);\n  let promise2 = resolve(2);\n  let promise3 = resolve(3);\n\n  let promises = [promise1, promise2, promise3];\n\n  let filterFn = function(item){\n    return item > 1;\n  };\n\n  filter(promises, filterFn).then(function(result){\n    // result is [ 2, 3 ]\n  });\n  ```\n\n  If any of the `promises` given to `filter` are rejected, the first promise\n  that is rejected will be given as an argument to the returned promise's\n  rejection handler. For example:\n\n  ```javascript\n  import { filter, reject, resolve } from 'rsvp';\n\n  let promise1 = resolve(1);\n  let promise2 = reject(new Error('2'));\n  let promise3 = reject(new Error('3'));\n  let promises = [ promise1, promise2, promise3 ];\n\n  let filterFn = function(item){\n    return item > 1;\n  };\n\n  filter(promises, filterFn).then(function(array){\n    // Code here never runs because there are rejected promises!\n  }, function(reason) {\n    // reason.message === '2'\n  });\n  ```\n\n  `filter` will also wait for any promises returned from `filterFn`.\n  For instance, you may want to fetch a list of users then return a subset\n  of those users based on some asynchronous operation:\n\n  ```javascript\n  import { filter, resolve } from 'rsvp';\n\n  let alice = { name: 'alice' };\n  let bob   = { name: 'bob' };\n  let users = [ alice, bob ];\n\n  let promises = users.map(function(user){\n    return resolve(user);\n  });\n\n  let filterFn = function(user){\n    // Here, Alice has permissions to create a blog post, but Bob does not.\n    return getPrivilegesForUser(user).then(function(privs){\n      return privs.can_create_blog_post === true;\n    });\n  };\n  filter(promises, filterFn).then(function(users){\n    // true, because the server told us only Alice can create a blog post.\n    users.length === 1;\n    // false, because Alice is the only user present in `users`\n    users[0] === bob;\n  });\n  ```\n\n  @method filter\n  @public\n  @static\n  @for rsvp\n  @param {Array} promises\n  @param {Function} filterFn - function to be called on each resolved value to\n  filter the final results.\n  @param {String} [label] optional string describing the promise. Useful for\n  tooling.\n  @return {Promise}\n*/Comment.Multiline
\n\nText.Whitespace
exportKeyword
 Text.Whitespace
defaultKeyword
 Text.Whitespace
functionKeyword.Declaration
 Text.Whitespace
filterName.Otherany0.2638complex0.1968void0.0520Promise0.0455v...0.0230
(Punctuation
promisesName.Otherany0.5815Promise<void>[]0.0632number0.0495string0.0308Promise<any>[]0.0302
,Punctuation
 Text.Whitespace
filterFnName.Otherany0.5372boolean0.1669number0.1588string0.0263Error0.0048
,Punctuation
 Text.Whitespace
labelName.Otherstring0.5747any0.2903number0.0065ArrayBuffer0.0037Promise<string>0.0034
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
typeofOperator.Word
 Text.Whitespace
filterFnName.Otherany0.4210boolean0.2955string0.0641number0.0468complex0.0226
 Text.Whitespace
!==Operator
 Text.Whitespace
'function'Literal.String.Single
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
PromiseName.BuiltinPromiseConstructor0.9920any0.0061Promise<any>0.0003complex0.0003string0.0002
.Punctuation
rejectName.Othercomplex0.9954any0.0017void0.0006Promise<any>0.0002Promise<{}>0.0001
(Punctuation
newOperator.Wordcomplex0.1859any0.1770boolean0.0749{}0.0362Error0.0350
 Text.Whitespace
TypeErrorName.ExceptionTypeErrorConstructor0.9892ErrorConstructor0.0020BooleanConstructor0.0002MapConstructor0.0002NumberConstructor0.0001
(Punctuation
"filter expects function as a second argument"Literal.String.Double
)Punctuation
,Punctuation
 Text.Whitespace
labelName.Otherstring0.7733any0.2005complex0.0041number0.0032void0.0023
)Punctuation
;Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
returnKeyword
 Text.Whitespace
PromiseName.BuiltinPromiseConstructor0.9948any0.0040Promise<any>0.0005complex0.0001string0.0001
.Punctuation
resolveName.Othercomplex0.9832any0.0108Promise<any>0.0017string0.0005Promise<{}>0.0005
(Punctuation
promisesName.Otherany0.4274Promise<void>[]0.1443any[]0.0685Promise<any>[]0.0535string0.0479
,Punctuation
 Text.Whitespace
labelName.Otherstring0.6705any0.2714Promise<string>0.0064string[]0.0058complex0.0054
)Punctuation
\n    Text.Whitespace
.Punctuation
thenName.Otherany0.9778complex0.0125void0.0025Promise<any>0.0021number0.0007
(Punctuation
functionKeyword.Declaration
(Punctuation
promisesName.Otherany0.8013any[]0.0386Promise<void>[]0.0218string0.0203number0.0149
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
ArrayName.BuiltinArrayConstructor0.9988any0.0001Math0.0000any[]0.0000complex0.0000
.Punctuation
isArrayName.Othercomplex0.9951any0.0011any[]0.0006boolean0.0006{}0.0004
(Punctuation
promisesName.Otherany0.8055any[]0.0891string0.0145Promise<void>[]0.0100complex0.0087
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
throwKeywordcomplex0.3109any0.2996any[]0.0891{}0.0816Error0.0592
 Text.Whitespace
newOperator.Wordany0.2185complex0.1429boolean0.0639{}0.0580any[]0.0571
 Text.Whitespace
TypeErrorName.ExceptionTypeErrorConstructor0.9918ErrorConstructor0.0016undefined0.0001BooleanConstructor0.0001ArrayConstructor0.0001
(Punctuation
"filter must be called with an array"Literal.String.Double
)Punctuation
;Punctuation
\n      Text.Whitespace
}Punctuation
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
newOperator.Wordany0.7094Promise<any>0.0376complex0.0216Promise<{}>0.0104Promise<void>0.0101
 Text.Whitespace
FilterEnumeratorName.Otherany0.9840complex0.0061Promise<any>0.0023Promise<void>0.0014Promise<{}>0.0009
(Punctuation
PromiseName.BuiltinPromiseConstructor0.9937any0.0048Promise<any>0.0003string0.0002complex0.0001
,Punctuation
 Text.Whitespace
promisesName.Otherany0.4694Promise<void>[]0.1371any[]0.0835Promise<any>[]0.0369PromiseConstructor0.0232
,Punctuation
 Text.Whitespace
filterFnName.Otherany0.4837boolean0.2832number0.1441string0.0329void0.0107
,Punctuation
 Text.Whitespace
labelName.Otherstring0.5646any0.3660complex0.0068number0.0051any[]0.0044
)Punctuation
.Punctuation
promiseName.Otherany0.4876Promise<any>0.1157Promise<void>0.0846number0.0582void0.0462
;Punctuation
\n    Text.Whitespace
}Punctuation
)Punctuation
;Punctuation
\nText.Whitespace
}Punctuation
\nText.Whitespace
