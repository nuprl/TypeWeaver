Text
/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */Comment.Multiline
\n\nText.Whitespace
'use strict'Literal.String.Single
;Punctuation
\n\nText.Whitespace
importKeyword
 Text.Whitespace
compatTranspilerName.Otherany0.3239complex0.0881void0.0798string0.0670boolean0.0433
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./compat-transpiler'Literal.String.Single
;Punctuation
\nText.Whitespace
importKeyword
 Text.Whitespace
generatorName.Othercomplex0.6285any0.0839string0.0102void0.0089string[]0.0061
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./generator'Literal.String.Single
;Punctuation
\nText.Whitespace
importKeyword
 Text.Whitespace
optimizerName.Otherboolean0.0506void0.0478any0.0298RegExp0.0092string0.0091
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./optimizer'Literal.String.Single
;Punctuation
\nText.Whitespace
importKeyword
 Text.Whitespace
parserName.Otherany0.6451complex0.0486string[]0.0158RegExp0.0105string0.0103
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./parser'Literal.String.Single
;Punctuation
\nText.Whitespace
importKeyword
 Text.Whitespace
transformName.Othercomplex0.2270any0.2270string0.1877void0.0938Promise<any>0.0187
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./transform'Literal.String.Single
;Punctuation
\nText.Whitespace
importKeyword
 Text.Whitespace
traverseName.Othercomplex0.6112void0.1698any0.1063boolean0.0326string0.0139
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./traverse'Literal.String.Single
;Punctuation
\nText.Whitespace
importKeyword
 Text.Whitespace
faName.Othercomplex0.5989string0.0526any0.0462string[]0.0391void0.0285
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./interpreter/finite-automaton'Literal.String.Single
;Punctuation
\nText.Whitespace
importKeyword
 Text.Whitespace
{Punctuation
 Text.Whitespace
RegExpTreeName.Otherany0.8027string0.0554complex0.0506boolean0.0066string[]0.0057
 Text.Whitespace
}Punctuation
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./compat-transpiler/runtime'Literal.String.Single
;Punctuation
\n\nText.Whitespace
/**\n * An API object for RegExp processing (parsing/transform/generation).\n */Comment.Multiline
\nText.Whitespace
constKeyword.Declaration
 Text.Whitespace
regexpTreeName.Othercomplex0.9407any0.0224string0.0010{}0.0006any[]0.0004
 Text.Whitespace
=Operator
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
/**\n   * Parser module exposed.\n   */Comment.Multiline
\n  Text.Whitespace
parserName.Otherany0.5615complex0.0450string0.0180symbol0.0174number0.0059
,Punctuation
\n\n  Text.Whitespace
/**\n   * Expose finite-automaton module.\n   */Comment.Multiline
\n  Text.Whitespace
faName.Othercomplex0.4417string0.2224any0.1987string[]0.0324void0.0082
,Punctuation
\n\n  Text.Whitespace
/**\n   * `TransformResult` exposed.\n   */Comment.Multiline
\n  Text.Whitespace
TransformResultName.Otherany0.5468string0.1388complex0.0603string[]0.0228boolean0.0202
:Operator
 Text.Whitespace
transform.TransformResultKeyword.Type
,Punctuation
\n\n  Text.Whitespace
/**\n   * Parses a regexp string, producing an AST.\n   *\n   * @param string regexp\n   *\n   *   a regular expression in different formats: string, AST, RegExp.\n   *\n   * @param Object options\n   *\n   *   parsing options for this parse call. Default are:\n   *\n   *     - captureLocations: boolean\n   *     - any other custom options\n   *\n   * @return Object AST\n   */Comment.Multiline
\n  Text.Whitespace
parseName.Otherany0.7017complex0.0718Parser0.0085boolean0.0079number0.0063
(Punctuation
regexpName.OtherRegExp0.5190any0.1925string0.1849symbol0.0065boolean0.0063
,Punctuation
 Text.Whitespace
optionsName.Otherany0.0777Options0.0197ConnectionOptions0.0185complex0.0152string0.0059
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
parserName.Otherany0.8821complex0.0067string0.0019RegExp0.0011HTMLDivElement0.0009
.Punctuation
parseName.Otherany0.5294complex0.0798boolean0.0157number0.0072Expression0.0048
(Punctuation
`Literal.String.Backtick
${Literal.String.Interpol
regexpName.OtherRegExp0.6331any0.0840string0.0762boolean0.0134symbol0.0090
}Literal.String.Interpol
`Literal.String.Backtick
,Punctuation
 Text.Whitespace
optionsName.Otherany0.0514Options0.0339complex0.0254ConnectionOptions0.0204{}0.0061
)Punctuation
;Punctuation
\n  Text.Whitespace
}Punctuation
,Punctuation
\n\n  Text.Whitespace
/**\n   * Traverses a RegExp AST.\n   *\n   * @param Object ast\n   * @param Object | Array<Object> handlers\n   *\n   * Each `handler` is an object containing handler function for needed\n   * node types. Example:\n   *\n   *   regexpTree.traverse(ast, {\n   *     onChar(node) {\n   *       ...\n   *     },\n   *   });\n   *\n   * The value for a node type may also be an object with functions pre and post.\n   * This enables more context-aware analyses, e.g. measuring star height.\n   */Comment.Multiline
\n  Text.Whitespace
traverseName.Othercomplex0.6746any0.1975boolean0.0531string0.0213void0.0125
(Punctuation
astName.Otherany0.1041string0.0844complex0.0237boolean0.0229TsSimpleAst0.0104
,Punctuation
 Text.Whitespace
handlersName.Othercomplex0.1315any0.0154any[]0.0112Handlers0.0096RegExpMatchArray0.0074
,Punctuation
 Text.Whitespace
optionsName.Otherany0.0863Options0.0525complex0.0245ConnectionOptions0.0137IconJsonOptions0.0058
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
traverseName.Othercomplex0.8941any0.0761void0.0014boolean0.0014string0.0008
.Punctuation
traverseName.Othercomplex0.8630any0.0943boolean0.0128void0.0050string0.0038
(Punctuation
astName.Otherany0.3674string0.1481complex0.0426boolean0.0215number0.0185
,Punctuation
 Text.Whitespace
handlersName.Othercomplex0.2130any0.0218any[]0.0155Date0.0139Handlers0.0115
,Punctuation
 Text.Whitespace
optionsName.Otherany0.0769Options0.0583complex0.0564ConnectionOptions0.0325IconJsonOptions0.0078
)Punctuation
;Punctuation
\n  Text.Whitespace
}Punctuation
,Punctuation
\n\n  Text.Whitespace
/**\n   * Transforms a regular expression.\n   *\n   * A regexp can be passed in different formats (string, regexp or AST),\n   * applying a set of transformations. It is a convenient wrapper\n   * on top of "parse-traverse-generate" tool chain.\n   *\n   * @param string | AST | RegExp regexp - a regular expression;\n   * @param Object | Array<Object> handlers - a list of handlers.\n   *\n   * @return TransformResult - a transformation result.\n   */Comment.Multiline
\n  Text.Whitespace
transformName.Othercomplex0.4419any0.3098string0.0878boolean0.0181RegExp0.0130
(Punctuation
regexpName.OtherRegExp0.8716string0.0327any0.0138symbol0.0027Date0.0023
,Punctuation
 Text.Whitespace
handlersName.Othercomplex0.0307Handlers0.0242RegExpMatchArray0.0164RegExp0.0105Date0.0056
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
transformName.Otherany0.7193complex0.1973string0.0104RegExp0.0027Promise<string>0.0018
.Punctuation
transformName.Othercomplex0.4984any0.3540string0.0611boolean0.0188Promise<string>0.0056
(Punctuation
regexpName.OtherRegExp0.7686any0.0528string0.0430symbol0.0121boolean0.0111
,Punctuation
 Text.Whitespace
handlersName.Othercomplex0.1400any[]0.0175RegExp0.0126RegExpMatchArray0.0119Handlers0.0112
)Punctuation
;Punctuation
\n  Text.Whitespace
}Punctuation
,Punctuation
\n\n  Text.Whitespace
/**\n   * Generates a RegExp string from an AST.\n   *\n   * @param Object ast\n   *\n   * Invariant:\n   *\n   *   regexpTree.generate(regexpTree.parse('/[a-z]+/i')); // '/[a-z]+/i'\n   */Comment.Multiline
\n  Text.Whitespace
generateName.Otherstring0.5545boolean0.1887complex0.1133any0.0363string[]0.0131
(Punctuation
astName.Otherany0.1124boolean0.0296string0.0242complex0.0158Date0.0106
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
generatorName.Othercomplex0.8352any0.0895string0.0022ExpectStatic0.0021IterableIterator<number>0.0020
.Punctuation
generateName.Otherstring0.2327complex0.1531boolean0.0795any0.0397Promise<void>0.0317
(Punctuation
astName.Otherany0.5098string0.0857complex0.0458number0.0341boolean0.0274
)Punctuation
;Punctuation
\n  Text.Whitespace
}Punctuation
,Punctuation
\n\n  Text.Whitespace
/**\n   * Creates a RegExp object from a regexp string.\n   *\n   * @param string regexp\n   */Comment.Multiline
\n  Text.Whitespace
toRegExpName.Othercomplex0.2824string0.1349any0.1037boolean0.0463void0.0392
(Punctuation
regexpName.OtherRegExp0.8390string0.0285any0.0165symbol0.0081boolean0.0044
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
compatName.Otherany0.3364string0.1075complex0.0439Path0.0092symbol0.0045
 Text.Whitespace
=Operator
 Text.Whitespace
thisKeyword
.Punctuation
compatTranspileName.Otherany0.3410complex0.1412string0.1223RegExp0.0074Promise<string>0.0057
(Punctuation
regexpName.OtherRegExp0.8315any0.0258string0.0247symbol0.0161Date0.0021
)Punctuation
;Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
newOperator.WordRegExp0.2005string0.1056any0.0564RegExpConstructor0.0112complex0.0080
 Text.Whitespace
RegExpName.BuiltinRegExpConstructor0.9990RegExp0.0001Configuration0.0000any0.0000BooleanConstructor0.0000
(Punctuation
compatName.Otherany0.7982complex0.0340string0.0062symbol0.0023T0.0023
.Punctuation
getSourceName.Otherany0.6978string0.2787number0.0040complex0.0038T0.0034
(Punctuation
)Punctuation
,Punctuation
 Text.Whitespace
compatName.Otherany0.4355complex0.0228string0.0075symbol0.0059T0.0041
.Punctuation
getFlagsName.Othersymbol0.0261any0.0074string0.0065RegExp0.0043Number0.0038
(Punctuation
)Punctuation
)Punctuation
;Punctuation
\n  Text.Whitespace
}Punctuation
,Punctuation
\n\n  Text.Whitespace
/**\n   * Optimizes a regular expression by replacing some\n   * sub-expressions with their idiomatic patterns.\n   *\n   * @param string regexp\n   *\n   * @return TransformResult object\n   */Comment.Multiline
\n  Text.Whitespace
optimizeName.Othercomplex0.0246void0.0142any0.0140Promise<string>0.0081VirtualTree0.0062
(Punctuation
regexpName.OtherRegExp0.4867symbol0.0626any0.0486string0.0360string[]0.0045
,Punctuation
 Text.Whitespace
whitelistName.Otherstring[]0.6042any0.1107any[]0.0556complex0.0390string0.0074
,Punctuation
 Text.Whitespace
{Punctuation
blacklistName.Otherstring[]0.0894Set<string>0.0505any0.0425{}0.0385boolean0.0336
}Punctuation
 Text.Whitespace
=Operator
 Text.Whitespace
{Punctuation
}Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
optimizerName.OtherTsSimpleAst0.0042SGDOptimizer0.0037Controller0.0030Functor<F>0.0024GDAXExchangeAPI0.0021
.Punctuation
optimizeName.Othercomplex0.0127Date0.0108void0.0069any0.0065VirtualTree0.0058
(Punctuation
regexpName.OtherRegExp0.4436any0.0455string0.0403symbol0.0390string[]0.0074
,Punctuation
 Text.Whitespace
{Punctuation
whitelistName.Otherstring[]0.6911complex0.0789any[]0.0505any0.0400boolean0.0098
,Punctuation
 Text.Whitespace
blacklistName.Otherstring[]0.3225complex0.0636boolean0.0461Set<string>0.0336any[]0.0205
}Punctuation
)Punctuation
;Punctuation
\n  Text.Whitespace
}Punctuation
,Punctuation
\n\n  Text.Whitespace
/**\n   * Translates a regular expression in new syntax or in new format\n   * into equivalent expressions in old syntax.\n   *\n   * @param string regexp\n   *\n   * @return TransformResult object\n   */Comment.Multiline
\n  Text.Whitespace
compatTranspileName.Othercomplex0.4150any0.2035boolean0.0282string0.0274string[]0.0061
(Punctuation
regexpName.OtherRegExp0.7633string0.0273any0.0263symbol0.0063string[]0.0028
,Punctuation
 Text.Whitespace
whitelistName.Otherstring[]0.5603complex0.0908any0.0636any[]0.0481boolean0.0250
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
compatTranspilerName.Otherany0.8771complex0.0370string0.0022RegExp0.0017Promise<string>0.0016
.Punctuation
transformName.Otherany0.5905complex0.2182Promise<string>0.0321string0.0167Promise<any>0.0127
(Punctuation
regexpName.OtherRegExp0.7690any0.0456string0.0321symbol0.0120string[]0.0044
,Punctuation
 Text.Whitespace
whitelistName.Otherstring[]0.5838complex0.1220any0.0587any[]0.0549boolean0.0142
)Punctuation
;Punctuation
\n  Text.Whitespace
}Punctuation
,Punctuation
\n\n  Text.Whitespace
/**\n   * Executes a regular expression on a string.\n   *\n   * @param RegExp|string re - a regular expression.\n   * @param string string - a testing string.\n   */Comment.Multiline
\n  Text.Whitespace
execName.Otherany0.4818complex0.2014void0.0435Promise<number>0.0384Promise<void>0.0232
(Punctuation
reName.OtherRegExp0.6565any0.1761complex0.0288string0.0173RegExpExecArray0.0125
,Punctuation
 Text.Whitespace
stringKeyword.Type
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
typeofOperator.Word
 Text.Whitespace
reName.OtherRegExp0.3642complex0.2839any0.1347string0.0126boolean0.0096
 Text.Whitespace
===Operator
 Text.Whitespace
'string'Literal.String.Single
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
compatName.Otherany0.5138string0.0510complex0.0436Path0.0060T0.0057
 Text.Whitespace
=Operator
 Text.Whitespace
thisKeyword
.Punctuation
compatTranspileName.Otherany0.3603complex0.1353string0.0810Promise<string>0.0155Promise<any>0.0053
(Punctuation
reName.OtherRegExp0.5420any0.2564complex0.0645string0.0184RegExpExecArray0.0052
)Punctuation
;Punctuation
\n      Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
extraName.Otherany0.5969string0.0326complex0.0175any[]0.0075Promise<any>0.0053
 Text.Whitespace
=Operator
 Text.Whitespace
compatName.Otherany0.6637complex0.0116string0.0067{}0.0066symbol0.0062
.Punctuation
getExtraName.Otherany0.7300string0.0232complex0.0224Promise<string>0.0081Promise<any>0.0052
(Punctuation
)Punctuation
;Punctuation
\n\n      Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
extraName.Otherany0.6639complex0.0433string0.0039T0.0031Date0.0017
.Punctuation
namedCapturingGroupsName.Otherany0.5971string0.2072boolean0.1084complex0.0359number0.0071
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
reName.Otherany0.5837RegExp0.1674complex0.1291string0.0149symbol0.0053
 Text.Whitespace
=Operator
 Text.Whitespace
newOperator.Wordany0.6835string0.0998complex0.0119RegExp0.0093Error0.0039
 Text.Whitespace
RegExpTreeName.Otherany0.9827string0.0060complex0.0059void0.0007boolean0.0005
(Punctuation
compatName.Otherany0.7578complex0.0213string0.0107{}0.0085T0.0062
.Punctuation
toRegExpName.Otherany0.5238string0.3009complex0.0633boolean0.0118number0.0062
(Punctuation
)Punctuation
,Punctuation
 Text.Whitespace
{Punctuation
\n          Text.Whitespace
flagsName.Otherstring0.4242any0.2405string[]0.0829complex0.0186number0.0076
:Operator
 Text.Whitespace
compat.getFlagsKeyword.Type
(Punctuation
)Punctuation
,Punctuation
\n          Text.Whitespace
sourceName.Otherany0.4221string0.2002complex0.0393string[]0.0193any[]0.0175
:Operator
 Text.Whitespace
compat.getSourceKeyword.Type
(Punctuation
)Punctuation
,Punctuation
\n          Text.Whitespace
groupsName.Othercomplex0.2241any0.1949string[]0.0712string0.0520any[]0.0400
:Operator
 Text.Whitespace
extra.namedCapturingGroupsKeyword.Type
,Punctuation
\n        Text.Whitespace
}Punctuation
)Punctuation
;Punctuation
\n      Text.Whitespace
}Punctuation
 Text.Whitespace
elseKeyword
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
reName.OtherRegExp0.5214any0.2619string0.0334complex0.0274string[]0.0107
 Text.Whitespace
=Operator
 Text.Whitespace
compatName.Otherany0.8187complex0.0465string0.0102{}0.0068T0.0033
.Punctuation
toRegExpName.Otherany0.5531string0.1390complex0.0334RegExp0.0222Promise<string>0.0137
(Punctuation
)Punctuation
;Punctuation
\n      Text.Whitespace
}Punctuation
\n    Text.Whitespace
}Punctuation
\n\n    Text.Whitespace
returnKeyword
 Text.Whitespace
reName.OtherRegExp0.4833any0.4054complex0.0289RegExpExecArray0.0056string0.0048
.Punctuation
execName.Otherany0.2958Promise<number>0.1445RegExpExecArray0.0933complex0.0786Promise<ExecutionResult<string>>0.0206
(Punctuation
stringKeyword.Type
)Punctuation
;Punctuation
\n  Text.Whitespace
}Punctuation
,Punctuation
\nText.Whitespace
}Punctuation
;Punctuation
\n\nText.Whitespace
exportKeyword
 Text.Whitespace
defaultKeyword
 Text.Whitespace
regexpTreeName.Otherany0.5341complex0.0943void0.0606string0.0174Promise<void>0.0143
;Punctuation
\nText.Whitespace
