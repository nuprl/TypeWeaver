Found multiple declarations; skipping rest of declarations.
	let newLen: number = newString.length, oldLen = oldString.length;
Found multiple declarations; skipping rest of declarations.
	let addPath: string = bestPath[diagonalPath - 1], removePath = bestPath[diagonal
Found multiple declarations; skipping rest of declarations.
	let addPath: string = bestPath[diagonalPath - 1], removePath = bestPath[diagonal
Found multiple declarations; skipping rest of declarations.
	let canAdd: number = addPath && addPath.newPos + 1 < newLen, canRemove = removeP
Found multiple declarations; skipping rest of declarations.
	let newLen: number = newString.length, oldLen = oldString.length, newPos = baseP
Found multiple declarations; skipping rest of declarations.
	let newLen: number = newString.length, oldLen = oldString.length, newPos = baseP
Found multiple declarations; skipping rest of declarations.
	let newLen: number = newString.length, oldLen = oldString.length, newPos = baseP
Found multiple declarations; skipping rest of declarations.
	let newLen: number = newString.length, oldLen = oldString.length, newPos = baseP
Found multiple declarations; skipping rest of declarations.
	let componentPos: number = 0, componentLen = components.length, newPos = 0, oldP
Found multiple declarations; skipping rest of declarations.
	let componentPos: number = 0, componentLen = components.length, newPos = 0, oldP
Found multiple declarations; skipping rest of declarations.
	let componentPos: number = 0, componentLen = components.length, newPos = 0, oldP

