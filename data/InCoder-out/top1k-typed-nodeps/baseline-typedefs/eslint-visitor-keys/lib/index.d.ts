import KEYS from "./visitor-keys.js";
export declare function getKeys(node: Node): string[];
export declare function unionWith(additionalKeys: Array<string>): Readonly<{
    ArrayExpression: string[];
    ArrayPattern: string[];
    ArrowFunctionExpression: string[];
    AssignmentExpression: string[];
    AssignmentPattern: string[];
    AwaitExpression: string[];
    BinaryExpression: string[];
    BlockStatement: string[];
    BreakStatement: string[];
    CallExpression: string[];
    CatchClause: string[];
    ChainExpression: string[];
    ClassBody: string[];
    ClassDeclaration: string[];
    ClassExpression: string[];
    ConditionalExpression: string[];
    ContinueStatement: string[];
    DebuggerStatement: any[];
    DoWhileStatement: string[];
    EmptyStatement: any[];
    ExperimentalRestProperty: string[];
    ExperimentalSpreadProperty: string[];
    ExportAllDeclaration: string[];
    ExportDefaultDeclaration: string[];
    ExportNamedDeclaration: string[];
    ExportSpecifier: string[];
    ExpressionStatement: string[];
    ForInStatement: string[];
    ForOfStatement: string[];
    ForStatement: string[];
    FunctionDeclaration: string[];
    FunctionExpression: string[];
    Identifier: any[];
    IfStatement: string[];
    ImportDeclaration: string[];
    ImportDefaultSpecifier: string[];
    ImportExpression: string[];
    ImportNamespaceSpecifier: string[];
    ImportSpecifier: string[];
    JSXAttribute: string[];
    JSXClosingElement: string[];
    JSXClosingFragment: any[];
    JSXElement: string[];
    JSXEmptyExpression: any[];
    JSXExpressionContainer: string[];
    JSXFragment: string[];
    JSXIdentifier: any[];
    JSXMemberExpression: string[];
    JSXNamespacedName: string[];
    JSXOpeningElement: string[];
    JSXOpeningFragment: any[];
    JSXSpreadAttribute: string[];
    JSXSpreadChild: string[];
    JSXText: any[];
    LabeledStatement: string[];
    Literal: any[];
    LogicalExpression: string[];
    MemberExpression: string[];
    MetaProperty: string[];
    MethodDefinition: string[];
    NewExpression: string[];
    ObjectExpression: string[];
    ObjectPattern: string[];
    PrivateIdentifier: any[];
    Program: string[];
    Property: string[];
    PropertyDefinition: string[];
    RestElement: string[];
    ReturnStatement: string[];
    SequenceExpression: string[];
    SpreadElement: string[];
    StaticBlock: string[];
    Super: any[];
    SwitchCase: string[];
    SwitchStatement: string[];
    TaggedTemplateExpression: string[];
    TemplateElement: any[];
    TemplateLiteral: string[];
    ThisExpression: any[];
    ThrowStatement: string[];
    TryStatement: string[];
    UnaryExpression: string[];
    UpdateExpression: string[];
    VariableDeclaration: string[];
    VariableDeclarator: string[];
    WhileStatement: string[];
    WithStatement: string[];
    YieldExpression: string[];
}>;
export { KEYS };
