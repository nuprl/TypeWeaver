importKeyword
 Text.Whitespace
castSliceName.Otherany0.2043boolean0.1104complex0.0859string0.0653string[]0.0484
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./.internal/castSlice.js'Literal.String.Single
\nText.Whitespace
importKeyword
 Text.Whitespace
hasUnicodeName.Otherboolean0.3234any0.1989string0.1210complex0.0481string[]0.0418
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./.internal/hasUnicode.js'Literal.String.Single
\nText.Whitespace
importKeyword
 Text.Whitespace
isRegExpName.Otherboolean0.9343any0.0165string0.0116number0.0111string[]0.0044
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./isRegExp.js'Literal.String.Single
\nText.Whitespace
importKeyword
 Text.Whitespace
stringToArrayName.Otherany0.2714string0.2272boolean0.2111complex0.0492string[]0.0404
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./.internal/stringToArray.js'Literal.String.Single
\n\nText.Whitespace
Text
/** Used as references for the maximum length and index of an array. */Comment.Multiline
\nText.Whitespace
constKeyword.Declaration
 Text.Whitespace
MAX_ARRAY_LENGTHName.Otherstring0.2779string[]0.2663any0.2399number0.0829boolean0.0619
 Text.Whitespace
=Operator
 Text.Whitespace
4294967295Literal.Number.Float
\n\nText.Whitespace
Text
/**\n * Splits `string` by `separator`.\n *\n * **Note:** This method is based on\n * [`String#split`](https://mdn.io/String/split).\n *\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to split.\n * @param {RegExp|string} separator The separator pattern to split by.\n * @param {number} [limit] The length to truncate results to.\n * @returns {Array} Returns the string segments.\n * @example\n *\n * split('a-b-c', '-', 2)\n * // => ['a', 'b']\n */Comment.Multiline
\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
splitName.Othercomplex0.6839any0.1949string0.0230void0.0200string[]0.0170
(Punctuation
stringKeyword.Type
,Punctuation
 Text.Whitespace
separatorName.Otherstring0.8764any0.1139complex0.0028number0.0018boolean0.0015
,Punctuation
 Text.Whitespace
limitName.Othernumber0.7570any0.1320string0.0749boolean0.0269complex0.0047
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
limitName.Othernumber0.7607any0.1981string0.0232boolean0.0125complex0.0034
 Text.Whitespace
=Operator
 Text.Whitespace
limitName.Othernumber0.7288any0.1955string0.0611boolean0.0060complex0.0048
 Text.Whitespace
===Operator
 Text.Whitespace
undefinedKeyword.Constant
 Text.Whitespace
?Operator
 Text.Whitespace
MAX_ARRAY_LENGTHName.Otherany0.3677string0.2912number0.2429boolean0.0769complex0.0097
 Text.Whitespace
:Operator
 Text.Whitespace
limitKeyword.Typenumber0.7441any0.1548string0.0909complex0.0040boolean0.0038
 Text.Whitespace
>>>Operator
 Text.Whitespace
0Literal.Number.Float
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
limitName.Othernumber0.6900any0.1750string0.1102boolean0.0154complex0.0052
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
[Punctuation
]Punctuation
\n  Text.Whitespace
}Punctuation
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
stringKeyword.Type
 Text.Whitespace
&&Operator
 Text.Whitespace
(Punctuation
\n    Text.Whitespace
typeofOperator.Word
 Text.Whitespace
separatorName.Otherstring0.5791any0.3505complex0.0528boolean0.0053string[]0.0019
 Text.Whitespace
===Operator
 Text.Whitespace
'string'Literal.String.Single
 Text.Whitespace
||Operator
\n        Text.Whitespace
(Punctuation
separatorName.Otherstring0.7362any0.2455complex0.0076number0.0032boolean0.0029
 Text.Whitespace
!=Operator
 Text.Whitespace
nullKeyword.Constant
 Text.Whitespace
&&Operator
 Text.Whitespace
!Operator
isRegExpName.Otherboolean0.9861any0.0055string0.0044number0.0017complex0.0009
(Punctuation
separatorName.Otherstring0.8364any0.1535complex0.0047number0.0016boolean0.0012
)Punctuation
)Punctuation
\n  Text.Whitespace
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
separatorName.Otherstring0.7332any0.2467complex0.0069boolean0.0064number0.0026
 Text.Whitespace
&&Operator
 Text.Whitespace
hasUnicodeName.Otherstring0.6739boolean0.1516any0.1370complex0.0172string[]0.0096
(Punctuation
stringKeyword.Type
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
castSliceName.Otherstring0.6671any0.2583string[]0.0196complex0.0186number0.0176
(Punctuation
stringToArrayName.Otherstring0.8282any0.1396string[]0.0135number0.0059complex0.0051
(Punctuation
stringKeyword.Type
)Punctuation
,Punctuation
 Text.Whitespace
0Literal.Number.Float
,Punctuation
 Text.Whitespace
limitName.Othernumber0.5915string0.2258any0.1659complex0.0065boolean0.0050
)Punctuation
\n    Text.Whitespace
}Punctuation
\n  Text.Whitespace
}Punctuation
\n  Text.Whitespace
returnKeyword
 Text.Whitespace
stringKeyword.Type
.Punctuation
splitName.Othercomplex0.8668any0.1218string0.0029void0.0025string[]0.0012
(Punctuation
separatorName.Otherstring0.8800any0.0978complex0.0113string[]0.0043number0.0014
,Punctuation
 Text.Whitespace
limitName.Othernumber0.6020string0.2286any0.1308complex0.0157boolean0.0112
)Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
exportKeyword
 Text.Whitespace
defaultKeyword
 Text.Whitespace
splitName.Otherany0.3719complex0.3470string[]0.1039string0.0434void0.0118
\nText.Whitespace
