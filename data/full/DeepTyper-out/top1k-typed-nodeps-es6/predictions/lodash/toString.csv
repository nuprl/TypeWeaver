importKeyword
 Text.Whitespace
isSymbolName.Otherany0.4860string0.1697complex0.1301number0.1196boolean0.0156
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./isSymbol.js'Literal.String.Single
\n\nText.Whitespace
Text
/** Used as references for various `Number` constants. */Comment.Multiline
\nText.Whitespace
constKeyword.Declaration
 Text.Whitespace
INFINITYName.Othernumber0.7909any0.1234string0.0747boolean0.0048complex0.0027
 Text.Whitespace
=Operator
 Text.Whitespace
1Literal.Number.Float
 Text.Whitespace
/Operator
 Text.Whitespace
0Literal.Number.Float
\n\nText.Whitespace
Text
/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * toString(null)\n * // => ''\n *\n * toString(-0)\n * // => '-0'\n *\n * toString([1, 2, 3])\n * // => '1,2,3'\n */Comment.Multiline
\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
toStringName.Otherstring0.7552any0.2242number0.0105complex0.0043boolean0.0019
(Punctuation
valueName.Otherany0.7532string0.2015number0.0335complex0.0055boolean0.0018
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
valueName.Otherany0.9065string0.0604number0.0218complex0.0064boolean0.0015
 Text.Whitespace
==Operator
 Text.Whitespace
nullKeyword.Constant
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
''Literal.String.Single
\n  Text.Whitespace
}Punctuation
\n  Text.Whitespace
// Exit early for strings to avoid a performance hit in some environments.Comment.Single
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
typeofOperator.Word
 Text.Whitespace
valueName.Otherany0.9472string0.0301complex0.0112number0.0063never0.0010
 Text.Whitespace
===Operator
 Text.Whitespace
'string'Literal.String.Single
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
valueName.Otherany0.6557string0.2877number0.0352boolean0.0074complex0.0036
\n  Text.Whitespace
}Punctuation
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
ArrayName.BuiltinArrayConstructor0.9995any0.0001complex0.0000Math0.0000ObjectConstructor0.0000
.Punctuation
isArrayName.Othercomplex0.9894any0.0049boolean0.0016any[]0.0015string0.0008
(Punctuation
valueName.Otherany0.9153complex0.0285number0.0283string0.0176any[]0.0034
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
// Recursively convert values (susceptible to call stack limits).Comment.Single
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
`Literal.String.Backtick
${Literal.String.Interpol
valueName.Otherany0.7362any[]0.1665string0.0292complex0.0183string[]0.0139
.Punctuation
mapName.OtherU[]0.5251any0.3875complex0.0730any[]0.0032string0.0011
(Punctuation
(Punctuation
otherName.Otherany0.4745string0.2852number0.2192complex0.0040any[]0.0019
)Punctuation
 Text.Whitespace
=>Punctuation
 Text.Whitespace
otherName.Otherany0.4875number0.2539string0.2433complex0.0033any[]0.0025
 Text.Whitespace
==Operator
 Text.Whitespace
nullKeyword.Constant
 Text.Whitespace
?Operator
 Text.Whitespace
otherName.Otherany0.4260string0.3752number0.1933boolean0.0018complex0.0012
 Text.Whitespace
:Operator
 Text.Whitespace
toStringKeyword.Typestring0.5023any0.4786number0.0111complex0.0036boolean0.0007
(Punctuation
otherName.Otherany0.7001string0.1627number0.1095complex0.0032Date0.0020
)Punctuation
)Punctuation
}Literal.String.Interpol
`Literal.String.Backtick
\n  Text.Whitespace
}Punctuation
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
isSymbolName.Otherany0.5379complex0.1697string0.1131boolean0.1027number0.0671
(Punctuation
valueName.Otherany0.9366string0.0249number0.0233complex0.0096boolean0.0011
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
valueName.Otherany0.9299number0.0509string0.0099complex0.0036never0.0012
.Punctuation
toStringName.Otherany0.8101string0.1818complex0.0042number0.0018boolean0.0004
(Punctuation
)Punctuation
\n  Text.Whitespace
}Punctuation
\n  Text.Whitespace
constKeyword.Declaration
 Text.Whitespace
resultName.Otherstring0.8066any0.1711number0.0107complex0.0034boolean0.0019
 Text.Whitespace
=Operator
 Text.Whitespace
`Literal.String.Backtick
${Literal.String.Interpol
valueName.Otherany0.4587string0.4173number0.0934complex0.0133boolean0.0047
}Literal.String.Interpol
`Literal.String.Backtick
\n  Text.Whitespace
returnKeyword
 Text.Whitespace
(Punctuation
resultName.Otherstring0.6647any0.3216number0.0086complex0.0017boolean0.0009
 Text.Whitespace
==Operator
 Text.Whitespace
'0'Literal.String.Single
 Text.Whitespace
&&Operator
 Text.Whitespace
(Punctuation
1Literal.Number.Float
 Text.Whitespace
/Operator
 Text.Whitespace
valueName.Otherany0.4975number0.3808string0.1092complex0.0057boolean0.0020
)Punctuation
 Text.Whitespace
==Operator
 Text.Whitespace
-Operator
INFINITYName.Othernumber0.7524any0.1448string0.0759boolean0.0164complex0.0038
)Punctuation
 Text.Whitespace
?Operator
 Text.Whitespace
'-0'Literal.String.Single
 Text.Whitespace
:Operator
 Text.Whitespace
resultName.Otherany0.5797string0.3507number0.0316complex0.0077boolean0.0059
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
exportKeyword
 Text.Whitespace
defaultKeyword
 Text.Whitespace
toStringName.Otherstring0.5921any0.3492complex0.0112number0.0086void0.0023
\nText.Whitespace
