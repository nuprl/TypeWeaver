fetch.ts(163,12): error TS2339: Property 'bodyUsed' does not exist on type 'ReadableStreamDefaultReader<any>'.
fetch.ts(166,8): error TS2339: Property 'bodyUsed' does not exist on type 'ReadableStreamDefaultReader<any>'.
fetch.ts(359,24): error TS2339: Property '_bodyInit' does not exist on type 'Request'.
fetch.ts(360,20): error TS2339: Property '_bodyInit' does not exist on type 'Request'.
fetch.ts(361,13): error TS2540: Cannot assign to 'bodyUsed' because it is a read-only property.
fetch.ts(369,32): error TS2345: Argument of type 'HeadersInit' is not assignable to parameter of type 'Headers'.
  Type 'Record<string, string>' is missing the following properties from type 'Headers': append, delete, get, has, and 2 more.
fetch.ts(423,17): error TS2554: Expected 1 arguments, but got 0.
fetch.ts(460,30): error TS2345: Argument of type 'HeadersInit' is not assignable to parameter of type 'Headers'.
  Type 'Record<string, string>' is not assignable to type 'Headers'.
fetch.ts(461,22): error TS2339: Property 'url' does not exist on type 'ResponseInit'.
fetch.ts(472,5): error TS2345: Argument of type '{ status: any; statusText: any; headers: any; url: any; }' is not assignable to parameter of type 'ResponseInit'.
  Object literal may only specify known properties, and 'url' does not exist in type 'ResponseInit'.
fetch.ts(508,31): error TS2345: Argument of type 'RequestInfo' is not assignable to parameter of type 'Request'.
  Type 'string' is not assignable to type 'Request'.
fetch.ts(526,15): error TS2339: Property 'url' does not exist on type '{ status: number; statusText: string; headers: any; }'.
fetch.ts(527,57): error TS2339: Property 'responseText' does not exist on type 'never'.

