declare const util: any;
declare let source: any;
declare let parseState: string;
declare let stack: any;
declare let pos: number;
declare let line: number;
declare let column: number;
declare let token: any;
declare let key: string;
declare let root: any;
declare function internalize(holder: any, name: string, reviver: any): any;
declare let lexState: any;
declare let buffer: any;
declare let doubleQuote: any;
declare let sign: any;
declare let c: any;
declare function lex(): any;
declare function peek(): any;
declare function read(): any;
declare const lexStates: any;
declare function newToken(type: any, value: any): string;
declare function literal(s: string): void;
declare function hexEscape(): string;
declare function unicodeEscape(): string;
declare const parseStates: any;
declare function push(): number;
declare function pop(): void;
declare function invalidChar(c: string): string;
declare function invalidEOF(): string;
declare function invalidIdentifier(): string;
declare function separatorChar(c: string): void;
declare function formatChar(c: string): void;
declare function syntaxError(message: string): string;
