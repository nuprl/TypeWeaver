# Type inference

This directory is a copy of `npm-nodeps`, but with TypeScript files generated
by DeepTyper. The type inference was done by executing:

    # starting from the repository root
    cd DeepTyper/pretrained
    find ../../data/npm-nodeps-DT-output/ \
      -type f \
      -name "*.js" \
      -exec python readout.py {} \;

There are 8824 files total, taking up 51 MB of space. It took about 2 hours
(with an RTX6000) to run the type inference.

2500 `*.js` files were given as inputs; these are listed in
`type-inf-inputs.txt`.

2467 `*.ts` files were produced; these are listed in `type-inf-outputs.txt`.

33 files resulted in an error; these are listed in `type-inf-fail.txt`.

27 error messages are recorded in `type-inf-errs.txt`; 6 errors are unaccounted
for.


# Type checking

After the TypeScript was generated, the next step is to run the TypeScript
compiler to type check the output. This was done by running the included
`type-check.sh` bash script, which individually type checks each file listed in
`type-inf-outputs.txt`:

    # starting from the repository root
    cd data
    ./type-check.sh npm-nodeps-DT-output

Overall, this took about 2 hours to complete.

**Note**: each file, rather than project, was type checked individually.

`@types/node` is a required dependency, since otherwise `module`
(e.g. `module.exports`) is not defined.

330 files type checked successfully; these are listed in `type-check-pass.txt`.
Most of these files are very small, or the type annotations were mostly `any`.
The largest file (`mime/types/other.ts`) is mainly JSON and contains no
declarations. The second largest file (`pako/lib/zlib/inftrees.ts`) contains
declarations, but is mostly code and comments. For some files, DeepTyper was
able to infer types like `string`, `number`, `Function`, and array types.

2137 files failed to type check; these are listed in `type-check-fail.txt`.
There error messages are recorded in `type-check-errs.txt` and there are over
18K lines of errors.

Many of these errors are because the modified DeepTyper output invalid
TypeScript code. But there are also errors where the TypeScript code was
syntactically valid but did not type check (e.g. `aproba/index.ts`, or
`async/internal/DoublyLinkedList.ts` which inferred a type `GridApi` that is not
defined anywhere.)
