Text
/*!\n * type-is\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */Comment.Multiline
\n\nText.Whitespace
'use strict'Literal.String.Single
\n\nText.Whitespace
Text
/**\n * Module dependencies.\n * @private\n */Comment.Multiline
\n\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
typerName.Otherany0.8195string0.0993boolean0.0319number0.0134complex0.0035
 Text.Whitespace
=Operator
 Text.Whitespace
requireName.Other
(Punctuation
'media-typer'Literal.String.Single
)Punctuation
\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
mimeName.Otherany0.9740string0.0146void0.0015number0.0015boolean0.0006
 Text.Whitespace
=Operator
 Text.Whitespace
requireName.Other
(Punctuation
'mime-types'Literal.String.Single
)Punctuation
\n\nText.Whitespace
Text
/**\n * Module exports.\n * @public\n */Comment.Multiline
\n\nText.Whitespace
moduleKeyword.Reserved
.exportsName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
typeofrequestName.Otherany0.4442string0.4245complex0.0395number0.0377boolean0.0110
\nText.Whitespace
moduleKeyword.Reserved
.exports.isName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
typeisName.Otherany0.6064string0.2808complex0.0430number0.0222boolean0.0087
\nText.Whitespace
moduleKeyword.Reserved
.exports.hasBodyName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
hasbodyName.Otherany0.6333string0.2564complex0.0472number0.0155boolean0.0118
\nText.Whitespace
moduleKeyword.Reserved
.exports.normalizeName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
normalizeName.Otherany0.8382string0.0819complex0.0245{}0.0056boolean0.0035
\nText.Whitespace
moduleKeyword.Reserved
.exports.matchName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
mimeMatchName.Otherany0.6666string0.1714boolean0.0593complex0.0306number0.0143
\n\nText.Whitespace
Text
/**\n * Compare a `value` content-type with `types`.\n * Each `type` can be an extension like `html`,\n * a special shortcut like `multipart` or `urlencoded`,\n * or a mime type.\n *\n * If no types match, `false` is returned.\n * Otherwise, the first `type` that matches is returned.\n *\n * @param {String} value\n * @param {Array} types\n * @public\n */Comment.Multiline
\n\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
typeisName.Otherany0.5436boolean0.2144string0.1675complex0.0238number0.0148
 Text.Whitespace
(Punctuation
valueName.Otherany0.7108string0.2679number0.0054boolean0.0020complex0.0015
,Punctuation
 Text.Whitespace
types_Name.Otherany0.5435string0.3703boolean0.0496number0.0140string[]0.0045
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
varKeyword.Declaration
 Text.Whitespace
iName.Othernumber0.6402any0.3425string0.0102boolean0.0028complex0.0023
\n  Text.Whitespace
varKeyword.Declaration
 Text.Whitespace
typesName.Otherany0.8119any[]0.0622string[]0.0438string0.0209complex0.0208
 Text.Whitespace
=Operator
 Text.Whitespace
types_Name.Otherany0.8025string0.0524boolean0.0507complex0.0323any[]0.0226
\n\n  Text.Whitespace
// remove parameters and normalizeComment.Single
\n  Text.Whitespace
varKeyword.Declaration
 Text.Whitespace
valName.Otherany0.7335string0.1429boolean0.0526number0.0464complex0.0126
 Text.Whitespace
=Operator
 Text.Whitespace
tryNormalizeTypeName.Otherany0.6141string0.1543boolean0.1215complex0.0491number0.0360
(Punctuation
valueName.Otherany0.8253string0.1496number0.0114complex0.0055boolean0.0015
)Punctuation
\n\n  Text.Whitespace
// no type or invalidComment.Single
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
valName.Otherany0.9111string0.0287number0.0216boolean0.0212complex0.0100
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
falseKeyword.Constant
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
// support flattened argumentsComment.Single
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
typesName.Otherany0.7050complex0.1260string[]0.0692any[]0.0518boolean0.0117
 Text.Whitespace
&&Operator
 Text.Whitespace
!Operator
ArrayName.BuiltinArrayConstructor0.9992any0.0001ObjectConstructor0.0000Array0.0000Math0.0000
.Punctuation
isArrayName.Othercomplex0.9929any0.0024any[]0.0012boolean0.0006string[]0.0003
(Punctuation
typesName.Otherany0.5936any[]0.1849complex0.1573string[]0.0351number[]0.0047
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
typesName.Otherany[]0.8325string[]0.0970complex0.0235any0.0213number[]0.0080
 Text.Whitespace
=Operator
 Text.Whitespace
newOperator.Wordany[]0.3579any0.2116string[]0.1699complex0.0316number[]0.0310
 Text.Whitespace
ArrayName.BuiltinArrayConstructor0.9987any[]0.0001any0.0000Math0.0000ObjectConstructor0.0000
(Punctuation
argumentsName.OtherIArguments0.9377any[]0.0412string[]0.0032any0.0024any[][]0.0009
.Punctuation
lengthName.Othernumber0.9630any0.0352string0.0006complex0.0003boolean0.0002
 Text.Whitespace
-Operator
 Text.Whitespace
1Literal.Number.Float
)Punctuation
\n    Text.Whitespace
forKeyword
 Text.Whitespace
(Punctuation
iName.Otherany0.5821number0.4144string0.0016complex0.0005boolean0.0003
 Text.Whitespace
=Operator
 Text.Whitespace
0Literal.Number.Float
;Punctuation
 Text.Whitespace
iName.Othernumber0.6298any0.3666string0.0019complex0.0005boolean0.0003
 Text.Whitespace
<Operator
 Text.Whitespace
typesName.Otherany0.5165any[]0.3182string[]0.1123complex0.0217any[][]0.0033
.Punctuation
lengthName.Otherany0.5213number0.4752string0.0010complex0.0010void0.0004
;Punctuation
 Text.Whitespace
iName.Othernumber0.6432any0.3541string0.0012complex0.0005boolean0.0003
++Operator
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
typesName.Otherany[]0.6888any0.1388string[]0.1119complex0.0285number[]0.0064
[Punctuation
iName.Othernumber0.8561any0.1361string0.0057boolean0.0006complex0.0004
]Punctuation
 Text.Whitespace
=Operator
 Text.Whitespace
argumentsName.OtherIArguments0.9462any[]0.0351any0.0043string[]0.0023any[][]0.0006
[Punctuation
iName.Othernumber0.8018any0.1941string0.0024complex0.0006boolean0.0004
 Text.Whitespace
+Operator
 Text.Whitespace
1Literal.Number.Float
]Punctuation
\n    Text.Whitespace
}Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
// no types, return the content typeComment.Single
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
typesName.Otherany0.3696string[]0.2828any[]0.2760complex0.0279number[]0.0075
 Text.Whitespace
||Operator
 Text.Whitespace
!Operator
typesName.Otherany0.5152any[]0.2816string[]0.1709complex0.0093number[]0.0036
.Punctuation
lengthName.Otherany0.5135number0.4829string0.0013complex0.0008boolean0.0004
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
valName.Otherany0.9414string0.0169number0.0132boolean0.0102any[]0.0049
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
varKeyword.Declaration
 Text.Whitespace
typeKeyword.Reserved
\n  Text.Whitespace
forKeyword
 Text.Whitespace
(Punctuation
iName.Otherany0.6680number0.3283string0.0017complex0.0006boolean0.0003
 Text.Whitespace
=Operator
 Text.Whitespace
0Literal.Number.Float
;Punctuation
 Text.Whitespace
iName.Othernumber0.6083any0.3865string0.0028complex0.0007boolean0.0004
 Text.Whitespace
<Operator
 Text.Whitespace
typesName.Otherany0.5781any[]0.2023string[]0.1634complex0.0241string[][]0.0031
.Punctuation
lengthName.Otherany0.6253number0.3707complex0.0014string0.0013boolean0.0003
;Punctuation
 Text.Whitespace
iName.Othernumber0.5568any0.4396string0.0021complex0.0005boolean0.0004
++Operator
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
mimeMatchName.Otherboolean0.4887any0.3669string0.0712complex0.0205string[]0.0158
(Punctuation
normalizeName.Otherany0.9167string0.0222boolean0.0166complex0.0117any[]0.0089
(Punctuation
typeKeyword.Reserved
 Text.Whitespace
=Operator
 Text.Whitespace
typesName.Otherstring[]0.4400any0.2755any[]0.2332complex0.0231number[]0.0057
[Punctuation
iName.Othernumber0.7586any0.2259string0.0135boolean0.0006complex0.0005
]Punctuation
)Punctuation
,Punctuation
 Text.Whitespace
valName.Otherany0.9288string0.0473number0.0131complex0.0036boolean0.0030
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
typeKeyword.Reserved
[Punctuation
0Literal.Number.Float
]Punctuation
 Text.Whitespace
===Operator
 Text.Whitespace
'+'Literal.String.Single
 Text.Whitespace
||Operator
 Text.Whitespace
typeKeyword.Reserved
.Punctuation
indexOfName.Otherany0.5007number0.4889string0.0046complex0.0033boolean0.0007
(Punctuation
'*'Literal.String.Single
)Punctuation
 Text.Whitespace
!==Operator
 Text.Whitespace
-Operator
1Literal.Number.Float
\n        Text.Whitespace
?Operator
 Text.Whitespace
valName.Otherany0.7473string0.1846number0.0393boolean0.0140complex0.0039
\n        Text.Whitespace
:Operator
 Text.Whitespace
typeKeyword.Type
\n    Text.Whitespace
}Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
// no matchesComment.Single
\n  Text.Whitespace
returnKeyword
 Text.Whitespace
falseKeyword.Constant
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
Text
/**\n * Check if a request has a request body.\n * A request with a body __must__ either have `transfer-encoding`\n * or `content-length` headers set.\n * http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.3\n *\n * @param {Object} request\n * @return {Boolean}\n * @public\n */Comment.Multiline
\n\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
hasbodyName.Otherboolean0.5530any0.2244string0.1497string[]0.0237complex0.0196
 Text.Whitespace
(Punctuation
reqName.Otherany0.9510Request0.0094string0.0076number0.0043boolean0.0032
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
returnKeyword
 Text.Whitespace
reqName.Otherany0.9735Request0.0039complex0.0011Object0.0011number0.0009
.Punctuation
headersName.Otherany0.9864complex0.0082Object0.0012{}0.0011any[]0.0006
[Punctuation
'transfer-encoding'Literal.String.Single
]Punctuation
 Text.Whitespace
!==Operator
 Text.Whitespace
undefinedKeyword.Constant
 Text.Whitespace
||Operator
\n    Text.Whitespace
!Operator
isNaNName.Builtinboolean0.9921any0.0043number0.0008complex0.0007string0.0006
(Punctuation
reqName.Otherany0.9450Request0.0057complex0.0032Object0.0018XMLHttpRequest0.0015
.Punctuation
headersName.Otherany0.9813complex0.0100Object0.0027number0.0013{}0.0013
[Punctuation
'content-length'Literal.String.Single
]Punctuation
)Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
Text
/**\n * Check if the incoming request contains the "Content-Type"\n * header field, and it contains any of the give mime `type`s.\n * If there is no request body, `null` is returned.\n * If there is no content type, `false` is returned.\n * Otherwise, it returns the first `type` that matches.\n *\n * Examples:\n *\n *     // With Content-Type: text/html; charset=utf-8\n *     this.is('html'); // => 'html'\n *     this.is('text/html'); // => 'text/html'\n *     this.is('text/*', 'application/json'); // => 'text/html'\n *\n *     // When Content-Type is application/json\n *     this.is('json', 'urlencoded'); // => 'json'\n *     this.is('application/json'); // => 'application/json'\n *     this.is('html', 'application/*'); // => 'application/json'\n *\n *     this.is('html'); // => false\n *\n * @param {String|Array} types...\n * @return {String|false|null}\n * @public\n */Comment.Multiline
\n\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
typeofrequestName.Otherany0.6510boolean0.1781string0.0621complex0.0237any[]0.0205
 Text.Whitespace
(Punctuation
reqName.Otherany0.9517Request0.0108number0.0046string0.0038Buffer0.0027
,Punctuation
 Text.Whitespace
types_Name.Otherany0.8692string0.0519number0.0323boolean0.0292any[]0.0030
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
varKeyword.Declaration
 Text.Whitespace
typesName.Otherany0.8120any[]0.0577string[]0.0547complex0.0401string0.0101
 Text.Whitespace
=Operator
 Text.Whitespace
types_Name.Otherany0.8069string0.0667complex0.0338string[]0.0257any[]0.0222
\n\n  Text.Whitespace
// no bodyComment.Single
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
hasbodyName.Otherboolean0.5948any0.3099string0.0474complex0.0259number0.0059
(Punctuation
reqName.Otherany0.9696string0.0037Request0.0034number0.0028complex0.0027
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
nullKeyword.Constant
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
// support flattened argumentsComment.Single
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
argumentsName.OtherIArguments0.9871any[]0.0055any0.0029string[]0.0008any[][]0.0002
.Punctuation
lengthName.Othernumber0.9123any0.0848string0.0014complex0.0006boolean0.0002
 Text.Whitespace
>Operator
 Text.Whitespace
2Literal.Number.Float
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
typesName.Otherany[]0.5386string[]0.2509any0.1201complex0.0390number[]0.0110
 Text.Whitespace
=Operator
 Text.Whitespace
newOperator.Wordany0.5661any[]0.1044string[]0.0952string0.0329complex0.0327
 Text.Whitespace
ArrayName.BuiltinArrayConstructor0.9981any0.0001any[]0.0001Math0.0000Array0.0000
(Punctuation
argumentsName.OtherIArguments0.9524any[]0.0253string[]0.0032any0.0017any[][]0.0008
.Punctuation
lengthName.Othernumber0.9677any0.0305string0.0007complex0.0003boolean0.0002
 Text.Whitespace
-Operator
 Text.Whitespace
1Literal.Number.Float
)Punctuation
\n    Text.Whitespace
forKeyword
 Text.Whitespace
(Punctuation
varKeyword.Declaration
 Text.Whitespace
iName.Othernumber0.9869any0.0121string0.0004boolean0.0001complex0.0001
 Text.Whitespace
=Operator
 Text.Whitespace
0Literal.Number.Float
;Punctuation
 Text.Whitespace
iName.Othernumber0.9580any0.0404string0.0008complex0.0002boolean0.0002
 Text.Whitespace
<Operator
 Text.Whitespace
typesName.Otherany[]0.3645any0.2705string[]0.2613complex0.0264any[][]0.0084
.Punctuation
lengthName.Othernumber0.8167any0.1801string0.0013complex0.0007void0.0003
;Punctuation
 Text.Whitespace
iName.Othernumber0.9158any0.0823string0.0010complex0.0002boolean0.0002
++Operator
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
typesName.Otherany[]0.6208string[]0.1879any0.1096complex0.0339any[][]0.0085
[Punctuation
iName.Othernumber0.9471any0.0464string0.0049boolean0.0004complex0.0003
]Punctuation
 Text.Whitespace
=Operator
 Text.Whitespace
argumentsName.OtherIArguments0.9587any[]0.0251any0.0021string[]0.0020any[][]0.0006
[Punctuation
iName.Othernumber0.8837any0.1120string0.0029boolean0.0004complex0.0004
 Text.Whitespace
+Operator
 Text.Whitespace
1Literal.Number.Float
]Punctuation
\n    Text.Whitespace
}Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
// request content typeComment.Single
\n  Text.Whitespace
varKeyword.Declaration
 Text.Whitespace
valueName.Otherany0.9719string0.0209number0.0024any[]0.0013Object0.0010
 Text.Whitespace
=Operator
 Text.Whitespace
reqName.Otherany0.9845string0.0018Object0.0014complex0.0013number0.0012
.Punctuation
headersName.Otherany0.9822complex0.0086Object0.0022any[]0.0020{}0.0017
[Punctuation
'content-type'Literal.String.Single
]Punctuation
\n\n  Text.Whitespace
returnKeyword
 Text.Whitespace
typeisName.Otherboolean0.3934any0.2906complex0.0982string0.0878any[]0.0576
(Punctuation
valueName.Otherany0.8858string0.0767number0.0116complex0.0065boolean0.0057
,Punctuation
 Text.Whitespace
typesName.Otherany[]0.4247any0.2970complex0.1575string[]0.0813number[]0.0073
)Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
Text
/**\n * Normalize a mime type.\n * If it's a shorthand, expand it to a valid mime type.\n *\n * In general, you probably want:\n *\n *   var type = is(req, ['urlencoded', 'json', 'multipart']);\n *\n * Then use the appropriate body parsers.\n * These three are the most common request body types\n * and are thus ensured to work.\n *\n * @param {String} type\n * @return {String|false|null}\n * @public\n */Comment.Multiline
\n\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
normalizeName.Otherany0.6873string0.1994boolean0.0284complex0.0116Path0.0027
 Text.Whitespace
(Punctuation
typeKeyword.Reserved
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
typeofOperator.Word
 Text.Whitespace
typeKeyword.Reserved
 Text.Whitespace
!==Operator
 Text.Whitespace
'string'Literal.String.Single
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
// invalid typeComment.Single
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
falseKeyword.Constant
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
switchKeyword
 Text.Whitespace
(Punctuation
typeKeyword.Reserved
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
caseKeyword
 Text.Whitespace
'urlencoded'Literal.String.Single
:Operator
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
'application/x-www-form-urlencoded'Literal.String.Single
\n    Text.Whitespace
caseKeyword
 Text.Whitespace
'multipart'Literal.String.Single
:Operator
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
'multipart/*'Literal.String.Single
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
typeKeyword.Reserved
[Punctuation
0Literal.Number.Float
]Punctuation
 Text.Whitespace
===Operator
 Text.Whitespace
'+'Literal.String.Single
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
// "+json" -> "*/*+json" expandoComment.Single
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
'*/*'Literal.String.Single
 Text.Whitespace
+Operator
 Text.Whitespace
typeKeyword.Reserved
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
returnKeyword
 Text.Whitespace
typeKeyword.Reserved
.Punctuation
indexOfName.Othernumber0.5527any0.4332string0.0056complex0.0053void0.0007
(Punctuation
'/'Literal.String.Single
)Punctuation
 Text.Whitespace
===Operator
 Text.Whitespace
-Operator
1Literal.Number.Float
\n    Text.Whitespace
?Operator
 Text.Whitespace
mimeName.Otherany0.9783string0.0115complex0.0015number0.0011Error0.0004
.Punctuation
lookupName.Otherany0.6749string0.1710boolean0.0837number0.0339complex0.0122
(Punctuation
typeKeyword.Reserved
)Punctuation
\n    Text.Whitespace
:Operator
 Text.Whitespace
typeKeyword.Reserved
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
Text
/**\n * Check if `expected` mime type\n * matches `actual` mime type with\n * wildcard and +suffix support.\n *\n * @param {String} expected\n * @param {String} actual\n * @return {Boolean}\n * @public\n */Comment.Multiline
\n\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
mimeMatchName.Otherboolean0.4935any0.2563string0.1827string[]0.0292complex0.0116
 Text.Whitespace
(Punctuation
expectedName.Otherany0.7646string0.2175boolean0.0079string[]0.0026number0.0017
,Punctuation
 Text.Whitespace
actualName.Otherany0.7815string0.1887boolean0.0128number0.0044string[]0.0034
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
// invalid typeComment.Single
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
expectedName.Otherany0.7338boolean0.1749string0.0792complex0.0040number0.0031
 Text.Whitespace
===Operator
 Text.Whitespace
falseKeyword.Constant
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
falseKeyword.Constant
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
// split typesComment.Single
\n  Text.Whitespace
varKeyword.Declaration
 Text.Whitespace
actualPartsName.Otherstring[]0.4813any0.4151string0.0605any[]0.0147boolean0.0115
 Text.Whitespace
=Operator
 Text.Whitespace
actualName.Otherany0.5334string0.4561string[]0.0046boolean0.0015complex0.0015
.Punctuation
splitName.Othercomplex0.6377any0.3534string[]0.0024string0.0021boolean0.0010
(Punctuation
'/'Literal.String.Single
)Punctuation
\n  Text.Whitespace
varKeyword.Declaration
 Text.Whitespace
expectedPartsName.Otherstring[]0.7695any0.1588string0.0383any[]0.0095complex0.0071
 Text.Whitespace
=Operator
 Text.Whitespace
expectedName.Otherstring0.5129any0.4590string[]0.0173boolean0.0035complex0.0024
.Punctuation
splitName.Othercomplex0.8546any0.1377string[]0.0025string0.0019boolean0.0008
(Punctuation
'/'Literal.String.Single
)Punctuation
\n\n  Text.Whitespace
// invalid formatComment.Single
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
actualPartsName.Otherstring[]0.6495any0.2438string0.0575any[]0.0278complex0.0087
.Punctuation
lengthName.Othernumber0.7454any0.2493string0.0032complex0.0009boolean0.0005
 Text.Whitespace
!==Operator
 Text.Whitespace
2Literal.Number.Float
 Text.Whitespace
||Operator
 Text.Whitespace
expectedPartsName.Otherstring[]0.5685any0.2846string0.0995any[]0.0201complex0.0083
.Punctuation
lengthName.Othernumber0.8192any0.1760string0.0031complex0.0008boolean0.0005
 Text.Whitespace
!==Operator
 Text.Whitespace
2Literal.Number.Float
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
falseKeyword.Constant
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
// validate typeComment.Single
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
expectedPartsName.Otherstring[]0.4754any0.3437any[]0.0637complex0.0322string0.0219
[Punctuation
0Literal.Number.Float
]Punctuation
 Text.Whitespace
!==Operator
 Text.Whitespace
'*'Literal.String.Single
 Text.Whitespace
&&Operator
 Text.Whitespace
expectedPartsName.Otherstring[]0.5493any0.3114string0.0405any[]0.0377complex0.0206
[Punctuation
0Literal.Number.Float
]Punctuation
 Text.Whitespace
!==Operator
 Text.Whitespace
actualPartsName.Otherstring[]0.4399any0.3669any[]0.0655string0.0585complex0.0197
[Punctuation
0Literal.Number.Float
]Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
falseKeyword.Constant
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
// validate suffix wildcardComment.Single
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
expectedPartsName.Otherstring[]0.4845any0.3134any[]0.0742complex0.0499string0.0271
[Punctuation
1Literal.Number.Float
]Punctuation
.Punctuation
substrName.Otherstring0.6408any0.3519boolean0.0024number0.0023complex0.0014
(Punctuation
0Literal.Number.Float
,Punctuation
 Text.Whitespace
2Literal.Number.Float
)Punctuation
 Text.Whitespace
===Operator
 Text.Whitespace
'*+'Literal.String.Single
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
expectedPartsName.Otherany0.6358string[]0.2156any[]0.0412string0.0244complex0.0239
[Punctuation
1Literal.Number.Float
]Punctuation
.Punctuation
lengthName.Otherany0.6470number0.3482string0.0024complex0.0010boolean0.0007
 Text.Whitespace
<=Operator
 Text.Whitespace
actualPartsName.Otherany0.7354string[]0.1232string0.0266complex0.0258number0.0205
[Punctuation
1Literal.Number.Float
]Punctuation
.Punctuation
lengthName.Otherany0.5828number0.4125string0.0027boolean0.0007complex0.0007
 Text.Whitespace
+Operator
 Text.Whitespace
1Literal.Number.Float
 Text.Whitespace
&&Operator
\n      Text.Whitespace
expectedPartsName.Otherstring[]0.5006any0.3254string0.0414any[]0.0400complex0.0330
[Punctuation
1Literal.Number.Float
]Punctuation
.Punctuation
substrName.Otherstring0.6532any0.3389number0.0039boolean0.0018complex0.0011
(Punctuation
1Literal.Number.Float
)Punctuation
 Text.Whitespace
===Operator
 Text.Whitespace
actualPartsName.Otherany0.4374string[]0.4201string0.0529complex0.0199any[]0.0186
[Punctuation
1Literal.Number.Float
]Punctuation
.Punctuation
substrName.Otherstring0.5660any0.4257number0.0056complex0.0009boolean0.0008
(Punctuation
1Literal.Number.Float
 Text.Whitespace
-Operator
 Text.Whitespace
expectedPartsName.Otherany0.7013string[]0.1501string0.0295complex0.0256number0.0242
[Punctuation
1Literal.Number.Float
]Punctuation
.Punctuation
lengthName.Othernumber0.6052any0.3899string0.0032complex0.0006boolean0.0004
)Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
// validate subtypeComment.Single
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
expectedPartsName.Otherstring[]0.4348any0.4118any[]0.0466complex0.0252boolean0.0195
[Punctuation
1Literal.Number.Float
]Punctuation
 Text.Whitespace
!==Operator
 Text.Whitespace
'*'Literal.String.Single
 Text.Whitespace
&&Operator
 Text.Whitespace
expectedPartsName.Otherany0.4716string[]0.3880any[]0.0363string0.0343complex0.0192
[Punctuation
1Literal.Number.Float
]Punctuation
 Text.Whitespace
!==Operator
 Text.Whitespace
actualPartsName.Otherany0.5677string[]0.2597any[]0.0538string0.0498complex0.0202
[Punctuation
1Literal.Number.Float
]Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
falseKeyword.Constant
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
returnKeyword
 Text.Whitespace
trueKeyword.Constant
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
Text
/**\n * Normalize a type and remove parameters.\n *\n * @param {string} value\n * @return {string}\n * @private\n */Comment.Multiline
\n\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
normalizeTypeName.Otherany0.5110string0.4009complex0.0724number0.0036Object0.0026
 Text.Whitespace
(Punctuation
valueName.Otherany0.7513string0.2304number0.0033complex0.0028any[]0.0021
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
// parse the typeComment.Single
\n  Text.Whitespace
varKeyword.Declaration
 Text.Whitespace
typeKeyword.Reserved
 Text.Whitespace
=Operator
 Text.Whitespace
typerName.Otherany0.9581string0.0083complex0.0069string[]0.0033any[]0.0025
.Punctuation
parseName.Otherany0.7652complex0.0818T0.0104string0.0055number0.0051
(Punctuation
valueName.Otherany0.5577string0.4179number0.0078complex0.0060boolean0.0014
)Punctuation
\n\n  Text.Whitespace
// remove the parametersComment.Single
\n  Text.Whitespace
typeKeyword.Reserved
.Punctuation
parametersName.Otherany0.8825string0.0930complex0.0181number0.0025any[]0.0010
 Text.Whitespace
=Operator
 Text.Whitespace
undefinedKeyword.Constant
\n\n  Text.Whitespace
// reformat itComment.Single
\n  Text.Whitespace
returnKeyword
 Text.Whitespace
typerName.Otherany0.8809complex0.0420any[]0.0089string0.0048string[]0.0046
.Punctuation
formatName.Otherany0.7947string0.1677complex0.0150number0.0126any[]0.0015
(Punctuation
typeKeyword.Reserved
)Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
Text
/**\n * Try to normalize a type and remove parameters.\n *\n * @param {string} value\n * @return {string}\n * @private\n */Comment.Multiline
\n\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
tryNormalizeTypeName.Otherstring0.5558any0.2618string[]0.0735boolean0.0207any[]0.0166
 Text.Whitespace
(Punctuation
valueName.Otherstring0.7325any0.2537number0.0065boolean0.0010complex0.0010
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
valueName.Otherany0.5355string0.4503number0.0043complex0.0029boolean0.0016
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
nullKeyword.Constant
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
tryKeyword
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
normalizeTypeName.Otherany0.5152string0.3550complex0.1165number0.0021Object0.0021
(Punctuation
valueName.Otherany0.7679string0.1722complex0.0229{}0.0070any[]0.0052
)Punctuation
\n  Text.Whitespace
}Punctuation
 Text.Whitespace
catchKeyword
 Text.Whitespace
(Punctuation
errName.Otherany0.9973string0.0015Error0.0003number0.0003complex0.0002
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
nullKeyword.Constant
\n  Text.Whitespace
}Punctuation
\nText.Whitespace
}Punctuation
\nText.Whitespace
