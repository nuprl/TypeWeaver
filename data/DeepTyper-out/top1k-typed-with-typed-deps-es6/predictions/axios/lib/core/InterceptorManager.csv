'use strict'Literal.String.Single
;Punctuation
\n\nText.Whitespace
importKeyword
 Text.Whitespace
utilsName.Otherany0.5178complex0.3410void0.0423string[]0.0123string0.0119
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./../utils.js'Literal.String.Single
;Punctuation
\n\nText.Whitespace
classKeyword.Declaration
 Text.Whitespace
InterceptorManagerName.Otherany0.9990string0.0003complex0.0002void0.0002number0.0002
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
constructorKeyword.Reserved
(Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
thisKeyword
.Punctuation
handlersName.OtherFunction[]0.0371any[]0.0314User[]0.0286Handlers0.0143any[][]0.0105
 Text.Whitespace
=Operator
 Text.Whitespace
[Punctuation
]Punctuation
;Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
/**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */Comment.Multiline
\n  Text.Whitespace
useName.Othervoid0.9504any0.0245complex0.0060{}0.0022string0.0022
(Punctuation
fulfilledName.Otherany0.4224void0.1620string0.1319number0.0416Function0.0394
,Punctuation
 Text.Whitespace
rejectedName.Otherany0.4966number0.2368boolean0.1700void0.0270string0.0268
,Punctuation
 Text.Whitespace
optionsName.Otherany0.7499boolean0.0246number0.0244{}0.0149Function0.0095
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
thisKeyword
.Punctuation
handlersName.Otherany[]0.0881Handlers0.0392Function[]0.0331complex0.0206void)[]0.0123
.Punctuation
pushName.Othernumber0.9949any0.0023void0.0008boolean0.0006complex0.0005
(Punctuation
{Punctuation
\n      Text.Whitespace
fulfilledName.Otherany0.2476string0.1337void0.1216number0.1125Function0.0826
,Punctuation
\n      Text.Whitespace
rejectedName.Otherboolean0.4984number0.1848any0.1590void0.0412{}0.0275
,Punctuation
\n      Text.Whitespace
synchronousName.Otherboolean0.9691number0.0171any0.0067string0.0018false0.0007
:Operator
 Text.Whitespace
optionsKeyword.Typeboolean0.6446any0.1476number0.0314complex0.0224any[]0.0165
 Text.Whitespace
?Operator
 Text.Whitespace
options.synchronousName.Other
 Text.Whitespace
:Operator
 Text.Whitespace
falseKeyword.Type
,Punctuation
\n      Text.Whitespace
runWhenName.Otherboolean0.6153null0.1015any0.0924number0.0767string0.0316
:Operator
 Text.Whitespace
optionsKeyword.Typenull0.2925boolean0.1464any0.1372number0.0206Object0.0194
 Text.Whitespace
?Operator
 Text.Whitespace
options.runWhenName.Other
 Text.Whitespace
:Operator
 Text.Whitespace
nullKeyword.Type
\n    Text.Whitespace
}Punctuation
)Punctuation
;Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
thisKeyword
.Punctuation
handlersName.OtherHandlers0.0230Function[]0.0168any[]0.0142User[]0.0111T[]0.0075
.Punctuation
lengthName.Othernumber0.9923any0.0062string0.0004complex0.0003void0.0003
 Text.Whitespace
-Operator
 Text.Whitespace
1Literal.Number.Float
;Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
/**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */Comment.Multiline
\n  Text.Whitespace
ejectName.Othervoid0.9974any0.0007boolean0.0005number0.0003Promise<void>0.0002
(Punctuation
idName.Othernumber0.3601string0.3209any0.2868complex0.0057{}0.0017
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
thisKeyword
.Punctuation
handlersName.Othercomplex0.1695Handlers0.0643any[]0.0213Function[]0.0106any[][]0.0089
[Punctuation
idName.Otherstring0.5431number0.2732any0.1529complex0.0166void0.0013
]Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
thisKeyword
.Punctuation
handlersName.Othercomplex0.1787Handlers0.0653any[]0.0221{}0.0102Function[]0.0096
[Punctuation
idName.Otherstring0.6892any0.1425number0.1221complex0.0309void0.0021
]Punctuation
 Text.Whitespace
=Operator
 Text.Whitespace
nullKeyword.Constant
;Punctuation
\n    Text.Whitespace
}Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
/**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */Comment.Multiline
\n  Text.Whitespace
clearName.Othervoid0.9987any0.0005Promise<void>0.0003boolean0.0002Function0.0001
(Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
thisKeyword
.Punctuation
handlersName.OtherHandlers0.1297Function[]0.0283any[]0.0195User[]0.0081XMLHttpRequest0.0073
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
thisKeyword
.Punctuation
handlersName.Otherany[]0.0573Function[]0.0548Handlers0.0291User[]0.0212any[][]0.0137
 Text.Whitespace
=Operator
 Text.Whitespace
[Punctuation
]Punctuation
;Punctuation
\n    Text.Whitespace
}Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
/**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */Comment.Multiline
\n  Text.Whitespace
forEachName.Othervoid0.9775complex0.0125any0.0041v...0.0020Promise<void>0.0008
(Punctuation
fnName.Otherany0.5659Function0.1999void0.1060string0.0239complex0.0109
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
utilsName.Othercomplex0.6510any0.3061any[]0.0184string[]0.0047void0.0022
.Punctuation
forEachName.Othervoid0.5813complex0.3591any0.0278v...0.0218Promise<void>0.0016
(Punctuation
thisKeyword
.Punctuation
handlersName.OtherHandlers0.0766complex0.0718any[]0.0680Function[]0.0266number[]0.0210
,Punctuation
 Text.Whitespace
functionKeyword.Declaration
 Text.Whitespace
forEachHandlerName.Othervoid0.9831boolean0.0060complex0.0028any0.0023string0.0011
(Punctuation
hName.Otherany0.6424number0.1952boolean0.0546string0.0427Function0.0078
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
hName.Otherany0.7186number0.1871boolean0.0474string0.0146void0.0119
 Text.Whitespace
!==Operator
 Text.Whitespace
nullKeyword.Constant
)Punctuation
 Text.Whitespace
{Punctuation
\n        Text.Whitespace
fnName.Otherany0.6430void0.1758Function0.1362number0.0104complex0.0092
(Punctuation
hName.Otherany0.5441number0.3474string0.0614boolean0.0213void0.0051
)Punctuation
;Punctuation
\n      Text.Whitespace
}Punctuation
\n    Text.Whitespace
}Punctuation
)Punctuation
;Punctuation
\n  Text.Whitespace
}Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
exportKeyword
 Text.Whitespace
defaultKeyword
 Text.Whitespace
InterceptorManagerName.Otherany0.7066void0.1059number0.0798boolean0.0518string0.0167
;Punctuation
\nText.Whitespace
