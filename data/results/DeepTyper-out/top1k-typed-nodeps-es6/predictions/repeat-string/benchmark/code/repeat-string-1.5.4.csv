Text
/*!\n * repeat-string <https://github.com/jonschlinkert/repeat-string>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */Comment.Multiline
\n\nText.Whitespace
'use strict'Literal.String.Single
;Punctuation
\n\nText.Whitespace
/**\n * Results cache\n */Comment.Multiline
\n\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
resName.Otherstring0.9878any0.0060RegExp0.0034number0.0006string[]0.0005
 Text.Whitespace
=Operator
 Text.Whitespace
''Literal.String.Single
;Punctuation
\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
cacheName.Otherany0.6400complex0.1448string0.0966void0.0335boolean0.0294
;Punctuation
\n\nText.Whitespace
/**\n * Expose `repeat`\n */Comment.Multiline
\n\nText.Whitespace
exportKeyword
 Text.Whitespace
defaultKeyword
 Text.Whitespace
repeatName.Otherstring0.4387any0.1653boolean0.0586number0.0497void0.0231
;Punctuation
\n\nText.Whitespace
/**\n * Repeat the given `string` the specified `number`\n * of times.\n *\n * **Example:**\n *\n * ```js\n * var repeat = require('repeat-string');\n * repeat('A', 5);\n * //=> AAAAA\n * ```\n *\n * @param {String} `string` The string to repeat\n * @param {Number} `number` The number of times to repeat the string\n * @return {String} Repeated string\n * @api public\n */Comment.Multiline
\n\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
repeatName.Otherstring0.6861any0.1080boolean0.0577number0.0370void0.0175
(Punctuation
strName.Otherstring0.7459any0.2427number0.0072complex0.0014boolean0.0005
,Punctuation
 Text.Whitespace
numName.Othernumber0.9369any0.0502boolean0.0055string0.0048complex0.0015
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
typeofOperator.Word
 Text.Whitespace
strName.Otherstring0.4945any0.4548complex0.0304number0.0135boolean0.0043
 Text.Whitespace
!==Operator
 Text.Whitespace
'string'Literal.String.Single
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
throwKeywordany0.5361complex0.1944boolean0.1056string0.0772Error0.0250
 Text.Whitespace
newOperator.Wordany0.2989boolean0.2211string0.1620complex0.1328string[]0.0289
 Text.Whitespace
TypeErrorName.ExceptionTypeErrorConstructor0.9896ErrorConstructor0.0019MapConstructor0.0002BooleanConstructor0.0002NumberConstructor0.0002
(Punctuation
'repeat-string expects a string.'Literal.String.Single
)Punctuation
;Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
// cover common, quick use casesComment.Single
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
numName.Othernumber0.9635any0.0275boolean0.0049string0.0022complex0.0012
 Text.Whitespace
===Operator
 Text.Whitespace
1Literal.Number.Float
)Punctuation
 Text.Whitespace
returnKeyword
 Text.Whitespace
strName.Otherstring0.8199any0.1577number0.0145complex0.0037boolean0.0010
;Punctuation
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
numName.Othernumber0.9488any0.0390boolean0.0074string0.0025complex0.0015
 Text.Whitespace
===Operator
 Text.Whitespace
2Literal.Number.Float
)Punctuation
 Text.Whitespace
returnKeyword
 Text.Whitespace
strName.Otherstring0.8783any0.1043number0.0136complex0.0018boolean0.0006
 Text.Whitespace
+Operator
 Text.Whitespace
strName.Otherstring0.8224any0.1589number0.0129complex0.0036boolean0.0007
;Punctuation
\n\n  Text.Whitespace
varKeyword.Declaration
 Text.Whitespace
maxName.Othernumber0.9657any0.0240string0.0077boolean0.0010complex0.0007
 Text.Whitespace
=Operator
 Text.Whitespace
strName.Otherstring0.9441any0.0444number0.0065string[]0.0014complex0.0013
.Punctuation
lengthName.Othernumber0.9142any0.0808string0.0024complex0.0014boolean0.0004
 Text.Whitespace
*Operator
 Text.Whitespace
numName.Othernumber0.9487any0.0409string0.0053boolean0.0019complex0.0018
;Punctuation
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
cacheName.Otherany0.4280boolean0.2759string0.1557complex0.0824number0.0466
 Text.Whitespace
!==Operator
 Text.Whitespace
strName.Otherstring0.6733any0.3013complex0.0113number0.0078boolean0.0036
 Text.Whitespace
||Operator
 Text.Whitespace
typeofOperator.Word
 Text.Whitespace
cacheName.Otherany0.6824complex0.1944string0.0815boolean0.0216number0.0115
 Text.Whitespace
===Operator
 Text.Whitespace
'undefined'Literal.String.Single
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
cacheName.Otherstring0.7323any0.2248boolean0.0160complex0.0123number0.0082
 Text.Whitespace
=Operator
 Text.Whitespace
strName.Otherstring0.8952any0.0966number0.0038complex0.0025boolean0.0008
;Punctuation
\n    Text.Whitespace
resName.Otherstring0.9783any0.0158boolean0.0013RegExp0.0013number0.0011
 Text.Whitespace
=Operator
 Text.Whitespace
''Literal.String.Single
;Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
whileKeyword
 Text.Whitespace
(Punctuation
maxName.Othernumber0.9251any0.0637string0.0069boolean0.0024complex0.0006
 Text.Whitespace
>Operator
 Text.Whitespace
resName.Otherstring0.7323string[]0.1452any0.0777any[]0.0055number[]0.0034
.Punctuation
lengthName.Othernumber0.9306any0.0650string0.0023boolean0.0007complex0.0006
 Text.Whitespace
&&Operator
 Text.Whitespace
numName.Othernumber0.9599any0.0326boolean0.0042string0.0024complex0.0005
 Text.Whitespace
>Operator
 Text.Whitespace
0Literal.Number.Float
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
numName.Othernumber0.9440any0.0452boolean0.0079string0.0013complex0.0006
 Text.Whitespace
&Operator
 Text.Whitespace
1Literal.Number.Float
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
resName.Otherstring0.9853any0.0096number0.0029boolean0.0009complex0.0003
 Text.Whitespace
+=Operator
 Text.Whitespace
strName.Otherstring0.9020any0.0839number0.0105complex0.0020boolean0.0007
;Punctuation
\n    Text.Whitespace
}Punctuation
\n\n    Text.Whitespace
numName.Othernumber0.9123any0.0578boolean0.0114string0.0105complex0.0030
 Text.Whitespace
>>=Operator
 Text.Whitespace
1Literal.Number.Float
;Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
numName.Othernumber0.8560any0.0864boolean0.0370string0.0165complex0.0023
)Punctuation
 Text.Whitespace
breakKeyword
;Punctuation
\n    Text.Whitespace
strName.Otherstring0.9752any0.0200number0.0025complex0.0015boolean0.0003
 Text.Whitespace
+=Operator
 Text.Whitespace
strName.Otherstring0.9178any0.0740number0.0060complex0.0011boolean0.0005
;Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
returnKeyword
 Text.Whitespace
resName.Otherstring0.9294any0.0624number0.0019string[]0.0012void0.0005
.Punctuation
substrName.Otherstring0.7760any0.2057number0.0095complex0.0036void0.0020
(Punctuation
0Literal.Number.Float
,Punctuation
 Text.Whitespace
maxName.Othernumber0.9736any0.0156string0.0078boolean0.0013complex0.0006
)Punctuation
;Punctuation
\nText.Whitespace
}Punctuation
\nText.Whitespace
