Text
/*!\n * type-is\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */Comment.Multiline
\n\nText.Whitespace
'use strict'Literal.String.Single
\n\nText.Whitespace
Text
/**\n * Module dependencies.\n * @private\n */Comment.Multiline
\n\nText.Whitespace
importKeyword
 Text.Whitespace
typerName.Otherany0.5197complex0.0905string0.0646boolean0.0463string[]0.0391
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'media-typer'Literal.String.Single
;Punctuation
\n\nText.Whitespace
importKeyword
 Text.Whitespace
mimeName.Otherany0.8340string0.0950complex0.0049number0.0043void0.0035
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'mime-types'Literal.String.Single
;Punctuation
\n\nText.Whitespace
/**\n * Module exports.\n * @public\n */Comment.Multiline
\n\nText.Whitespace
moduleKeyword.Reserved
.exportsName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
typeofrequestName.Otherany0.5791string0.2500complex0.0748boolean0.0269number0.0203
\nText.Whitespace
moduleKeyword.Reserved
.exports.isName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
typeisName.Otherany0.6002string0.2158complex0.1040boolean0.0214number0.0125
\nText.Whitespace
moduleKeyword.Reserved
.exports.hasBodyName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
hasbodyName.Otherany0.6241string0.1924complex0.1055boolean0.0257number0.0091
\nText.Whitespace
moduleKeyword.Reserved
.exports.normalizeName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
normalizeName.Otherany0.8049string0.0785complex0.0468{}0.0086boolean0.0051
\nText.Whitespace
moduleKeyword.Reserved
.exports.matchName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
mimeMatchName.Otherany0.6744string0.1289boolean0.0758complex0.0507string[]0.0148
\n\nText.Whitespace
Text
/**\n * Compare a `value` content-type with `types`.\n * Each `type` can be an extension like `html`,\n * a special shortcut like `multipart` or `urlencoded`,\n * or a mime type.\n *\n * If no types match, `false` is returned.\n * Otherwise, the first `type` that matches is returned.\n *\n * @param {String} value\n * @param {Array} types\n * @public\n */Comment.Multiline
\n\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
typeisName.Otherany0.4847boolean0.2829string0.1521complex0.0301number0.0141
 Text.Whitespace
(Punctuation
valueName.Otherany0.7209string0.2571number0.0054boolean0.0019complex0.0018
,Punctuation
 Text.Whitespace
types_Name.Otherany0.5797string0.3198boolean0.0621number0.0125string[]0.0055
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
varKeyword.Declaration
 Text.Whitespace
iName.Othernumber0.6785any0.3039string0.0105boolean0.0028complex0.0025
\n  Text.Whitespace
varKeyword.Declaration
 Text.Whitespace
typesName.Otherany0.7590any[]0.0699string[]0.0677complex0.0272string0.0262
 Text.Whitespace
=Operator
 Text.Whitespace
types_Name.Otherany0.7539boolean0.0625string0.0606complex0.0490any[]0.0240
\n\n  Text.Whitespace
// remove parameters and normalizeComment.Single
\n  Text.Whitespace
varKeyword.Declaration
 Text.Whitespace
valName.Otherany0.6923string0.1632number0.0612boolean0.0535complex0.0166
 Text.Whitespace
=Operator
 Text.Whitespace
tryNormalizeTypeName.Otherany0.5416string0.1857boolean0.1292complex0.0703number0.0442
(Punctuation
valueName.Otherany0.7957string0.1706number0.0165complex0.0078boolean0.0017
)Punctuation
\n\n  Text.Whitespace
// no type or invalidComment.Single
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
valName.Otherany0.8820string0.0354number0.0285boolean0.0281complex0.0157
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
falseKeyword.Constant
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
// support flattened argumentsComment.Single
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
typesName.Otherany0.6180complex0.1711string[]0.1019any[]0.0546boolean0.0133
 Text.Whitespace
&&Operator
 Text.Whitespace
!Operator
ArrayName.BuiltinArrayConstructor0.9994any0.0001ObjectConstructor0.0000Math0.0000complex0.0000
.Punctuation
isArrayName.Othercomplex0.9950any0.0018any[]0.0008boolean0.0005string[]0.0002
(Punctuation
typesName.Otherany0.5450complex0.2041any[]0.1845string[]0.0387number[]0.0048
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
typesName.Otherany[]0.8074string[]0.1164complex0.0286any0.0209number[]0.0084
 Text.Whitespace
=Operator
 Text.Whitespace
newOperator.Wordany[]0.3133any0.2488string[]0.1840complex0.0372number[]0.0312
 Text.Whitespace
ArrayName.BuiltinArrayConstructor0.9989any[]0.0000any0.0000Math0.0000ObjectConstructor0.0000
(Punctuation
argumentsName.OtherIArguments0.9482any[]0.0328string[]0.0033any0.0019any[][]0.0007
.Punctuation
lengthName.Othernumber0.9712any0.0272string0.0006complex0.0003boolean0.0002
 Text.Whitespace
-Operator
 Text.Whitespace
1Literal.Number.Float
)Punctuation
\n    Text.Whitespace
forKeyword
 Text.Whitespace
(Punctuation
iName.Otherany0.5462number0.4502string0.0019complex0.0006boolean0.0003
 Text.Whitespace
=Operator
 Text.Whitespace
0Literal.Number.Float
;Punctuation
 Text.Whitespace
iName.Othernumber0.6667any0.3297string0.0019complex0.0005boolean0.0003
 Text.Whitespace
<Operator
 Text.Whitespace
typesName.Otherany0.4943any[]0.2944string[]0.1480complex0.0296number[]0.0035
.Punctuation
lengthName.Othernumber0.5546any0.4419string0.0011complex0.0011void0.0004
;Punctuation
 Text.Whitespace
iName.Othernumber0.6663any0.3310string0.0013complex0.0005boolean0.0003
++Operator
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
typesName.Otherany[]0.6326string[]0.1628any0.1239complex0.0424number[]0.0083
[Punctuation
iName.Othernumber0.8693any0.1229string0.0059boolean0.0005complex0.0005
]Punctuation
 Text.Whitespace
=Operator
 Text.Whitespace
argumentsName.OtherIArguments0.9557any[]0.0277any0.0031string[]0.0023any[][]0.0004
[Punctuation
iName.Othernumber0.8277any0.1683string0.0024complex0.0006boolean0.0004
 Text.Whitespace
+Operator
 Text.Whitespace
1Literal.Number.Float
]Punctuation
\n    Text.Whitespace
}Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
// no types, return the content typeComment.Single
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
typesName.Otherany0.3391string[]0.3354any[]0.2409complex0.0360number[]0.0090
 Text.Whitespace
||Operator
 Text.Whitespace
!Operator
typesName.Otherany0.4919any[]0.2551string[]0.2129complex0.0127number[]0.0048
.Punctuation
lengthName.Othernumber0.5535any0.4428string0.0013complex0.0010boolean0.0005
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
valName.Otherany0.9338string0.0200number0.0145boolean0.0112{}0.0053
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
varKeyword.Declaration
 Text.Whitespace
typeKeyword.Reserved
\n  Text.Whitespace
forKeyword
 Text.Whitespace
(Punctuation
iName.Otherany0.6555number0.3406string0.0018complex0.0007boolean0.0003
 Text.Whitespace
=Operator
 Text.Whitespace
0Literal.Number.Float
;Punctuation
 Text.Whitespace
iName.Othernumber0.6200any0.3750string0.0028complex0.0007boolean0.0004
 Text.Whitespace
<Operator
 Text.Whitespace
typesName.Otherany0.5602string[]0.1968any[]0.1789complex0.0313number[]0.0033
.Punctuation
lengthName.Otherany0.5826number0.4134string0.0015complex0.0014boolean0.0003
;Punctuation
 Text.Whitespace
iName.Othernumber0.5594any0.4370string0.0022complex0.0006boolean0.0004
++Operator
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
mimeMatchName.Otherboolean0.5043any0.3527string0.0677complex0.0265string[]0.0159
(Punctuation
normalizeName.Otherany0.9114string0.0230boolean0.0178complex0.0162any[]0.0074
(Punctuation
typeKeyword.Reserved
 Text.Whitespace
=Operator
 Text.Whitespace
typesName.Otherstring[]0.5224any0.2277any[]0.1902complex0.0291number[]0.0071
[Punctuation
iName.Othernumber0.7673any0.2170string0.0138boolean0.0006complex0.0005
]Punctuation
)Punctuation
,Punctuation
 Text.Whitespace
valName.Otherany0.9185string0.0540number0.0151complex0.0047boolean0.0033
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
typeKeyword.Reserved
[Punctuation
0Literal.Number.Float
]Punctuation
 Text.Whitespace
===Operator
 Text.Whitespace
'+'Literal.String.Single
 Text.Whitespace
||Operator
 Text.Whitespace
typeKeyword.Reserved
.Punctuation
indexOfName.Othernumber0.5635any0.4253string0.0049complex0.0040boolean0.0007
(Punctuation
'*'Literal.String.Single
)Punctuation
 Text.Whitespace
!==Operator
 Text.Whitespace
-Operator
1Literal.Number.Float
\n        Text.Whitespace
?Operator
 Text.Whitespace
valName.Otherany0.7190string0.2102number0.0402boolean0.0147complex0.0049
\n        Text.Whitespace
:Operator
 Text.Whitespace
typeKeyword.Type
\n    Text.Whitespace
}Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
// no matchesComment.Single
\n  Text.Whitespace
returnKeyword
 Text.Whitespace
falseKeyword.Constant
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
Text
/**\n * Check if a request has a request body.\n * A request with a body __must__ either have `transfer-encoding`\n * or `content-length` headers set.\n * http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.3\n *\n * @param {Object} request\n * @return {Boolean}\n * @public\n */Comment.Multiline
\n\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
hasbodyName.Otherboolean0.6077any0.1879string0.1318string[]0.0246complex0.0209
 Text.Whitespace
(Punctuation
reqName.Otherany0.9532Request0.0089string0.0073number0.0044boolean0.0030
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
returnKeyword
 Text.Whitespace
reqName.Otherany0.9721Request0.0041complex0.0013Object0.0012number0.0010
.Punctuation
headersName.Otherany0.9849complex0.0094{}0.0014Object0.0013number0.0006
[Punctuation
'transfer-encoding'Literal.String.Single
]Punctuation
 Text.Whitespace
!==Operator
 Text.Whitespace
undefinedKeyword.Constant
 Text.Whitespace
||Operator
\n    Text.Whitespace
!Operator
isNaNName.Builtinboolean0.9932any0.0034number0.0008complex0.0007string0.0005
(Punctuation
reqName.Otherany0.9393Request0.0059complex0.0038Object0.0020XMLHttpRequest0.0018
.Punctuation
headersName.Otherany0.9787complex0.0121Object0.0029{}0.0015number0.0014
[Punctuation
'content-length'Literal.String.Single
]Punctuation
)Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
Text
/**\n * Check if the incoming request contains the "Content-Type"\n * header field, and it contains any of the give mime `type`s.\n * If there is no request body, `null` is returned.\n * If there is no content type, `false` is returned.\n * Otherwise, it returns the first `type` that matches.\n *\n * Examples:\n *\n *     // With Content-Type: text/html; charset=utf-8\n *     this.is('html'); // => 'html'\n *     this.is('text/html'); // => 'text/html'\n *     this.is('text/*', 'application/json'); // => 'text/html'\n *\n *     // When Content-Type is application/json\n *     this.is('json', 'urlencoded'); // => 'json'\n *     this.is('application/json'); // => 'application/json'\n *     this.is('html', 'application/*'); // => 'application/json'\n *\n *     this.is('html'); // => false\n *\n * @param {String|Array} types...\n * @return {String|false|null}\n * @public\n */Comment.Multiline
\n\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
typeofrequestName.Otherany0.6293boolean0.1976string0.0583complex0.0263any[]0.0204
 Text.Whitespace
(Punctuation
reqName.Otherany0.9514Request0.0109number0.0049string0.0038Buffer0.0023
,Punctuation
 Text.Whitespace
types_Name.Otherany0.8700string0.0495number0.0317boolean0.0309complex0.0031
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
varKeyword.Declaration
 Text.Whitespace
typesName.Otherany0.8091string[]0.0556any[]0.0538complex0.0458string0.0103
 Text.Whitespace
=Operator
 Text.Whitespace
types_Name.Otherany0.7993string0.0630complex0.0401string[]0.0270any[]0.0208
\n\n  Text.Whitespace
// no bodyComment.Single
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
hasbodyName.Otherboolean0.6214any0.2847string0.0403complex0.0327number0.0052
(Punctuation
reqName.Otherany0.9686Request0.0036string0.0034complex0.0032number0.0030
)Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
nullKeyword.Constant
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
// support flattened argumentsComment.Single
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
argumentsName.OtherIArguments0.9882any[]0.0050any0.0027string[]0.0008complex0.0002
.Punctuation
lengthName.Othernumber0.9240any0.0733string0.0013complex0.0006boolean0.0002
 Text.Whitespace
>Operator
 Text.Whitespace
2Literal.Number.Float
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
typesName.Otherany[]0.5177string[]0.2746any0.1109complex0.0433number[]0.0129
 Text.Whitespace
=Operator
 Text.Whitespace
newOperator.Wordany0.5531any[]0.1013string[]0.1001complex0.0366string0.0332
 Text.Whitespace
ArrayName.BuiltinArrayConstructor0.9983any0.0001any[]0.0001Math0.0000T[]0.0000
(Punctuation
argumentsName.OtherIArguments0.9586any[]0.0214string[]0.0029any0.0014any[][]0.0006
.Punctuation
lengthName.Othernumber0.9729any0.0254string0.0006complex0.0003boolean0.0002
 Text.Whitespace
-Operator
 Text.Whitespace
1Literal.Number.Float
)Punctuation
\n    Text.Whitespace
forKeyword
 Text.Whitespace
(Punctuation
varKeyword.Declaration
 Text.Whitespace
iName.Othernumber0.9884any0.0107string0.0004complex0.0001boolean0.0001
 Text.Whitespace
=Operator
 Text.Whitespace
0Literal.Number.Float
;Punctuation
 Text.Whitespace
iName.Othernumber0.9645any0.0341string0.0007complex0.0002boolean0.0002
 Text.Whitespace
<Operator
 Text.Whitespace
typesName.Otherany[]0.3411string[]0.2849any0.2631complex0.0308T[]0.0098
.Punctuation
lengthName.Othernumber0.8472any0.1499string0.0012complex0.0006boolean0.0003
;Punctuation
 Text.Whitespace
iName.Othernumber0.9256any0.0726string0.0009boolean0.0002complex0.0002
++Operator
)Punctuation
 Text.Whitespace
{Punctuation
\n      Text.Whitespace
typesName.Otherany[]0.6000string[]0.2080any0.0975complex0.0418number[]0.0096
[Punctuation
iName.Othernumber0.9521any0.0419string0.0046boolean0.0004complex0.0003
]Punctuation
 Text.Whitespace
=Operator
 Text.Whitespace
argumentsName.OtherIArguments0.9646any[]0.0211string[]0.0017any0.0016any[][]0.0004
[Punctuation
iName.Othernumber0.8963any0.0997string0.0026boolean0.0004complex0.0004
 Text.Whitespace
+Operator
 Text.Whitespace
1Literal.Number.Float
]Punctuation
\n    Text.Whitespace
}Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
// request content typeComment.Single
\n  Text.Whitespace
varKeyword.Declaration
 Text.Whitespace
valueName.Otherany0.9709string0.0218number0.0026any[]0.0012Object0.0010
 Text.Whitespace
=Operator
 Text.Whitespace
reqName.Otherany0.9827string0.0017Object0.0016complex0.0015number0.0013
.Punctuation
headersName.Otherany0.9791complex0.0105Object0.0027{}0.0022any[]0.0020
[Punctuation
'content-type'Literal.String.Single
]Punctuation
\n\n  Text.Whitespace
returnKeyword
 Text.Whitespace
typeisName.Otherboolean0.4057any0.2805complex0.1116string0.0807any[]0.0514
(Punctuation
valueName.Otherany0.8777string0.0802number0.0136complex0.0076boolean0.0065
,Punctuation
 Text.Whitespace
typesName.Otherany[]0.4087any0.2847complex0.1803string[]0.0835number[]0.0089
)Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
Text
/**\n * Normalize a mime type.\n * If it's a shorthand, expand it to a valid mime type.\n *\n * In general, you probably want:\n *\n *   var type = is(req, ['urlencoded', 'json', 'multipart']);\n *\n * Then use the appropriate body parsers.\n * These three are the most common request body types\n * and are thus ensured to work.\n *\n * @param {String} type\n * @return {String|false|null}\n * @public\n */Comment.Multiline
\n\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
normalizeName.Otherany0.6995string0.1873boolean0.0293complex0.0140Path0.0024
 Text.Whitespace
(Punctuation
typeKeyword.Reserved
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
typeofOperator.Word
 Text.Whitespace
typeKeyword.Reserved
 Text.Whitespace
!==Operator
 Text.Whitespace
'string'Literal.String.Single
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
// invalid typeComment.Single
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
falseKeyword.Constant
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
switchKeyword
 Text.Whitespace
(Punctuation
typeKeyword.Reserved
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
caseKeyword
 Text.Whitespace
'urlencoded'Literal.String.Single
:Operator
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
'application/x-www-form-urlencoded'Literal.String.Single
\n    Text.Whitespace
caseKeyword
 Text.Whitespace
'multipart'Literal.String.Single
:Operator
\n      Text.Whitespace
returnKeyword
 Text.Whitespace
'multipart/*'Literal.String.Single
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
typeKeyword.Reserved
[Punctuation
0Literal.Number.Float
]Punctuation
 Text.Whitespace
===Operator
 Text.Whitespace
'+'Literal.String.Single
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
// "+json" -> "*/*+json" expandoComment.Single
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
'*/*'Literal.String.Single
 Text.Whitespace
+Operator
 Text.Whitespace
typeKeyword.Reserved
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
returnKeyword
 Text.Whitespace
typeKeyword.Reserved
.Punctuation
indexOfName.Othernumber0.5921any0.3939complex0.0056string0.0054void0.0007
(Punctuation
'/'Literal.String.Single
)Punctuation
 Text.Whitespace
===Operator
 Text.Whitespace
-Operator
1Literal.Number.Float
\n    Text.Whitespace
?Operator
 Text.Whitespace
mimeName.Otherany0.9842string0.0093complex0.0018number0.0008Error0.0002
.Punctuation
lookupName.Otherany0.6964string0.1585boolean0.0751number0.0319complex0.0143
(Punctuation
typeKeyword.Reserved
)Punctuation
\n    Text.Whitespace
:Operator
 Text.Whitespace
typeKeyword.Reserved
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
Text
/**\n * Check if `expected` mime type\n * matches `actual` mime type with\n * wildcard and +suffix support.\n *\n * @param {String} expected\n * @param {String} actual\n * @return {Boolean}\n * @public\n */Comment.Multiline
\n\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
mimeMatchName.Otherboolean0.4929any0.2534string0.1813string[]0.0328complex0.0127
 Text.Whitespace
(Punctuation
expectedName.Otherany0.7729string0.2093boolean0.0081string[]0.0025number0.0018
,Punctuation
 Text.Whitespace
actualName.Otherany0.7989string0.1734boolean0.0122number0.0047string[]0.0029
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
// invalid typeComment.Single
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
expectedName.Otherany0.7316boolean0.1793string0.0771complex0.0043number0.0032
 Text.Whitespace
===Operator
 Text.Whitespace
falseKeyword.Constant
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
falseKeyword.Constant
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
// split typesComment.Single
\n  Text.Whitespace
varKeyword.Declaration
 Text.Whitespace
actualPartsName.Otherstring[]0.5034any0.3981string0.0560any[]0.0139boolean0.0106
 Text.Whitespace
=Operator
 Text.Whitespace
actualName.Otherany0.5284string0.4610string[]0.0045complex0.0017boolean0.0015
.Punctuation
splitName.Othercomplex0.6923any0.2996string[]0.0023string0.0019boolean0.0010
(Punctuation
'/'Literal.String.Single
)Punctuation
\n  Text.Whitespace
varKeyword.Declaration
 Text.Whitespace
expectedPartsName.Otherstring[]0.7935any0.1418string0.0318any[]0.0092complex0.0078
 Text.Whitespace
=Operator
 Text.Whitespace
expectedName.Otherstring0.5157any0.4567string[]0.0169boolean0.0035complex0.0027
.Punctuation
splitName.Othercomplex0.8789any0.1143string[]0.0022string0.0017boolean0.0007
(Punctuation
'/'Literal.String.Single
)Punctuation
\n\n  Text.Whitespace
// invalid formatComment.Single
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
actualPartsName.Otherstring[]0.6882any0.2146string0.0475any[]0.0265complex0.0107
.Punctuation
lengthName.Othernumber0.7678any0.2269string0.0031complex0.0010boolean0.0005
 Text.Whitespace
!==Operator
 Text.Whitespace
2Literal.Number.Float
 Text.Whitespace
||Operator
 Text.Whitespace
expectedPartsName.Otherstring[]0.6183any0.2499string0.0831any[]0.0203complex0.0096
.Punctuation
lengthName.Othernumber0.8404any0.1549string0.0030complex0.0008boolean0.0005
 Text.Whitespace
!==Operator
 Text.Whitespace
2Literal.Number.Float
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
falseKeyword.Constant
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
// validate typeComment.Single
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
expectedPartsName.Otherstring[]0.4949any0.3250any[]0.0605complex0.0372boolean0.0201
[Punctuation
0Literal.Number.Float
]Punctuation
 Text.Whitespace
!==Operator
 Text.Whitespace
'*'Literal.String.Single
 Text.Whitespace
&&Operator
 Text.Whitespace
expectedPartsName.Otherstring[]0.5756any0.2828any[]0.0369string0.0362complex0.0245
[Punctuation
0Literal.Number.Float
]Punctuation
 Text.Whitespace
!==Operator
 Text.Whitespace
actualPartsName.Otherstring[]0.4632any0.3433any[]0.0642string0.0521complex0.0228
[Punctuation
0Literal.Number.Float
]Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
falseKeyword.Constant
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
// validate suffix wildcardComment.Single
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
expectedPartsName.Otherstring[]0.4999any0.2950any[]0.0693complex0.0568string0.0256
[Punctuation
1Literal.Number.Float
]Punctuation
.Punctuation
substrName.Otherstring0.6547any0.3378boolean0.0024number0.0023complex0.0016
(Punctuation
0Literal.Number.Float
,Punctuation
 Text.Whitespace
2Literal.Number.Float
)Punctuation
 Text.Whitespace
===Operator
 Text.Whitespace
'*+'Literal.String.Single
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
expectedPartsName.Otherany0.6188string[]0.2245any[]0.0400complex0.0294string0.0223
[Punctuation
1Literal.Number.Float
]Punctuation
.Punctuation
lengthName.Otherany0.6419number0.3533string0.0024complex0.0010boolean0.0007
 Text.Whitespace
<=Operator
 Text.Whitespace
actualPartsName.Otherany0.7140string[]0.1356complex0.0302string0.0258number[]0.0226
[Punctuation
1Literal.Number.Float
]Punctuation
.Punctuation
lengthName.Otherany0.5733number0.4221string0.0027boolean0.0008complex0.0007
 Text.Whitespace
+Operator
 Text.Whitespace
1Literal.Number.Float
 Text.Whitespace
&&Operator
\n      Text.Whitespace
expectedPartsName.Otherstring[]0.5409any0.2833any[]0.0398string0.0371complex0.0369
[Punctuation
1Literal.Number.Float
]Punctuation
.Punctuation
substrName.Otherstring0.6651any0.3269number0.0040boolean0.0018complex0.0012
(Punctuation
1Literal.Number.Float
)Punctuation
 Text.Whitespace
===Operator
 Text.Whitespace
actualPartsName.Otherstring[]0.4529any0.3980string0.0469complex0.0240any[]0.0194
[Punctuation
1Literal.Number.Float
]Punctuation
.Punctuation
substrName.Otherstring0.5764any0.4149number0.0059complex0.0011boolean0.0008
(Punctuation
1Literal.Number.Float
 Text.Whitespace
-Operator
 Text.Whitespace
expectedPartsName.Otherany0.6608string[]0.1733complex0.0319string0.0271number[]0.0255
[Punctuation
1Literal.Number.Float
]Punctuation
.Punctuation
lengthName.Othernumber0.6137any0.3815string0.0031complex0.0006boolean0.0004
)Punctuation
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
// validate subtypeComment.Single
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
expectedPartsName.Otherstring[]0.4424any0.4022any[]0.0444complex0.0290boolean0.0192
[Punctuation
1Literal.Number.Float
]Punctuation
 Text.Whitespace
!==Operator
 Text.Whitespace
'*'Literal.String.Single
 Text.Whitespace
&&Operator
 Text.Whitespace
expectedPartsName.Otherany0.4403string[]0.4126any[]0.0364string0.0309complex0.0235
[Punctuation
1Literal.Number.Float
]Punctuation
 Text.Whitespace
!==Operator
 Text.Whitespace
actualPartsName.Otherany0.5555string[]0.2691any[]0.0541string0.0439complex0.0235
[Punctuation
1Literal.Number.Float
]Punctuation
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
falseKeyword.Constant
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
returnKeyword
 Text.Whitespace
trueKeyword.Constant
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
Text
/**\n * Normalize a type and remove parameters.\n *\n * @param {string} value\n * @return {string}\n * @private\n */Comment.Multiline
\n\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
normalizeTypeName.Otherany0.5285string0.3830complex0.0736number0.0035Object0.0024
 Text.Whitespace
(Punctuation
valueName.Otherany0.7576string0.2251number0.0034complex0.0029any[]0.0020
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
// parse the typeComment.Single
\n  Text.Whitespace
varKeyword.Declaration
 Text.Whitespace
typeKeyword.Reserved
 Text.Whitespace
=Operator
 Text.Whitespace
typerName.Otherany0.9603complex0.0083string0.0072string[]0.0030any[]0.0023
.Punctuation
parseName.Otherany0.7574complex0.0890T0.0115number0.0053string0.0053
(Punctuation
valueName.Otherany0.5451string0.4296number0.0084complex0.0067boolean0.0014
)Punctuation
\n\n  Text.Whitespace
// remove the parametersComment.Single
\n  Text.Whitespace
typeKeyword.Reserved
.Punctuation
parametersName.Otherany0.8841string0.0901complex0.0198number0.0025any[]0.0009
 Text.Whitespace
=Operator
 Text.Whitespace
undefinedKeyword.Constant
\n\n  Text.Whitespace
// reformat itComment.Single
\n  Text.Whitespace
returnKeyword
 Text.Whitespace
typerName.Otherany0.8918complex0.0439any[]0.0070string0.0041string[]0.0039
.Punctuation
formatName.Otherany0.8117string0.1518complex0.0156number0.0118any[]0.0014
(Punctuation
typeKeyword.Reserved
)Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
Text
/**\n * Try to normalize a type and remove parameters.\n *\n * @param {string} value\n * @return {string}\n * @private\n */Comment.Multiline
\n\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
tryNormalizeTypeName.Otherstring0.5285any0.2788string[]0.0803boolean0.0226complex0.0165
 Text.Whitespace
(Punctuation
valueName.Otherstring0.7268any0.2595number0.0069boolean0.0010complex0.0009
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
valueName.Otherany0.5417string0.4444number0.0044complex0.0029boolean0.0016
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
nullKeyword.Constant
\n  Text.Whitespace
}Punctuation
\n\n  Text.Whitespace
tryKeyword
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
normalizeTypeName.Otherany0.5352string0.3328complex0.1200number0.0021Object0.0018
(Punctuation
valueName.Otherany0.7765string0.1643complex0.0245{}0.0073any[]0.0053
)Punctuation
\n  Text.Whitespace
}Punctuation
 Text.Whitespace
catchKeyword
 Text.Whitespace
(Punctuation
errName.Otherany0.9976string0.0014number0.0002Error0.0002complex0.0002
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
nullKeyword.Constant
\n  Text.Whitespace
}Punctuation
\nText.Whitespace
}Punctuation
\nText.Whitespace
