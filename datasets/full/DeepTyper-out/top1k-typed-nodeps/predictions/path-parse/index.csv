'use strict'Literal.String.Single
;Punctuation
\n\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
isWindowsName.Otherboolean0.9933any0.0023RegExpMatchArray0.0008false0.0004string0.0004
 Text.Whitespace
=Operator
 Text.Whitespace
processName.Otherany0.9858complex0.0041string0.0007Process0.0007boolean0.0007
.Punctuation
platformName.Otherany0.9656string0.0298boolean0.0019complex0.0009number0.0007
 Text.Whitespace
===Operator
 Text.Whitespace
'win32'Literal.String.Single
;Punctuation
\n\nText.Whitespace
// Regex to split a windows path into into [dir, root, basename, name, ext]Comment.Single
\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
splitWindowsReName.OtherRegExp0.8400string0.1155any0.0230string[]0.0068RegExpExecArray0.0018
 Text.Whitespace
=Operator
\n    Text.Whitespace
/^(((?:[a-zA-Z]:|[\\\/]{2}[^\\\/]+[\\\/]+[^\\\/]+)?[\\\/]?)(?:[^\\\/]*[\\\/])*)((\.{1,2}|[^\\\/]+?|)(\.[^.\/\\]*|))[\\\/]*$/Literal.String.Regex
;Punctuation
\n\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
win32Name.Other{}0.7223any0.1616complex0.0082any[]0.0048RegExp0.0026
 Text.Whitespace
=Operator
 Text.Whitespace
{Punctuation
}Punctuation
;Punctuation
\n\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
win32SplitPathName.Otherany0.6163string0.0403any[]0.0304RegExpExecArray0.0243{}0.0131
(Punctuation
filenameName.Otherstring0.8952any0.1012number0.0018boolean0.0004complex0.0002
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
returnKeyword
 Text.Whitespace
splitWindowsReName.Otherany0.5447RegExp0.3539string0.0275RegExpExecArray0.0106string[]0.0043
.Punctuation
execName.Otherany0.5494RegExpExecArray0.3592Promise<number>0.0104complex0.0104string0.0094
(Punctuation
filenameName.Otherstring0.7704any0.2274number0.0007complex0.0003string[]0.0002
)Punctuation
.Punctuation
sliceName.Otherany0.7029string0.2133any[]0.0241string[]0.0117complex0.0113
(Punctuation
1Literal.Number.Float
)Punctuation
;Punctuation
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
win32Name.Otherany0.8748RegExpExecArray0.0069complex0.0054any[]0.0028{}0.0014
.Punctuation
parseName.Otherany0.6232void0.0814boolean0.0524T0.0267string0.0136
 Text.Whitespace
=Operator
 Text.Whitespace
functionKeyword.Declaration
(Punctuation
pathStringName.Otherstring0.6368any0.3495number0.0019boolean0.0009any[]0.0008
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
typeofOperator.Word
 Text.Whitespace
pathStringName.Otherany0.5524string0.4294complex0.0037number0.0036{}0.0022
 Text.Whitespace
!==Operator
 Text.Whitespace
'string'Literal.String.Single
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
throwKeywordany0.7114complex0.1892{}0.0294string0.0193boolean0.0156
 Text.Whitespace
newOperator.Wordany0.4876complex0.1227boolean0.0885string0.0687{}0.0585
 Text.Whitespace
TypeErrorName.ExceptionTypeErrorConstructor0.9926ErrorConstructor0.0016BooleanConstructor0.0001NumberConstructor0.0001MapConstructor0.0001
(Punctuation
\n        Text.Whitespace
"Parameter 'pathString' must be a string, not "Literal.String.Double
 Text.Whitespace
+Operator
 Text.Whitespace
typeofOperator.Word
 Text.Whitespace
pathStringName.Otherany0.8564string0.1077never0.0043any[]0.0042complex0.0040
\n    Text.Whitespace
)Punctuation
;Punctuation
\n  Text.Whitespace
}Punctuation
\n  Text.Whitespace
varKeyword.Declaration
 Text.Whitespace
allPartsName.Otherany0.3698any[]0.2095string[]0.0669string0.0233complex0.0109
 Text.Whitespace
=Operator
 Text.Whitespace
win32SplitPathName.Otherany0.3394any[]0.2270string[]0.0878string0.0238complex0.0218
(Punctuation
pathStringName.Otherstring0.6401any0.3403number0.0044complex0.0015Error0.0013
)Punctuation
;Punctuation
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
allPartsName.Otherstring[]0.3401any0.3387any[]0.0858string0.0295RegExpExecArray0.0204
 Text.Whitespace
||Operator
 Text.Whitespace
allPartsName.Otherany0.5361string[]0.1614any[]0.1534string0.0214number[]0.0134
.Punctuation
lengthName.Othernumber0.8124any0.1826string0.0028complex0.0006boolean0.0006
 Text.Whitespace
!==Operator
 Text.Whitespace
5Literal.Number.Float
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
throwKeywordany0.6780complex0.2118string0.0268Error0.0175{}0.0169
 Text.Whitespace
newOperator.Wordany0.4648boolean0.0968complex0.0944string0.0839Error0.0323
 Text.Whitespace
TypeErrorName.ExceptionTypeErrorConstructor0.9900ErrorConstructor0.0018BooleanConstructor0.0002MapConstructor0.0001complex0.0001
(Punctuation
"Invalid path '"Literal.String.Double
 Text.Whitespace
+Operator
 Text.Whitespace
pathStringName.Otherstring0.5506any0.4386number0.0059never0.0008complex0.0007
 Text.Whitespace
+Operator
 Text.Whitespace
"'"Literal.String.Double
)Punctuation
;Punctuation
\n  Text.Whitespace
}Punctuation
\n  Text.Whitespace
returnKeyword
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
rootName.Otherany0.9223string0.0302any[]0.0055complex0.0023never0.0012
:Operator
 Text.Whitespace
allPartsKeyword.Typeany0.6675any[]0.1444string[]0.0430complex0.0391number[]0.0087
[Punctuation
1Literal.Number.Float
]Punctuation
,Punctuation
\n    Text.Whitespace
dirName.Otherany0.9766string0.0120number0.0047complex0.0013any[]0.0012
:Operator
 Text.Whitespace
allPartsKeyword.Typeany0.8381any[]0.0478string[]0.0313complex0.0145number[]0.0109
[Punctuation
0Literal.Number.Float
]Punctuation
 Text.Whitespace
===Operator
 Text.Whitespace
allPartsName.Otherany0.6344any[]0.1706string[]0.0664complex0.0245number[]0.0138
[Punctuation
1Literal.Number.Float
]Punctuation
 Text.Whitespace
?Operator
 Text.Whitespace
allPartsName.Otherany0.7489any[]0.1158string[]0.0389complex0.0243number[]0.0069
[Punctuation
0Literal.Number.Float
]Punctuation
 Text.Whitespace
:Operator
 Text.Whitespace
allPartsName.Otherany0.7721string[]0.0598any[]0.0579complex0.0189number[]0.0132
[Punctuation
0Literal.Number.Float
]Punctuation
.Punctuation
sliceName.Otherany0.8778string0.0590any[]0.0177complex0.0072string[]0.0048
(Punctuation
0Literal.Number.Float
,Punctuation
 Text.Whitespace
-Operator
1Literal.Number.Float
)Punctuation
,Punctuation
\n    Text.Whitespace
baseName.Otherany0.9652number0.0168string0.0104any[]0.0016complex0.0013
:Operator
 Text.Whitespace
allPartsKeyword.Typeany0.7696any[]0.0930complex0.0241number[]0.0172string[]0.0113
[Punctuation
2Literal.Number.Float
]Punctuation
,Punctuation
\n    Text.Whitespace
extName.Otherany0.9844string0.0036number0.0033complex0.0013never0.0003
:Operator
 Text.Whitespace
allPartsKeyword.Typeany0.7784any[]0.0916complex0.0243string[]0.0144number[]0.0105
[Punctuation
4Literal.Number.Float
]Punctuation
,Punctuation
\n    Text.Whitespace
nameName.Otherany0.9572string0.0367number0.0017any[]0.0012complex0.0011
:Operator
 Text.Whitespace
allPartsKeyword.Typeany0.7040any[]0.1353string[]0.0481complex0.0223number[]0.0127
[Punctuation
3Literal.Number.Float
]Punctuation
\n  Text.Whitespace
}Punctuation
;Punctuation
\nText.Whitespace
}Punctuation
;Punctuation
\n\n\n\nText.Whitespace
// Split a filename into [dir, root, basename, name, ext], unix versionComment.Single
\nText.Whitespace
// 'root' is just a slash, or nothing.Comment.Single
\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
splitPathReName.OtherRegExp0.7017string0.2144any0.0400string[]0.0184any[]0.0022
 Text.Whitespace
=Operator
\n    Text.Whitespace
/^((\/?)(?:[^\/]*\/)*)((\.{1,2}|[^\/]+?|)(\.[^.\/]*|))[\/]*$/Literal.String.Regex
;Punctuation
\nText.Whitespace
varKeyword.Declaration
 Text.Whitespace
posixName.Otherany0.8638{}0.0888complex0.0145any[]0.0064Object0.0037
 Text.Whitespace
=Operator
 Text.Whitespace
{Punctuation
}Punctuation
;Punctuation
\n\n\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
posixSplitPathName.Otherany0.6645any[]0.0395complex0.0266{}0.0181string0.0160
(Punctuation
filenameName.Otherstring0.7910any0.2044number0.0025boolean0.0004complex0.0003
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
returnKeyword
 Text.Whitespace
splitPathReName.Otherany0.7947RegExp0.1545string0.0143RegExpExecArray0.0038any[]0.0025
.Punctuation
execName.Otherany0.7551RegExpExecArray0.1770complex0.0095Promise<number>0.0092string0.0067
(Punctuation
filenameName.Otherstring0.6532any0.3445number0.0007complex0.0004{}0.0002
)Punctuation
.Punctuation
sliceName.Otherany0.7575string0.1757any[]0.0169string[]0.0124complex0.0091
(Punctuation
1Literal.Number.Float
)Punctuation
;Punctuation
\nText.Whitespace
}Punctuation
\n\n\nText.Whitespace
posixName.Otherany0.8396any[]0.0047Window0.0029this0.0026string[]0.0026
.Punctuation
parseName.Otherany0.6697void0.1038boolean0.0427complex0.0179T0.0178
 Text.Whitespace
=Operator
 Text.Whitespace
functionKeyword.Declaration
(Punctuation
pathStringName.Otherstring0.6024any0.3792number0.0023any[]0.0015boolean0.0013
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
typeofOperator.Word
 Text.Whitespace
pathStringName.Otherany0.5951string0.3842complex0.0050number0.0039{}0.0026
 Text.Whitespace
!==Operator
 Text.Whitespace
'string'Literal.String.Single
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
throwKeywordany0.6631complex0.2112{}0.0423string0.0193boolean0.0183
 Text.Whitespace
newOperator.Wordany0.4593complex0.1313boolean0.0799{}0.0671string0.0598
 Text.Whitespace
TypeErrorName.ExceptionTypeErrorConstructor0.9934ErrorConstructor0.0013BooleanConstructor0.0001undefined0.0001MapConstructor0.0001
(Punctuation
\n        Text.Whitespace
"Parameter 'pathString' must be a string, not "Literal.String.Double
 Text.Whitespace
+Operator
 Text.Whitespace
typeofOperator.Word
 Text.Whitespace
pathStringName.Otherany0.8818string0.0811any[]0.0051{}0.0042complex0.0038
\n    Text.Whitespace
)Punctuation
;Punctuation
\n  Text.Whitespace
}Punctuation
\n  Text.Whitespace
varKeyword.Declaration
 Text.Whitespace
allPartsName.Otherany0.3573any[]0.2625string[]0.0647string0.0180complex0.0112
 Text.Whitespace
=Operator
 Text.Whitespace
posixSplitPathName.Otherany0.3134any[]0.2872string[]0.0868complex0.0201string0.0172
(Punctuation
pathStringName.Otherstring0.5987any0.3811number0.0039complex0.0015Error0.0013
)Punctuation
;Punctuation
\n  Text.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
!Operator
allPartsName.Otherany0.3788string[]0.3111any[]0.1036string0.0262number[]0.0156
 Text.Whitespace
||Operator
 Text.Whitespace
allPartsName.Otherany0.5084any[]0.1768string[]0.1646string0.0173number[]0.0153
.Punctuation
lengthName.Othernumber0.7809any0.2138string0.0031complex0.0006boolean0.0006
 Text.Whitespace
!==Operator
 Text.Whitespace
5Literal.Number.Float
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
throwKeywordany0.6555complex0.2232string0.0256{}0.0210Error0.0204
 Text.Whitespace
newOperator.Wordany0.4484complex0.0876boolean0.0848string0.0741{}0.0348
 Text.Whitespace
TypeErrorName.ExceptionTypeErrorConstructor0.9913ErrorConstructor0.0015BooleanConstructor0.0002undefined0.0001MapConstructor0.0001
(Punctuation
"Invalid path '"Literal.String.Double
 Text.Whitespace
+Operator
 Text.Whitespace
pathStringName.Otherstring0.5619any0.4278number0.0056never0.0006complex0.0006
 Text.Whitespace
+Operator
 Text.Whitespace
"'"Literal.String.Double
)Punctuation
;Punctuation
\n  Text.Whitespace
}Punctuation
\n  \n  Text.Whitespace
returnKeyword
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
rootName.Otherany0.9193string0.0241any[]0.0061complex0.0020void0.0011
:Operator
 Text.Whitespace
allPartsKeyword.Typeany0.6932any[]0.1436string[]0.0332complex0.0330number[]0.0073
[Punctuation
1Literal.Number.Float
]Punctuation
,Punctuation
\n    Text.Whitespace
dirName.Otherany0.9787string0.0136number0.0018any[]0.0013complex0.0011
:Operator
 Text.Whitespace
allPartsKeyword.Typeany0.7907any[]0.0617string[]0.0513complex0.0146number[]0.0081
[Punctuation
0Literal.Number.Float
]Punctuation
.Punctuation
sliceName.Otherany0.8330string0.0633any[]0.0331complex0.0113string[]0.0076
(Punctuation
0Literal.Number.Float
,Punctuation
 Text.Whitespace
-Operator
1Literal.Number.Float
)Punctuation
,Punctuation
\n    Text.Whitespace
baseName.Otherany0.9641number0.0177string0.0087any[]0.0023complex0.0013
:Operator
 Text.Whitespace
allPartsKeyword.Typeany0.7414any[]0.1076complex0.0222number[]0.0176string[]0.0105
[Punctuation
2Literal.Number.Float
]Punctuation
,Punctuation
\n    Text.Whitespace
extName.Otherany0.9862number0.0029string0.0027complex0.0012any[]0.0003
:Operator
 Text.Whitespace
allPartsKeyword.Typeany0.7576any[]0.1028complex0.0250string[]0.0124number[]0.0117
[Punctuation
4Literal.Number.Float
]Punctuation
,Punctuation
\n    Text.Whitespace
nameName.Otherany0.9683string0.0255any[]0.0018number0.0011complex0.0009
:Operator
 Text.Whitespace
allPartsKeyword.Typeany0.6897any[]0.1528string[]0.0453complex0.0179number[]0.0114
[Punctuation
3Literal.Number.Float
]Punctuation
,Punctuation
\n  Text.Whitespace
}Punctuation
;Punctuation
\nText.Whitespace
}Punctuation
;Punctuation
\n\n\nText.Whitespace
ifKeyword
 Text.Whitespace
(Punctuation
isWindowsName.Otherboolean0.8716any0.0910false0.0067complex0.0031string0.0021
)Punctuation
\n  Text.Whitespace
moduleKeyword.Reserved
.exportsName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
win32Name.Otherany0.9158complex0.0169any[]0.0025string0.0005RegExpExecArray0.0004
.Punctuation
parseName.Otherany0.6669string0.0621boolean0.0215any[]0.0121complex0.0096
;Punctuation
\nText.Whitespace
elseKeyword
 Text.Whitespace
/* posix */Comment.Multiline
\n  Text.Whitespace
moduleKeyword.Reserved
.exportsName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
posixName.Otherany0.9810any[]0.0014complex0.0014string0.0006string[]0.0004
.Punctuation
parseName.Otherany0.7462string0.0195any[]0.0146boolean0.0118complex0.0088
;Punctuation
\n\nText.Whitespace
moduleKeyword.Reserved
.exports.posixName.Other
 Text.Whitespace
=Operator
 Text.Whitespace
posixName.Otherany0.9718complex0.0019any[]0.0016string0.0008string[]0.0005
.Punctuation
parseName.Otherany0.7984string0.0185any[]0.0118complex0.0114boolean0.0109
;Punctuation
\nText.Whitespace
moduleKeyword.Reserved
.exports.win32Name.Other
 Text.Whitespace
=Operator
 Text.Whitespace
win32Name.Otherany0.9430complex0.0168any[]0.0025string0.0005{}0.0005
.Punctuation
parseName.Otherany0.8577string0.0222complex0.0115boolean0.0088any[]0.0080
;Punctuation
\nText.Whitespace
