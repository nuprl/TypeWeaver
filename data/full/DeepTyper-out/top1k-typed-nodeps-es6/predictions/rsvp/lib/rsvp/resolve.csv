importKeyword
 Text.Whitespace
PromiseName.BuiltinPromiseConstructor0.9537any0.0319complex0.0036Promise<any>0.0022void0.0013
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./promise'Literal.String.Single
;Punctuation
\n\nText.Whitespace
/**\n  This is a convenient alias for `Promise.resolve`.\n\n  @method resolve\n  @public\n  @static\n  @for rsvp\n  @param {*} value value that the returned promise will be resolved with\n  @param {String} [label] optional string for identifying the returned promise.\n  Useful for tooling.\n  @return {Promise} a promise that will become fulfilled with the given\n  `value`\n*/Comment.Multiline
\nText.Whitespace
exportKeyword
 Text.Whitespace
defaultKeyword
 Text.Whitespace
functionKeyword.Declaration
 Text.Whitespace
resolveName.Otherany0.5234Promise<any>0.1255Promise<{}>0.0575complex0.0364void0.0352
(Punctuation
valueName.Otherstring0.5010any0.3557number0.0876boolean0.0057Promise<any>0.0045
,Punctuation
 Text.Whitespace
labelName.Otherstring0.9060any0.0676number0.0051Date0.0010boolean0.0010
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
returnKeyword
 Text.Whitespace
PromiseName.BuiltinPromiseConstructor0.9935any0.0053Promise<any>0.0002string0.0002Promise<{}>0.0001
.Punctuation
resolveName.Othercomplex0.9565any0.0270void0.0074string0.0032T0.0011
(Punctuation
valueName.Otherstring0.5371any0.3845number0.0282boolean0.0047Object0.0041
,Punctuation
 Text.Whitespace
labelName.Otherstring0.9010any0.0881number0.0045boolean0.0006void0.0006
)Punctuation
;Punctuation
\nText.Whitespace
}Punctuation
\nText.Whitespace
