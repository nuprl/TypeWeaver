importKeyword
 Text.Whitespace
{Punctuation
 Text.Whitespace
testName.Otherany0.8366complex0.1332boolean0.0117void0.0063string0.0030
 Text.Whitespace
}Punctuation
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'uvu'Literal.String.Single
;Punctuation
\nText.Whitespace
importKeyword
 Text.Whitespace
{Punctuation
 Text.Whitespace
okName.Otherany0.8560void0.1180boolean0.0095Function0.0038complex0.0033
 Text.Whitespace
}Punctuation
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'uvu/assert'Literal.String.Single
;Punctuation
\nText.Whitespace
importKeyword
 Text.Whitespace
{Punctuation
 Text.Whitespace
encodeName.Othercomplex0.5703any0.1342string0.0504string[]0.0301{}0.0050
,Punctuation
 Text.Whitespace
decodeName.Otherstring0.6382any0.2498complex0.0427string[]0.0340number0.0050
 Text.Whitespace
}Punctuation
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./base62'Literal.String.Single
;Punctuation
\n\nText.Whitespace
functionKeyword.Declaration
 Text.Whitespace
testEqualityName.Otherstring0.2672void0.1127complex0.0980boolean0.0642number0.0570
(Punctuation
numName.Othernumber0.9824any0.0095string0.0051boolean0.0019complex0.0001
)Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
encodedName.Otherstring0.5115any0.1680number0.1133boolean0.0273complex0.0123
 Text.Whitespace
=Operator
 Text.Whitespace
encodeName.Otherstring0.2200complex0.2002any0.1154string[]0.0719number0.0186
(Punctuation
numName.Othernumber0.9773any0.0119string0.0074boolean0.0017complex0.0004
)Punctuation
\n  Text.Whitespace
letKeyword.Declaration
 Text.Whitespace
decodedName.Otherstring0.9120any0.0464number0.0284boolean0.0032complex0.0022
 Text.Whitespace
=Operator
 Text.Whitespace
decodeName.Otherstring0.8158any0.1242number0.0160string[]0.0150complex0.0056
(Punctuation
encodedName.Otherstring0.2403any0.1405number0.0716Buffer0.0242ArrayBuffer0.0218
)Punctuation
\n  Text.Whitespace
returnKeyword
 Text.Whitespace
decodedName.Otherstring0.6539any0.2245number0.0937complex0.0028string[]0.0015
 Text.Whitespace
===Operator
 Text.Whitespace
numName.Othernumber0.9645any0.0243string0.0091boolean0.0008complex0.0003
\nText.Whitespace
}Punctuation
\n\nText.Whitespace
testName.Otherany0.8539complex0.0947void0.0228number0.0039ITestDefinition0.0032
(Punctuation
'should encode and decode numbers'Literal.String.Single
,Punctuation
 Text.Whitespace
(Punctuation
)Punctuation
 Text.Whitespace
=>Punctuation
 Text.Whitespace
{Punctuation
\n  Text.Whitespace
forKeyword
 Text.Whitespace
(Punctuation
letKeyword.Declaration
 Text.Whitespace
numName.Othernumber0.9964any0.0025string0.0004boolean0.0004void0.0000
 Text.Whitespace
=Operator
 Text.Whitespace
0Literal.Number.Float
;Punctuation
 Text.Whitespace
numName.Othernumber0.9888any0.0086boolean0.0011string0.0007void0.0005
 Text.Whitespace
<Operator
 Text.Whitespace
5000Literal.Number.Float
;Punctuation
 Text.Whitespace
numName.Othernumber0.9914any0.0057boolean0.0012string0.0008void0.0005
++Operator
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
okName.Otherany0.6281void0.3240boolean0.0241Function0.0035Promise<void>0.0028
(Punctuation
testEqualityName.Otherboolean0.4951void0.2149complex0.0589string0.0564number0.0536
(Punctuation
numName.Othernumber0.9776any0.0148string0.0037boolean0.0016void0.0005
)Punctuation
)Punctuation
\n  Text.Whitespace
}Punctuation
\nText.Whitespace
}Punctuation
)Punctuation
\n\nText.Whitespace
testName.Otherany0.6738complex0.2238void0.0066number0.0033Logger0.0031
.Punctuation
runName.Otherany0.5580void0.1469T0.0919Promise<void>0.0900Promise<any>0.0124
(Punctuation
)Punctuation
\nText.Whitespace
