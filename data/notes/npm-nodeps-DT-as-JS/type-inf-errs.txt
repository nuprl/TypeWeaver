======================================== @xtuc_long/dist/long.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fe7463dfa29]                                                       + 0x7c5a29
[0x7fe7465a0289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fe7ca9ca741]                                                       + 0x2d7741
[0x7fe7cf2d19e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fe7cf357084]                                                       + 0x153084
[0x7fe7cf35c50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe7cf356b9a]                                                       + 0x152b9a
[0x7fe7cf3571b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fe7cf2a9f1e]                                                       + 0xa5f1e
[0x7fe7cf27af2b]    PyObject_Call                                      + 0x4b
[0x7fe7cf35c770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fe7cf356b9a]                                                       + 0x152b9a
[0x7fe7cf356f94]                                                       + 0x152f94
[0x7fe7cf35c50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe7cf356b9a]                                                       + 0x152b9a
[0x7fe7cf356f94]                                                       + 0x152f94
[0x7fe7cf35c50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe7cf356193]                                                       + 0x152193
[0x7fe7cf35715c]                                                       + 0x15315c
[0x7fe7cf35c50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe7cf356b9a]                                                       + 0x152b9a
[0x7fe7cf356f94]                                                       + 0x152f94
[0x7fe7cf35c50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe7cf356b9a]                                                       + 0x152b9a
[0x7fe7cf3571b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fe7cf3571df]    PyEval_EvalCode                                    + 0x1f
[0x7fe7cf38c3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fe7cf38c56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fe7cf3a68e8]    Py_Main                                            + 0xff8
[0x559808a5e2b8]    main                                               + 0x178
[0x7fe7cf01b0b3]    __libc_start_main                                  + 0xf3
[0x559808a5e36e]    _start                                             + 0x2e


======================================== @xtuc_long/src/long.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fba73a28a29]                                                       + 0x7c5a29
[0x7fba73be9289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fbaf8013741]                                                       + 0x2d7741
[0x7fbafc91a9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fbafc9a0084]                                                       + 0x153084
[0x7fbafc9a550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fbafc99fb9a]                                                       + 0x152b9a
[0x7fbafc9a01b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fbafc8f2f1e]                                                       + 0xa5f1e
[0x7fbafc8c3f2b]    PyObject_Call                                      + 0x4b
[0x7fbafc9a5770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fbafc99fb9a]                                                       + 0x152b9a
[0x7fbafc99ff94]                                                       + 0x152f94
[0x7fbafc9a550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fbafc99fb9a]                                                       + 0x152b9a
[0x7fbafc99ff94]                                                       + 0x152f94
[0x7fbafc9a550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fbafc99f193]                                                       + 0x152193
[0x7fbafc9a015c]                                                       + 0x15315c
[0x7fbafc9a550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fbafc99fb9a]                                                       + 0x152b9a
[0x7fbafc99ff94]                                                       + 0x152f94
[0x7fbafc9a550d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fbafc99fb9a]                                                       + 0x152b9a
[0x7fbafc9a01b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fbafc9a01df]    PyEval_EvalCode                                    + 0x1f
[0x7fbafc9d53d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fbafc9d556f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fbafc9ef8e8]    Py_Main                                            + 0xff8
[0x55fcefd782b8]    main                                               + 0x178
[0x7fbafc6640b3]    __libc_start_main                                  + 0xf3
[0x55fcefd7836e]    _start                                             + 0x2e


======================================== async/dist/async.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fa223a2fa29]                                                       + 0x7c5a29
[0x7fa223bf0289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fa2a801a741]                                                       + 0x2d7741
[0x7fa2ac9219e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fa2ac9a7084]                                                       + 0x153084
[0x7fa2ac9ac50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa2ac9a6b9a]                                                       + 0x152b9a
[0x7fa2ac9a71b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fa2ac8f9f1e]                                                       + 0xa5f1e
[0x7fa2ac8caf2b]    PyObject_Call                                      + 0x4b
[0x7fa2ac9ac770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fa2ac9a6b9a]                                                       + 0x152b9a
[0x7fa2ac9a6f94]                                                       + 0x152f94
[0x7fa2ac9ac50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa2ac9a6b9a]                                                       + 0x152b9a
[0x7fa2ac9a6f94]                                                       + 0x152f94
[0x7fa2ac9ac50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa2ac9a6193]                                                       + 0x152193
[0x7fa2ac9a715c]                                                       + 0x15315c
[0x7fa2ac9ac50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa2ac9a6b9a]                                                       + 0x152b9a
[0x7fa2ac9a6f94]                                                       + 0x152f94
[0x7fa2ac9ac50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa2ac9a6b9a]                                                       + 0x152b9a
[0x7fa2ac9a71b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fa2ac9a71df]    PyEval_EvalCode                                    + 0x1f
[0x7fa2ac9dc3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fa2ac9dc56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fa2ac9f68e8]    Py_Main                                            + 0xff8
[0x559c629472b8]    main                                               + 0x178
[0x7fa2ac66b0b3]    __libc_start_main                                  + 0xf3
[0x559c6294736e]    _start                                             + 0x2e


======================================== async/dist/async.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f8580019a29]                                                       + 0x7c5a29
[0x7f85801da289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f85810f7741]                                                       + 0x2d7741
[0x7f85859fe9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f8585a84084]                                                       + 0x153084
[0x7f8585a8950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f8585a83b9a]                                                       + 0x152b9a
[0x7f8585a841b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f85859d6f1e]                                                       + 0xa5f1e
[0x7f85859a7f2b]    PyObject_Call                                      + 0x4b
[0x7f8585a89770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f8585a83b9a]                                                       + 0x152b9a
[0x7f8585a83f94]                                                       + 0x152f94
[0x7f8585a8950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f8585a83b9a]                                                       + 0x152b9a
[0x7f8585a83f94]                                                       + 0x152f94
[0x7f8585a8950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f8585a83193]                                                       + 0x152193
[0x7f8585a8415c]                                                       + 0x15315c
[0x7f8585a8950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f8585a83b9a]                                                       + 0x152b9a
[0x7f8585a83f94]                                                       + 0x152f94
[0x7f8585a8950d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f8585a83b9a]                                                       + 0x152b9a
[0x7f8585a841b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f8585a841df]    PyEval_EvalCode                                    + 0x1f
[0x7f8585ab93d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f8585ab956f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f8585ad38e8]    Py_Main                                            + 0xff8
[0x55d4b1e942b8]    main                                               + 0x178
[0x7f85857480b3]    __libc_start_main                                  + 0xf3
[0x55d4b1e9436e]    _start                                             + 0x2e


======================================== commander/lib/command.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f804156ba29]                                                       + 0x7c5a29
[0x7f804172c289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f8042649741]                                                       + 0x2d7741
[0x7f8046f509e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f8046fd6084]                                                       + 0x153084
[0x7f8046fdb50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f8046fd5b9a]                                                       + 0x152b9a
[0x7f8046fd61b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f8046f28f1e]                                                       + 0xa5f1e
[0x7f8046ef9f2b]    PyObject_Call                                      + 0x4b
[0x7f8046fdb770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f8046fd5b9a]                                                       + 0x152b9a
[0x7f8046fd5f94]                                                       + 0x152f94
[0x7f8046fdb50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f8046fd5b9a]                                                       + 0x152b9a
[0x7f8046fd5f94]                                                       + 0x152f94
[0x7f8046fdb50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f8046fd5193]                                                       + 0x152193
[0x7f8046fd615c]                                                       + 0x15315c
[0x7f8046fdb50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f8046fd5b9a]                                                       + 0x152b9a
[0x7f8046fd5f94]                                                       + 0x152f94
[0x7f8046fdb50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f8046fd5b9a]                                                       + 0x152b9a
[0x7f8046fd61b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f8046fd61df]    PyEval_EvalCode                                    + 0x1f
[0x7f804700b3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f804700b56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f80470258e8]    Py_Main                                            + 0xff8
[0x5621382e22b8]    main                                               + 0x178
[0x7f8046c9a0b3]    __libc_start_main                                  + 0xf3
[0x5621382e236e]    _start                                             + 0x2e


======================================== date-fns/esm/locale/types.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7f7ee6664a29]                                                       + 0x7c5a29
[0x7f7ee67ead45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7f7f6aab33a8]                                                       + 0x13b3a8
[0x7f7f6aab5065]                                                       + 0x13d065
[0x7f7f6f556bd9]    PyCFunction_Call                                   + 0xc9
[0x7f7f6f5e36e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7f7f6f5dbb9a]                                                       + 0x152b9a
[0x7f7f6f5e4aa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7f7f6f500151]    _PyObject_FastCallDict                             + 0x131
[0x7f7f6f5002a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7f7f6f4fff2b]    PyObject_Call                                      + 0x4b
[0x7f7f6f571d7f]                                                       + 0xe8d7f
[0x7f7f6f56d149]                                                       + 0xe4149
[0x7f7f6f5000ad]    _PyObject_FastCallDict                             + 0x8d
[0x7f7f6f5dbd78]                                                       + 0x152d78
[0x7f7f6f5e150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7f6f5dbb9a]                                                       + 0x152b9a
[0x7f7f6f5dc1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f7f6f52ef1e]                                                       + 0xa5f1e
[0x7f7f6f4fff2b]    PyObject_Call                                      + 0x4b
[0x7f7f6f5e1770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f7f6f5dbb9a]                                                       + 0x152b9a
[0x7f7f6f5dbf94]                                                       + 0x152f94
[0x7f7f6f5e1867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f7f6f5dbb9a]                                                       + 0x152b9a
[0x7f7f6f5dc1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f7f6f52ef1e]                                                       + 0xa5f1e
[0x7f7f6f4fff2b]    PyObject_Call                                      + 0x4b
[0x7f7f6f5e1770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f7f6f5dbb9a]                                                       + 0x152b9a
[0x7f7f6f5dbf94]                                                       + 0x152f94
[0x7f7f6f5e1867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7f7f6f5dbb9a]                                                       + 0x152b9a
[0x7f7f6f5dbf94]                                                       + 0x152f94
[0x7f7f6f5e150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7f6f5dbb9a]                                                       + 0x152b9a
[0x7f7f6f5dc1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f7f6f52ef1e]                                                       + 0xa5f1e
[0x7f7f6f4fff2b]    PyObject_Call                                      + 0x4b
[0x7f7f6f5e1770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f7f6f5dbb9a]                                                       + 0x152b9a
[0x7f7f6f5dbf94]                                                       + 0x152f94
[0x7f7f6f5e150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7f6f5dbb9a]                                                       + 0x152b9a
[0x7f7f6f5dbf94]                                                       + 0x152f94
[0x7f7f6f5e150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7f6f5dbb9a]                                                       + 0x152b9a
[0x7f7f6f5dbf94]                                                       + 0x152f94
[0x7f7f6f5e150d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f7f6f5dbb9a]                                                       + 0x152b9a
[0x7f7f6f5dc1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f7f6f5dc1df]    PyEval_EvalCode                                    + 0x1f
[0x7f7f6f6113d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f7f6f61156f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f7f6f62b8e8]    Py_Main                                            + 0xff8
[0x562fe135d2b8]    main                                               + 0x178
[0x7f7f6f2a00b3]    __libc_start_main                                  + 0xf3
[0x562fe135d36e]    _start                                             + 0x2e


======================================== date-fns/esm/parse/_lib/parsers/index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f6c42961a29]                                                       + 0x7c5a29
[0x7f6c42b22289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f6cc6f4c741]                                                       + 0x2d7741
[0x7f6ccb8539e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f6ccb8d9084]                                                       + 0x153084
[0x7f6ccb8de50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6ccb8d8b9a]                                                       + 0x152b9a
[0x7f6ccb8d91b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f6ccb82bf1e]                                                       + 0xa5f1e
[0x7f6ccb7fcf2b]    PyObject_Call                                      + 0x4b
[0x7f6ccb8de770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f6ccb8d8b9a]                                                       + 0x152b9a
[0x7f6ccb8d8f94]                                                       + 0x152f94
[0x7f6ccb8de50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6ccb8d8b9a]                                                       + 0x152b9a
[0x7f6ccb8d8f94]                                                       + 0x152f94
[0x7f6ccb8de50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6ccb8d8193]                                                       + 0x152193
[0x7f6ccb8d915c]                                                       + 0x15315c
[0x7f6ccb8de50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6ccb8d8b9a]                                                       + 0x152b9a
[0x7f6ccb8d8f94]                                                       + 0x152f94
[0x7f6ccb8de50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6ccb8d8b9a]                                                       + 0x152b9a
[0x7f6ccb8d91b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f6ccb8d91df]    PyEval_EvalCode                                    + 0x1f
[0x7f6ccb90e3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f6ccb90e56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f6ccb9288e8]    Py_Main                                            + 0xff8
[0x55bedcf792b8]    main                                               + 0x178
[0x7f6ccb59d0b3]    __libc_start_main                                  + 0xf3
[0x55bedcf7936e]    _start                                             + 0x2e


======================================== date-fns/esm/types.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 187, in run_seq
    mb = sIn.next_minibatch(N)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in create
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 457, in <listcomp>
    for sample in data]
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 171, in from_data
    ndav = NDArrayView.from_csr(data, device, borrow=borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 141, in from_csr
    read_only, borrow)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py.py", line 1140, in __init__
    this = _cntk_py.new_NDArrayView(*args)
ValueError: Invalid sparse CSC format data specified for construction of NDArrayView with shape '[0 x 40195]'; either one of the specified buffers is null or the count (0) of non-zero values is invalid.

[CALL STACK]
[0x7fce179fda29]                                                       + 0x7c5a29
[0x7fce17b83d45]    CNTK::NDArrayView::  NDArrayView  (CNTK::DataType,  CNTK::NDShape const&,  int const*,  int const*,  void const*,  unsigned long,  CNTK::DeviceDescriptor const&,  bool) + 0xf5
[0x7fce9be4c3a8]                                                       + 0x13b3a8
[0x7fce9be4e065]                                                       + 0x13d065
[0x7fcea08efbd9]    PyCFunction_Call                                   + 0xc9
[0x7fcea097c6e2]    _PyEval_EvalFrameDefault                           + 0x6f42
[0x7fcea0974b9a]                                                       + 0x152b9a
[0x7fcea097daa9]    _PyFunction_FastCallDict                           + 0x1f9
[0x7fcea0899151]    _PyObject_FastCallDict                             + 0x131
[0x7fcea08992a5]    _PyObject_Call_Prepend                             + 0xf5
[0x7fcea0898f2b]    PyObject_Call                                      + 0x4b
[0x7fcea090ad7f]                                                       + 0xe8d7f
[0x7fcea0906149]                                                       + 0xe4149
[0x7fcea08990ad]    _PyObject_FastCallDict                             + 0x8d
[0x7fcea0974d78]                                                       + 0x152d78
[0x7fcea097a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fcea0974b9a]                                                       + 0x152b9a
[0x7fcea09751b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fcea08c7f1e]                                                       + 0xa5f1e
[0x7fcea0898f2b]    PyObject_Call                                      + 0x4b
[0x7fcea097a770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fcea0974b9a]                                                       + 0x152b9a
[0x7fcea0974f94]                                                       + 0x152f94
[0x7fcea097a867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7fcea0974b9a]                                                       + 0x152b9a
[0x7fcea09751b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fcea08c7f1e]                                                       + 0xa5f1e
[0x7fcea0898f2b]    PyObject_Call                                      + 0x4b
[0x7fcea097a770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fcea0974b9a]                                                       + 0x152b9a
[0x7fcea0974f94]                                                       + 0x152f94
[0x7fcea097a867]    _PyEval_EvalFrameDefault                           + 0x50c7
[0x7fcea0974b9a]                                                       + 0x152b9a
[0x7fcea0974f94]                                                       + 0x152f94
[0x7fcea097a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fcea0974b9a]                                                       + 0x152b9a
[0x7fcea09751b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fcea08c7f1e]                                                       + 0xa5f1e
[0x7fcea0898f2b]    PyObject_Call                                      + 0x4b
[0x7fcea097a770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fcea0974b9a]                                                       + 0x152b9a
[0x7fcea0974f94]                                                       + 0x152f94
[0x7fcea097a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fcea0974b9a]                                                       + 0x152b9a
[0x7fcea0974f94]                                                       + 0x152f94
[0x7fcea097a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fcea0974b9a]                                                       + 0x152b9a
[0x7fcea0974f94]                                                       + 0x152f94
[0x7fcea097a50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fcea0974b9a]                                                       + 0x152b9a
[0x7fcea09751b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fcea09751df]    PyEval_EvalCode                                    + 0x1f
[0x7fcea09aa3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fcea09aa56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fcea09c48e8]    Py_Main                                            + 0xff8
[0x55b9ce56b2b8]    main                                               + 0x178
[0x7fcea06390b3]    __libc_start_main                                  + 0xf3
[0x55b9ce56b36e]    _start                                             + 0x2e


======================================== date-fns/fp/index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f2ac25e3a29]                                                       + 0x7c5a29
[0x7f2ac27a4289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f2b46bce741]                                                       + 0x2d7741
[0x7f2b4b4d59e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f2b4b55b084]                                                       + 0x153084
[0x7f2b4b56050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f2b4b55ab9a]                                                       + 0x152b9a
[0x7f2b4b55b1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f2b4b4adf1e]                                                       + 0xa5f1e
[0x7f2b4b47ef2b]    PyObject_Call                                      + 0x4b
[0x7f2b4b560770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f2b4b55ab9a]                                                       + 0x152b9a
[0x7f2b4b55af94]                                                       + 0x152f94
[0x7f2b4b56050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f2b4b55ab9a]                                                       + 0x152b9a
[0x7f2b4b55af94]                                                       + 0x152f94
[0x7f2b4b56050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f2b4b55a193]                                                       + 0x152193
[0x7f2b4b55b15c]                                                       + 0x15315c
[0x7f2b4b56050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f2b4b55ab9a]                                                       + 0x152b9a
[0x7f2b4b55af94]                                                       + 0x152f94
[0x7f2b4b56050d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f2b4b55ab9a]                                                       + 0x152b9a
[0x7f2b4b55b1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f2b4b55b1df]    PyEval_EvalCode                                    + 0x1f
[0x7f2b4b5903d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f2b4b59056f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f2b4b5aa8e8]    Py_Main                                            + 0xff8
[0x559210ed22b8]    main                                               + 0x178
[0x7f2b4b21f0b3]    __libc_start_main                                  + 0xf3
[0x559210ed236e]    _start                                             + 0x2e


======================================== date-fns/index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7faff8daaa29]                                                       + 0x7c5a29
[0x7faff8f6b289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fb07d395741]                                                       + 0x2d7741
[0x7fb081c9c9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fb081d22084]                                                       + 0x153084
[0x7fb081d2750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb081d21b9a]                                                       + 0x152b9a
[0x7fb081d221b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fb081c74f1e]                                                       + 0xa5f1e
[0x7fb081c45f2b]    PyObject_Call                                      + 0x4b
[0x7fb081d27770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fb081d21b9a]                                                       + 0x152b9a
[0x7fb081d21f94]                                                       + 0x152f94
[0x7fb081d2750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb081d21b9a]                                                       + 0x152b9a
[0x7fb081d21f94]                                                       + 0x152f94
[0x7fb081d2750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb081d21193]                                                       + 0x152193
[0x7fb081d2215c]                                                       + 0x15315c
[0x7fb081d2750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb081d21b9a]                                                       + 0x152b9a
[0x7fb081d21f94]                                                       + 0x152f94
[0x7fb081d2750d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb081d21b9a]                                                       + 0x152b9a
[0x7fb081d221b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fb081d221df]    PyEval_EvalCode                                    + 0x1f
[0x7fb081d573d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fb081d5756f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fb081d718e8]    Py_Main                                            + 0xff8
[0x55888ea0f2b8]    main                                               + 0x178
[0x7fb0819e60b3]    __libc_start_main                                  + 0xf3
[0x55888ea0f36e]    _start                                             + 0x2e


======================================== date-fns/parse/_lib/parsers/index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f3c88e77a29]                                                       + 0x7c5a29
[0x7f3c89038289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f3d0d462741]                                                       + 0x2d7741
[0x7f3d11d699e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f3d11def084]                                                       + 0x153084
[0x7f3d11df450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f3d11deeb9a]                                                       + 0x152b9a
[0x7f3d11def1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f3d11d41f1e]                                                       + 0xa5f1e
[0x7f3d11d12f2b]    PyObject_Call                                      + 0x4b
[0x7f3d11df4770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f3d11deeb9a]                                                       + 0x152b9a
[0x7f3d11deef94]                                                       + 0x152f94
[0x7f3d11df450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f3d11deeb9a]                                                       + 0x152b9a
[0x7f3d11deef94]                                                       + 0x152f94
[0x7f3d11df450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f3d11dee193]                                                       + 0x152193
[0x7f3d11def15c]                                                       + 0x15315c
[0x7f3d11df450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f3d11deeb9a]                                                       + 0x152b9a
[0x7f3d11deef94]                                                       + 0x152f94
[0x7f3d11df450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f3d11deeb9a]                                                       + 0x152b9a
[0x7f3d11def1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f3d11def1df]    PyEval_EvalCode                                    + 0x1f
[0x7f3d11e243d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f3d11e2456f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f3d11e3e8e8]    Py_Main                                            + 0xff8
[0x562ad189b2b8]    main                                               + 0x178
[0x7f3d11ab30b3]    __libc_start_main                                  + 0xf3
[0x562ad189b36e]    _start                                             + 0x2e


======================================== functional-red-black-tree/rbtree.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f151b8f5a29]                                                       + 0x7c5a29
[0x7f151bab6289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f159fee0741]                                                       + 0x2d7741
[0x7f15a47e79e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f15a486d084]                                                       + 0x153084
[0x7f15a487250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f15a486cb9a]                                                       + 0x152b9a
[0x7f15a486d1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f15a47bff1e]                                                       + 0xa5f1e
[0x7f15a4790f2b]    PyObject_Call                                      + 0x4b
[0x7f15a4872770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f15a486cb9a]                                                       + 0x152b9a
[0x7f15a486cf94]                                                       + 0x152f94
[0x7f15a487250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f15a486cb9a]                                                       + 0x152b9a
[0x7f15a486cf94]                                                       + 0x152f94
[0x7f15a487250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f15a486c193]                                                       + 0x152193
[0x7f15a486d15c]                                                       + 0x15315c
[0x7f15a487250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f15a486cb9a]                                                       + 0x152b9a
[0x7f15a486cf94]                                                       + 0x152f94
[0x7f15a487250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f15a486cb9a]                                                       + 0x152b9a
[0x7f15a486d1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f15a486d1df]    PyEval_EvalCode                                    + 0x1f
[0x7f15a48a23d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f15a48a256f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f15a48bc8e8]    Py_Main                                            + 0xff8
[0x5597aa4e32b8]    main                                               + 0x178
[0x7f15a45310b3]    __libc_start_main                                  + 0xf3
[0x5597aa4e336e]    _start                                             + 0x2e


======================================== html-entities/lib/named-references.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fe2033cba29]                                                       + 0x7c5a29
[0x7fe20358c289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fe2879b6741]                                                       + 0x2d7741
[0x7fe28c2bd9e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fe28c343084]                                                       + 0x153084
[0x7fe28c34850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe28c342b9a]                                                       + 0x152b9a
[0x7fe28c3431b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fe28c295f1e]                                                       + 0xa5f1e
[0x7fe28c266f2b]    PyObject_Call                                      + 0x4b
[0x7fe28c348770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fe28c342b9a]                                                       + 0x152b9a
[0x7fe28c342f94]                                                       + 0x152f94
[0x7fe28c34850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe28c342b9a]                                                       + 0x152b9a
[0x7fe28c342f94]                                                       + 0x152f94
[0x7fe28c34850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe28c342193]                                                       + 0x152193
[0x7fe28c34315c]                                                       + 0x15315c
[0x7fe28c34850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe28c342b9a]                                                       + 0x152b9a
[0x7fe28c342f94]                                                       + 0x152f94
[0x7fe28c34850d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fe28c342b9a]                                                       + 0x152b9a
[0x7fe28c3431b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fe28c3431df]    PyEval_EvalCode                                    + 0x1f
[0x7fe28c3783d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fe28c37856f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fe28c3928e8]    Py_Main                                            + 0xff8
[0x56044cd6f2b8]    main                                               + 0x178
[0x7fe28c0070b3]    __libc_start_main                                  + 0xf3
[0x56044cd6f36e]    _start                                             + 0x2e


======================================== ipaddr.js/ipaddr.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fb0cfda0a29]                                                       + 0x7c5a29
[0x7fb0cff61289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fb0e9fa2741]                                                       + 0x2d7741
[0x7fb0ee8a99e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fb0ee92f084]                                                       + 0x153084
[0x7fb0ee93450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb0ee92eb9a]                                                       + 0x152b9a
[0x7fb0ee92f1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fb0ee881f1e]                                                       + 0xa5f1e
[0x7fb0ee852f2b]    PyObject_Call                                      + 0x4b
[0x7fb0ee934770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fb0ee92eb9a]                                                       + 0x152b9a
[0x7fb0ee92ef94]                                                       + 0x152f94
[0x7fb0ee93450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb0ee92eb9a]                                                       + 0x152b9a
[0x7fb0ee92ef94]                                                       + 0x152f94
[0x7fb0ee93450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb0ee92e193]                                                       + 0x152193
[0x7fb0ee92f15c]                                                       + 0x15315c
[0x7fb0ee93450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb0ee92eb9a]                                                       + 0x152b9a
[0x7fb0ee92ef94]                                                       + 0x152f94
[0x7fb0ee93450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fb0ee92eb9a]                                                       + 0x152b9a
[0x7fb0ee92f1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fb0ee92f1df]    PyEval_EvalCode                                    + 0x1f
[0x7fb0ee9643d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fb0ee96456f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fb0ee97e8e8]    Py_Main                                            + 0xff8
[0x55d4aaa442b8]    main                                               + 0x178
[0x7fb0ee5f30b3]    __libc_start_main                                  + 0xf3
[0x55d4aaa4436e]    _start                                             + 0x2e


======================================== ipaddr.js/lib/ipaddr.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f87756f1a29]                                                       + 0x7c5a29
[0x7f87758b2289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f87f9cdc741]                                                       + 0x2d7741
[0x7f87fe5e39e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f87fe669084]                                                       + 0x153084
[0x7f87fe66e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f87fe668b9a]                                                       + 0x152b9a
[0x7f87fe6691b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f87fe5bbf1e]                                                       + 0xa5f1e
[0x7f87fe58cf2b]    PyObject_Call                                      + 0x4b
[0x7f87fe66e770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f87fe668b9a]                                                       + 0x152b9a
[0x7f87fe668f94]                                                       + 0x152f94
[0x7f87fe66e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f87fe668b9a]                                                       + 0x152b9a
[0x7f87fe668f94]                                                       + 0x152f94
[0x7f87fe66e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f87fe668193]                                                       + 0x152193
[0x7f87fe66915c]                                                       + 0x15315c
[0x7f87fe66e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f87fe668b9a]                                                       + 0x152b9a
[0x7f87fe668f94]                                                       + 0x152f94
[0x7f87fe66e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f87fe668b9a]                                                       + 0x152b9a
[0x7f87fe6691b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f87fe6691df]    PyEval_EvalCode                                    + 0x1f
[0x7f87fe69e3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f87fe69e56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f87fe6b88e8]    Py_Main                                            + 0xff8
[0x55d20719f2b8]    main                                               + 0x178
[0x7f87fe32d0b3]    __libc_start_main                                  + 0xf3
[0x55d20719f36e]    _start                                             + 0x2e


======================================== neo-async/async.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== neo-async/async.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== pako/dist/pako.es5.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== pako/dist/pako.es5.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== pako/dist/pako.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== pako/dist/pako.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Error: Input file is too large
======================================== pako/dist/pako_deflate.es5.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fc820cc7a29]                                                       + 0x7c5a29
[0x7fc820e88289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fc854ecd741]                                                       + 0x2d7741
[0x7fc8597d49e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fc85985a084]                                                       + 0x153084
[0x7fc85985f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc859859b9a]                                                       + 0x152b9a
[0x7fc85985a1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fc8597acf1e]                                                       + 0xa5f1e
[0x7fc85977df2b]    PyObject_Call                                      + 0x4b
[0x7fc85985f770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fc859859b9a]                                                       + 0x152b9a
[0x7fc859859f94]                                                       + 0x152f94
[0x7fc85985f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc859859b9a]                                                       + 0x152b9a
[0x7fc859859f94]                                                       + 0x152f94
[0x7fc85985f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc859859193]                                                       + 0x152193
[0x7fc85985a15c]                                                       + 0x15315c
[0x7fc85985f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc859859b9a]                                                       + 0x152b9a
[0x7fc859859f94]                                                       + 0x152f94
[0x7fc85985f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc859859b9a]                                                       + 0x152b9a
[0x7fc85985a1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fc85985a1df]    PyEval_EvalCode                                    + 0x1f
[0x7fc85988f3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fc85988f56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fc8598a98e8]    Py_Main                                            + 0xff8
[0x5559b80a82b8]    main                                               + 0x178
[0x7fc85951e0b3]    __libc_start_main                                  + 0xf3
[0x5559b80a836e]    _start                                             + 0x2e


======================================== pako/dist/pako_deflate.es5.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f4dec5e1a29]                                                       + 0x7c5a29
[0x7f4dec7a2289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f4e70bcc741]                                                       + 0x2d7741
[0x7f4e754d39e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f4e75559084]                                                       + 0x153084
[0x7f4e7555e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4e75558b9a]                                                       + 0x152b9a
[0x7f4e755591b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f4e754abf1e]                                                       + 0xa5f1e
[0x7f4e7547cf2b]    PyObject_Call                                      + 0x4b
[0x7f4e7555e770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f4e75558b9a]                                                       + 0x152b9a
[0x7f4e75558f94]                                                       + 0x152f94
[0x7f4e7555e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4e75558b9a]                                                       + 0x152b9a
[0x7f4e75558f94]                                                       + 0x152f94
[0x7f4e7555e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4e75558193]                                                       + 0x152193
[0x7f4e7555915c]                                                       + 0x15315c
[0x7f4e7555e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4e75558b9a]                                                       + 0x152b9a
[0x7f4e75558f94]                                                       + 0x152f94
[0x7f4e7555e50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4e75558b9a]                                                       + 0x152b9a
[0x7f4e755591b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f4e755591df]    PyEval_EvalCode                                    + 0x1f
[0x7f4e7558e3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f4e7558e56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f4e755a88e8]    Py_Main                                            + 0xff8
[0x5572639c72b8]    main                                               + 0x178
[0x7f4e7521d0b3]    __libc_start_main                                  + 0xf3
[0x5572639c736e]    _start                                             + 0x2e


======================================== pako/dist/pako_deflate.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f301d14fa29]                                                       + 0x7c5a29
[0x7f301d310289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f30a173a741]                                                       + 0x2d7741
[0x7f30a60419e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f30a60c7084]                                                       + 0x153084
[0x7f30a60cc50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f30a60c6b9a]                                                       + 0x152b9a
[0x7f30a60c71b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f30a6019f1e]                                                       + 0xa5f1e
[0x7f30a5feaf2b]    PyObject_Call                                      + 0x4b
[0x7f30a60cc770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f30a60c6b9a]                                                       + 0x152b9a
[0x7f30a60c6f94]                                                       + 0x152f94
[0x7f30a60cc50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f30a60c6b9a]                                                       + 0x152b9a
[0x7f30a60c6f94]                                                       + 0x152f94
[0x7f30a60cc50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f30a60c6193]                                                       + 0x152193
[0x7f30a60c715c]                                                       + 0x15315c
[0x7f30a60cc50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f30a60c6b9a]                                                       + 0x152b9a
[0x7f30a60c6f94]                                                       + 0x152f94
[0x7f30a60cc50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f30a60c6b9a]                                                       + 0x152b9a
[0x7f30a60c71b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f30a60c71df]    PyEval_EvalCode                                    + 0x1f
[0x7f30a60fc3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f30a60fc56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f30a61168e8]    Py_Main                                            + 0xff8
[0x563cf6ffa2b8]    main                                               + 0x178
[0x7f30a5d8b0b3]    __libc_start_main                                  + 0xf3
[0x563cf6ffa36e]    _start                                             + 0x2e


======================================== pako/dist/pako_deflate.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f8647a55a29]                                                       + 0x7c5a29
[0x7f8647c16289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f86cc040741]                                                       + 0x2d7741
[0x7f86d09479e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f86d09cd084]                                                       + 0x153084
[0x7f86d09d250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f86d09ccb9a]                                                       + 0x152b9a
[0x7f86d09cd1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f86d091ff1e]                                                       + 0xa5f1e
[0x7f86d08f0f2b]    PyObject_Call                                      + 0x4b
[0x7f86d09d2770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f86d09ccb9a]                                                       + 0x152b9a
[0x7f86d09ccf94]                                                       + 0x152f94
[0x7f86d09d250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f86d09ccb9a]                                                       + 0x152b9a
[0x7f86d09ccf94]                                                       + 0x152f94
[0x7f86d09d250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f86d09cc193]                                                       + 0x152193
[0x7f86d09cd15c]                                                       + 0x15315c
[0x7f86d09d250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f86d09ccb9a]                                                       + 0x152b9a
[0x7f86d09ccf94]                                                       + 0x152f94
[0x7f86d09d250d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f86d09ccb9a]                                                       + 0x152b9a
[0x7f86d09cd1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f86d09cd1df]    PyEval_EvalCode                                    + 0x1f
[0x7f86d0a023d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f86d0a0256f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f86d0a1c8e8]    Py_Main                                            + 0xff8
[0x5635aeffd2b8]    main                                               + 0x178
[0x7f86d06910b3]    __libc_start_main                                  + 0xf3
[0x5635aeffd36e]    _start                                             + 0x2e


======================================== pako/dist/pako_inflate.es5.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f83f8cc7a29]                                                       + 0x7c5a29
[0x7f83f8e88289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f847d2b2741]                                                       + 0x2d7741
[0x7f8481bb99e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f8481c3f084]                                                       + 0x153084
[0x7f8481c4450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f8481c3eb9a]                                                       + 0x152b9a
[0x7f8481c3f1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f8481b91f1e]                                                       + 0xa5f1e
[0x7f8481b62f2b]    PyObject_Call                                      + 0x4b
[0x7f8481c44770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f8481c3eb9a]                                                       + 0x152b9a
[0x7f8481c3ef94]                                                       + 0x152f94
[0x7f8481c4450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f8481c3eb9a]                                                       + 0x152b9a
[0x7f8481c3ef94]                                                       + 0x152f94
[0x7f8481c4450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f8481c3e193]                                                       + 0x152193
[0x7f8481c3f15c]                                                       + 0x15315c
[0x7f8481c4450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f8481c3eb9a]                                                       + 0x152b9a
[0x7f8481c3ef94]                                                       + 0x152f94
[0x7f8481c4450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f8481c3eb9a]                                                       + 0x152b9a
[0x7f8481c3f1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f8481c3f1df]    PyEval_EvalCode                                    + 0x1f
[0x7f8481c743d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f8481c7456f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f8481c8e8e8]    Py_Main                                            + 0xff8
[0x561b2e2f72b8]    main                                               + 0x178
[0x7f84819030b3]    __libc_start_main                                  + 0xf3
[0x561b2e2f736e]    _start                                             + 0x2e


======================================== pako/dist/pako_inflate.es5.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fa0e4c2aa29]                                                       + 0x7c5a29
[0x7fa0e4deb289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fa0fee2c741]                                                       + 0x2d7741
[0x7fa1037339e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fa1037b9084]                                                       + 0x153084
[0x7fa1037be50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa1037b8b9a]                                                       + 0x152b9a
[0x7fa1037b91b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fa10370bf1e]                                                       + 0xa5f1e
[0x7fa1036dcf2b]    PyObject_Call                                      + 0x4b
[0x7fa1037be770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fa1037b8b9a]                                                       + 0x152b9a
[0x7fa1037b8f94]                                                       + 0x152f94
[0x7fa1037be50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa1037b8b9a]                                                       + 0x152b9a
[0x7fa1037b8f94]                                                       + 0x152f94
[0x7fa1037be50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa1037b8193]                                                       + 0x152193
[0x7fa1037b915c]                                                       + 0x15315c
[0x7fa1037be50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa1037b8b9a]                                                       + 0x152b9a
[0x7fa1037b8f94]                                                       + 0x152f94
[0x7fa1037be50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fa1037b8b9a]                                                       + 0x152b9a
[0x7fa1037b91b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fa1037b91df]    PyEval_EvalCode                                    + 0x1f
[0x7fa1037ee3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fa1037ee56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fa1038088e8]    Py_Main                                            + 0xff8
[0x561e4cee42b8]    main                                               + 0x178
[0x7fa10347d0b3]    __libc_start_main                                  + 0xf3
[0x561e4cee436e]    _start                                             + 0x2e


======================================== pako/dist/pako_inflate.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f4b99de0a29]                                                       + 0x7c5a29
[0x7f4b99fa1289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f4bab7e1741]                                                       + 0x2d7741
[0x7f4bb00e89e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f4bb016e084]                                                       + 0x153084
[0x7f4bb017350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4bb016db9a]                                                       + 0x152b9a
[0x7f4bb016e1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f4bb00c0f1e]                                                       + 0xa5f1e
[0x7f4bb0091f2b]    PyObject_Call                                      + 0x4b
[0x7f4bb0173770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f4bb016db9a]                                                       + 0x152b9a
[0x7f4bb016df94]                                                       + 0x152f94
[0x7f4bb017350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4bb016db9a]                                                       + 0x152b9a
[0x7f4bb016df94]                                                       + 0x152f94
[0x7f4bb017350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4bb016d193]                                                       + 0x152193
[0x7f4bb016e15c]                                                       + 0x15315c
[0x7f4bb017350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4bb016db9a]                                                       + 0x152b9a
[0x7f4bb016df94]                                                       + 0x152f94
[0x7f4bb017350d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f4bb016db9a]                                                       + 0x152b9a
[0x7f4bb016e1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f4bb016e1df]    PyEval_EvalCode                                    + 0x1f
[0x7f4bb01a33d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f4bb01a356f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f4bb01bd8e8]    Py_Main                                            + 0xff8
[0x55ad61fe72b8]    main                                               + 0x178
[0x7f4bafe320b3]    __libc_start_main                                  + 0xf3
[0x55ad61fe736e]    _start                                             + 0x2e


======================================== pako/dist/pako_inflate.min.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f6e70dc0a29]                                                       + 0x7c5a29
[0x7f6e70f81289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f6ef53ab741]                                                       + 0x2d7741
[0x7f6ef9cb29e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f6ef9d38084]                                                       + 0x153084
[0x7f6ef9d3d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6ef9d37b9a]                                                       + 0x152b9a
[0x7f6ef9d381b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f6ef9c8af1e]                                                       + 0xa5f1e
[0x7f6ef9c5bf2b]    PyObject_Call                                      + 0x4b
[0x7f6ef9d3d770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f6ef9d37b9a]                                                       + 0x152b9a
[0x7f6ef9d37f94]                                                       + 0x152f94
[0x7f6ef9d3d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6ef9d37b9a]                                                       + 0x152b9a
[0x7f6ef9d37f94]                                                       + 0x152f94
[0x7f6ef9d3d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6ef9d37193]                                                       + 0x152193
[0x7f6ef9d3815c]                                                       + 0x15315c
[0x7f6ef9d3d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6ef9d37b9a]                                                       + 0x152b9a
[0x7f6ef9d37f94]                                                       + 0x152f94
[0x7f6ef9d3d50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f6ef9d37b9a]                                                       + 0x152b9a
[0x7f6ef9d381b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f6ef9d381df]    PyEval_EvalCode                                    + 0x1f
[0x7f6ef9d6d3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f6ef9d6d56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f6ef9d878e8]    Py_Main                                            + 0xff8
[0x5594b85c42b8]    main                                               + 0x178
[0x7f6ef99fc0b3]    __libc_start_main                                  + 0xf3
[0x5594b85c436e]    _start                                             + 0x2e


======================================== pako/lib/zlib/deflate.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f6fd60c2a29]                                                       + 0x7c5a29
[0x7f6fd6283289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f705a6ad741]                                                       + 0x2d7741
[0x7f705efb49e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f705f03a084]                                                       + 0x153084
[0x7f705f03f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f705f039b9a]                                                       + 0x152b9a
[0x7f705f03a1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f705ef8cf1e]                                                       + 0xa5f1e
[0x7f705ef5df2b]    PyObject_Call                                      + 0x4b
[0x7f705f03f770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f705f039b9a]                                                       + 0x152b9a
[0x7f705f039f94]                                                       + 0x152f94
[0x7f705f03f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f705f039b9a]                                                       + 0x152b9a
[0x7f705f039f94]                                                       + 0x152f94
[0x7f705f03f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f705f039193]                                                       + 0x152193
[0x7f705f03a15c]                                                       + 0x15315c
[0x7f705f03f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f705f039b9a]                                                       + 0x152b9a
[0x7f705f039f94]                                                       + 0x152f94
[0x7f705f03f50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f705f039b9a]                                                       + 0x152b9a
[0x7f705f03a1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f705f03a1df]    PyEval_EvalCode                                    + 0x1f
[0x7f705f06f3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f705f06f56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f705f0898e8]    Py_Main                                            + 0xff8
[0x55a6f2fd92b8]    main                                               + 0x178
[0x7f705ecfe0b3]    __libc_start_main                                  + 0xf3
[0x55a6f2fd936e]    _start                                             + 0x2e


======================================== pako/lib/zlib/inflate.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7fc858681a29]                                                       + 0x7c5a29
[0x7fc858842289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7fc8dcc6c741]                                                       + 0x2d7741
[0x7fc8e15739e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7fc8e15f9084]                                                       + 0x153084
[0x7fc8e15fe50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc8e15f8b9a]                                                       + 0x152b9a
[0x7fc8e15f91b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fc8e154bf1e]                                                       + 0xa5f1e
[0x7fc8e151cf2b]    PyObject_Call                                      + 0x4b
[0x7fc8e15fe770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7fc8e15f8b9a]                                                       + 0x152b9a
[0x7fc8e15f8f94]                                                       + 0x152f94
[0x7fc8e15fe50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc8e15f8b9a]                                                       + 0x152b9a
[0x7fc8e15f8f94]                                                       + 0x152f94
[0x7fc8e15fe50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc8e15f8193]                                                       + 0x152193
[0x7fc8e15f915c]                                                       + 0x15315c
[0x7fc8e15fe50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc8e15f8b9a]                                                       + 0x152b9a
[0x7fc8e15f8f94]                                                       + 0x152f94
[0x7fc8e15fe50d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7fc8e15f8b9a]                                                       + 0x152b9a
[0x7fc8e15f91b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7fc8e15f91df]    PyEval_EvalCode                                    + 0x1f
[0x7fc8e162e3d5]    PyRun_FileExFlags                                  + 0xb5
[0x7fc8e162e56f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7fc8e16488e8]    Py_Main                                            + 0xff8
[0x558daefe42b8]    main                                               + 0x178
[0x7fc8e12bd0b3]    __libc_start_main                                  + 0xf3
[0x558daefe436e]    _start                                             + 0x2e


======================================== regexpp/index.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------

About to throw exception 'Value::Create:: The number of sequences must be > 0'
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 190, in run_seq
    enhance_data(data, enc)
  File "readout.py", line 103, in enhance_data
    mems = s.next_minibatch(minibatch_size)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/io/__init__.py", line 734, in next_minibatch
    value = Value.create(self._vars[si.name], mb_data)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/core.py", line 466, in create
    True)  # always create a copy in Value
ValueError: Value::Create:: The number of sequences must be > 0

[CALL STACK]
[0x7f61279e7a29]                                                       + 0x7c5a29
[0x7f6127ba8289]    CNTK::Value::  Create  (CNTK::NDShape const&,  std::vector<std::shared_ptr<CNTK::NDArrayView>,std::allocator<std::shared_ptr<CNTK::NDArrayView>>> const&,  std::vector<bool,std::allocator<bool>> const&,  CNTK::DeviceDescriptor const&,  bool,  bool) + 0x1449
[0x7f61abfd2741]                                                       + 0x2d7741
[0x7f61b08d99e3]    _PyCFunction_FastCallDict                          + 0x163
[0x7f61b095f084]                                                       + 0x153084
[0x7f61b096450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f61b095eb9a]                                                       + 0x152b9a
[0x7f61b095f1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f61b08b1f1e]                                                       + 0xa5f1e
[0x7f61b0882f2b]    PyObject_Call                                      + 0x4b
[0x7f61b0964770]    _PyEval_EvalFrameDefault                           + 0x4fd0
[0x7f61b095eb9a]                                                       + 0x152b9a
[0x7f61b095ef94]                                                       + 0x152f94
[0x7f61b096450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f61b095eb9a]                                                       + 0x152b9a
[0x7f61b095ef94]                                                       + 0x152f94
[0x7f61b096450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f61b095e193]                                                       + 0x152193
[0x7f61b095f15c]                                                       + 0x15315c
[0x7f61b096450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f61b095eb9a]                                                       + 0x152b9a
[0x7f61b095ef94]                                                       + 0x152f94
[0x7f61b096450d]    _PyEval_EvalFrameDefault                           + 0x4d6d
[0x7f61b095eb9a]                                                       + 0x152b9a
[0x7f61b095f1b2]    PyEval_EvalCodeEx                                  + 0x42
[0x7f61b095f1df]    PyEval_EvalCode                                    + 0x1f
[0x7f61b09943d5]    PyRun_FileExFlags                                  + 0xb5
[0x7f61b099456f]    PyRun_SimpleFileExFlags                            + 0xff
[0x7f61b09ae8e8]    Py_Main                                            + 0xff8
[0x55b1885452b8]    main                                               + 0x178
[0x7f61b06230b3]    __libc_start_main                                  + 0xf3
[0x55b18854536e]    _start                                             + 0x2e


======================================== ret/dist/tokenizer.js ========================================
Selected GPU[0] Quadro RTX 6000 as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Apr 23 2019 21:29:24
		Last modified date: Tue Apr 23 21:05:52 2019
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 10.0.0
		CUDNN version: 7.3.1
		Build Branch: HEAD
		Build SHA1: ae9c9c7c5f9e6072cc9c94c254f816dbdc1c5be6
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
/mnt/data/mhyee/.asdf/installs/python/3.6.15/lib/python3.6/site-packages/cntk/cntk_py_init.py:56: UserWarning: Unsupported Linux distribution (ubuntu-20.04). CNTK supports Ubuntu 16.04 and above, only.
  warnings.warn('Unsupported Linux distribution (%s-%s). CNTK supports Ubuntu 16.04 and above, only.' % (__my_distro__, __my_distro_ver__))
Traceback (most recent call last):
  File "readout.py", line 227, in <module>
    run_seq(content)
  File "readout.py", line 202, in run_seq
    pr = pred[ix]
IndexError: index 1412 is out of bounds for axis 0 with size 1412

