importKeyword
 Text.Whitespace
timesLimitName.Otherany0.2277complex0.1370boolean0.0296void0.0268string0.0149
 Text.Whitespace
fromKeyword.Reserved
 Text.Whitespace
'./timesLimit.js'Literal.String.Single
\n\nText.Whitespace
Text
/**\n * Calls the `iteratee` function `n` times, and accumulates results in the same\n * manner you would use with [map]{@link module:Collections.map}.\n *\n * @name times\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.map]{@link module:Collections.map}\n * @category Control Flow\n * @param {number} n - The number of times to run the function.\n * @param {AsyncFunction} iteratee - The async function to call `n` times.\n * Invoked with the iteration index and a callback: (n, next).\n * @param {Function} callback - see {@link module:Collections.map}.\n * @returns {Promise} a promise, if no callback is provided\n * @example\n *\n * // Pretend this is some complicated async factory\n * var createUser = function(id, callback) {\n *     callback(null, {\n *         id: 'user' + id\n *     });\n * };\n *\n * // generate 5 users\n * async.times(5, function(n, next) {\n *     createUser(n, function(err, user) {\n *         next(err, user);\n *     });\n * }, function(err, users) {\n *     // we should now have 5 users\n * });\n */Comment.Multiline
\nText.Whitespace
exportKeyword
 Text.Whitespace
defaultKeyword
 Text.Whitespace
functionKeyword.Declaration
 Text.Whitespace
timesName.Otherany0.2350number0.2030complex0.0390boolean0.0260string0.0176
 Text.Whitespace
(Punctuation
nName.Othernumber0.7581any0.1424string0.0595boolean0.0041complex0.0021
,Punctuation
 Text.Whitespace
iterateeName.Otherany0.7294number0.1747string0.0350boolean0.0127Date0.0016
,Punctuation
 Text.Whitespace
callbackName.Otherany0.5406number0.2106Function0.0634boolean0.0279string0.0174
)Punctuation
 Text.Whitespace
{Punctuation
\n    Text.Whitespace
returnKeyword
 Text.Whitespace
timesLimitName.Otherany0.4191void0.1230complex0.1096number0.0775string0.0600
(Punctuation
nName.Othernumber0.8582any0.0822string0.0312void0.0023complex0.0013
,Punctuation
 Text.Whitespace
InfinityKeyword.Constantnumber0.9849any0.0106string0.0018boolean0.0008void0.0005
,Punctuation
 Text.Whitespace
iterateeName.Otherany0.8099number0.1127string0.0138void0.0103boolean0.0058
,Punctuation
 Text.Whitespace
callbackName.Otherany0.6207void0.1089Function0.1042number0.0686boolean0.0131
)Punctuation
\nText.Whitespace
}Punctuation
\nText.Whitespace
