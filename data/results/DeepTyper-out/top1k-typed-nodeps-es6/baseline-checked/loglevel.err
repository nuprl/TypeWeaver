dist/loglevel.min.ts(2,2): error TS1345: An expression of type 'void' cannot be tested for truthiness.
dist/loglevel.min.ts(2,61): error TS2304: Cannot find name 'define'.
dist/loglevel.min.ts(2,69): error TS2304: Cannot find name 'define'.
dist/loglevel.min.ts(2,80): error TS2304: Cannot find name 'define'.
dist/loglevel.min.ts(2,145): error TS2349: This expression is not callable.
  Type 'String' has no call signatures.
dist/loglevel.min.ts(2,155): error TS2349: This expression is not callable.
  Type 'String' has no call signatures.
dist/loglevel.min.ts(2,165): error TS2345: Argument of type '() => any' is not assignable to parameter of type 'string'.
dist/loglevel.min.ts(2,2325): error TS2322: Type 'string' is not assignable to type 'number'.
dist/loglevel.min.ts(2,2329): error TS2367: This condition will always return 'true' since the types 'boolean' and 'string' have no overlap.
dist/loglevel.min.ts(2,2475): error TS1345: An expression of type 'void' cannot be tested for truthiness.
dist/loglevel.min.ts(2,2723): error TS2322: Type '() => void' is not assignable to type 'void'.
dist/loglevel.min.ts(2,2895): error TS2350: Only a void function can be called with the 'new' keyword.
dist/loglevel.min.ts(2,2895): error TS2554: Expected 3 arguments, but got 0.
dist/loglevel.min.ts(2,3089): error TS2350: Only a void function can be called with the 'new' keyword.
dist/loglevel.min.ts(2,3170): error TS2339: Property 'log' does not exist on type 'Window & typeof globalThis'.
dist/loglevel.min.ts(2,3245): error TS2339: Property 'log' does not exist on type 'Window & typeof globalThis'.
dist/loglevel.min.ts(2,3262): error TS2339: Property 'log' does not exist on type 'Window & typeof globalThis'.
dist/loglevel.ts(4,16): error TS2304: Cannot find name 'define'.
dist/loglevel.ts(4,41): error TS2304: Cannot find name 'define'.
dist/loglevel.ts(5,9): error TS2304: Cannot find name 'define'.
dist/loglevel.ts(7,9): error TS1258: A default export must be at the top level of a file or module declaration.
dist/loglevel.ts(15,22): error TS2322: Type '() => void' is not assignable to type 'void'.
dist/loglevel.ts(16,9): error TS2322: Type 'string' is not assignable to type 'RegExp'.
dist/loglevel.ts(17,26): error TS2367: This condition will always return 'true' since the types 'string' and 'RegExp' have no overlap.
dist/loglevel.ts(17,63): error TS2367: This condition will always return 'true' since the types 'string' and 'RegExp' have no overlap.
dist/loglevel.ts(66,13): error TS2367: This condition will always return 'false' since the types 'string' and 'RegExp' have no overlap.
dist/loglevel.ts(69,13): error TS2322: Type '() => void' is not assignable to type 'boolean'.
dist/loglevel.ts(75,13): error TS2322: Type 'void' is not assignable to type 'boolean'.
dist/loglevel.ts(97,16): error TS2322: Type '() => void' is not assignable to type 'void'.
dist/loglevel.ts(98,17): error TS2367: This condition will always return 'true' since the types 'string' and 'RegExp' have no overlap.
dist/loglevel.ts(114,17): error TS2526: A 'this' type is available only in a non-static member of a class or interface.
dist/loglevel.ts(128,15): error TS2367: This condition will always return 'false' since the types 'string' and 'RegExp' have no overlap.
dist/loglevel.ts(146,15): error TS2367: This condition will always return 'false' since the types 'string' and 'RegExp' have no overlap.
dist/loglevel.ts(153,15): error TS2367: This condition will always return 'false' since the types 'string' and 'RegExp' have no overlap.
dist/loglevel.ts(156,23): error TS2322: Type 'number' is not assignable to type 'string'.
dist/loglevel.ts(158,23): error TS2367: This condition will always return 'true' since the types 'string' and 'number' have no overlap.
dist/loglevel.ts(159,66): error TS2345: Argument of type 'string' is not assignable to parameter of type 'number'.
dist/loglevel.ts(173,15): error TS2367: This condition will always return 'false' since the types 'string' and 'RegExp' have no overlap.
dist/loglevel.ts(211,19): error TS2367: This condition will always return 'true' since the types 'string' and 'boolean' have no overlap.
dist/loglevel.ts(212,42): error TS2345: Argument of type 'number' is not assignable to parameter of type 'string'.
dist/loglevel.ts(215,19): error TS2367: This condition will always return 'false' since the types 'string' and 'RegExp' have no overlap.
dist/loglevel.ts(225,16): error TS1345: An expression of type 'void' cannot be tested for truthiness.
dist/loglevel.ts(257,34): error TS2350: Only a void function can be called with the 'new' keyword.
dist/loglevel.ts(257,34): error TS2554: Expected 3 arguments, but got 0.
dist/loglevel.ts(260,19): error TS2339: Property 'getLogger' does not exist on type 'Console'.
dist/loglevel.ts(260,65): error TS2749: 'Logger' refers to a value, but is being used as a type here. Did you mean 'typeof Logger'?
dist/loglevel.ts(267,43): error TS2350: Only a void function can be called with the 'new' keyword.
dist/loglevel.ts(268,33): error TS2339: Property 'getLevel' does not exist on type 'Console'.
dist/loglevel.ts(268,59): error TS2339: Property 'methodFactory' does not exist on type 'Console'.
dist/loglevel.ts(274,22): error TS2367: This condition will always return 'true' since the types 'string' and 'RegExp' have no overlap.
dist/loglevel.ts(274,64): error TS2339: Property 'log' does not exist on type 'Window & typeof globalThis'.
dist/loglevel.ts(275,19): error TS2339: Property 'noConflict' does not exist on type 'Console'.
dist/loglevel.ts(276,13): error TS2367: This condition will always return 'true' since the types 'string' and 'RegExp' have no overlap.
dist/loglevel.ts(277,23): error TS2339: Property 'log' does not exist on type 'Window & typeof globalThis'.
dist/loglevel.ts(278,20): error TS2339: Property 'log' does not exist on type 'Window & typeof globalThis'.
dist/loglevel.ts(284,19): error TS2339: Property 'getLoggers' does not exist on type 'Console'.
dist/loglevel.ts(285,9): error TS2322: Type '{}' is not assignable to type 'void'.
lib/loglevel.ts(9,16): error TS2304: Cannot find name 'define'.
lib/loglevel.ts(9,41): error TS2304: Cannot find name 'define'.
lib/loglevel.ts(10,9): error TS2304: Cannot find name 'define'.
lib/loglevel.ts(12,9): error TS1258: A default export must be at the top level of a file or module declaration.
lib/loglevel.ts(20,22): error TS2322: Type '() => void' is not assignable to type 'void'.
lib/loglevel.ts(21,9): error TS2322: Type 'string' is not assignable to type 'RegExp'.
lib/loglevel.ts(22,26): error TS2367: This condition will always return 'true' since the types 'string' and 'RegExp' have no overlap.
lib/loglevel.ts(22,63): error TS2367: This condition will always return 'true' since the types 'string' and 'RegExp' have no overlap.
lib/loglevel.ts(71,13): error TS2367: This condition will always return 'false' since the types 'string' and 'RegExp' have no overlap.
lib/loglevel.ts(74,13): error TS2322: Type '() => void' is not assignable to type 'boolean'.
lib/loglevel.ts(80,13): error TS2322: Type 'void' is not assignable to type 'boolean'.
lib/loglevel.ts(102,16): error TS2322: Type '() => void' is not assignable to type 'void'.
lib/loglevel.ts(103,17): error TS2367: This condition will always return 'true' since the types 'string' and 'RegExp' have no overlap.
lib/loglevel.ts(119,17): error TS2526: A 'this' type is available only in a non-static member of a class or interface.
lib/loglevel.ts(133,15): error TS2367: This condition will always return 'false' since the types 'string' and 'RegExp' have no overlap.
lib/loglevel.ts(151,15): error TS2367: This condition will always return 'false' since the types 'string' and 'RegExp' have no overlap.
lib/loglevel.ts(158,15): error TS2367: This condition will always return 'false' since the types 'string' and 'RegExp' have no overlap.
lib/loglevel.ts(161,23): error TS2322: Type 'number' is not assignable to type 'string'.
lib/loglevel.ts(163,23): error TS2367: This condition will always return 'true' since the types 'string' and 'number' have no overlap.
lib/loglevel.ts(164,66): error TS2345: Argument of type 'string' is not assignable to parameter of type 'number'.
lib/loglevel.ts(178,15): error TS2367: This condition will always return 'false' since the types 'string' and 'RegExp' have no overlap.
lib/loglevel.ts(216,19): error TS2367: This condition will always return 'true' since the types 'string' and 'boolean' have no overlap.
lib/loglevel.ts(217,42): error TS2345: Argument of type 'number' is not assignable to parameter of type 'string'.
lib/loglevel.ts(220,19): error TS2367: This condition will always return 'false' since the types 'string' and 'RegExp' have no overlap.
lib/loglevel.ts(230,16): error TS1345: An expression of type 'void' cannot be tested for truthiness.
lib/loglevel.ts(262,34): error TS2350: Only a void function can be called with the 'new' keyword.
lib/loglevel.ts(262,34): error TS2554: Expected 3 arguments, but got 0.
lib/loglevel.ts(265,19): error TS2339: Property 'getLogger' does not exist on type 'Console'.
lib/loglevel.ts(265,65): error TS2749: 'Logger' refers to a value, but is being used as a type here. Did you mean 'typeof Logger'?
lib/loglevel.ts(272,43): error TS2350: Only a void function can be called with the 'new' keyword.
lib/loglevel.ts(273,33): error TS2339: Property 'getLevel' does not exist on type 'Console'.
lib/loglevel.ts(273,59): error TS2339: Property 'methodFactory' does not exist on type 'Console'.
lib/loglevel.ts(279,22): error TS2367: This condition will always return 'true' since the types 'string' and 'RegExp' have no overlap.
lib/loglevel.ts(279,64): error TS2339: Property 'log' does not exist on type 'Window & typeof globalThis'.
lib/loglevel.ts(280,19): error TS2339: Property 'noConflict' does not exist on type 'Console'.
lib/loglevel.ts(281,13): error TS2367: This condition will always return 'true' since the types 'string' and 'RegExp' have no overlap.
lib/loglevel.ts(282,23): error TS2339: Property 'log' does not exist on type 'Window & typeof globalThis'.
lib/loglevel.ts(283,20): error TS2339: Property 'log' does not exist on type 'Window & typeof globalThis'.
lib/loglevel.ts(289,19): error TS2339: Property 'getLoggers' does not exist on type 'Console'.
lib/loglevel.ts(290,9): error TS2322: Type '{}' is not assignable to type 'void'.

