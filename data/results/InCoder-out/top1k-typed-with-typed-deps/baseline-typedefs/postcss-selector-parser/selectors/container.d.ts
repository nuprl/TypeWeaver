import Node from './node';
export default class Container extends Node {
    constructor(opts: any);
    append(selector: any): this;
    prepend(selector: any): this;
    at(index: any): any;
    index(child: any): any;
    get first(): any;
    get last(): any;
    get length(): any;
    removeChild(child: any): this;
    removeAll(): this;
    empty(): this;
    insertAfter(oldNode: any, newNode: any): this;
    insertBefore(oldNode: any, newNode: any): this;
    _findChildAtPosition(line: any, col: any): any;
    atPosition(line: any, col: any): any;
    _inferEndPosition(): void;
    each(callback: any): boolean;
    walk(callback: any): boolean;
    walkAttributes(callback: any): boolean;
    walkClasses(callback: any): boolean;
    walkCombinators(callback: any): boolean;
    walkComments(callback: any): boolean;
    walkIds(callback: any): boolean;
    walkNesting(callback: any): boolean;
    walkPseudos(callback: any): boolean;
    walkTags(callback: any): boolean;
    walkUniversals(callback: any): boolean;
    split(callback: any): any;
    map(callback: any): any;
    reduce(callback: any, memo: any): any;
    every(callback: any): any;
    some(callback: any): any;
    filter(callback: any): any;
    sort(callback: any): any;
    toString(): any;
}
